[2015-12-30 10:28:00,058]DEBUG 27549[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Users (ID int4 not null, IsUserActive bool, Balance float8, Email varchar(255) not null, FirstName varchar(255) not null, LastName varchar(255) not null, Login varchar(255) not null, Password varchar(255) not null, CustomerTypeRef int4, RegionRef int4, RoleRef int4 not null, primary key (ID))
[2015-12-30 10:28:00,621]DEBUG 28112[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add constraint FKA2B1AD3262E1ABF7 foreign key (ProductRef) references Products
[2015-12-30 10:28:00,989]DEBUG 28480[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add constraint FKA2B1AD32A6376397 foreign key (DimensionRef) references Dimensions
[2015-12-30 10:28:01,106]DEBUG 28597[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add constraint FKA2B1AD32BCDB3C97 foreign key (OrderRef) references Orders
[2015-12-30 10:28:01,188]DEBUG 28679[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add constraint FK8D444F05990DB877 foreign key (OrderStatusRef) references OrderStatuses
[2015-12-30 10:28:01,293]DEBUG 28784[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add constraint FK8D444F05C0F431DD foreign key (Assigne) references Users
[2015-12-30 10:28:01,399]DEBUG 28890[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add constraint FK8D444F05F161465 foreign key (Customer) references Users
[2015-12-30 10:28:01,516]DEBUG 29007[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add constraint FK4E39DE83D05058F foreign key (RoleRef) references Roles
[2015-12-30 10:28:01,630]DEBUG 29121[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add constraint FK4E39DE89AEF426F foreign key (CustomerTypeRef) references CustomerTypes
[2015-12-30 10:28:01,757]DEBUG 29248[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add constraint FK4E39DE8FEAD4DCF foreign key (RegionRef) references Regions
[2015-12-30 10:28:01,863]DEBUG 29354[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create sequence hibernate_sequence
[2015-12-30 10:28:01,982] INFO 29473[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2015-12-30 10:28:01,982]DEBUG 29473[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2015-12-30 10:28:01,982]DEBUG 29473[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2015-12-30 10:28:01,983]DEBUG 29474[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2015-12-30 10:28:01,983]DEBUG 29474[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2015-12-30 10:28:01,983]DEBUG 29474[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2015-12-30 10:28:01,983]DEBUG 29474[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2015-12-30 10:28:01,983]DEBUG 29474[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2015-12-30 10:28:01,983]DEBUG 29474[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2015-12-30 10:28:01,984]DEBUG 29475[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2015-12-30 10:28:01,984]DEBUG 29475[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 10:28:01,984]DEBUG 29475[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 10:28:01,984]DEBUG 29475[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 10:28:01,984]DEBUG 29475[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 10:28:01,984]DEBUG 29475[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 10:28:01,985]DEBUG 29476[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 10:28:01,985]DEBUG 29476[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 10:28:01,985]DEBUG 29476[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 10:28:01,985]DEBUG 29476[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 10:28:01,986]DEBUG 29477[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2015-12-30 10:28:01,986]DEBUG 29477[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2015-12-30 10:28:01,986]DEBUG 29477[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2015-12-30 10:28:01,987]DEBUG 29478[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2015-12-30 10:28:02,008]DEBUG 29499[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,008]DEBUG 29499[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,008]DEBUG 29499[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,008]DEBUG 29499[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,009]DEBUG 29500[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,009]DEBUG 29500[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,009]DEBUG 29500[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,009]DEBUG 29500[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,009]DEBUG 29500[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,009]DEBUG 29500[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,010]DEBUG 29501[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2015-12-30 10:28:02,011]DEBUG 29502[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2015-12-30 10:28:02,011]DEBUG 29502[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2015-12-30 10:28:02,011]DEBUG 29502[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2015-12-30 10:28:02,011]DEBUG 29502[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2015-12-30 10:28:02,012]DEBUG 29503[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2015-12-30 10:28:02,012]DEBUG 29503[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2015-12-30 10:28:02,012]DEBUG 29503[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2015-12-30 10:28:02,012]DEBUG 29503[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2015-12-30 10:28:02,012]DEBUG 29503[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 10:28:02,012]DEBUG 29503[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 10:28:02,012]DEBUG 29503[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 10:28:02,013]DEBUG 29504[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 10:28:02,013]DEBUG 29504[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 10:28:02,013]DEBUG 29504[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 10:28:02,013]DEBUG 29504[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 10:28:02,013]DEBUG 29504[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 10:28:02,013]DEBUG 29504[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 10:28:02,014]DEBUG 29505[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2015-12-30 10:28:02,014]DEBUG 29505[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2015-12-30 10:28:02,014]DEBUG 29505[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2015-12-30 10:28:02,015]DEBUG 29506[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2015-12-30 10:28:02,026]DEBUG 29517[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,026]DEBUG 29517[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,026]DEBUG 29517[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,026]DEBUG 29517[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,027]DEBUG 29518[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,027]DEBUG 29518[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,027]DEBUG 29518[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,027]DEBUG 29518[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,027]DEBUG 29518[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,027]DEBUG 29518[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,028]DEBUG 29519[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,028]DEBUG 29519[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,028]DEBUG 29519[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,028]DEBUG 29519[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,028]DEBUG 29519[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,029]DEBUG 29520[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,029]DEBUG 29520[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,029]DEBUG 29520[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,029]DEBUG 29520[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,029]DEBUG 29520[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 10:28:02,029]DEBUG 29520[main] - org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) - Checking 0 named HQL queries
[2015-12-30 10:28:02,030]DEBUG 29521[main] - org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) - Checking 0 named SQL queries
[2015-12-30 10:28:02,030]DEBUG 29521[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,032]DEBUG 29523[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,032]DEBUG 29523[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
[2015-12-30 10:28:02,032]DEBUG 29523[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-12-30 10:28:02,032]DEBUG 29523[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-12-30 10:28:02,033]DEBUG 29524[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
[2015-12-30 10:28:02,033]DEBUG 29524[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-12-30 10:28:02,033]DEBUG 29524[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,034]DEBUG 29525[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'sessionFactory'
[2015-12-30 10:28:02,034]DEBUG 29525[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,041]DEBUG 29532[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'transactionManager'
[2015-12-30 10:28:02,042]DEBUG 29533[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,042]DEBUG 29533[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'transactionManager'
[2015-12-30 10:28:02,042]DEBUG 29533[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2015-12-30 10:28:02,043]DEBUG 29534[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-12-30 10:28:02,043]DEBUG 29534[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-12-30 10:28:02,043]DEBUG 29534[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-12-30 10:28:02,050]DEBUG 29541[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
[2015-12-30 10:28:02,051]DEBUG 29542[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-12-30 10:28:02,051]DEBUG 29542[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-12-30 10:28:02,051]DEBUG 29542[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-12-30 10:28:02,051]DEBUG 29542[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,051]DEBUG 29542[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2015-12-30 10:28:02,051]DEBUG 29542[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2015-12-30 10:28:02,052]DEBUG 29543[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2015-12-30 10:28:02,052]DEBUG 29543[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2015-12-30 10:28:02,052]DEBUG 29543[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2015-12-30 10:28:02,052]DEBUG 29543[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderDao'
[2015-12-30 10:28:02,052]DEBUG 29543[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderDao'
[2015-12-30 10:28:02,057]DEBUG 29548[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,057]DEBUG 29548[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.orderStatusDao
[2015-12-30 10:28:02,057]DEBUG 29548[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.roleDao
[2015-12-30 10:28:02,057]DEBUG 29548[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderDao' to allow for resolving potential circular references
[2015-12-30 10:28:02,057]DEBUG 29548[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,058]DEBUG 29549[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,058]DEBUG 29549[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'sessionFactory'
[2015-12-30 10:28:02,058]DEBUG 29549[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.orderStatusDao
[2015-12-30 10:28:02,058]DEBUG 29549[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:02,058]DEBUG 29549[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderStatusDao'
[2015-12-30 10:28:02,059]DEBUG 29550[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,059]DEBUG 29550[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderStatusDao' to allow for resolving potential circular references
[2015-12-30 10:28:02,059]DEBUG 29550[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderStatusDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,062]DEBUG 29553[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,062]DEBUG 29553[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderStatusDao' to bean named 'sessionFactory'
[2015-12-30 10:28:02,062]DEBUG 29553[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,063]DEBUG 29554[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderStatusDao'
[2015-12-30 10:28:02,063]DEBUG 29554[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'orderStatusDao'
[2015-12-30 10:28:02,063]DEBUG 29554[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.roleDao
[2015-12-30 10:28:02,063]DEBUG 29554[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'roleDao'
[2015-12-30 10:28:02,063]DEBUG 29554[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'roleDao'
[2015-12-30 10:28:02,065]DEBUG 29556[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,065]DEBUG 29556[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'roleDao' to allow for resolving potential circular references
[2015-12-30 10:28:02,065]DEBUG 29556[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'roleDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,066]DEBUG 29557[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,066]DEBUG 29557[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'roleDao' to bean named 'sessionFactory'
[2015-12-30 10:28:02,066]DEBUG 29557[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,067]DEBUG 29558[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'roleDao'
[2015-12-30 10:28:02,067]DEBUG 29558[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'roleDao'
[2015-12-30 10:28:02,067]DEBUG 29558[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,070]DEBUG 29561[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderDao'
[2015-12-30 10:28:02,070]DEBUG 29561[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:02,070]DEBUG 29561[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'userDao'
[2015-12-30 10:28:02,070]DEBUG 29561[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'userDao'
[2015-12-30 10:28:02,071]DEBUG 29562[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.UserDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,071]DEBUG 29562[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'userDao' to allow for resolving potential circular references
[2015-12-30 10:28:02,071]DEBUG 29562[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'userDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,071]DEBUG 29562[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,071]DEBUG 29562[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'userDao' to bean named 'sessionFactory'
[2015-12-30 10:28:02,072]DEBUG 29563[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,073]DEBUG 29564[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'userDao'
[2015-12-30 10:28:02,073]DEBUG 29564[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'regionDao'
[2015-12-30 10:28:02,073]DEBUG 29564[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'regionDao'
[2015-12-30 10:28:02,073]DEBUG 29564[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,073]DEBUG 29564[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'regionDao' to allow for resolving potential circular references
[2015-12-30 10:28:02,073]DEBUG 29564[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'regionDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,074]DEBUG 29565[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,074]DEBUG 29565[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'regionDao' to bean named 'sessionFactory'
[2015-12-30 10:28:02,074]DEBUG 29565[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,075]DEBUG 29566[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'regionDao'
[2015-12-30 10:28:02,075]DEBUG 29566[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:02,075]DEBUG 29566[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'productDao'
[2015-12-30 10:28:02,075]DEBUG 29566[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'productDao'
[2015-12-30 10:28:02,077]DEBUG 29568[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,077]DEBUG 29568[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'productDao' to allow for resolving potential circular references
[2015-12-30 10:28:02,078]DEBUG 29569[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'productDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,078]DEBUG 29569[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,078]DEBUG 29569[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'productDao' to bean named 'sessionFactory'
[2015-12-30 10:28:02,078]DEBUG 29569[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,080]DEBUG 29571[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'productDao'
[2015-12-30 10:28:02,080]DEBUG 29571[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:02,080]DEBUG 29571[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'dimensionDao'
[2015-12-30 10:28:02,080]DEBUG 29571[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,081]DEBUG 29572[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'dimensionDao' to allow for resolving potential circular references
[2015-12-30 10:28:02,081]DEBUG 29572[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'dimensionDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,081]DEBUG 29572[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,081]DEBUG 29572[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'dimensionDao' to bean named 'sessionFactory'
[2015-12-30 10:28:02,081]DEBUG 29572[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,087]DEBUG 29578[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'dimensionDao'
[2015-12-30 10:28:02,087]DEBUG 29578[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:02,087]DEBUG 29578[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'customerTypeDao'
[2015-12-30 10:28:02,087]DEBUG 29578[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,088]DEBUG 29579[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'customerTypeDao' to allow for resolving potential circular references
[2015-12-30 10:28:02,088]DEBUG 29579[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'customerTypeDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,088]DEBUG 29579[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,088]DEBUG 29579[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'customerTypeDao' to bean named 'sessionFactory'
[2015-12-30 10:28:02,090]DEBUG 29581[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,091]DEBUG 29582[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'customerTypeDao'
[2015-12-30 10:28:02,091]DEBUG 29582[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:02,091]DEBUG 29582[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderItemDao'
[2015-12-30 10:28:02,091]DEBUG 29582[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,091]DEBUG 29582[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderItemDao' to allow for resolving potential circular references
[2015-12-30 10:28:02,092]DEBUG 29583[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderItemDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,092]DEBUG 29583[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,092]DEBUG 29583[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderItemDao' to bean named 'sessionFactory'
[2015-12-30 10:28:02,092]DEBUG 29583[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,097]DEBUG 29588[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderItemDao'
[2015-12-30 10:28:02,097]DEBUG 29588[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'creditCardTypeDao'
[2015-12-30 10:28:02,097]DEBUG 29588[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'creditCardTypeDao'
[2015-12-30 10:28:02,097]DEBUG 29588[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.CreditCardTypeDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,098]DEBUG 29589[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'creditCardTypeDao' to allow for resolving potential circular references
[2015-12-30 10:28:02,098]DEBUG 29589[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'creditCardTypeDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 10:28:02,098]DEBUG 29589[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,098]DEBUG 29589[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'creditCardTypeDao' to bean named 'sessionFactory'
[2015-12-30 10:28:02,098]DEBUG 29589[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,102]DEBUG 29593[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'creditCardTypeDao'
[2015-12-30 10:28:02,102]DEBUG 29593[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,103]DEBUG 29594[main] - org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:827) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@31657222]
[2015-12-30 10:28:02,103]DEBUG 29594[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2015-12-30 10:28:02,111]DEBUG 29602[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:02,111]DEBUG 29602[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:02,111]DEBUG 29602[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:02,111]DEBUG 29602[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:02,111]DEBUG 29602[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:02,113]DEBUG 29604[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:02,113]DEBUG 29604[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:02,113]DEBUG 29604[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:02,113]DEBUG 29604[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:02,113]DEBUG 29604[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:02,113]DEBUG 29604[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:02,114]DEBUG 29605[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:02,114]DEBUG 29605[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'customerTypeDao'
[2015-12-30 10:28:02,114]DEBUG 29605[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:02,114]DEBUG 29605[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:02,114]DEBUG 29605[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'dimensionDao'
[2015-12-30 10:28:02,114]DEBUG 29605[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:02,115]DEBUG 29606[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:02,115]DEBUG 29606[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'orderDao'
[2015-12-30 10:28:02,115]DEBUG 29606[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:02,115]DEBUG 29606[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:02,115]DEBUG 29606[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'orderItemDao'
[2015-12-30 10:28:02,115]DEBUG 29606[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:02,115]DEBUG 29606[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:02,116]DEBUG 29607[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'orderStatusDao'
[2015-12-30 10:28:02,116]DEBUG 29607[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:02,116]DEBUG 29607[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:02,116]DEBUG 29607[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'productDao'
[2015-12-30 10:28:02,116]DEBUG 29607[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:02,116]DEBUG 29607[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:02,116]DEBUG 29607[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'regionDao'
[2015-12-30 10:28:02,117]DEBUG 29608[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:02,117]DEBUG 29608[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:02,117]DEBUG 29608[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'roleDao'
[2015-12-30 10:28:02,117]DEBUG 29608[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:02,117]DEBUG 29608[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:02,117]DEBUG 29608[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'userDao'
[2015-12-30 10:28:02,118]DEBUG 29609[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:02,118]DEBUG 29609[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,118]DEBUG 29609[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'sessionFactory'
[2015-12-30 10:28:02,120]DEBUG 29611[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,120]DEBUG 29611[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,121]DEBUG 29612[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:02,121]DEBUG 29612[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@220df49]
[2015-12-30 10:28:02,121]DEBUG 29612[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-12-30 10:28:02,122]DEBUG 29613[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.setUp()
[2015-12-30 10:28:02,122]DEBUG 29613[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,122]DEBUG 29613[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.tearDown()
[2015-12-30 10:28:02,122]DEBUG 29613[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,122]DEBUG 29613[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testFindAll()
[2015-12-30 10:28:02,122]DEBUG 29613[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,123]DEBUG 29614[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testInsertOrUpdate()
[2015-12-30 10:28:02,123]DEBUG 29614[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,123]DEBUG 29614[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testDelete()
[2015-12-30 10:28:02,123]DEBUG 29614[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,123]DEBUG 29614[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testFindByID()
[2015-12-30 10:28:02,123]DEBUG 29614[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindOrderStatusByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,124]DEBUG 29615[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testFindOrderStatusByName()
[2015-12-30 10:28:02,124]DEBUG 29615[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2015-12-30 10:28:02,124]DEBUG 29615[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2015-12-30 10:28:02,124]DEBUG 29615[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2015-12-30 10:28:02,124]DEBUG 29615[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2015-12-30 10:28:02,124]DEBUG 29615[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2015-12-30 10:28:02,124]DEBUG 29615[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2015-12-30 10:28:02,124]DEBUG 29615[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2015-12-30 10:28:02,125]DEBUG 29616[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2015-12-30 10:28:02,125]DEBUG 29616[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2015-12-30 10:28:02,125]DEBUG 29616[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2015-12-30 10:28:02,125]DEBUG 29616[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,125]DEBUG 29616[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2015-12-30 10:28:02,125]DEBUG 29616[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2015-12-30 10:28:02,125]DEBUG 29616[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2015-12-30 10:28:02,126]DEBUG 29617[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2015-12-30 10:28:02,126]DEBUG 29617[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2015-12-30 10:28:02,126]DEBUG 29617[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2015-12-30 10:28:02,126]DEBUG 29617[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2015-12-30 10:28:02,126]DEBUG 29617[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2015-12-30 10:28:02,126]DEBUG 29617[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 10:28:02,126]DEBUG 29617[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 10:28:02,126]DEBUG 29617[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2015-12-30 10:28:02,126]DEBUG 29617[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2015-12-30 10:28:02,127]DEBUG 29618[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2015-12-30 10:28:02,127]DEBUG 29618[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2015-12-30 10:28:02,127]DEBUG 29618[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2015-12-30 10:28:02,127]DEBUG 29618[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2015-12-30 10:28:02,127]DEBUG 29618[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2015-12-30 10:28:02,127]DEBUG 29618[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2015-12-30 10:28:02,127]DEBUG 29618[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2015-12-30 10:28:02,127]DEBUG 29618[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 10:28:02,127]DEBUG 29618[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 10:28:02,128]DEBUG 29619[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2015-12-30 10:28:02,128]DEBUG 29619[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 10:28:02,128]DEBUG 29619[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 10:28:02,128]DEBUG 29619[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2015-12-30 10:28:02,128]DEBUG 29619[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2015-12-30 10:28:02,128]DEBUG 29619[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2015-12-30 10:28:02,128]DEBUG 29619[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2015-12-30 10:28:02,128]DEBUG 29619[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2015-12-30 10:28:02,138]DEBUG 29629[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,138]DEBUG 29629[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@220df49, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,138]DEBUG 29629[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 10:28:02,138]DEBUG 29629[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@76905b91 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 10:28:02,138]DEBUG 29629[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:02,138]DEBUG 29629[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,139]DEBUG 29630[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640821
[2015-12-30 10:28:02,141]DEBUG 29632[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2a1cf0bb] for Hibernate transaction
[2015-12-30 10:28:02,141]DEBUG 29632[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2a1cf0bb]
[2015-12-30 10:28:02,141]DEBUG 29632[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:02,141]DEBUG 29632[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:02,141]DEBUG 29632[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:02,141]DEBUG 29632[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@220df49, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,141] INFO 29632[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@2d950731]; rollback [true]
[2015-12-30 10:28:02,142]DEBUG 29633[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,142]DEBUG 29633[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,144]DEBUG 29635[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[1]]
[2015-12-30 10:28:02,144]DEBUG 29635[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,144]DEBUG 29635[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 1, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,147]DEBUG 29638[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,147]DEBUG 29638[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,148]DEBUG 29639[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[2]]
[2015-12-30 10:28:02,149]DEBUG 29640[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,149]DEBUG 29640[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 2, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,149]DEBUG 29640[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,149]DEBUG 29640[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,150]DEBUG 29641[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[3]]
[2015-12-30 10:28:02,150]DEBUG 29641[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,151]DEBUG 29642[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 3, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,151]DEBUG 29642[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,151]DEBUG 29642[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,151]DEBUG 29642[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,152]DEBUG 29643[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,152]DEBUG 29643[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,152]DEBUG 29643[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 10:28:02,152]DEBUG 29643[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 10:28:02,152]DEBUG 29643[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 10:28:02,152]DEBUG 29643[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 10:28:02,154]DEBUG 29645[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,154]DEBUG 29645[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,154]DEBUG 29645[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,154]DEBUG 29645[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,155]DEBUG 29646[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,155]DEBUG 29646[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,155]DEBUG 29646[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:02,157]DEBUG 29648[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,158]DEBUG 29649[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,158]DEBUG 29649[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID24_0_, this_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses this_
[2015-12-30 10:28:02,159]DEBUG 29650[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:02,160]DEBUG 29651[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#1]
[2015-12-30 10:28:02,160]DEBUG 29651[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#2]
[2015-12-30 10:28:02,160]DEBUG 29651[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3]
[2015-12-30 10:28:02,160]DEBUG 29651[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:02,160]DEBUG 29651[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,160]DEBUG 29651[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:02,161]DEBUG 29652[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.OrderItem
[2015-12-30 10:28:02,163]DEBUG 29654[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'OrderItem'

[2015-12-30 10:28:02,163]DEBUG 29654[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,164]DEBUG 29655[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 10:28:02,164]DEBUG 29655[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.OrderItem (no alias) -> orderitem0_
[2015-12-30 10:28:02,164]DEBUG 29655[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 10:28:02,164]DEBUG 29655[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 10:28:02,165]DEBUG 29656[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (OrderItems)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[orderitem0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'OrderItems' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OrderItems,tableAlias=orderitem0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.OrderItem}}

[2015-12-30 10:28:02,165]DEBUG 29656[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,165]DEBUG 29656[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,165]DEBUG 29656[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,166]DEBUG 29657[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,166]DEBUG 29657[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,166]DEBUG 29657[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,166]DEBUG 29657[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,166]DEBUG 29657[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 10:28:02,166]DEBUG 29657[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 10:28:02,166]DEBUG 29657[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 10:28:02,166]DEBUG 29657[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,166]DEBUG 29657[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 10:28:02,168]DEBUG 29659[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,169]DEBUG 29660[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 10:28:02,172]DEBUG 29663[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Dimension'

[2015-12-30 10:28:02,172]DEBUG 29663[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,173]DEBUG 29664[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 10:28:02,173]DEBUG 29664[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Dimension (no alias) -> dimension0_
[2015-12-30 10:28:02,173]DEBUG 29664[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 10:28:02,173]DEBUG 29664[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 10:28:02,174]DEBUG 29665[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Dimensions)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[dimension0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Dimensions' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Dimensions,tableAlias=dimension0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Dimension}}

[2015-12-30 10:28:02,174]DEBUG 29665[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,174]DEBUG 29665[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,174]DEBUG 29665[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,174]DEBUG 29665[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,174]DEBUG 29665[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,176]DEBUG 29667[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,176]DEBUG 29667[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,177]DEBUG 29668[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 10:28:02,177]DEBUG 29668[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 10:28:02,177]DEBUG 29668[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 10:28:02,177]DEBUG 29668[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,177]DEBUG 29668[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 10:28:02,178]DEBUG 29669[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,179]DEBUG 29670[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 10:28:02,181]DEBUG 29672[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Product'

[2015-12-30 10:28:02,181]DEBUG 29672[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,181]DEBUG 29672[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 10:28:02,181]DEBUG 29672[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Product (no alias) -> product0_
[2015-12-30 10:28:02,181]DEBUG 29672[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 10:28:02,181]DEBUG 29672[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 10:28:02,182]DEBUG 29673[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Products)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Products' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Products,tableAlias=product0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Product}}

[2015-12-30 10:28:02,182]DEBUG 29673[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,182]DEBUG 29673[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,182]DEBUG 29673[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,182]DEBUG 29673[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,183]DEBUG 29674[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,183]DEBUG 29674[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,183]DEBUG 29674[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,183]DEBUG 29674[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 10:28:02,183]DEBUG 29674[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 10:28:02,183]DEBUG 29674[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 10:28:02,183]DEBUG 29674[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,183]DEBUG 29674[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:02,184]DEBUG 29675[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,186]DEBUG 29677[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 10:28:02,187]DEBUG 29678[main] - org.hibernate.hql.ast.HqlParser.weakKeywords(HqlParser.java:340) - weakKeywords() : new LT(1) token - ["Order",<126> previously: <41>,line=1,col=54,possibleID=true]
[2015-12-30 10:28:02,188]DEBUG 29679[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Order'

[2015-12-30 10:28:02,188]DEBUG 29679[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,188]DEBUG 29679[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 10:28:02,189]DEBUG 29680[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Order (no alias) -> order0_
[2015-12-30 10:28:02,189]DEBUG 29680[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 10:28:02,189]DEBUG 29680[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 10:28:02,189]DEBUG 29680[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Orders)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Orders' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Orders,tableAlias=order0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Order}}

[2015-12-30 10:28:02,189]DEBUG 29680[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,190]DEBUG 29681[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,190]DEBUG 29681[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,190]DEBUG 29681[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,190]DEBUG 29681[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,190]DEBUG 29681[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,191]DEBUG 29682[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,191]DEBUG 29682[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 10:28:02,191]DEBUG 29682[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 10:28:02,191]DEBUG 29682[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 10:28:02,191]DEBUG 29682[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,191]DEBUG 29682[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 10:28:02,193]DEBUG 29684[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,194]DEBUG 29685[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 10:28:02,196]DEBUG 29687[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'OrderStatus'

[2015-12-30 10:28:02,196]DEBUG 29687[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,196]DEBUG 29687[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 10:28:02,199]DEBUG 29690[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.OrderStatus (no alias) -> orderstatu0_
[2015-12-30 10:28:02,199]DEBUG 29690[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 10:28:02,199]DEBUG 29690[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 10:28:02,200]DEBUG 29691[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (OrderStatuses)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[orderstatu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'OrderStatuses' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OrderStatuses,tableAlias=orderstatu0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.OrderStatus}}

[2015-12-30 10:28:02,200]DEBUG 29691[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,202]DEBUG 29693[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,202]DEBUG 29693[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,202]DEBUG 29693[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,202]DEBUG 29693[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,202]DEBUG 29693[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,202]DEBUG 29693[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,203]DEBUG 29694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 10:28:02,203]DEBUG 29694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 10:28:02,203]DEBUG 29694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 10:28:02,203]DEBUG 29694[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,203]DEBUG 29694[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 10:28:02,205]DEBUG 29696[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,212]DEBUG 29703[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 10:28:02,214]DEBUG 29705[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'User'

[2015-12-30 10:28:02,214]DEBUG 29705[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,214]DEBUG 29705[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 10:28:02,214]DEBUG 29705[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.User (no alias) -> user0_
[2015-12-30 10:28:02,215]DEBUG 29706[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 10:28:02,215]DEBUG 29706[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 10:28:02,215]DEBUG 29706[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Users)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.User}}

[2015-12-30 10:28:02,215]DEBUG 29706[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,217]DEBUG 29708[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,218]DEBUG 29709[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,218]DEBUG 29709[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,218]DEBUG 29709[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,218]DEBUG 29709[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,218]DEBUG 29709[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,219]DEBUG 29710[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 10:28:02,219]DEBUG 29710[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 10:28:02,219]DEBUG 29710[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 10:28:02,219]DEBUG 29710[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,219]DEBUG 29710[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 10:28:02,221]DEBUG 29712[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,222]DEBUG 29713[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 10:28:02,223]DEBUG 29714[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'CustomerType'

[2015-12-30 10:28:02,223]DEBUG 29714[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,224]DEBUG 29715[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 10:28:02,225]DEBUG 29716[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (no alias) -> customerty0_
[2015-12-30 10:28:02,225]DEBUG 29716[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 10:28:02,225]DEBUG 29716[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 10:28:02,226]DEBUG 29717[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (CustomerTypes)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerTypes' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}

[2015-12-30 10:28:02,226]DEBUG 29717[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,226]DEBUG 29717[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,226]DEBUG 29717[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,226]DEBUG 29717[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,227]DEBUG 29718[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,227]DEBUG 29718[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,227]DEBUG 29718[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,227]DEBUG 29718[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 10:28:02,227]DEBUG 29718[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 10:28:02,227]DEBUG 29718[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 10:28:02,227]DEBUG 29718[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,227]DEBUG 29718[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 10:28:02,229]DEBUG 29720[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,229]DEBUG 29720[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 10:28:02,231]DEBUG 29722[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Region'

[2015-12-30 10:28:02,231]DEBUG 29722[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,232]DEBUG 29723[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 10:28:02,232]DEBUG 29723[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Region (no alias) -> region0_
[2015-12-30 10:28:02,232]DEBUG 29723[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 10:28:02,232]DEBUG 29723[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 10:28:02,235]DEBUG 29726[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Regions)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[region0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Regions' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Regions,tableAlias=region0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Region}}

[2015-12-30 10:28:02,235]DEBUG 29726[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,236]DEBUG 29727[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,236]DEBUG 29727[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,236]DEBUG 29727[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,236]DEBUG 29727[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,236]DEBUG 29727[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,237]DEBUG 29728[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,237]DEBUG 29728[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 10:28:02,237]DEBUG 29728[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 10:28:02,237]DEBUG 29728[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 10:28:02,237]DEBUG 29728[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,237]DEBUG 29728[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 10:28:02,239]DEBUG 29730[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,239]DEBUG 29730[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 10:28:02,241]DEBUG 29732[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Role'

[2015-12-30 10:28:02,241]DEBUG 29732[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,241]DEBUG 29732[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 10:28:02,241]DEBUG 29732[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Role (no alias) -> role0_
[2015-12-30 10:28:02,241]DEBUG 29732[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 10:28:02,242]DEBUG 29733[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 10:28:02,243]DEBUG 29734[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Roles)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Roles' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Roles,tableAlias=role0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Role}}

[2015-12-30 10:28:02,243]DEBUG 29734[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,243]DEBUG 29734[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,244]DEBUG 29735[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,244]DEBUG 29735[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,244]DEBUG 29735[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,244]DEBUG 29735[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,244]DEBUG 29735[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,244]DEBUG 29735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 10:28:02,244]DEBUG 29735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 10:28:02,244]DEBUG 29735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 10:28:02,245]DEBUG 29736[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,245]DEBUG 29736[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 10:28:02,246]DEBUG 29737[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,246]DEBUG 29737[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@220df49, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,246]DEBUG 29737[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:02,246]DEBUG 29737[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2a1cf0bb]
[2015-12-30 10:28:02,246]DEBUG 29737[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:02,248]DEBUG 29739[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:02,248]DEBUG 29739[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,248]DEBUG 29739[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2a1cf0bb] after transaction
[2015-12-30 10:28:02,248]DEBUG 29739[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:02,249]DEBUG 29740[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:02,249]DEBUG 29740[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,249] INFO 29740[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@220df49, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,249]DEBUG 29740[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@220df49, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:02,250]DEBUG 29741[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 10:28:02,250]DEBUG 29741[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 10:28:02,250]DEBUG 29741[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6a630494, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:02,250]DEBUG 29741[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:02,250]DEBUG 29741[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:02,251]DEBUG 29742[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:02,251]DEBUG 29742[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:02,251]DEBUG 29742[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:02,251]DEBUG 29742[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:02,251]DEBUG 29742[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:02,251]DEBUG 29742[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:02,251]DEBUG 29742[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:02,251]DEBUG 29742[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:02,251]DEBUG 29742[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:02,252]DEBUG 29743[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:02,252]DEBUG 29743[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:02,252]DEBUG 29743[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:02,252]DEBUG 29743[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:02,252]DEBUG 29743[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:02,252]DEBUG 29743[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:02,252]DEBUG 29743[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:02,252]DEBUG 29743[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:02,252]DEBUG 29743[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,252]DEBUG 29743[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,253]DEBUG 29744[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:02,254]DEBUG 29745[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6a630494]
[2015-12-30 10:28:02,254]DEBUG 29745[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,254]DEBUG 29745[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6a630494, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,254]DEBUG 29745[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:02,255]DEBUG 29746[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,255]DEBUG 29746[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640822
[2015-12-30 10:28:02,255]DEBUG 29746[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@14b4271a] for Hibernate transaction
[2015-12-30 10:28:02,257]DEBUG 29748[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@14b4271a]
[2015-12-30 10:28:02,257]DEBUG 29748[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:02,257]DEBUG 29748[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:02,257]DEBUG 29748[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:02,257]DEBUG 29748[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6a630494, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,257] INFO 29748[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@2d950731]; rollback [true]
[2015-12-30 10:28:02,257]DEBUG 29748[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,258]DEBUG 29749[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,259]DEBUG 29750[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[4]]
[2015-12-30 10:28:02,259]DEBUG 29750[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,259]DEBUG 29750[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 4, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,260]DEBUG 29751[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,260]DEBUG 29751[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,261]DEBUG 29752[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[5]]
[2015-12-30 10:28:02,261]DEBUG 29752[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,261]DEBUG 29752[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 5, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,261]DEBUG 29752[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,262]DEBUG 29753[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,263]DEBUG 29754[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[6]]
[2015-12-30 10:28:02,263]DEBUG 29754[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,263]DEBUG 29754[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 6, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,263]DEBUG 29754[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,263]DEBUG 29754[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,264]DEBUG 29755[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,264]DEBUG 29755[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,264]DEBUG 29755[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,264]DEBUG 29755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 10:28:02,264]DEBUG 29755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 10:28:02,264]DEBUG 29755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 10:28:02,264]DEBUG 29755[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 10:28:02,265]DEBUG 29756[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,265]DEBUG 29756[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,265]DEBUG 29756[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,265]DEBUG 29756[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,265]DEBUG 29756[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,265]DEBUG 29756[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,266]DEBUG 29757[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:02,267]DEBUG 29758[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,267]DEBUG 29758[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,268]DEBUG 29759[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID24_0_, this_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses this_
[2015-12-30 10:28:02,269]DEBUG 29760[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:02,269]DEBUG 29760[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#4]
[2015-12-30 10:28:02,269]DEBUG 29760[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#5]
[2015-12-30 10:28:02,270]DEBUG 29761[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#6]
[2015-12-30 10:28:02,272]DEBUG 29763[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:02,272]DEBUG 29763[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,272]DEBUG 29763[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:02,272]DEBUG 29763[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,273]DEBUG 29764[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,273]DEBUG 29764[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,273]DEBUG 29764[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,273]DEBUG 29764[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,273]DEBUG 29764[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 10:28:02,273]DEBUG 29764[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 10:28:02,274]DEBUG 29765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 10:28:02,274]DEBUG 29765[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,274]DEBUG 29765[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 10:28:02,275]DEBUG 29766[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,275]DEBUG 29766[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,276]DEBUG 29767[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,276]DEBUG 29767[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,276]DEBUG 29767[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,276]DEBUG 29767[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,276]DEBUG 29767[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 10:28:02,276]DEBUG 29767[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 10:28:02,276]DEBUG 29767[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 10:28:02,277]DEBUG 29768[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,277]DEBUG 29768[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 10:28:02,278]DEBUG 29769[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,278]DEBUG 29769[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,278]DEBUG 29769[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,278]DEBUG 29769[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,278]DEBUG 29769[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,279]DEBUG 29770[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,279]DEBUG 29770[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 10:28:02,279]DEBUG 29770[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 10:28:02,279]DEBUG 29770[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 10:28:02,279]DEBUG 29770[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,279]DEBUG 29770[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:02,282]DEBUG 29773[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,282]DEBUG 29773[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,283]DEBUG 29774[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,283]DEBUG 29774[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,283]DEBUG 29774[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,284]DEBUG 29775[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,284]DEBUG 29775[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 10:28:02,284]DEBUG 29775[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 10:28:02,284]DEBUG 29775[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 10:28:02,284]DEBUG 29775[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,285]DEBUG 29776[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 10:28:02,286]DEBUG 29777[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,286]DEBUG 29777[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,286]DEBUG 29777[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,286]DEBUG 29777[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,287]DEBUG 29778[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,287]DEBUG 29778[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,287]DEBUG 29778[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 10:28:02,287]DEBUG 29778[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 10:28:02,287]DEBUG 29778[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 10:28:02,287]DEBUG 29778[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,287]DEBUG 29778[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 10:28:02,289]DEBUG 29780[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,289]DEBUG 29780[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,289]DEBUG 29780[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,289]DEBUG 29780[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,289]DEBUG 29780[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,290]DEBUG 29781[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,290]DEBUG 29781[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 10:28:02,290]DEBUG 29781[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 10:28:02,290]DEBUG 29781[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 10:28:02,290]DEBUG 29781[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,290]DEBUG 29781[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 10:28:02,291]DEBUG 29782[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,291]DEBUG 29782[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,292]DEBUG 29783[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,292]DEBUG 29783[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,292]DEBUG 29783[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,292]DEBUG 29783[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,292]DEBUG 29783[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 10:28:02,292]DEBUG 29783[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 10:28:02,292]DEBUG 29783[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 10:28:02,293]DEBUG 29784[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,293]DEBUG 29784[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 10:28:02,294]DEBUG 29785[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,294]DEBUG 29785[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,294]DEBUG 29785[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,294]DEBUG 29785[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,295]DEBUG 29786[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,295]DEBUG 29786[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,295]DEBUG 29786[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 10:28:02,295]DEBUG 29786[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 10:28:02,295]DEBUG 29786[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 10:28:02,295]DEBUG 29786[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,295]DEBUG 29786[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 10:28:02,296]DEBUG 29787[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,296]DEBUG 29787[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,297]DEBUG 29788[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,297]DEBUG 29788[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,297]DEBUG 29788[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,297]DEBUG 29788[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,297]DEBUG 29788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 10:28:02,297]DEBUG 29788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 10:28:02,297]DEBUG 29788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 10:28:02,297]DEBUG 29788[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,297]DEBUG 29788[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 10:28:02,299]DEBUG 29790[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,299]DEBUG 29790[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6a630494, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,299]DEBUG 29790[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:02,299]DEBUG 29790[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@14b4271a]
[2015-12-30 10:28:02,299]DEBUG 29790[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:02,300]DEBUG 29791[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:02,300]DEBUG 29791[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,300]DEBUG 29791[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@14b4271a] after transaction
[2015-12-30 10:28:02,300]DEBUG 29791[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:02,301]DEBUG 29792[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:02,301]DEBUG 29792[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,301] INFO 29792[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6a630494, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,301]DEBUG 29792[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6a630494, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:02,302]DEBUG 29793[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 10:28:02,302]DEBUG 29793[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 10:28:02,302]DEBUG 29793[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@20598641, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:02,302]DEBUG 29793[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:02,302]DEBUG 29793[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:02,302]DEBUG 29793[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:02,302]DEBUG 29793[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:02,304]DEBUG 29795[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:02,304]DEBUG 29795[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:02,304]DEBUG 29795[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:02,304]DEBUG 29795[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:02,304]DEBUG 29795[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:02,304]DEBUG 29795[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:02,305]DEBUG 29796[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:02,305]DEBUG 29796[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:02,305]DEBUG 29796[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:02,305]DEBUG 29796[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:02,305]DEBUG 29796[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:02,305]DEBUG 29796[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:02,305]DEBUG 29796[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:02,305]DEBUG 29796[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:02,305]DEBUG 29796[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:02,306]DEBUG 29797[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,306]DEBUG 29797[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,306]DEBUG 29797[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:02,306]DEBUG 29797[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@20598641]
[2015-12-30 10:28:02,306]DEBUG 29797[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,307]DEBUG 29798[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@20598641, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,307]DEBUG 29798[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:02,307]DEBUG 29798[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,307]DEBUG 29798[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640823
[2015-12-30 10:28:02,308]DEBUG 29799[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1d6b6e76] for Hibernate transaction
[2015-12-30 10:28:02,308]DEBUG 29799[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1d6b6e76]
[2015-12-30 10:28:02,308]DEBUG 29799[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:02,308]DEBUG 29799[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:02,308]DEBUG 29799[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:02,308]DEBUG 29799[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@20598641, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,308] INFO 29799[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@2d950731]; rollback [true]
[2015-12-30 10:28:02,308]DEBUG 29799[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,309]DEBUG 29800[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,310]DEBUG 29801[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[7]]
[2015-12-30 10:28:02,310]DEBUG 29801[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,310]DEBUG 29801[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 7, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,311]DEBUG 29802[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,311]DEBUG 29802[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,312]DEBUG 29803[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[8]]
[2015-12-30 10:28:02,312]DEBUG 29803[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,312]DEBUG 29803[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 8, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,313]DEBUG 29804[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,313]DEBUG 29804[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,314]DEBUG 29805[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[9]]
[2015-12-30 10:28:02,314]DEBUG 29805[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,314]DEBUG 29805[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 9, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,314]DEBUG 29805[main] - org.hibernate.event.def.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:442) - load request found matching entity in context, but it is scheduled for removal; returning null
[2015-12-30 10:28:02,315]DEBUG 29806[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,315]DEBUG 29806[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,315]DEBUG 29806[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 1 deletions to 3 objects
[2015-12-30 10:28:02,315]DEBUG 29806[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,315]DEBUG 29806[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,315]DEBUG 29806[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 10:28:02,316]DEBUG 29807[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 10:28:02,316]DEBUG 29807[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2015-12-30 10:28:02,316]DEBUG 29807[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,316]DEBUG 29807[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 10:28:02,317]DEBUG 29808[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,317]DEBUG 29808[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,318]DEBUG 29809[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,318]DEBUG 29809[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 1 deletions to 3 objects
[2015-12-30 10:28:02,318]DEBUG 29809[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,318]DEBUG 29809[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,318]DEBUG 29809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 10:28:02,318]DEBUG 29809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 10:28:02,318]DEBUG 29809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2015-12-30 10:28:02,318]DEBUG 29809[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,319]DEBUG 29810[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 10:28:02,320]DEBUG 29811[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,320]DEBUG 29811[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,320]DEBUG 29811[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,320]DEBUG 29811[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 1 deletions to 3 objects
[2015-12-30 10:28:02,320]DEBUG 29811[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,321]DEBUG 29812[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,321]DEBUG 29812[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 10:28:02,321]DEBUG 29812[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 10:28:02,321]DEBUG 29812[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2015-12-30 10:28:02,321]DEBUG 29812[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,321]DEBUG 29812[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:02,322]DEBUG 29813[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,322]DEBUG 29813[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,323]DEBUG 29814[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,323]DEBUG 29814[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 1 deletions to 3 objects
[2015-12-30 10:28:02,324]DEBUG 29815[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,325]DEBUG 29816[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,325]DEBUG 29816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 10:28:02,325]DEBUG 29816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 10:28:02,325]DEBUG 29816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2015-12-30 10:28:02,325]DEBUG 29816[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,325]DEBUG 29816[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 10:28:02,327]DEBUG 29818[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,327]DEBUG 29818[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,327]DEBUG 29818[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,327]DEBUG 29818[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 1 deletions to 3 objects
[2015-12-30 10:28:02,327]DEBUG 29818[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,327]DEBUG 29818[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,327]DEBUG 29818[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 10:28:02,328]DEBUG 29819[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 10:28:02,328]DEBUG 29819[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2015-12-30 10:28:02,328]DEBUG 29819[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 10:28:02,328]DEBUG 29819[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,328]DEBUG 29819[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,328]DEBUG 29819[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,328]DEBUG 29819[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,329]DEBUG 29820[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,329]DEBUG 29820[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,329]DEBUG 29820[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:02,330]DEBUG 29821[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,331]DEBUG 29822[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,331]DEBUG 29822[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses where ID=?
[2015-12-30 10:28:02,331]DEBUG 29822[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 10:28:02,332]DEBUG 29823[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,332]DEBUG 29823[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,332]DEBUG 29823[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 10:28:02,338]DEBUG 29829[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,338]DEBUG 29829[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,338]DEBUG 29829[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,338]DEBUG 29829[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2015-12-30 10:28:02,339]DEBUG 29830[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,339]DEBUG 29830[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,339]DEBUG 29830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 10:28:02,339]DEBUG 29830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 10:28:02,339]DEBUG 29830[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,339]DEBUG 29830[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 10:28:02,340]DEBUG 29831[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,341]DEBUG 29832[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,341]DEBUG 29832[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,341]DEBUG 29832[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2015-12-30 10:28:02,341]DEBUG 29832[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,341]DEBUG 29832[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,341]DEBUG 29832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 10:28:02,341]DEBUG 29832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 10:28:02,342]DEBUG 29833[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,342]DEBUG 29833[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 10:28:02,343]DEBUG 29834[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,343]DEBUG 29834[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,343]DEBUG 29834[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,343]DEBUG 29834[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2015-12-30 10:28:02,343]DEBUG 29834[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,343]DEBUG 29834[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,344]DEBUG 29835[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 10:28:02,344]DEBUG 29835[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 10:28:02,344]DEBUG 29835[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,344]DEBUG 29835[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 10:28:02,345]DEBUG 29836[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,345]DEBUG 29836[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,345]DEBUG 29836[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,345]DEBUG 29836[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2015-12-30 10:28:02,346]DEBUG 29837[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,346]DEBUG 29837[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,346]DEBUG 29837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 10:28:02,346]DEBUG 29837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 10:28:02,346]DEBUG 29837[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,346]DEBUG 29837[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 10:28:02,347]DEBUG 29838[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,347]DEBUG 29838[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@20598641, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,347]DEBUG 29838[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:02,348]DEBUG 29839[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1d6b6e76]
[2015-12-30 10:28:02,348]DEBUG 29839[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:02,349]DEBUG 29840[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:02,349]DEBUG 29840[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,349]DEBUG 29840[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1d6b6e76] after transaction
[2015-12-30 10:28:02,349]DEBUG 29840[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:02,349]DEBUG 29840[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:02,349]DEBUG 29840[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,349] INFO 29840[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@20598641, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,350]DEBUG 29841[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@20598641, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:02,352]DEBUG 29843[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 10:28:02,352]DEBUG 29843[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 10:28:02,352]DEBUG 29843[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@12dcbc63, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:02,352]DEBUG 29843[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:02,352]DEBUG 29843[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:02,352]DEBUG 29843[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:02,352]DEBUG 29843[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:02,353]DEBUG 29844[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:02,353]DEBUG 29844[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:02,353]DEBUG 29844[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:02,353]DEBUG 29844[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:02,353]DEBUG 29844[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:02,353]DEBUG 29844[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:02,353]DEBUG 29844[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:02,353]DEBUG 29844[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:02,353]DEBUG 29844[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:02,354]DEBUG 29845[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:02,354]DEBUG 29845[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:02,357]DEBUG 29848[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:02,357]DEBUG 29848[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:02,357]DEBUG 29848[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:02,357]DEBUG 29848[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:02,357]DEBUG 29848[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,358]DEBUG 29849[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,358]DEBUG 29849[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:02,358]DEBUG 29849[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@12dcbc63]
[2015-12-30 10:28:02,358]DEBUG 29849[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,358]DEBUG 29849[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@12dcbc63, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,359]DEBUG 29850[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:02,359]DEBUG 29850[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,359]DEBUG 29850[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640823
[2015-12-30 10:28:02,359]DEBUG 29850[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4c1df613] for Hibernate transaction
[2015-12-30 10:28:02,359]DEBUG 29850[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4c1df613]
[2015-12-30 10:28:02,359]DEBUG 29850[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:02,360]DEBUG 29851[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:02,360]DEBUG 29851[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:02,360]DEBUG 29851[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@12dcbc63, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,360] INFO 29851[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@2d950731]; rollback [true]
[2015-12-30 10:28:02,360]DEBUG 29851[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,360]DEBUG 29851[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,361]DEBUG 29852[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[10]]
[2015-12-30 10:28:02,362]DEBUG 29853[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,362]DEBUG 29853[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 10, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,362]DEBUG 29853[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,362]DEBUG 29853[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,363]DEBUG 29854[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[11]]
[2015-12-30 10:28:02,363]DEBUG 29854[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,363]DEBUG 29854[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 11, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,364]DEBUG 29855[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,364]DEBUG 29855[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,365]DEBUG 29856[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[12]]
[2015-12-30 10:28:02,365]DEBUG 29856[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,365]DEBUG 29856[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 12, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,366]DEBUG 29857[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,366]DEBUG 29857[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,366]DEBUG 29857[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,366]DEBUG 29857[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,366]DEBUG 29857[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,367]DEBUG 29858[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 10:28:02,367]DEBUG 29858[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 10:28:02,367]DEBUG 29858[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 10:28:02,367]DEBUG 29858[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,367]DEBUG 29858[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 10:28:02,368]DEBUG 29859[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,369]DEBUG 29860[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,369]DEBUG 29860[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,370]DEBUG 29861[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,370]DEBUG 29861[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,370]DEBUG 29861[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,371]DEBUG 29862[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 10:28:02,371]DEBUG 29862[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 10:28:02,371]DEBUG 29862[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 10:28:02,371]DEBUG 29862[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,371]DEBUG 29862[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 10:28:02,373]DEBUG 29864[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,373]DEBUG 29864[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,373]DEBUG 29864[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,374]DEBUG 29865[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,374]DEBUG 29865[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,374]DEBUG 29865[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,374]DEBUG 29865[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 10:28:02,374]DEBUG 29865[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 10:28:02,374]DEBUG 29865[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 10:28:02,376]DEBUG 29867[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,376]DEBUG 29867[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:02,377]DEBUG 29868[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,377]DEBUG 29868[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,378]DEBUG 29869[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,378]DEBUG 29869[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,378]DEBUG 29869[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,378]DEBUG 29869[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,378]DEBUG 29869[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 10:28:02,378]DEBUG 29869[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 10:28:02,378]DEBUG 29869[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 10:28:02,378]DEBUG 29869[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,379]DEBUG 29870[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 10:28:02,380]DEBUG 29871[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,380]DEBUG 29871[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,380]DEBUG 29871[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,380]DEBUG 29871[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,380]DEBUG 29871[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,380]DEBUG 29871[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,381]DEBUG 29872[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 10:28:02,381]DEBUG 29872[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 10:28:02,381]DEBUG 29872[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 10:28:02,381]DEBUG 29872[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 10:28:02,381]DEBUG 29872[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,381]DEBUG 29872[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,382]DEBUG 29873[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,382]DEBUG 29873[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,382]DEBUG 29873[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,382]DEBUG 29873[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,382]DEBUG 29873[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:02,384]DEBUG 29875[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,384]DEBUG 29875[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,384]DEBUG 29875[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 10:28:02,385]DEBUG 29876[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,385]DEBUG 29876[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,386]DEBUG 29877[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,386]DEBUG 29877[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,386]DEBUG 29877[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,386]DEBUG 29877[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,386]DEBUG 29877[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 10:28:02,386]DEBUG 29877[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 10:28:02,386]DEBUG 29877[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 10:28:02,386]DEBUG 29877[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,387]DEBUG 29878[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 10:28:02,388]DEBUG 29879[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,388]DEBUG 29879[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,388]DEBUG 29879[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,388]DEBUG 29879[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,388]DEBUG 29879[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,389]DEBUG 29880[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,389]DEBUG 29880[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 10:28:02,389]DEBUG 29880[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 10:28:02,389]DEBUG 29880[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 10:28:02,389]DEBUG 29880[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,389]DEBUG 29880[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 10:28:02,390]DEBUG 29881[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,391]DEBUG 29882[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,391]DEBUG 29882[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,391]DEBUG 29882[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,391]DEBUG 29882[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,391]DEBUG 29882[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,391]DEBUG 29882[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 10:28:02,391]DEBUG 29882[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 10:28:02,391]DEBUG 29882[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 10:28:02,392]DEBUG 29883[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,392]DEBUG 29883[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 10:28:02,393]DEBUG 29884[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,393]DEBUG 29884[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,393]DEBUG 29884[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,393]DEBUG 29884[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,394]DEBUG 29885[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,394]DEBUG 29885[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,394]DEBUG 29885[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 10:28:02,394]DEBUG 29885[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 10:28:02,394]DEBUG 29885[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 10:28:02,394]DEBUG 29885[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,394]DEBUG 29885[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 10:28:02,395]DEBUG 29886[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,395]DEBUG 29886[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@12dcbc63, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,396]DEBUG 29887[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:02,396]DEBUG 29887[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4c1df613]
[2015-12-30 10:28:02,396]DEBUG 29887[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:02,397]DEBUG 29888[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:02,397]DEBUG 29888[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,397]DEBUG 29888[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4c1df613] after transaction
[2015-12-30 10:28:02,399]DEBUG 29890[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:02,399]DEBUG 29890[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:02,399]DEBUG 29890[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,399] INFO 29890[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@12dcbc63, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,399]DEBUG 29890[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@12dcbc63, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:02,400]DEBUG 29891[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 10:28:02,400]DEBUG 29891[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 10:28:02,400]DEBUG 29891[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@7c71e0fb, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:02,400]DEBUG 29891[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:02,400]DEBUG 29891[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:02,400]DEBUG 29891[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:02,401]DEBUG 29892[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:02,401]DEBUG 29892[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:02,401]DEBUG 29892[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:02,401]DEBUG 29892[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:02,401]DEBUG 29892[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:02,401]DEBUG 29892[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:02,401]DEBUG 29892[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:02,401]DEBUG 29892[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:02,401]DEBUG 29892[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:02,402]DEBUG 29893[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:02,402]DEBUG 29893[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:02,402]DEBUG 29893[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:02,402]DEBUG 29893[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:02,402]DEBUG 29893[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:02,402]DEBUG 29893[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:02,402]DEBUG 29893[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:02,402]DEBUG 29893[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,402]DEBUG 29893[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,403]DEBUG 29894[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:02,403]DEBUG 29894[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@7c71e0fb]
[2015-12-30 10:28:02,403]DEBUG 29894[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindOrderStatusByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,403]DEBUG 29894[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@7c71e0fb, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,403]DEBUG 29894[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:02,404]DEBUG 29895[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindOrderStatusByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,404]DEBUG 29895[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640824
[2015-12-30 10:28:02,404]DEBUG 29895[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6ba16608] for Hibernate transaction
[2015-12-30 10:28:02,404]DEBUG 29895[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6ba16608]
[2015-12-30 10:28:02,404]DEBUG 29895[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:02,404]DEBUG 29895[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:02,404]DEBUG 29895[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:02,404]DEBUG 29895[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@7c71e0fb, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,405] INFO 29896[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@2d950731]; rollback [true]
[2015-12-30 10:28:02,405]DEBUG 29896[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,405]DEBUG 29896[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,406]DEBUG 29897[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[13]]
[2015-12-30 10:28:02,406]DEBUG 29897[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,407]DEBUG 29898[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 13, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,407]DEBUG 29898[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,407]DEBUG 29898[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,414]DEBUG 29905[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[14]]
[2015-12-30 10:28:02,414]DEBUG 29905[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,414]DEBUG 29905[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 14, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,414]DEBUG 29905[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,415]DEBUG 29906[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,416]DEBUG 29907[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[15]]
[2015-12-30 10:28:02,416]DEBUG 29907[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,416]DEBUG 29907[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 15, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,416]DEBUG 29907[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,417]DEBUG 29908[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,418]DEBUG 29909[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[16]]
[2015-12-30 10:28:02,418]DEBUG 29909[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,418]DEBUG 29909[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 16, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,418]DEBUG 29909[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,418]DEBUG 29909[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,419]DEBUG 29910[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,419]DEBUG 29910[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,419]DEBUG 29910[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,419]DEBUG 29910[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2015-12-30 10:28:02,419]DEBUG 29910[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 10:28:02,419]DEBUG 29910[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 10:28:02,419]DEBUG 29910[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 10:28:02,419]DEBUG 29910[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 10:28:02,420]DEBUG 29911[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,420]DEBUG 29911[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,421]DEBUG 29912[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,421]DEBUG 29912[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,421]DEBUG 29912[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,421]DEBUG 29912[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,423]DEBUG 29914[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,423]DEBUG 29914[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,423]DEBUG 29914[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 10:28:02,425]DEBUG 29916[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,426]DEBUG 29917[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,426]DEBUG 29917[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID24_0_, this_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses this_ where this_.OrederStatusName=?
[2015-12-30 10:28:02,428]DEBUG 29919[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:02,428]DEBUG 29919[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#16]
[2015-12-30 10:28:02,429]DEBUG 29920[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:02,429]DEBUG 29920[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,429]DEBUG 29920[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:02,429]DEBUG 29920[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,429]DEBUG 29920[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,430]DEBUG 29921[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 10:28:02,430]DEBUG 29921[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,430]DEBUG 29921[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,430]DEBUG 29921[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2015-12-30 10:28:02,430]DEBUG 29921[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 10:28:02,430]DEBUG 29921[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 10:28:02,430]DEBUG 29921[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 10:28:02,431]DEBUG 29922[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,431]DEBUG 29922[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 10:28:02,432]DEBUG 29923[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,432]DEBUG 29923[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,432]DEBUG 29923[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,432]DEBUG 29923[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 10:28:02,433]DEBUG 29924[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,433]DEBUG 29924[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,433]DEBUG 29924[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2015-12-30 10:28:02,433]DEBUG 29924[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 10:28:02,433]DEBUG 29924[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 10:28:02,433]DEBUG 29924[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 10:28:02,433]DEBUG 29924[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,433]DEBUG 29924[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 10:28:02,434]DEBUG 29925[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,435]DEBUG 29926[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,435]DEBUG 29926[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,435]DEBUG 29926[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 10:28:02,435]DEBUG 29926[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,435]DEBUG 29926[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,435]DEBUG 29926[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2015-12-30 10:28:02,436]DEBUG 29927[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 10:28:02,436]DEBUG 29927[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 10:28:02,436]DEBUG 29927[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 10:28:02,436]DEBUG 29927[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,436]DEBUG 29927[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:02,437]DEBUG 29928[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,437]DEBUG 29928[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,438]DEBUG 29929[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,438]DEBUG 29929[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 10:28:02,438]DEBUG 29929[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,438]DEBUG 29929[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,438]DEBUG 29929[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2015-12-30 10:28:02,438]DEBUG 29929[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 10:28:02,439]DEBUG 29930[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 10:28:02,439]DEBUG 29930[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 10:28:02,439]DEBUG 29930[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,439]DEBUG 29930[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 10:28:02,440]DEBUG 29931[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,440]DEBUG 29931[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,440]DEBUG 29931[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,441]DEBUG 29932[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 10:28:02,441]DEBUG 29932[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,441]DEBUG 29932[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,441]DEBUG 29932[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2015-12-30 10:28:02,441]DEBUG 29932[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 10:28:02,441]DEBUG 29932[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 10:28:02,441]DEBUG 29932[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 10:28:02,442]DEBUG 29933[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 10:28:02,442]DEBUG 29933[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,442]DEBUG 29933[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses where ID=?
[2015-12-30 10:28:02,442]DEBUG 29933[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 10:28:02,443]DEBUG 29934[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,444]DEBUG 29935[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,444]DEBUG 29935[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 10:28:02,445]DEBUG 29936[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,445]DEBUG 29936[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,446]DEBUG 29937[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,446]DEBUG 29937[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,446]DEBUG 29937[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,446]DEBUG 29937[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,446]DEBUG 29937[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 10:28:02,446]DEBUG 29937[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 10:28:02,448]DEBUG 29939[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 10:28:02,448]DEBUG 29939[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,449]DEBUG 29940[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 10:28:02,450]DEBUG 29941[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,450]DEBUG 29941[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,450]DEBUG 29941[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,450]DEBUG 29941[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,450]DEBUG 29941[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,450]DEBUG 29941[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,451]DEBUG 29942[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 10:28:02,451]DEBUG 29942[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 10:28:02,451]DEBUG 29942[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 10:28:02,451]DEBUG 29942[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,451]DEBUG 29942[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 10:28:02,452]DEBUG 29943[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,453]DEBUG 29944[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,453]DEBUG 29944[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,453]DEBUG 29944[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,453]DEBUG 29944[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,453]DEBUG 29944[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,453]DEBUG 29944[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 10:28:02,453]DEBUG 29944[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 10:28:02,454]DEBUG 29945[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 10:28:02,454]DEBUG 29945[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,454]DEBUG 29945[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 10:28:02,455]DEBUG 29946[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,455]DEBUG 29946[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,455]DEBUG 29946[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,456]DEBUG 29947[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,456]DEBUG 29947[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,456]DEBUG 29947[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,456]DEBUG 29947[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 10:28:02,456]DEBUG 29947[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 10:28:02,456]DEBUG 29947[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 10:28:02,456]DEBUG 29947[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,457]DEBUG 29948[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 10:28:02,458]DEBUG 29949[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,458]DEBUG 29949[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@7c71e0fb, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,458]DEBUG 29949[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:02,458]DEBUG 29949[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6ba16608]
[2015-12-30 10:28:02,458]DEBUG 29949[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:02,459]DEBUG 29950[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:02,459]DEBUG 29950[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,460]DEBUG 29951[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6ba16608] after transaction
[2015-12-30 10:28:02,460]DEBUG 29951[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:02,460]DEBUG 29951[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:02,460]DEBUG 29951[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,460] INFO 29951[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@7c71e0fb, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 10:28:02,461]DEBUG 29952[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@7c71e0fb, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:02,461]DEBUG 29952[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 10:28:02,461]DEBUG 29952[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 10:28:02,461]DEBUG 29952[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@80cf411, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:02,462]DEBUG 29953[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:02,462]DEBUG 29953[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:02,462]DEBUG 29953[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:02,462]DEBUG 29953[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:02,462]DEBUG 29953[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:02,462]DEBUG 29953[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:02,462]DEBUG 29953[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:02,462]DEBUG 29953[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:02,463]DEBUG 29954[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:02,463]DEBUG 29954[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:02,463]DEBUG 29954[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:02,463]DEBUG 29954[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:02,463]DEBUG 29954[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:02,463]DEBUG 29954[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:02,463]DEBUG 29954[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:02,464]DEBUG 29955[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:02,464]DEBUG 29955[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:02,464]DEBUG 29955[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:02,464]DEBUG 29955[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:02,464]DEBUG 29955[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,464]DEBUG 29955[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,464]DEBUG 29955[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:02,465]DEBUG 29956[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@80cf411]
[2015-12-30 10:28:02,465]DEBUG 29956[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,465]DEBUG 29956[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@80cf411, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 10:28:02,465]DEBUG 29956[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:02,465]DEBUG 29956[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,466]DEBUG 29957[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640824
[2015-12-30 10:28:02,466]DEBUG 29957[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@673da321] for Hibernate transaction
[2015-12-30 10:28:02,466]DEBUG 29957[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@673da321]
[2015-12-30 10:28:02,466]DEBUG 29957[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:02,466]DEBUG 29957[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:02,466]DEBUG 29957[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:02,466]DEBUG 29957[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@80cf411, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 10:28:02,468] INFO 29959[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@2d950731]; rollback [true]
[2015-12-30 10:28:02,468]DEBUG 29959[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,468]DEBUG 29959[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,469]DEBUG 29960[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[17]]
[2015-12-30 10:28:02,469]DEBUG 29960[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,469]DEBUG 29960[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 17, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,470]DEBUG 29961[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,470]DEBUG 29961[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,471]DEBUG 29962[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[18]]
[2015-12-30 10:28:02,471]DEBUG 29962[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,471]DEBUG 29962[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 18, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,471]DEBUG 29962[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,471]DEBUG 29962[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,473]DEBUG 29964[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[19]]
[2015-12-30 10:28:02,473]DEBUG 29964[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,473]DEBUG 29964[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 19, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,473]DEBUG 29964[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,474]DEBUG 29965[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,474]DEBUG 29965[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,474]DEBUG 29965[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,474]DEBUG 29965[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,474]DEBUG 29965[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 10:28:02,474]DEBUG 29965[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 10:28:02,474]DEBUG 29965[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 10:28:02,475]DEBUG 29966[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,475]DEBUG 29966[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 10:28:02,476]DEBUG 29967[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,476]DEBUG 29967[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,476]DEBUG 29967[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,480]DEBUG 29971[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,480]DEBUG 29971[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,480]DEBUG 29971[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,481]DEBUG 29972[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 10:28:02,481]DEBUG 29972[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 10:28:02,481]DEBUG 29972[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 10:28:02,481]DEBUG 29972[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,481]DEBUG 29972[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 10:28:02,482]DEBUG 29973[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,482]DEBUG 29973[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,483]DEBUG 29974[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,483]DEBUG 29974[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,483]DEBUG 29974[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,483]DEBUG 29974[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,483]DEBUG 29974[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 10:28:02,483]DEBUG 29974[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 10:28:02,483]DEBUG 29974[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 10:28:02,484]DEBUG 29975[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,484]DEBUG 29975[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:02,485]DEBUG 29976[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,485]DEBUG 29976[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,485]DEBUG 29976[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,485]DEBUG 29976[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,486]DEBUG 29977[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,486]DEBUG 29977[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,486]DEBUG 29977[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 10:28:02,486]DEBUG 29977[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 10:28:02,486]DEBUG 29977[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 10:28:02,486]DEBUG 29977[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,486]DEBUG 29977[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 10:28:02,488]DEBUG 29979[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,488]DEBUG 29979[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,488]DEBUG 29979[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,488]DEBUG 29979[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,488]DEBUG 29979[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,488]DEBUG 29979[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,488]DEBUG 29979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 10:28:02,489]DEBUG 29980[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 10:28:02,489]DEBUG 29980[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 10:28:02,489]DEBUG 29980[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 10:28:02,489]DEBUG 29980[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,489]DEBUG 29980[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,489]DEBUG 29980[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,490]DEBUG 29981[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,490]DEBUG 29981[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,490]DEBUG 29981[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 10:28:02,490]DEBUG 29981[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:02,492]DEBUG 29983[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,492]DEBUG 29983[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,492]DEBUG 29983[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 10:28:02,493]DEBUG 29984[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,494]DEBUG 29985[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,494]DEBUG 29985[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,496]DEBUG 29987[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,496]DEBUG 29987[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,496]DEBUG 29987[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,496]DEBUG 29987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 10:28:02,496]DEBUG 29987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 10:28:02,496]DEBUG 29987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 10:28:02,496]DEBUG 29987[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,497]DEBUG 29988[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 10:28:02,498]DEBUG 29989[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,498]DEBUG 29989[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,498]DEBUG 29989[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,498]DEBUG 29989[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,498]DEBUG 29989[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,498]DEBUG 29989[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,499]DEBUG 29990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 10:28:02,499]DEBUG 29990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 10:28:02,499]DEBUG 29990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 10:28:02,499]DEBUG 29990[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,499]DEBUG 29990[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 10:28:02,500]DEBUG 29991[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,500]DEBUG 29991[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,501]DEBUG 29992[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,501]DEBUG 29992[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,501]DEBUG 29992[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,501]DEBUG 29992[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,501]DEBUG 29992[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 10:28:02,501]DEBUG 29992[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 10:28:02,501]DEBUG 29992[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 10:28:02,501]DEBUG 29992[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,502]DEBUG 29993[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 10:28:02,503]DEBUG 29994[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,503]DEBUG 29994[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,503]DEBUG 29994[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,503]DEBUG 29994[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:02,503]DEBUG 29994[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,504]DEBUG 29995[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,504]DEBUG 29995[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 10:28:02,504]DEBUG 29995[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 10:28:02,504]DEBUG 29995[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 10:28:02,504]DEBUG 29995[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,504]DEBUG 29995[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 10:28:02,505]DEBUG 29996[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,506]DEBUG 29997[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@80cf411, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 10:28:02,506]DEBUG 29997[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:02,506]DEBUG 29997[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@673da321]
[2015-12-30 10:28:02,506]DEBUG 29997[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:02,507]DEBUG 29998[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:02,507]DEBUG 29998[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,507]DEBUG 29998[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@673da321] after transaction
[2015-12-30 10:28:02,507]DEBUG 29998[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:02,507]DEBUG 29998[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:02,508]DEBUG 29999[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,508] INFO 29999[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@80cf411, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 10:28:02,508]DEBUG 29999[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@80cf411, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:02,509]DEBUG 30000[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@63f1788a testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2015-12-30 10:28:02,513]DEBUG 30004[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest].
[2015-12-30 10:28:02,514] INFO 30005[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: using defaults.
[2015-12-30 10:28:02,514]DEBUG 30005[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:02,514]DEBUG 30005[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:02,515]DEBUG 30006[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:02,515]DEBUG 30006[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:02,516]DEBUG 30007[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:02,516]DEBUG 30007[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:02,518]DEBUG 30009[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:02,518]DEBUG 30009[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:02,519]DEBUG 30010[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@469681e0, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:02,524]DEBUG 30015[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:02,524]DEBUG 30015[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:02,524]DEBUG 30015[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:02,524]DEBUG 30015[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:02,524]DEBUG 30015[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:02,525]DEBUG 30016[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:02,525]DEBUG 30016[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:02,525]DEBUG 30016[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:02,527]DEBUG 30018[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:02,527]DEBUG 30018[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:02,527]DEBUG 30018[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:02,527]DEBUG 30018[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:02,527]DEBUG 30018[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'customerTypeDao'
[2015-12-30 10:28:02,528]DEBUG 30019[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:02,528]DEBUG 30019[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:02,528]DEBUG 30019[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'dimensionDao'
[2015-12-30 10:28:02,528]DEBUG 30019[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:02,528]DEBUG 30019[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:02,529]DEBUG 30020[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'orderDao'
[2015-12-30 10:28:02,529]DEBUG 30020[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:02,529]DEBUG 30020[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:02,529]DEBUG 30020[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'orderItemDao'
[2015-12-30 10:28:02,529]DEBUG 30020[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:02,530]DEBUG 30021[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:02,530]DEBUG 30021[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'orderStatusDao'
[2015-12-30 10:28:02,530]DEBUG 30021[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:02,530]DEBUG 30021[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:02,530]DEBUG 30021[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'productDao'
[2015-12-30 10:28:02,530]DEBUG 30021[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:02,531]DEBUG 30022[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:02,531]DEBUG 30022[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'regionDao'
[2015-12-30 10:28:02,531]DEBUG 30022[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:02,531]DEBUG 30022[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:02,531]DEBUG 30022[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'roleDao'
[2015-12-30 10:28:02,532]DEBUG 30023[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:02,532]DEBUG 30023[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:02,532]DEBUG 30023[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'userDao'
[2015-12-30 10:28:02,532]DEBUG 30023[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:02,532]DEBUG 30023[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,533]DEBUG 30024[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'sessionFactory'
[2015-12-30 10:28:02,533]DEBUG 30024[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,533]DEBUG 30024[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,534]DEBUG 30025[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:02,534]DEBUG 30025[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@469681e0]
[2015-12-30 10:28:02,535]DEBUG 30026[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.setUp() throws java.lang.Exception
[2015-12-30 10:28:02,535]DEBUG 30026[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,535]DEBUG 30026[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.tearDown()
[2015-12-30 10:28:02,535]DEBUG 30026[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,535]DEBUG 30026[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindAll()
[2015-12-30 10:28:02,536]DEBUG 30027[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,536]DEBUG 30027[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testInsertOrUpdate()
[2015-12-30 10:28:02,536]DEBUG 30027[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,536]DEBUG 30027[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testDelete()
[2015-12-30 10:28:02,537]DEBUG 30028[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,537]DEBUG 30028[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindByCriterions()
[2015-12-30 10:28:02,537]DEBUG 30028[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,537]DEBUG 30028[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindByOneOfCriterions()
[2015-12-30 10:28:02,537]DEBUG 30028[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,538]DEBUG 30029[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindByID()
[2015-12-30 10:28:02,538]DEBUG 30029[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetStandartTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,538]DEBUG 30029[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetStandartTypeDiscount()
[2015-12-30 10:28:02,538]DEBUG 30029[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSilverTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,538]DEBUG 30029[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetSilverTypeDiscount()
[2015-12-30 10:28:02,539]DEBUG 30030[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetGoldTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,539]DEBUG 30030[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetGoldTypeDiscount()
[2015-12-30 10:28:02,539]DEBUG 30030[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetPlatinumTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,539]DEBUG 30030[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetPlatinumTypeDiscount()
[2015-12-30 10:28:02,545]DEBUG 30036[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2015-12-30 10:28:02,545]DEBUG 30036[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2015-12-30 10:28:02,545]DEBUG 30036[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2015-12-30 10:28:02,545]DEBUG 30036[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2015-12-30 10:28:02,545]DEBUG 30036[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2015-12-30 10:28:02,547]DEBUG 30038[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2015-12-30 10:28:02,548]DEBUG 30039[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2015-12-30 10:28:02,548]DEBUG 30039[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2015-12-30 10:28:02,548]DEBUG 30039[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2015-12-30 10:28:02,548]DEBUG 30039[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2015-12-30 10:28:02,548]DEBUG 30039[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,549]DEBUG 30040[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2015-12-30 10:28:02,549]DEBUG 30040[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2015-12-30 10:28:02,549]DEBUG 30040[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2015-12-30 10:28:02,549]DEBUG 30040[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2015-12-30 10:28:02,549]DEBUG 30040[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2015-12-30 10:28:02,549]DEBUG 30040[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2015-12-30 10:28:02,550]DEBUG 30041[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2015-12-30 10:28:02,550]DEBUG 30041[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2015-12-30 10:28:02,550]DEBUG 30041[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 10:28:02,550]DEBUG 30041[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 10:28:02,550]DEBUG 30041[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2015-12-30 10:28:02,550]DEBUG 30041[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2015-12-30 10:28:02,554]DEBUG 30045[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2015-12-30 10:28:02,554]DEBUG 30045[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2015-12-30 10:28:02,554]DEBUG 30045[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2015-12-30 10:28:02,554]DEBUG 30045[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2015-12-30 10:28:02,554]DEBUG 30045[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2015-12-30 10:28:02,555]DEBUG 30046[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2015-12-30 10:28:02,555]DEBUG 30046[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2015-12-30 10:28:02,555]DEBUG 30046[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 10:28:02,555]DEBUG 30046[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 10:28:02,555]DEBUG 30046[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2015-12-30 10:28:02,555]DEBUG 30046[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 10:28:02,556]DEBUG 30047[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 10:28:02,556]DEBUG 30047[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2015-12-30 10:28:02,556]DEBUG 30047[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2015-12-30 10:28:02,556]DEBUG 30047[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2015-12-30 10:28:02,556]DEBUG 30047[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2015-12-30 10:28:02,556]DEBUG 30047[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2015-12-30 10:28:02,581]DEBUG 30072[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,581]DEBUG 30072[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@469681e0, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:02,581]DEBUG 30072[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:02,581]DEBUG 30072[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@726c452f transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:02,584]DEBUG 30075[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:02,585]DEBUG 30076[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,585]DEBUG 30076[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640825
[2015-12-30 10:28:02,585]DEBUG 30076[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7764b11c] for Hibernate transaction
[2015-12-30 10:28:02,586]DEBUG 30077[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7764b11c]
[2015-12-30 10:28:02,586]DEBUG 30077[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:02,586]DEBUG 30077[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:02,586]DEBUG 30077[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:02,586]DEBUG 30077[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@469681e0, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:02,586] INFO 30077[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:02,587]DEBUG 30078[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,587]DEBUG 30078[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,589]DEBUG 30080[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[20]]
[2015-12-30 10:28:02,589]DEBUG 30080[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,589]DEBUG 30080[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 20, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,589]DEBUG 30080[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,590]DEBUG 30081[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,591]DEBUG 30082[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[21]]
[2015-12-30 10:28:02,591]DEBUG 30082[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,604]DEBUG 30095[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 21, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,604]DEBUG 30095[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,604]DEBUG 30095[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,606]DEBUG 30097[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[22]]
[2015-12-30 10:28:02,606]DEBUG 30097[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,606]DEBUG 30097[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 22, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,606]DEBUG 30097[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,606]DEBUG 30097[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,608]DEBUG 30099[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[23]]
[2015-12-30 10:28:02,608]DEBUG 30099[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,608]DEBUG 30099[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 23, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,609]DEBUG 30100[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,609]DEBUG 30100[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,609]DEBUG 30100[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,609]DEBUG 30100[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,609]DEBUG 30100[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,610]DEBUG 30101[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,610]DEBUG 30101[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,610]DEBUG 30101[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,610]DEBUG 30101[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,610]DEBUG 30101[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 10:28:02,614]DEBUG 30105[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,614]DEBUG 30105[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,614]DEBUG 30105[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,614]DEBUG 30105[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,614]DEBUG 30105[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,615]DEBUG 30106[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,615]DEBUG 30106[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,615]DEBUG 30106[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,615]DEBUG 30106[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 10:28:02,621]DEBUG 30112[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,621]DEBUG 30112[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,621]DEBUG 30112[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_
[2015-12-30 10:28:02,623]DEBUG 30114[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:02,623]DEBUG 30114[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#20]
[2015-12-30 10:28:02,624]DEBUG 30115[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#21]
[2015-12-30 10:28:02,624]DEBUG 30115[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#22]
[2015-12-30 10:28:02,624]DEBUG 30115[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#23]
[2015-12-30 10:28:02,624]DEBUG 30115[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:02,624]DEBUG 30115[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,625]DEBUG 30116[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:02,625]DEBUG 30116[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,625]DEBUG 30116[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,626]DEBUG 30117[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,626]DEBUG 30117[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,626]DEBUG 30117[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,627]DEBUG 30118[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,627]DEBUG 30118[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,627]DEBUG 30118[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,627]DEBUG 30118[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,627]DEBUG 30118[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,632]DEBUG 30123[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 10:28:02,636]DEBUG 30127[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,636]DEBUG 30127[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,637]DEBUG 30128[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,637]DEBUG 30128[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,637]DEBUG 30128[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,637]DEBUG 30128[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,637]DEBUG 30128[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,637]DEBUG 30128[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,638]DEBUG 30129[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,638]DEBUG 30129[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,638]DEBUG 30129[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,638]DEBUG 30129[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 10:28:02,643]DEBUG 30134[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,645]DEBUG 30136[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,645]DEBUG 30136[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,645]DEBUG 30136[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,645]DEBUG 30136[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,645]DEBUG 30136[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,646]DEBUG 30137[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,646]DEBUG 30137[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,646]DEBUG 30137[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,646]DEBUG 30137[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,646]DEBUG 30137[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,651]DEBUG 30142[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:02,652]DEBUG 30143[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,652]DEBUG 30143[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,653]DEBUG 30144[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,653]DEBUG 30144[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,653]DEBUG 30144[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,653]DEBUG 30144[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,653]DEBUG 30144[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,653]DEBUG 30144[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,654]DEBUG 30145[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,654]DEBUG 30145[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,654]DEBUG 30145[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,654]DEBUG 30145[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 10:28:02,659]DEBUG 30150[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,659]DEBUG 30150[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,659]DEBUG 30150[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,659]DEBUG 30150[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,660]DEBUG 30151[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,660]DEBUG 30151[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,660]DEBUG 30151[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,660]DEBUG 30151[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,660]DEBUG 30151[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,660]DEBUG 30151[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,665]DEBUG 30156[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,665]DEBUG 30156[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 10:28:02,668]DEBUG 30159[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,668]DEBUG 30159[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,668]DEBUG 30159[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,668]DEBUG 30159[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,668]DEBUG 30159[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,669]DEBUG 30160[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,669]DEBUG 30160[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,669]DEBUG 30160[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,669]DEBUG 30160[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,669]DEBUG 30160[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,669]DEBUG 30160[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,672]DEBUG 30163[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 10:28:02,677]DEBUG 30168[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,677]DEBUG 30168[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,677]DEBUG 30168[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,677]DEBUG 30168[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,678]DEBUG 30169[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,678]DEBUG 30169[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,678]DEBUG 30169[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,678]DEBUG 30169[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,678]DEBUG 30169[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,678]DEBUG 30169[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,681]DEBUG 30172[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,681]DEBUG 30172[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 10:28:02,683]DEBUG 30174[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,683]DEBUG 30174[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,683]DEBUG 30174[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,683]DEBUG 30174[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,683]DEBUG 30174[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,683]DEBUG 30174[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,684]DEBUG 30175[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,684]DEBUG 30175[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,684]DEBUG 30175[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,684]DEBUG 30175[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,684]DEBUG 30175[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,684]DEBUG 30175[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 10:28:02,689]DEBUG 30180[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,689]DEBUG 30180[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,689]DEBUG 30180[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,689]DEBUG 30180[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,689]DEBUG 30180[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,691]DEBUG 30182[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,691]DEBUG 30182[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,691]DEBUG 30182[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,692]DEBUG 30183[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,692]DEBUG 30183[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,692]DEBUG 30183[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,692]DEBUG 30183[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 10:28:02,697]DEBUG 30188[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,697]DEBUG 30188[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@469681e0, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:02,697]DEBUG 30188[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:02,697]DEBUG 30188[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7764b11c]
[2015-12-30 10:28:02,697]DEBUG 30188[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:02,699]DEBUG 30190[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:02,699]DEBUG 30190[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,699]DEBUG 30190[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7764b11c] after transaction
[2015-12-30 10:28:02,699]DEBUG 30190[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:02,699]DEBUG 30190[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:02,699]DEBUG 30190[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,699] INFO 30190[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@469681e0, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:02,700]DEBUG 30191[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@469681e0, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:02,705]DEBUG 30196[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:02,705]DEBUG 30196[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:02,705]DEBUG 30196[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@445eb59, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:02,705]DEBUG 30196[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:02,705]DEBUG 30196[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:02,706]DEBUG 30197[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:02,706]DEBUG 30197[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:02,706]DEBUG 30197[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:02,706]DEBUG 30197[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:02,706]DEBUG 30197[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:02,706]DEBUG 30197[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:02,706]DEBUG 30197[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:02,706]DEBUG 30197[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:02,707]DEBUG 30198[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:02,707]DEBUG 30198[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:02,707]DEBUG 30198[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:02,707]DEBUG 30198[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:02,707]DEBUG 30198[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:02,707]DEBUG 30198[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:02,707]DEBUG 30198[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:02,707]DEBUG 30198[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:02,712]DEBUG 30203[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:02,712]DEBUG 30203[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,712]DEBUG 30203[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,712]DEBUG 30203[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:02,712]DEBUG 30203[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@445eb59]
[2015-12-30 10:28:02,715]DEBUG 30206[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,715]DEBUG 30206[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@445eb59, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:02,715]DEBUG 30206[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:02,716]DEBUG 30207[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,716]DEBUG 30207[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640827
[2015-12-30 10:28:02,716]DEBUG 30207[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7ad93d7b] for Hibernate transaction
[2015-12-30 10:28:02,716]DEBUG 30207[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7ad93d7b]
[2015-12-30 10:28:02,716]DEBUG 30207[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:02,716]DEBUG 30207[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:02,716]DEBUG 30207[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:02,716]DEBUG 30207[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@445eb59, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:02,723] INFO 30214[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:02,723]DEBUG 30214[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,723]DEBUG 30214[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,724]DEBUG 30215[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[24]]
[2015-12-30 10:28:02,725]DEBUG 30216[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,725]DEBUG 30216[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 24, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,725]DEBUG 30216[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,725]DEBUG 30216[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,728]DEBUG 30219[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[25]]
[2015-12-30 10:28:02,728]DEBUG 30219[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,728]DEBUG 30219[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 25, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,728]DEBUG 30219[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,728]DEBUG 30219[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,731]DEBUG 30222[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[26]]
[2015-12-30 10:28:02,731]DEBUG 30222[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,731]DEBUG 30222[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 26, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,731]DEBUG 30222[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,731]DEBUG 30222[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,734]DEBUG 30225[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[27]]
[2015-12-30 10:28:02,734]DEBUG 30225[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,734]DEBUG 30225[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 27, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,734]DEBUG 30225[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,734]DEBUG 30225[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,734]DEBUG 30225[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,735]DEBUG 30226[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,738]DEBUG 30229[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,738]DEBUG 30229[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,738]DEBUG 30229[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,739]DEBUG 30230[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,739]DEBUG 30230[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,739]DEBUG 30230[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 10:28:02,739]DEBUG 30230[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,739]DEBUG 30230[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,739]DEBUG 30230[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,740]DEBUG 30231[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,740]DEBUG 30231[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,740]DEBUG 30231[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,740]DEBUG 30231[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,740]DEBUG 30231[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,740]DEBUG 30231[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 10:28:02,747]DEBUG 30238[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,747]DEBUG 30238[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,747]DEBUG 30238[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 10:28:02,750]DEBUG 30241[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,750]DEBUG 30241[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,750]DEBUG 30241[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,751]DEBUG 30242[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[28]]
[2015-12-30 10:28:02,751]DEBUG 30242[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,751]DEBUG 30242[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 28, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,752]DEBUG 30243[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Standard
[2015-12-30 10:28:02,758]DEBUG 30249[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Standard'

[2015-12-30 10:28:02,764]DEBUG 30255[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,765]DEBUG 30256[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2015-12-30 10:28:02,765]DEBUG 30256[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2015-12-30 10:28:02,769]DEBUG 30260[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2015-12-30 10:28:02,774]DEBUG 30265[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@1d1fcfbb
[2015-12-30 10:28:02,776]DEBUG 30267[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2015-12-30 10:28:02,778]DEBUG 30269[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2015-12-30 10:28:02,778]DEBUG 30269[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2015-12-30 10:28:02,793]DEBUG 30284[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2015-12-30 10:28:02,800]DEBUG 30291[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2015-12-30 10:28:02,800]DEBUG 30291[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2015-12-30 10:28:02,805]DEBUG 30296[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Standard, expectedType=org.hibernate.type.StringType@1d1fcfbb}

[2015-12-30 10:28:02,805]DEBUG 30296[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,805]DEBUG 30296[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Standard
[2015-12-30 10:28:02,805]DEBUG 30296[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 10:28:02,806]DEBUG 30297[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:02,814]DEBUG 30305[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,814]DEBUG 30305[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,815]DEBUG 30306[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 10:28:02,815]DEBUG 30306[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,815]DEBUG 30306[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,815]DEBUG 30306[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,815]DEBUG 30306[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,815]DEBUG 30306[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,815]DEBUG 30306[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,818]DEBUG 30309[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,819]DEBUG 30310[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 10:28:02,819]DEBUG 30310[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,819]DEBUG 30310[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,819]DEBUG 30310[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 10:28:02,820]DEBUG 30311[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,821]DEBUG 30312[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,823]DEBUG 30314[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 10:28:02,825]DEBUG 30316[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:02,825]DEBUG 30316[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#28]
[2015-12-30 10:28:02,825]DEBUG 30316[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:02,825]DEBUG 30316[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,825]DEBUG 30316[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:02,826]DEBUG 30317[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,827]DEBUG 30318[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,827]DEBUG 30318[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 10:28:02,827]DEBUG 30318[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,827]DEBUG 30318[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,827]DEBUG 30318[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,827]DEBUG 30318[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,827]DEBUG 30318[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,828]DEBUG 30319[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,828]DEBUG 30319[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,828]DEBUG 30319[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,828]DEBUG 30319[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 10:28:02,829]DEBUG 30320[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,829]DEBUG 30320[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,829]DEBUG 30320[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,830]DEBUG 30321[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 10:28:02,830]DEBUG 30321[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,830]DEBUG 30321[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,830]DEBUG 30321[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,830]DEBUG 30321[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,830]DEBUG 30321[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,830]DEBUG 30321[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,830]DEBUG 30321[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,831]DEBUG 30322[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,831]DEBUG 30322[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 10:28:02,832]DEBUG 30323[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,832]DEBUG 30323[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,832]DEBUG 30323[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,833]DEBUG 30324[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 10:28:02,833]DEBUG 30324[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,833]DEBUG 30324[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,833]DEBUG 30324[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,833]DEBUG 30324[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,833]DEBUG 30324[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,833]DEBUG 30324[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,834]DEBUG 30325[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,834]DEBUG 30325[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,834]DEBUG 30325[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:02,835]DEBUG 30326[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,835]DEBUG 30326[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,835]DEBUG 30326[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,836]DEBUG 30327[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 10:28:02,836]DEBUG 30327[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,836]DEBUG 30327[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,836]DEBUG 30327[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,836]DEBUG 30327[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,836]DEBUG 30327[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,836]DEBUG 30327[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,837]DEBUG 30328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,837]DEBUG 30328[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,837]DEBUG 30328[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 10:28:02,838]DEBUG 30329[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,838]DEBUG 30329[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,838]DEBUG 30329[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,839]DEBUG 30330[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 10:28:02,839]DEBUG 30330[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,839]DEBUG 30330[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,839]DEBUG 30330[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,839]DEBUG 30330[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,840]DEBUG 30331[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,840]DEBUG 30331[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,840]DEBUG 30331[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,840]DEBUG 30331[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,840]DEBUG 30331[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 10:28:02,841]DEBUG 30332[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,842]DEBUG 30333[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,842]DEBUG 30333[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,842]DEBUG 30333[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 10:28:02,843]DEBUG 30334[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,843]DEBUG 30334[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,843]DEBUG 30334[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,843]DEBUG 30334[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,843]DEBUG 30334[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,843]DEBUG 30334[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,843]DEBUG 30334[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,843]DEBUG 30334[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,844]DEBUG 30335[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 10:28:02,847]DEBUG 30338[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,847]DEBUG 30338[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,847]DEBUG 30338[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,847]DEBUG 30338[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 10:28:02,848]DEBUG 30339[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,848]DEBUG 30339[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,848]DEBUG 30339[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,848]DEBUG 30339[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,848]DEBUG 30339[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,848]DEBUG 30339[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,848]DEBUG 30339[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,848]DEBUG 30339[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,848]DEBUG 30339[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 10:28:02,850]DEBUG 30341[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,850]DEBUG 30341[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,850]DEBUG 30341[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,850]DEBUG 30341[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 10:28:02,850]DEBUG 30341[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,850]DEBUG 30341[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,850]DEBUG 30341[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,851]DEBUG 30342[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,851]DEBUG 30342[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,851]DEBUG 30342[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,851]DEBUG 30342[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,851]DEBUG 30342[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,851]DEBUG 30342[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 10:28:02,852]DEBUG 30343[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,852]DEBUG 30343[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,852]DEBUG 30343[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,853]DEBUG 30344[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 10:28:02,853]DEBUG 30344[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,853]DEBUG 30344[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,853]DEBUG 30344[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,853]DEBUG 30344[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,853]DEBUG 30344[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,853]DEBUG 30344[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,853]DEBUG 30344[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,854]DEBUG 30345[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,854]DEBUG 30345[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 10:28:02,855]DEBUG 30346[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,855]DEBUG 30346[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@445eb59, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:02,855]DEBUG 30346[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:02,855]DEBUG 30346[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7ad93d7b]
[2015-12-30 10:28:02,855]DEBUG 30346[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:02,856]DEBUG 30347[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:02,856]DEBUG 30347[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,856]DEBUG 30347[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7ad93d7b] after transaction
[2015-12-30 10:28:02,857]DEBUG 30348[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:02,857]DEBUG 30348[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:02,857]DEBUG 30348[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,857] INFO 30348[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@445eb59, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:02,857]DEBUG 30348[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@445eb59, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:02,858]DEBUG 30349[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:02,858]DEBUG 30349[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:02,858]DEBUG 30349[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3a1f830b, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:02,859]DEBUG 30350[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:02,859]DEBUG 30350[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:02,859]DEBUG 30350[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:02,859]DEBUG 30350[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:02,859]DEBUG 30350[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:02,859]DEBUG 30350[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:02,859]DEBUG 30350[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:02,860]DEBUG 30351[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:02,860]DEBUG 30351[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:02,860]DEBUG 30351[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:02,860]DEBUG 30351[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:02,860]DEBUG 30351[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:02,860]DEBUG 30351[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:02,860]DEBUG 30351[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:02,860]DEBUG 30351[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:02,861]DEBUG 30352[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:02,861]DEBUG 30352[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:02,861]DEBUG 30352[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:02,861]DEBUG 30352[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:02,861]DEBUG 30352[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,861]DEBUG 30352[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,861]DEBUG 30352[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:02,862]DEBUG 30353[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3a1f830b]
[2015-12-30 10:28:02,862]DEBUG 30353[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,862]DEBUG 30353[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3a1f830b, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:02,862]DEBUG 30353[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:02,863]DEBUG 30354[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,863]DEBUG 30354[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640828
[2015-12-30 10:28:02,863]DEBUG 30354[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@51a5bec1] for Hibernate transaction
[2015-12-30 10:28:02,863]DEBUG 30354[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@51a5bec1]
[2015-12-30 10:28:02,864]DEBUG 30355[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:02,865]DEBUG 30356[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:02,865]DEBUG 30356[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:02,866]DEBUG 30357[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3a1f830b, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:02,866] INFO 30357[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:02,866]DEBUG 30357[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,866]DEBUG 30357[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,867]DEBUG 30358[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[29]]
[2015-12-30 10:28:02,867]DEBUG 30358[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,868]DEBUG 30359[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 29, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,868]DEBUG 30359[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,868]DEBUG 30359[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,869]DEBUG 30360[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[30]]
[2015-12-30 10:28:02,869]DEBUG 30360[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,870]DEBUG 30361[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 30, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,870]DEBUG 30361[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,870]DEBUG 30361[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,871]DEBUG 30362[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[31]]
[2015-12-30 10:28:02,871]DEBUG 30362[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,872]DEBUG 30363[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 31, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,872]DEBUG 30363[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,872]DEBUG 30363[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,873]DEBUG 30364[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[32]]
[2015-12-30 10:28:02,873]DEBUG 30364[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,873]DEBUG 30364[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 32, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,874] INFO 30365[main] - org.hibernate.event.def.DefaultDeleteEventListener.deleteTransientEntity(DefaultDeleteEventListener.java:203) - handling transient entity in delete processing
[2015-12-30 10:28:02,874]DEBUG 30365[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,874]DEBUG 30365[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,874]DEBUG 30365[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,875]DEBUG 30366[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,875]DEBUG 30366[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,875]DEBUG 30366[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,875]DEBUG 30366[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,875]DEBUG 30366[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,875]DEBUG 30366[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,876]DEBUG 30367[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 10:28:02,876]DEBUG 30367[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,876]DEBUG 30367[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,876]DEBUG 30367[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,876]DEBUG 30367[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,877]DEBUG 30368[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,877]DEBUG 30368[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,877]DEBUG 30368[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,877]DEBUG 30368[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,877]DEBUG 30368[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 10:28:02,880]DEBUG 30371[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,880]DEBUG 30371[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,880]DEBUG 30371[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 10:28:02,881]DEBUG 30372[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:02,882]DEBUG 30373[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#29]
[2015-12-30 10:28:02,882]DEBUG 30373[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:02,882]DEBUG 30373[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,882]DEBUG 30373[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:02,882]DEBUG 30373[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,883]DEBUG 30374[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,883]DEBUG 30374[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,883]DEBUG 30374[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,883]DEBUG 30374[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,883]DEBUG 30374[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,883]DEBUG 30374[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,884]DEBUG 30375[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,884]DEBUG 30375[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,884]DEBUG 30375[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,884]DEBUG 30375[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 10:28:02,885]DEBUG 30376[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,885]DEBUG 30376[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,886]DEBUG 30377[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,886]DEBUG 30377[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,886]DEBUG 30377[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,886]DEBUG 30377[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,886]DEBUG 30377[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,886]DEBUG 30377[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,887]DEBUG 30378[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,887]DEBUG 30378[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,887]DEBUG 30378[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,887]DEBUG 30378[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 10:28:02,888]DEBUG 30379[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,888]DEBUG 30379[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,889]DEBUG 30380[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,890]DEBUG 30381[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,891]DEBUG 30382[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,891]DEBUG 30382[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,891]DEBUG 30382[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,891]DEBUG 30382[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,891]DEBUG 30382[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,891]DEBUG 30382[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,892]DEBUG 30383[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,892]DEBUG 30383[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:02,893]DEBUG 30384[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,893]DEBUG 30384[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,893]DEBUG 30384[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,893]DEBUG 30384[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,894]DEBUG 30385[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,894]DEBUG 30385[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,894]DEBUG 30385[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,894]DEBUG 30385[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,894]DEBUG 30385[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,894]DEBUG 30385[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,894]DEBUG 30385[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,894]DEBUG 30385[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 10:28:02,896]DEBUG 30387[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,896]DEBUG 30387[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,896]DEBUG 30387[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,896]DEBUG 30387[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,897]DEBUG 30388[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,897]DEBUG 30388[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,897]DEBUG 30388[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,897]DEBUG 30388[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,897]DEBUG 30388[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,897]DEBUG 30388[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,897]DEBUG 30388[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,898]DEBUG 30389[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 10:28:02,899]DEBUG 30390[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,899]DEBUG 30390[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,899]DEBUG 30390[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,899]DEBUG 30390[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,900]DEBUG 30391[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,900]DEBUG 30391[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,901]DEBUG 30392[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,902]DEBUG 30393[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,902]DEBUG 30393[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,902]DEBUG 30393[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,902]DEBUG 30393[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,902]DEBUG 30393[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 10:28:02,903]DEBUG 30394[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,904]DEBUG 30395[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,904]DEBUG 30395[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,904]DEBUG 30395[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,904]DEBUG 30395[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,904]DEBUG 30395[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,904]DEBUG 30395[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,904]DEBUG 30395[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,905]DEBUG 30396[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,905]DEBUG 30396[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,905]DEBUG 30396[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,905]DEBUG 30396[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 10:28:02,906]DEBUG 30397[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,907]DEBUG 30398[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,907]DEBUG 30398[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,907]DEBUG 30398[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,907]DEBUG 30398[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,908]DEBUG 30399[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,908]DEBUG 30399[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,908]DEBUG 30399[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,908]DEBUG 30399[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,908]DEBUG 30399[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,908]DEBUG 30399[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,908]DEBUG 30399[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 10:28:02,909]DEBUG 30400[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,910]DEBUG 30401[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,910]DEBUG 30401[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,910]DEBUG 30401[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,910]DEBUG 30401[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,910]DEBUG 30401[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,910]DEBUG 30401[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,911]DEBUG 30402[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,911]DEBUG 30402[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,911]DEBUG 30402[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,911]DEBUG 30402[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,911]DEBUG 30402[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 10:28:02,912]DEBUG 30403[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,912]DEBUG 30403[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3a1f830b, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:02,913]DEBUG 30404[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:02,913]DEBUG 30404[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@51a5bec1]
[2015-12-30 10:28:02,914]DEBUG 30405[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:02,915]DEBUG 30406[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:02,915]DEBUG 30406[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,915]DEBUG 30406[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@51a5bec1] after transaction
[2015-12-30 10:28:02,916]DEBUG 30407[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:02,916]DEBUG 30407[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:02,916]DEBUG 30407[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,916] INFO 30407[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3a1f830b, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:02,916]DEBUG 30407[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3a1f830b, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:02,917]DEBUG 30408[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:02,917]DEBUG 30408[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:02,917]DEBUG 30408[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@12419cdd, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:02,917]DEBUG 30408[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:02,917]DEBUG 30408[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:02,918]DEBUG 30409[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:02,918]DEBUG 30409[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:02,918]DEBUG 30409[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:02,918]DEBUG 30409[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:02,918]DEBUG 30409[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:02,918]DEBUG 30409[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:02,918]DEBUG 30409[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:02,918]DEBUG 30409[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:02,918]DEBUG 30409[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:02,919]DEBUG 30410[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:02,919]DEBUG 30410[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:02,919]DEBUG 30410[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:02,919]DEBUG 30410[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:02,919]DEBUG 30410[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:02,919]DEBUG 30410[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:02,919]DEBUG 30410[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:02,919]DEBUG 30410[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:02,919]DEBUG 30410[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,919]DEBUG 30410[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,920]DEBUG 30411[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:02,920]DEBUG 30411[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@12419cdd]
[2015-12-30 10:28:02,922]DEBUG 30413[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,922]DEBUG 30413[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@12419cdd, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:02,922]DEBUG 30413[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:02,923]DEBUG 30414[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,923]DEBUG 30414[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640829
[2015-12-30 10:28:02,923]DEBUG 30414[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3dec90c3] for Hibernate transaction
[2015-12-30 10:28:02,923]DEBUG 30414[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3dec90c3]
[2015-12-30 10:28:02,923]DEBUG 30414[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:02,923]DEBUG 30414[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:02,923]DEBUG 30414[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:02,923]DEBUG 30414[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@12419cdd, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:02,923] INFO 30414[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:02,924]DEBUG 30415[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,924]DEBUG 30415[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,925]DEBUG 30416[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[33]]
[2015-12-30 10:28:02,925]DEBUG 30416[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,925]DEBUG 30416[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 33, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,926]DEBUG 30417[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,926]DEBUG 30417[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,927]DEBUG 30418[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[34]]
[2015-12-30 10:28:02,927]DEBUG 30418[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,927]DEBUG 30418[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 34, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,928]DEBUG 30419[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,928]DEBUG 30419[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,929]DEBUG 30420[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[35]]
[2015-12-30 10:28:02,929]DEBUG 30420[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,929]DEBUG 30420[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 35, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,930]DEBUG 30421[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,930]DEBUG 30421[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,931]DEBUG 30422[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[36]]
[2015-12-30 10:28:02,931]DEBUG 30422[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,931]DEBUG 30422[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 36, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,932]DEBUG 30423[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,932]DEBUG 30423[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,932]DEBUG 30423[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,932]DEBUG 30423[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,932]DEBUG 30423[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,932]DEBUG 30423[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,933]DEBUG 30424[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,933]DEBUG 30424[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,933]DEBUG 30424[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,933]DEBUG 30424[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 10:28:02,933]DEBUG 30424[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,933]DEBUG 30424[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,934]DEBUG 30425[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,934]DEBUG 30425[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,935]DEBUG 30426[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,936]DEBUG 30427[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,936]DEBUG 30427[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,936]DEBUG 30427[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,936]DEBUG 30427[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 10:28:02,938]DEBUG 30429[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,938]DEBUG 30429[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,938]DEBUG 30429[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_ where this_.TypeName=? and this_.ID<=?
[2015-12-30 10:28:02,943]DEBUG 30434[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:02,943]DEBUG 30434[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#33]
[2015-12-30 10:28:02,943]DEBUG 30434[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:02,944]DEBUG 30435[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,945]DEBUG 30436[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:02,945]DEBUG 30436[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,945]DEBUG 30436[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,946]DEBUG 30437[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,946]DEBUG 30437[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,946]DEBUG 30437[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,946]DEBUG 30437[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,946]DEBUG 30437[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,946]DEBUG 30437[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,946]DEBUG 30437[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,947]DEBUG 30438[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,948]DEBUG 30439[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 10:28:02,949]DEBUG 30440[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,949]DEBUG 30440[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,950]DEBUG 30441[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,950]DEBUG 30441[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,950]DEBUG 30441[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,950]DEBUG 30441[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,950]DEBUG 30441[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,950]DEBUG 30441[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,950]DEBUG 30441[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,950]DEBUG 30441[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,951]DEBUG 30442[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,951]DEBUG 30442[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 10:28:02,952]DEBUG 30443[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,952]DEBUG 30443[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,953]DEBUG 30444[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,953]DEBUG 30444[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,953]DEBUG 30444[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,953]DEBUG 30444[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,953]DEBUG 30444[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,953]DEBUG 30444[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,953]DEBUG 30444[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,953]DEBUG 30444[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,954]DEBUG 30445[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,954]DEBUG 30445[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:02,955]DEBUG 30446[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,955]DEBUG 30446[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,955]DEBUG 30446[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,955]DEBUG 30446[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,955]DEBUG 30446[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,955]DEBUG 30446[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,956]DEBUG 30447[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,956]DEBUG 30447[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,956]DEBUG 30447[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,956]DEBUG 30447[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,956]DEBUG 30447[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,956]DEBUG 30447[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 10:28:02,957]DEBUG 30448[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,957]DEBUG 30448[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,958]DEBUG 30449[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,958]DEBUG 30449[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,958]DEBUG 30449[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,958]DEBUG 30449[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,958]DEBUG 30449[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,958]DEBUG 30449[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,958]DEBUG 30449[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,958]DEBUG 30449[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,959]DEBUG 30450[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,959]DEBUG 30450[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 10:28:02,960]DEBUG 30451[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,960]DEBUG 30451[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,960]DEBUG 30451[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,960]DEBUG 30451[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,960]DEBUG 30451[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,961]DEBUG 30452[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,961]DEBUG 30452[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,961]DEBUG 30452[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,961]DEBUG 30452[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,961]DEBUG 30452[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,961]DEBUG 30452[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,963]DEBUG 30454[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 10:28:02,964]DEBUG 30455[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,964]DEBUG 30455[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,964]DEBUG 30455[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,964]DEBUG 30455[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,964]DEBUG 30455[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,964]DEBUG 30455[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,965]DEBUG 30456[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,965]DEBUG 30456[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,965]DEBUG 30456[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,965]DEBUG 30456[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,965]DEBUG 30456[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,965]DEBUG 30456[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 10:28:02,966]DEBUG 30457[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,967]DEBUG 30458[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,967]DEBUG 30458[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,967]DEBUG 30458[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,967]DEBUG 30458[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,967]DEBUG 30458[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,967]DEBUG 30458[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,967]DEBUG 30458[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,968]DEBUG 30459[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,968]DEBUG 30459[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,968]DEBUG 30459[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,968]DEBUG 30459[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 10:28:02,969]DEBUG 30460[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,969]DEBUG 30460[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,969]DEBUG 30460[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,970]DEBUG 30461[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,970]DEBUG 30461[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,970]DEBUG 30461[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,970]DEBUG 30461[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,970]DEBUG 30461[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,971]DEBUG 30462[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,971]DEBUG 30462[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,971]DEBUG 30462[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,971]DEBUG 30462[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 10:28:02,972]DEBUG 30463[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,972]DEBUG 30463[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@12419cdd, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:02,972]DEBUG 30463[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:02,972]DEBUG 30463[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3dec90c3]
[2015-12-30 10:28:02,973]DEBUG 30464[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:02,974]DEBUG 30465[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:02,974]DEBUG 30465[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,974]DEBUG 30465[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3dec90c3] after transaction
[2015-12-30 10:28:02,974]DEBUG 30465[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:02,974]DEBUG 30465[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:02,974]DEBUG 30465[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:02,974] INFO 30465[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@12419cdd, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:02,975]DEBUG 30466[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@12419cdd, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:02,976]DEBUG 30467[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:02,976]DEBUG 30467[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:02,976]DEBUG 30467[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@9e4252, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:02,976]DEBUG 30467[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:02,976]DEBUG 30467[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:02,976]DEBUG 30467[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:02,977]DEBUG 30468[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:02,977]DEBUG 30468[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:02,977]DEBUG 30468[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:02,977]DEBUG 30468[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:02,977]DEBUG 30468[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:02,977]DEBUG 30468[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:02,977]DEBUG 30468[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:02,978]DEBUG 30469[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:02,978]DEBUG 30469[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:02,978]DEBUG 30469[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:02,978]DEBUG 30469[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:02,978]DEBUG 30469[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:02,978]DEBUG 30469[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:02,978]DEBUG 30469[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:02,978]DEBUG 30469[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:02,979]DEBUG 30470[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:02,979]DEBUG 30470[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:02,979]DEBUG 30470[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:02,979]DEBUG 30470[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:02,979]DEBUG 30470[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@9e4252]
[2015-12-30 10:28:02,980]DEBUG 30471[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,980]DEBUG 30471[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@9e4252, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:02,980]DEBUG 30471[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:02,980]DEBUG 30471[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:02,981]DEBUG 30472[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640829
[2015-12-30 10:28:02,981]DEBUG 30472[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4da7bc09] for Hibernate transaction
[2015-12-30 10:28:02,981]DEBUG 30472[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4da7bc09]
[2015-12-30 10:28:02,981]DEBUG 30472[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:02,981]DEBUG 30472[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:02,981]DEBUG 30472[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:02,983]DEBUG 30474[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@9e4252, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:02,983] INFO 30474[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:02,983]DEBUG 30474[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,984]DEBUG 30475[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,985]DEBUG 30476[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[37]]
[2015-12-30 10:28:02,985]DEBUG 30476[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,985]DEBUG 30476[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 37, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,986]DEBUG 30477[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,986]DEBUG 30477[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,987]DEBUG 30478[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[38]]
[2015-12-30 10:28:02,987]DEBUG 30478[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,987]DEBUG 30478[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 38, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,987]DEBUG 30478[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,988]DEBUG 30479[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,989]DEBUG 30480[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[39]]
[2015-12-30 10:28:02,989]DEBUG 30480[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,989]DEBUG 30480[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 39, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,989]DEBUG 30480[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,989]DEBUG 30480[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:02,991]DEBUG 30482[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[40]]
[2015-12-30 10:28:02,991]DEBUG 30482[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,991]DEBUG 30482[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 40, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:02,991]DEBUG 30482[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,992]DEBUG 30483[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:02,992]DEBUG 30483[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:02,992]DEBUG 30483[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:02,992]DEBUG 30483[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:02,992]DEBUG 30483[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,992]DEBUG 30483[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,992]DEBUG 30483[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,993]DEBUG 30484[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:02,993]DEBUG 30484[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 10:28:02,993]DEBUG 30484[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,993]DEBUG 30484[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,993]DEBUG 30484[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,994]DEBUG 30485[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,994]DEBUG 30485[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,994]DEBUG 30485[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,994]DEBUG 30485[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:02,994]DEBUG 30485[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:02,994]DEBUG 30485[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 10:28:02,997]DEBUG 30488[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,997]DEBUG 30488[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:02,997]DEBUG 30488[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_ where this_.TypeName=? and this_.ID<=?
[2015-12-30 10:28:02,998]DEBUG 30489[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:02,999]DEBUG 30490[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#37]
[2015-12-30 10:28:02,999]DEBUG 30490[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:02,999]DEBUG 30490[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:02,999]DEBUG 30490[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:02,999]DEBUG 30490[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:02,999]DEBUG 30490[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,000]DEBUG 30491[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,000]DEBUG 30491[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,000]DEBUG 30491[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,000]DEBUG 30491[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,000]DEBUG 30491[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,000]DEBUG 30491[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,001]DEBUG 30492[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,001]DEBUG 30492[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,001]DEBUG 30492[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 10:28:03,002]DEBUG 30493[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,002]DEBUG 30493[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,002]DEBUG 30493[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,003]DEBUG 30494[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,003]DEBUG 30494[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,003]DEBUG 30494[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,003]DEBUG 30494[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,003]DEBUG 30494[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,003]DEBUG 30494[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,003]DEBUG 30494[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,004]DEBUG 30495[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,004]DEBUG 30495[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 10:28:03,005]DEBUG 30496[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,005]DEBUG 30496[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,005]DEBUG 30496[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,005]DEBUG 30496[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,005]DEBUG 30496[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,007]DEBUG 30498[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,007]DEBUG 30498[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,007]DEBUG 30498[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,007]DEBUG 30498[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,007]DEBUG 30498[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,008]DEBUG 30499[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,008]DEBUG 30499[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,009]DEBUG 30500[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,009]DEBUG 30500[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,009]DEBUG 30500[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,010]DEBUG 30501[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,010]DEBUG 30501[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,010]DEBUG 30501[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,010]DEBUG 30501[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,010]DEBUG 30501[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,010]DEBUG 30501[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,010]DEBUG 30501[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,011]DEBUG 30502[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,011]DEBUG 30502[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 10:28:03,012]DEBUG 30503[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,012]DEBUG 30503[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,012]DEBUG 30503[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,012]DEBUG 30503[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,013]DEBUG 30504[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,013]DEBUG 30504[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,013]DEBUG 30504[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,013]DEBUG 30504[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,013]DEBUG 30504[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,013]DEBUG 30504[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,014]DEBUG 30505[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,014]DEBUG 30505[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 10:28:03,015]DEBUG 30506[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,015]DEBUG 30506[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,015]DEBUG 30506[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,015]DEBUG 30506[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,016]DEBUG 30507[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,016]DEBUG 30507[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,016]DEBUG 30507[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,016]DEBUG 30507[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,016]DEBUG 30507[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,016]DEBUG 30507[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,016]DEBUG 30507[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,016]DEBUG 30507[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 10:28:03,018]DEBUG 30509[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,018]DEBUG 30509[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,018]DEBUG 30509[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,018]DEBUG 30509[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,018]DEBUG 30509[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,018]DEBUG 30509[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,018]DEBUG 30509[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,019]DEBUG 30510[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,019]DEBUG 30510[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,019]DEBUG 30510[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,019]DEBUG 30510[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,019]DEBUG 30510[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 10:28:03,020]DEBUG 30511[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,021]DEBUG 30512[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,021]DEBUG 30512[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,021]DEBUG 30512[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,021]DEBUG 30512[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,021]DEBUG 30512[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,022]DEBUG 30513[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,022]DEBUG 30513[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,022]DEBUG 30513[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,022]DEBUG 30513[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,022]DEBUG 30513[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,022]DEBUG 30513[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 10:28:03,023]DEBUG 30514[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,024]DEBUG 30515[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,024]DEBUG 30515[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,024]DEBUG 30515[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,024]DEBUG 30515[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,024]DEBUG 30515[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,024]DEBUG 30515[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,025]DEBUG 30516[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,025]DEBUG 30516[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,025]DEBUG 30516[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,025]DEBUG 30516[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,025]DEBUG 30516[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 10:28:03,026]DEBUG 30517[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,027]DEBUG 30518[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@9e4252, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,027]DEBUG 30518[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,027]DEBUG 30518[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4da7bc09]
[2015-12-30 10:28:03,027]DEBUG 30518[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,028]DEBUG 30519[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,028]DEBUG 30519[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,030]DEBUG 30521[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4da7bc09] after transaction
[2015-12-30 10:28:03,030]DEBUG 30521[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,030]DEBUG 30521[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,030]DEBUG 30521[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,031] INFO 30522[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@9e4252, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,031]DEBUG 30522[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@9e4252, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,032]DEBUG 30523[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:03,032]DEBUG 30523[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:03,032]DEBUG 30523[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7a642f5f, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,032]DEBUG 30523[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,032]DEBUG 30523[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,033]DEBUG 30524[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,033]DEBUG 30524[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,033]DEBUG 30524[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,033]DEBUG 30524[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,033]DEBUG 30524[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,033]DEBUG 30524[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,033]DEBUG 30524[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,033]DEBUG 30524[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,034]DEBUG 30525[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,034]DEBUG 30525[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,034]DEBUG 30525[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,034]DEBUG 30525[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,034]DEBUG 30525[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,034]DEBUG 30525[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,034]DEBUG 30525[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,034]DEBUG 30525[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,035]DEBUG 30526[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,035]DEBUG 30526[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,035]DEBUG 30526[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,035]DEBUG 30526[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,035]DEBUG 30526[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7a642f5f]
[2015-12-30 10:28:03,036]DEBUG 30527[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,036]DEBUG 30527[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7a642f5f, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,036]DEBUG 30527[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,037]DEBUG 30528[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,037]DEBUG 30528[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640830
[2015-12-30 10:28:03,037]DEBUG 30528[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6026c2ff] for Hibernate transaction
[2015-12-30 10:28:03,037]DEBUG 30528[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6026c2ff]
[2015-12-30 10:28:03,037]DEBUG 30528[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,037]DEBUG 30528[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,037]DEBUG 30528[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,037]DEBUG 30528[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7a642f5f, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,038] INFO 30529[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,038]DEBUG 30529[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,038]DEBUG 30529[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,039]DEBUG 30530[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[41]]
[2015-12-30 10:28:03,039]DEBUG 30530[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,040]DEBUG 30531[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 41, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,040]DEBUG 30531[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,040]DEBUG 30531[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,041]DEBUG 30532[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[42]]
[2015-12-30 10:28:03,041]DEBUG 30532[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,041]DEBUG 30532[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 42, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,042]DEBUG 30533[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,042]DEBUG 30533[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,043]DEBUG 30534[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[43]]
[2015-12-30 10:28:03,043]DEBUG 30534[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,043]DEBUG 30534[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 43, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,043]DEBUG 30534[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,044]DEBUG 30535[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,045]DEBUG 30536[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[44]]
[2015-12-30 10:28:03,045]DEBUG 30536[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,045]DEBUG 30536[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 44, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,045]DEBUG 30536[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,045]DEBUG 30536[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,046]DEBUG 30537[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,046]DEBUG 30537[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,046]DEBUG 30537[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,046]DEBUG 30537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,046]DEBUG 30537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,046]DEBUG 30537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,046]DEBUG 30537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,046]DEBUG 30537[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 10:28:03,047]DEBUG 30538[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,047]DEBUG 30538[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,047]DEBUG 30538[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,047]DEBUG 30538[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,047]DEBUG 30538[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,047]DEBUG 30538[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,049]DEBUG 30540[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,049]DEBUG 30540[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,049]DEBUG 30540[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 10:28:03,051]DEBUG 30542[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,052]DEBUG 30543[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,052]DEBUG 30543[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 10:28:03,053]DEBUG 30544[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,053]DEBUG 30544[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#41]
[2015-12-30 10:28:03,053]DEBUG 30544[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,054]DEBUG 30545[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,054]DEBUG 30545[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,054]DEBUG 30545[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,054]DEBUG 30545[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,054]DEBUG 30545[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,054]DEBUG 30545[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,055]DEBUG 30546[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,055]DEBUG 30546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,055]DEBUG 30546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,055]DEBUG 30546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,055]DEBUG 30546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,055]DEBUG 30546[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,055]DEBUG 30546[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 10:28:03,056]DEBUG 30547[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,057]DEBUG 30548[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,057]DEBUG 30548[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,057]DEBUG 30548[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,057]DEBUG 30548[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,057]DEBUG 30548[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,057]DEBUG 30548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,057]DEBUG 30548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,057]DEBUG 30548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,058]DEBUG 30549[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,058]DEBUG 30549[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,058]DEBUG 30549[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 10:28:03,059]DEBUG 30550[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,059]DEBUG 30550[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,059]DEBUG 30550[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,059]DEBUG 30550[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,060]DEBUG 30551[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,060]DEBUG 30551[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,060]DEBUG 30551[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,060]DEBUG 30551[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,060]DEBUG 30551[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,060]DEBUG 30551[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,060]DEBUG 30551[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,060]DEBUG 30551[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,062]DEBUG 30553[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,062]DEBUG 30553[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,062]DEBUG 30553[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,062]DEBUG 30553[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,062]DEBUG 30553[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,062]DEBUG 30553[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,062]DEBUG 30553[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,062]DEBUG 30553[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,063]DEBUG 30554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,063]DEBUG 30554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,063]DEBUG 30554[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,063]DEBUG 30554[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 10:28:03,064]DEBUG 30555[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,064]DEBUG 30555[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,064]DEBUG 30555[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,065]DEBUG 30556[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,065]DEBUG 30556[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,065]DEBUG 30556[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,065]DEBUG 30556[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,065]DEBUG 30556[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,065]DEBUG 30556[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,065]DEBUG 30556[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,065]DEBUG 30556[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,066]DEBUG 30557[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 10:28:03,067]DEBUG 30558[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,067]DEBUG 30558[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,067]DEBUG 30558[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,067]DEBUG 30558[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,067]DEBUG 30558[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,067]DEBUG 30558[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,068]DEBUG 30559[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,068]DEBUG 30559[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,068]DEBUG 30559[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,068]DEBUG 30559[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,068]DEBUG 30559[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,068]DEBUG 30559[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 10:28:03,069]DEBUG 30560[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,071]DEBUG 30562[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,071]DEBUG 30562[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,071]DEBUG 30562[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,071]DEBUG 30562[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,071]DEBUG 30562[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,072]DEBUG 30563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,072]DEBUG 30563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,072]DEBUG 30563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,072]DEBUG 30563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,072]DEBUG 30563[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,072]DEBUG 30563[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 10:28:03,074]DEBUG 30565[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,074]DEBUG 30565[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,074]DEBUG 30565[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,074]DEBUG 30565[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,074]DEBUG 30565[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,075]DEBUG 30566[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,075]DEBUG 30566[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,075]DEBUG 30566[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,075]DEBUG 30566[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,075]DEBUG 30566[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,075]DEBUG 30566[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,075]DEBUG 30566[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 10:28:03,076]DEBUG 30567[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,081]DEBUG 30572[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,081]DEBUG 30572[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,085]DEBUG 30576[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,085]DEBUG 30576[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,085]DEBUG 30576[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,085]DEBUG 30576[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,085]DEBUG 30576[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,085]DEBUG 30576[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,085]DEBUG 30576[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,085]DEBUG 30576[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,086]DEBUG 30577[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 10:28:03,088]DEBUG 30579[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,089]DEBUG 30580[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7a642f5f, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,089]DEBUG 30580[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,089]DEBUG 30580[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6026c2ff]
[2015-12-30 10:28:03,089]DEBUG 30580[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,090]DEBUG 30581[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,090]DEBUG 30581[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,090]DEBUG 30581[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6026c2ff] after transaction
[2015-12-30 10:28:03,090]DEBUG 30581[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,091]DEBUG 30582[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,091]DEBUG 30582[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,091] INFO 30582[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7a642f5f, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,092]DEBUG 30583[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7a642f5f, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,092]DEBUG 30583[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:03,092]DEBUG 30583[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:03,093]DEBUG 30584[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5ede2674, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,093]DEBUG 30584[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,093]DEBUG 30584[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,093]DEBUG 30584[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,093]DEBUG 30584[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,093]DEBUG 30584[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,093]DEBUG 30584[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,094]DEBUG 30585[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,094]DEBUG 30585[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,094]DEBUG 30585[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,094]DEBUG 30585[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,094]DEBUG 30585[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,094]DEBUG 30585[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,094]DEBUG 30585[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,094]DEBUG 30585[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,095]DEBUG 30586[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,095]DEBUG 30586[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,095]DEBUG 30586[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,095]DEBUG 30586[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,095]DEBUG 30586[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,101]DEBUG 30592[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,101]DEBUG 30592[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,101]DEBUG 30592[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,101]DEBUG 30592[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5ede2674]
[2015-12-30 10:28:03,101]DEBUG 30592[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetStandartTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,102]DEBUG 30593[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5ede2674, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,102]DEBUG 30593[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,102]DEBUG 30593[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetStandartTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,103]DEBUG 30594[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640831
[2015-12-30 10:28:03,103]DEBUG 30594[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5a6a7b90] for Hibernate transaction
[2015-12-30 10:28:03,103]DEBUG 30594[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5a6a7b90]
[2015-12-30 10:28:03,103]DEBUG 30594[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,103]DEBUG 30594[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,103]DEBUG 30594[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,103]DEBUG 30594[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5ede2674, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,103] INFO 30594[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,105]DEBUG 30596[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,105]DEBUG 30596[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,107]DEBUG 30598[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[45]]
[2015-12-30 10:28:03,107]DEBUG 30598[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,107]DEBUG 30598[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 45, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,107]DEBUG 30598[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,107]DEBUG 30598[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,109]DEBUG 30600[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[46]]
[2015-12-30 10:28:03,109]DEBUG 30600[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,109]DEBUG 30600[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 46, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,109]DEBUG 30600[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,109]DEBUG 30600[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,111]DEBUG 30602[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[47]]
[2015-12-30 10:28:03,111]DEBUG 30602[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,111]DEBUG 30602[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 47, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,111]DEBUG 30602[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,111]DEBUG 30602[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,112]DEBUG 30603[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[48]]
[2015-12-30 10:28:03,113]DEBUG 30604[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,113]DEBUG 30604[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 48, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,113]DEBUG 30604[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,113]DEBUG 30604[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,113]DEBUG 30604[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,114]DEBUG 30605[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,114]DEBUG 30605[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,114]DEBUG 30605[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,114]DEBUG 30605[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,114]DEBUG 30605[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,114]DEBUG 30605[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,114]DEBUG 30605[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 10:28:03,115]DEBUG 30606[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,115]DEBUG 30606[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,115]DEBUG 30606[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,115]DEBUG 30606[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,115]DEBUG 30606[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,115]DEBUG 30606[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,116]DEBUG 30607[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,116]DEBUG 30607[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,116]DEBUG 30607[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 10:28:03,118]DEBUG 30609[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,118]DEBUG 30609[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,118]DEBUG 30609[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 10:28:03,120]DEBUG 30611[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,120]DEBUG 30611[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#45]
[2015-12-30 10:28:03,120]DEBUG 30611[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,120]DEBUG 30611[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,120]DEBUG 30611[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,121]DEBUG 30612[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,121]DEBUG 30612[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,121]DEBUG 30612[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,121]DEBUG 30612[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,121]DEBUG 30612[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,121]DEBUG 30612[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,121]DEBUG 30612[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,121]DEBUG 30612[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,122]DEBUG 30613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,122]DEBUG 30613[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,122]DEBUG 30613[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 10:28:03,123]DEBUG 30614[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,123]DEBUG 30614[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,123]DEBUG 30614[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,124]DEBUG 30615[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,124]DEBUG 30615[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,124]DEBUG 30615[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,124]DEBUG 30615[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,128]DEBUG 30619[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,128]DEBUG 30619[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,128]DEBUG 30619[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,128]DEBUG 30619[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,128]DEBUG 30619[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 10:28:03,130]DEBUG 30621[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,130]DEBUG 30621[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,130]DEBUG 30621[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,130]DEBUG 30621[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,130]DEBUG 30621[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,130]DEBUG 30621[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,130]DEBUG 30621[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,131]DEBUG 30622[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,132]DEBUG 30623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,132]DEBUG 30623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,132]DEBUG 30623[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,132]DEBUG 30623[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,133]DEBUG 30624[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,134]DEBUG 30625[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,134]DEBUG 30625[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,134]DEBUG 30625[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,134]DEBUG 30625[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,134]DEBUG 30625[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,134]DEBUG 30625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,134]DEBUG 30625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,134]DEBUG 30625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,134]DEBUG 30625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,135]DEBUG 30626[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,135]DEBUG 30626[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 10:28:03,136]DEBUG 30627[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,136]DEBUG 30627[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,136]DEBUG 30627[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,136]DEBUG 30627[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,136]DEBUG 30627[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,137]DEBUG 30628[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,137]DEBUG 30628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,137]DEBUG 30628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,137]DEBUG 30628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,137]DEBUG 30628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,137]DEBUG 30628[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,137]DEBUG 30628[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 10:28:03,138]DEBUG 30629[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,139]DEBUG 30630[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,139]DEBUG 30630[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,139]DEBUG 30630[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,139]DEBUG 30630[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,139]DEBUG 30630[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,139]DEBUG 30630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,139]DEBUG 30630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,140]DEBUG 30631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,140]DEBUG 30631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,140]DEBUG 30631[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,140]DEBUG 30631[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 10:28:03,141]DEBUG 30632[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,141]DEBUG 30632[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,141]DEBUG 30632[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,141]DEBUG 30632[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,142]DEBUG 30633[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,142]DEBUG 30633[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,142]DEBUG 30633[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,142]DEBUG 30633[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,142]DEBUG 30633[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,142]DEBUG 30633[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,142]DEBUG 30633[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,142]DEBUG 30633[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 10:28:03,144]DEBUG 30635[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,144]DEBUG 30635[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,144]DEBUG 30635[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,144]DEBUG 30635[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,144]DEBUG 30635[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,144]DEBUG 30635[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,145]DEBUG 30636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,145]DEBUG 30636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,145]DEBUG 30636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,145]DEBUG 30636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,145]DEBUG 30636[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,145]DEBUG 30636[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 10:28:03,146]DEBUG 30637[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,147]DEBUG 30638[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,147]DEBUG 30638[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,147]DEBUG 30638[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,147]DEBUG 30638[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,147]DEBUG 30638[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,147]DEBUG 30638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,148]DEBUG 30639[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,148]DEBUG 30639[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,148]DEBUG 30639[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,148]DEBUG 30639[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,148]DEBUG 30639[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 10:28:03,149]DEBUG 30640[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,150]DEBUG 30641[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5ede2674, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,150]DEBUG 30641[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,150]DEBUG 30641[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5a6a7b90]
[2015-12-30 10:28:03,150]DEBUG 30641[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,151]DEBUG 30642[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,151]DEBUG 30642[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,151]DEBUG 30642[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5a6a7b90] after transaction
[2015-12-30 10:28:03,151]DEBUG 30642[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,151]DEBUG 30642[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,153]DEBUG 30644[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,153] INFO 30644[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5ede2674, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,154]DEBUG 30645[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5ede2674, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,154]DEBUG 30645[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:03,155]DEBUG 30646[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:03,155]DEBUG 30646[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@615276c4, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,155]DEBUG 30646[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,155]DEBUG 30646[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,155]DEBUG 30646[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,155]DEBUG 30646[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,155]DEBUG 30646[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,156]DEBUG 30647[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,156]DEBUG 30647[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,156]DEBUG 30647[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,156]DEBUG 30647[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,156]DEBUG 30647[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,156]DEBUG 30647[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,156]DEBUG 30647[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,156]DEBUG 30647[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,156]DEBUG 30647[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,157]DEBUG 30648[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,157]DEBUG 30648[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,157]DEBUG 30648[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,157]DEBUG 30648[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,157]DEBUG 30648[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,157]DEBUG 30648[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,157]DEBUG 30648[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,157]DEBUG 30648[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,158]DEBUG 30649[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@615276c4]
[2015-12-30 10:28:03,158]DEBUG 30649[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSilverTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,158]DEBUG 30649[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@615276c4, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,159]DEBUG 30650[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,161]DEBUG 30652[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetSilverTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,161]DEBUG 30652[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640831
[2015-12-30 10:28:03,161]DEBUG 30652[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1611c34a] for Hibernate transaction
[2015-12-30 10:28:03,161]DEBUG 30652[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1611c34a]
[2015-12-30 10:28:03,161]DEBUG 30652[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,161]DEBUG 30652[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,162]DEBUG 30653[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,162]DEBUG 30653[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@615276c4, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,162] INFO 30653[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,162]DEBUG 30653[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,162]DEBUG 30653[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,164]DEBUG 30655[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[49]]
[2015-12-30 10:28:03,164]DEBUG 30655[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,164]DEBUG 30655[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 49, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,164]DEBUG 30655[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,164]DEBUG 30655[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,165]DEBUG 30656[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[50]]
[2015-12-30 10:28:03,165]DEBUG 30656[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,166]DEBUG 30657[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 50, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,166]DEBUG 30657[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,166]DEBUG 30657[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,167]DEBUG 30658[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[51]]
[2015-12-30 10:28:03,167]DEBUG 30658[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,167]DEBUG 30658[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 51, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,167]DEBUG 30658[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,168]DEBUG 30659[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,169]DEBUG 30660[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[52]]
[2015-12-30 10:28:03,169]DEBUG 30660[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,169]DEBUG 30660[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 52, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,169]DEBUG 30660[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Silver
[2015-12-30 10:28:03,173]DEBUG 30664[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Silver'

[2015-12-30 10:28:03,173]DEBUG 30664[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:03,173]DEBUG 30664[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2015-12-30 10:28:03,173]DEBUG 30664[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2015-12-30 10:28:03,173]DEBUG 30664[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2015-12-30 10:28:03,174]DEBUG 30665[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@1d1fcfbb
[2015-12-30 10:28:03,174]DEBUG 30665[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2015-12-30 10:28:03,174]DEBUG 30665[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2015-12-30 10:28:03,174]DEBUG 30665[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2015-12-30 10:28:03,174]DEBUG 30665[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2015-12-30 10:28:03,174]DEBUG 30665[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2015-12-30 10:28:03,175]DEBUG 30666[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2015-12-30 10:28:03,176]DEBUG 30667[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Silver, expectedType=org.hibernate.type.StringType@1d1fcfbb}

[2015-12-30 10:28:03,176]DEBUG 30667[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:03,177]DEBUG 30668[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Silver
[2015-12-30 10:28:03,177]DEBUG 30668[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 10:28:03,177]DEBUG 30668[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:03,177]DEBUG 30668[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,177]DEBUG 30668[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,177]DEBUG 30668[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,178]DEBUG 30669[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,178]DEBUG 30669[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,178]DEBUG 30669[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,178]DEBUG 30669[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,178]DEBUG 30669[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,178]DEBUG 30669[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,178]DEBUG 30669[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 10:28:03,178]DEBUG 30669[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,179]DEBUG 30670[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,179]DEBUG 30670[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,179]DEBUG 30670[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,179]DEBUG 30670[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,179]DEBUG 30670[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,179]DEBUG 30670[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,179]DEBUG 30670[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,180]DEBUG 30671[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 10:28:03,182]DEBUG 30673[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,182]DEBUG 30673[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,182]DEBUG 30673[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 10:28:03,184]DEBUG 30675[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,184]DEBUG 30675[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#50]
[2015-12-30 10:28:03,184]DEBUG 30675[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,184]DEBUG 30675[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,184]DEBUG 30675[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,184]DEBUG 30675[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,184]DEBUG 30675[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,185]DEBUG 30676[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,185]DEBUG 30676[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,185]DEBUG 30676[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,185]DEBUG 30676[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,185]DEBUG 30676[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,185]DEBUG 30676[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,185]DEBUG 30676[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,185]DEBUG 30676[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,185]DEBUG 30676[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 10:28:03,187]DEBUG 30678[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,187]DEBUG 30678[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,187]DEBUG 30678[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,187]DEBUG 30678[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,187]DEBUG 30678[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,187]DEBUG 30678[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,187]DEBUG 30678[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,188]DEBUG 30679[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,188]DEBUG 30679[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,188]DEBUG 30679[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,188]DEBUG 30679[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,188]DEBUG 30679[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 10:28:03,189]DEBUG 30680[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,189]DEBUG 30680[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,189]DEBUG 30680[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,190]DEBUG 30681[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,190]DEBUG 30681[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,190]DEBUG 30681[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,190]DEBUG 30681[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,190]DEBUG 30681[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,190]DEBUG 30681[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,190]DEBUG 30681[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,191]DEBUG 30682[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,191]DEBUG 30682[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,192]DEBUG 30683[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,192]DEBUG 30683[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,192]DEBUG 30683[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,192]DEBUG 30683[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,192]DEBUG 30683[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,193]DEBUG 30684[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,193]DEBUG 30684[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,193]DEBUG 30684[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,193]DEBUG 30684[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,193]DEBUG 30684[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,193]DEBUG 30684[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,193]DEBUG 30684[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 10:28:03,195]DEBUG 30686[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,196]DEBUG 30687[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,196]DEBUG 30687[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,197]DEBUG 30688[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,197]DEBUG 30688[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,197]DEBUG 30688[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,197]DEBUG 30688[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,197]DEBUG 30688[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,197]DEBUG 30688[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,198]DEBUG 30689[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,198]DEBUG 30689[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,198]DEBUG 30689[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 10:28:03,199]DEBUG 30690[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,199]DEBUG 30690[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,199]DEBUG 30690[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,199]DEBUG 30690[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,200]DEBUG 30691[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,200]DEBUG 30691[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,200]DEBUG 30691[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,200]DEBUG 30691[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,200]DEBUG 30691[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,201]DEBUG 30692[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,201]DEBUG 30692[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,201]DEBUG 30692[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 10:28:03,208]DEBUG 30699[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,208]DEBUG 30699[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,209]DEBUG 30700[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,209]DEBUG 30700[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,209]DEBUG 30700[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,209]DEBUG 30700[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,209]DEBUG 30700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,212]DEBUG 30703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,212]DEBUG 30703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,212]DEBUG 30703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,214]DEBUG 30705[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,214]DEBUG 30705[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 10:28:03,215]DEBUG 30706[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,215]DEBUG 30706[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,216]DEBUG 30707[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,216]DEBUG 30707[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,217]DEBUG 30708[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,218]DEBUG 30709[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,218]DEBUG 30709[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,218]DEBUG 30709[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,218]DEBUG 30709[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,218]DEBUG 30709[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,218]DEBUG 30709[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,218]DEBUG 30709[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 10:28:03,220]DEBUG 30711[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,221]DEBUG 30712[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,221]DEBUG 30712[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,221]DEBUG 30712[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,221]DEBUG 30712[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,221]DEBUG 30712[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,221]DEBUG 30712[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,221]DEBUG 30712[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,221]DEBUG 30712[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,222]DEBUG 30713[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,222]DEBUG 30713[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,222]DEBUG 30713[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 10:28:03,223]DEBUG 30714[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,223]DEBUG 30714[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@615276c4, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,223]DEBUG 30714[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,223]DEBUG 30714[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1611c34a]
[2015-12-30 10:28:03,223]DEBUG 30714[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,225]DEBUG 30716[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,225]DEBUG 30716[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,225]DEBUG 30716[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1611c34a] after transaction
[2015-12-30 10:28:03,225]DEBUG 30716[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,225]DEBUG 30716[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,225]DEBUG 30716[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,225] INFO 30716[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@615276c4, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,226]DEBUG 30717[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@615276c4, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,226]DEBUG 30717[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:03,226]DEBUG 30717[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:03,226]DEBUG 30717[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4bae779d, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,227]DEBUG 30718[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,227]DEBUG 30718[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,227]DEBUG 30718[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,227]DEBUG 30718[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,227]DEBUG 30718[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,227]DEBUG 30718[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,227]DEBUG 30718[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,227]DEBUG 30718[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,227]DEBUG 30718[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,227]DEBUG 30718[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,228]DEBUG 30719[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,229]DEBUG 30720[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,229]DEBUG 30720[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,229]DEBUG 30720[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,229]DEBUG 30720[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,229]DEBUG 30720[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,229]DEBUG 30720[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,229]DEBUG 30720[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,229]DEBUG 30720[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,230]DEBUG 30721[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,230]DEBUG 30721[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,230]DEBUG 30721[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,230]DEBUG 30721[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4bae779d]
[2015-12-30 10:28:03,230]DEBUG 30721[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetGoldTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,230]DEBUG 30721[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4bae779d, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,231]DEBUG 30722[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,231]DEBUG 30722[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetGoldTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,231]DEBUG 30722[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640832
[2015-12-30 10:28:03,231]DEBUG 30722[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5cfcc9dc] for Hibernate transaction
[2015-12-30 10:28:03,231]DEBUG 30722[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5cfcc9dc]
[2015-12-30 10:28:03,231]DEBUG 30722[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,232]DEBUG 30723[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,232]DEBUG 30723[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,232]DEBUG 30723[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4bae779d, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,232] INFO 30723[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,232]DEBUG 30723[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,232]DEBUG 30723[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,233]DEBUG 30724[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[53]]
[2015-12-30 10:28:03,234]DEBUG 30725[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,234]DEBUG 30725[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 53, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,234]DEBUG 30725[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,234]DEBUG 30725[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,235]DEBUG 30726[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[54]]
[2015-12-30 10:28:03,235]DEBUG 30726[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,235]DEBUG 30726[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 54, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,236]DEBUG 30727[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,236]DEBUG 30727[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,237]DEBUG 30728[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[55]]
[2015-12-30 10:28:03,237]DEBUG 30728[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,237]DEBUG 30728[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 55, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,237]DEBUG 30728[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,237]DEBUG 30728[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,238]DEBUG 30729[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[56]]
[2015-12-30 10:28:03,238]DEBUG 30729[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,239]DEBUG 30730[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 56, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,239]DEBUG 30730[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Gold
[2015-12-30 10:28:03,241]DEBUG 30732[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Gold'

[2015-12-30 10:28:03,241]DEBUG 30732[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:03,241]DEBUG 30732[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2015-12-30 10:28:03,241]DEBUG 30732[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2015-12-30 10:28:03,241]DEBUG 30732[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2015-12-30 10:28:03,242]DEBUG 30733[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@1d1fcfbb
[2015-12-30 10:28:03,242]DEBUG 30733[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2015-12-30 10:28:03,242]DEBUG 30733[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2015-12-30 10:28:03,242]DEBUG 30733[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2015-12-30 10:28:03,242]DEBUG 30733[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2015-12-30 10:28:03,242]DEBUG 30733[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2015-12-30 10:28:03,243]DEBUG 30734[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2015-12-30 10:28:03,243]DEBUG 30734[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Gold, expectedType=org.hibernate.type.StringType@1d1fcfbb}

[2015-12-30 10:28:03,243]DEBUG 30734[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:03,243]DEBUG 30734[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Gold
[2015-12-30 10:28:03,243]DEBUG 30734[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 10:28:03,243]DEBUG 30734[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:03,244]DEBUG 30735[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,244]DEBUG 30735[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,244]DEBUG 30735[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,244]DEBUG 30735[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,244]DEBUG 30735[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,244]DEBUG 30735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,244]DEBUG 30735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,244]DEBUG 30735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,245]DEBUG 30736[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,245]DEBUG 30736[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 10:28:03,246]DEBUG 30737[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,246]DEBUG 30737[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,247]DEBUG 30738[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,247]DEBUG 30738[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,247]DEBUG 30738[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,247]DEBUG 30738[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,247]DEBUG 30738[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,248]DEBUG 30739[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,248]DEBUG 30739[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 10:28:03,250]DEBUG 30741[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,250]DEBUG 30741[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,250]DEBUG 30741[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 10:28:03,252]DEBUG 30743[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,252]DEBUG 30743[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#55]
[2015-12-30 10:28:03,252]DEBUG 30743[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,252]DEBUG 30743[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,253]DEBUG 30744[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,253]DEBUG 30744[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,253]DEBUG 30744[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,253]DEBUG 30744[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,253]DEBUG 30744[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,253]DEBUG 30744[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,253]DEBUG 30744[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,254]DEBUG 30745[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,254]DEBUG 30745[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,254]DEBUG 30745[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,254]DEBUG 30745[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,254]DEBUG 30745[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 10:28:03,255]DEBUG 30746[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,256]DEBUG 30747[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,256]DEBUG 30747[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,256]DEBUG 30747[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,256]DEBUG 30747[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,256]DEBUG 30747[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,256]DEBUG 30747[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,256]DEBUG 30747[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,257]DEBUG 30748[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,257]DEBUG 30748[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,257]DEBUG 30748[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,257]DEBUG 30748[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 10:28:03,258]DEBUG 30749[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,258]DEBUG 30749[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,259]DEBUG 30750[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,259]DEBUG 30750[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,259]DEBUG 30750[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,259]DEBUG 30750[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,259]DEBUG 30750[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,259]DEBUG 30750[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,259]DEBUG 30750[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,260]DEBUG 30751[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,260]DEBUG 30751[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,260]DEBUG 30751[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,261]DEBUG 30752[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,261]DEBUG 30752[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,261]DEBUG 30752[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,262]DEBUG 30753[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,262]DEBUG 30753[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,262]DEBUG 30753[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,262]DEBUG 30753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,262]DEBUG 30753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,262]DEBUG 30753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,262]DEBUG 30753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,262]DEBUG 30753[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,263]DEBUG 30754[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 10:28:03,264]DEBUG 30755[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,264]DEBUG 30755[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,264]DEBUG 30755[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,264]DEBUG 30755[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,264]DEBUG 30755[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,265]DEBUG 30756[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,265]DEBUG 30756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,265]DEBUG 30756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,265]DEBUG 30756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,265]DEBUG 30756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,265]DEBUG 30756[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,265]DEBUG 30756[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 10:28:03,267]DEBUG 30758[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,267]DEBUG 30758[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,267]DEBUG 30758[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,267]DEBUG 30758[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,267]DEBUG 30758[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,267]DEBUG 30758[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,269]DEBUG 30760[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,269]DEBUG 30760[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,269]DEBUG 30760[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,269]DEBUG 30760[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,269]DEBUG 30760[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,269]DEBUG 30760[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 10:28:03,270]DEBUG 30761[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,271]DEBUG 30762[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,271]DEBUG 30762[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,271]DEBUG 30762[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,271]DEBUG 30762[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,271]DEBUG 30762[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,271]DEBUG 30762[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,271]DEBUG 30762[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,271]DEBUG 30762[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,272]DEBUG 30763[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,272]DEBUG 30763[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,272]DEBUG 30763[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 10:28:03,273]DEBUG 30764[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,273]DEBUG 30764[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,274]DEBUG 30765[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,274]DEBUG 30765[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,274]DEBUG 30765[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,274]DEBUG 30765[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,274]DEBUG 30765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,274]DEBUG 30765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,274]DEBUG 30765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,274]DEBUG 30765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,275]DEBUG 30766[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,275]DEBUG 30766[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 10:28:03,276]DEBUG 30767[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,276]DEBUG 30767[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,276]DEBUG 30767[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,276]DEBUG 30767[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,277]DEBUG 30768[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,277]DEBUG 30768[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,277]DEBUG 30768[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,277]DEBUG 30768[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,277]DEBUG 30768[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,277]DEBUG 30768[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,277]DEBUG 30768[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,277]DEBUG 30768[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 10:28:03,278]DEBUG 30769[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,279]DEBUG 30770[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4bae779d, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,279]DEBUG 30770[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,279]DEBUG 30770[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5cfcc9dc]
[2015-12-30 10:28:03,279]DEBUG 30770[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,280]DEBUG 30771[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,280]DEBUG 30771[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,280]DEBUG 30771[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5cfcc9dc] after transaction
[2015-12-30 10:28:03,280]DEBUG 30771[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,280]DEBUG 30771[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,280]DEBUG 30771[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,280] INFO 30771[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4bae779d, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,281]DEBUG 30772[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4bae779d, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,281]DEBUG 30772[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:03,281]DEBUG 30772[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:03,282]DEBUG 30773[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7ee7dba8, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,282]DEBUG 30773[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,282]DEBUG 30773[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,282]DEBUG 30773[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,282]DEBUG 30773[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,282]DEBUG 30773[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,282]DEBUG 30773[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,282]DEBUG 30773[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,282]DEBUG 30773[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,283]DEBUG 30774[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,283]DEBUG 30774[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,283]DEBUG 30774[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,283]DEBUG 30774[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,283]DEBUG 30774[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,283]DEBUG 30774[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,283]DEBUG 30774[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,283]DEBUG 30774[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,283]DEBUG 30774[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,283]DEBUG 30774[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,284]DEBUG 30775[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,284]DEBUG 30775[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,284]DEBUG 30775[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,284]DEBUG 30775[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,284]DEBUG 30775[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7ee7dba8]
[2015-12-30 10:28:03,284]DEBUG 30775[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetPlatinumTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,285]DEBUG 30776[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7ee7dba8, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,285]DEBUG 30776[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,285]DEBUG 30776[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetPlatinumTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,287]DEBUG 30778[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640832
[2015-12-30 10:28:03,287]DEBUG 30778[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@223f9454] for Hibernate transaction
[2015-12-30 10:28:03,287]DEBUG 30778[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@223f9454]
[2015-12-30 10:28:03,287]DEBUG 30778[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,287]DEBUG 30778[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,287]DEBUG 30778[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,287]DEBUG 30778[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7ee7dba8, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,287] INFO 30778[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,287]DEBUG 30778[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,288]DEBUG 30779[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,289]DEBUG 30780[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[57]]
[2015-12-30 10:28:03,289]DEBUG 30780[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,289]DEBUG 30780[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 57, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,290]DEBUG 30781[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,290]DEBUG 30781[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,291]DEBUG 30782[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[58]]
[2015-12-30 10:28:03,291]DEBUG 30782[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,291]DEBUG 30782[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 58, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,292]DEBUG 30783[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,293]DEBUG 30784[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,294]DEBUG 30785[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[59]]
[2015-12-30 10:28:03,294]DEBUG 30785[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,294]DEBUG 30785[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 59, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,295]DEBUG 30786[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,295]DEBUG 30786[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,296]DEBUG 30787[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[60]]
[2015-12-30 10:28:03,296]DEBUG 30787[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,296]DEBUG 30787[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 60, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,297]DEBUG 30788[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Platinum
[2015-12-30 10:28:03,302]DEBUG 30793[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Platinum'

[2015-12-30 10:28:03,302]DEBUG 30793[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:03,302]DEBUG 30793[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2015-12-30 10:28:03,302]DEBUG 30793[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2015-12-30 10:28:03,303]DEBUG 30794[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2015-12-30 10:28:03,303]DEBUG 30794[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@1d1fcfbb
[2015-12-30 10:28:03,303]DEBUG 30794[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2015-12-30 10:28:03,303]DEBUG 30794[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2015-12-30 10:28:03,303]DEBUG 30794[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2015-12-30 10:28:03,303]DEBUG 30794[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2015-12-30 10:28:03,304]DEBUG 30795[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2015-12-30 10:28:03,304]DEBUG 30795[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2015-12-30 10:28:03,304]DEBUG 30795[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Platinum, expectedType=org.hibernate.type.StringType@1d1fcfbb}

[2015-12-30 10:28:03,304]DEBUG 30795[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:03,304]DEBUG 30795[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Platinum
[2015-12-30 10:28:03,304]DEBUG 30795[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 10:28:03,305]DEBUG 30796[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 10:28:03,305]DEBUG 30796[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,305]DEBUG 30796[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,305]DEBUG 30796[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,305]DEBUG 30796[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,305]DEBUG 30796[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,306]DEBUG 30797[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,306]DEBUG 30797[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,306]DEBUG 30797[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,306]DEBUG 30797[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,307]DEBUG 30798[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 10:28:03,308]DEBUG 30799[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,308]DEBUG 30799[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,308]DEBUG 30799[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,308]DEBUG 30799[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,308]DEBUG 30799[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,309]DEBUG 30800[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,309]DEBUG 30800[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,309]DEBUG 30800[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,309]DEBUG 30800[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 10:28:03,311]DEBUG 30802[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,311]DEBUG 30802[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,312]DEBUG 30803[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 10:28:03,313]DEBUG 30804[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,313]DEBUG 30804[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#60]
[2015-12-30 10:28:03,315]DEBUG 30806[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,315]DEBUG 30806[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,315]DEBUG 30806[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,315]DEBUG 30806[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,315]DEBUG 30806[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,315]DEBUG 30806[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,316]DEBUG 30807[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,316]DEBUG 30807[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,316]DEBUG 30807[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,316]DEBUG 30807[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,316]DEBUG 30807[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,316]DEBUG 30807[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,316]DEBUG 30807[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,316]DEBUG 30807[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 10:28:03,318]DEBUG 30809[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,318]DEBUG 30809[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,318]DEBUG 30809[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,318]DEBUG 30809[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,318]DEBUG 30809[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,319]DEBUG 30810[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,319]DEBUG 30810[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,319]DEBUG 30810[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,319]DEBUG 30810[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,319]DEBUG 30810[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,319]DEBUG 30810[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,319]DEBUG 30810[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 10:28:03,320]DEBUG 30811[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,321]DEBUG 30812[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,321]DEBUG 30812[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,321]DEBUG 30812[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,321]DEBUG 30812[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,321]DEBUG 30812[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,321]DEBUG 30812[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,321]DEBUG 30812[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,321]DEBUG 30812[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,321]DEBUG 30812[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,322]DEBUG 30813[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,322]DEBUG 30813[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,323]DEBUG 30814[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,323]DEBUG 30814[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,323]DEBUG 30814[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,323]DEBUG 30814[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,324]DEBUG 30815[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,324]DEBUG 30815[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,324]DEBUG 30815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,324]DEBUG 30815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,324]DEBUG 30815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,324]DEBUG 30815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,324]DEBUG 30815[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,325]DEBUG 30816[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 10:28:03,326]DEBUG 30817[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,326]DEBUG 30817[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,326]DEBUG 30817[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,326]DEBUG 30817[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,326]DEBUG 30817[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,327]DEBUG 30818[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,327]DEBUG 30818[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,327]DEBUG 30818[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,327]DEBUG 30818[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,327]DEBUG 30818[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,327]DEBUG 30818[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,327]DEBUG 30818[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 10:28:03,328]DEBUG 30819[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,329]DEBUG 30820[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,329]DEBUG 30820[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,329]DEBUG 30820[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,329]DEBUG 30820[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,329]DEBUG 30820[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,329]DEBUG 30820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,329]DEBUG 30820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,329]DEBUG 30820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,329]DEBUG 30820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,330]DEBUG 30821[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,330]DEBUG 30821[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 10:28:03,331]DEBUG 30822[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,331]DEBUG 30822[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,331]DEBUG 30822[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,331]DEBUG 30822[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,332]DEBUG 30823[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,332]DEBUG 30823[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,332]DEBUG 30823[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,332]DEBUG 30823[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,332]DEBUG 30823[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,332]DEBUG 30823[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,332]DEBUG 30823[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,334]DEBUG 30825[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 10:28:03,335]DEBUG 30826[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,335]DEBUG 30826[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,335]DEBUG 30826[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,336]DEBUG 30827[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,336]DEBUG 30827[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,336]DEBUG 30827[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,336]DEBUG 30827[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,336]DEBUG 30827[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,336]DEBUG 30827[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,336]DEBUG 30827[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,336]DEBUG 30827[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,336]DEBUG 30827[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 10:28:03,337]DEBUG 30828[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,338]DEBUG 30829[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,338]DEBUG 30829[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,338]DEBUG 30829[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,338]DEBUG 30829[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,338]DEBUG 30829[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,338]DEBUG 30829[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,338]DEBUG 30829[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,338]DEBUG 30829[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,339]DEBUG 30830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,339]DEBUG 30830[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,339]DEBUG 30830[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 10:28:03,340]DEBUG 30831[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,340]DEBUG 30831[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7ee7dba8, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,340]DEBUG 30831[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,340]DEBUG 30831[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@223f9454]
[2015-12-30 10:28:03,340]DEBUG 30831[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,341]DEBUG 30832[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,342]DEBUG 30833[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,342]DEBUG 30833[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@223f9454] after transaction
[2015-12-30 10:28:03,342]DEBUG 30833[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,342]DEBUG 30833[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,342]DEBUG 30833[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,342] INFO 30833[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7ee7dba8, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 10:28:03,343]DEBUG 30834[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7ee7dba8, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,343]DEBUG 30834[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:03,343]DEBUG 30834[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 10:28:03,343]DEBUG 30834[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@78aa113f, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,343]DEBUG 30834[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,344]DEBUG 30835[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,344]DEBUG 30835[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,344]DEBUG 30835[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,344]DEBUG 30835[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,344]DEBUG 30835[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,344]DEBUG 30835[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,344]DEBUG 30835[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,344]DEBUG 30835[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,344]DEBUG 30835[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,344]DEBUG 30835[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,345]DEBUG 30836[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,345]DEBUG 30836[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,345]DEBUG 30836[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,345]DEBUG 30836[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,345]DEBUG 30836[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,345]DEBUG 30836[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,345]DEBUG 30836[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,345]DEBUG 30836[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,345]DEBUG 30836[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,346]DEBUG 30837[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,346]DEBUG 30837[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,346]DEBUG 30837[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@78aa113f]
[2015-12-30 10:28:03,346]DEBUG 30837[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,346]DEBUG 30837[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@78aa113f, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 10:28:03,347]DEBUG 30838[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,347]DEBUG 30838[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,347]DEBUG 30838[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640833
[2015-12-30 10:28:03,347]DEBUG 30838[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7bf3c9d3] for Hibernate transaction
[2015-12-30 10:28:03,347]DEBUG 30838[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7bf3c9d3]
[2015-12-30 10:28:03,347]DEBUG 30838[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,348]DEBUG 30839[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,348]DEBUG 30839[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,348]DEBUG 30839[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@78aa113f, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 10:28:03,348] INFO 30839[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,348]DEBUG 30839[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,348]DEBUG 30839[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,349]DEBUG 30840[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[61]]
[2015-12-30 10:28:03,350]DEBUG 30841[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,350]DEBUG 30841[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 61, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,350]DEBUG 30841[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,350]DEBUG 30841[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,351]DEBUG 30842[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[62]]
[2015-12-30 10:28:03,353]DEBUG 30844[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,353]DEBUG 30844[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 62, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,353]DEBUG 30844[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,353]DEBUG 30844[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,354]DEBUG 30845[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[63]]
[2015-12-30 10:28:03,354]DEBUG 30845[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,355]DEBUG 30846[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 63, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,355]DEBUG 30846[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,355]DEBUG 30846[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,356]DEBUG 30847[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[64]]
[2015-12-30 10:28:03,356]DEBUG 30847[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,357]DEBUG 30848[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 64, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,357]DEBUG 30848[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,357]DEBUG 30848[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,357]DEBUG 30848[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,357]DEBUG 30848[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,358]DEBUG 30849[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,358]DEBUG 30849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,358]DEBUG 30849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,358]DEBUG 30849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,358]DEBUG 30849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,358]DEBUG 30849[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,358]DEBUG 30849[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 10:28:03,360]DEBUG 30851[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,360]DEBUG 30851[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,360]DEBUG 30851[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,360]DEBUG 30851[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,360]DEBUG 30851[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,360]DEBUG 30851[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,361]DEBUG 30852[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,361]DEBUG 30852[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,361]DEBUG 30852[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,361]DEBUG 30852[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,361]DEBUG 30852[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,361]DEBUG 30852[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 10:28:03,362]DEBUG 30853[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,363]DEBUG 30854[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,363]DEBUG 30854[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,363]DEBUG 30854[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,363]DEBUG 30854[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,363]DEBUG 30854[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,363]DEBUG 30854[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,363]DEBUG 30854[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,364]DEBUG 30855[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,364]DEBUG 30855[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,364]DEBUG 30855[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,364]DEBUG 30855[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,365]DEBUG 30856[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,365]DEBUG 30856[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,365]DEBUG 30856[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,368]DEBUG 30859[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,369]DEBUG 30860[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,369]DEBUG 30860[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,369]DEBUG 30860[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,369]DEBUG 30860[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,369]DEBUG 30860[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,369]DEBUG 30860[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,369]DEBUG 30860[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,369]DEBUG 30860[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 10:28:03,370]DEBUG 30861[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,371]DEBUG 30862[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,371]DEBUG 30862[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,371]DEBUG 30862[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,371]DEBUG 30862[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,371]DEBUG 30862[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,371]DEBUG 30862[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,371]DEBUG 30862[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,372]DEBUG 30863[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,372]DEBUG 30863[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,372]DEBUG 30863[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,372]DEBUG 30863[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 10:28:03,373]DEBUG 30864[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,373]DEBUG 30864[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,373]DEBUG 30864[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,374]DEBUG 30865[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,374]DEBUG 30865[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,374]DEBUG 30865[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,374]DEBUG 30865[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,374]DEBUG 30865[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,374]DEBUG 30865[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,374]DEBUG 30865[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,374]DEBUG 30865[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,374]DEBUG 30865[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 10:28:03,377]DEBUG 30868[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,377]DEBUG 30868[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,377]DEBUG 30868[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,377]DEBUG 30868[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,377]DEBUG 30868[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,377]DEBUG 30868[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,378]DEBUG 30869[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,378]DEBUG 30869[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,378]DEBUG 30869[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,378]DEBUG 30869[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,378]DEBUG 30869[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 10:28:03,378]DEBUG 30869[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,378]DEBUG 30869[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,378]DEBUG 30869[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,379]DEBUG 30870[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,379]DEBUG 30870[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,379]DEBUG 30870[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,379]DEBUG 30870[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,379]DEBUG 30870[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,379]DEBUG 30870[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 10:28:03,382]DEBUG 30873[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,382]DEBUG 30873[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,382]DEBUG 30873[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 10:28:03,383]DEBUG 30874[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,384]DEBUG 30875[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,384]DEBUG 30875[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,384]DEBUG 30875[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,384]DEBUG 30875[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,384]DEBUG 30875[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,384]DEBUG 30875[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,384]DEBUG 30875[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,385]DEBUG 30876[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,385]DEBUG 30876[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,385]DEBUG 30876[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,385]DEBUG 30876[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 10:28:03,386]DEBUG 30877[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,386]DEBUG 30877[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,386]DEBUG 30877[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,386]DEBUG 30877[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 10:28:03,387]DEBUG 30878[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,387]DEBUG 30878[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,387]DEBUG 30878[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,387]DEBUG 30878[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,387]DEBUG 30878[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,387]DEBUG 30878[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 10:28:03,387]DEBUG 30878[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,387]DEBUG 30878[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 10:28:03,389]DEBUG 30880[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,389]DEBUG 30880[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@78aa113f, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 10:28:03,389]DEBUG 30880[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,389]DEBUG 30880[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7bf3c9d3]
[2015-12-30 10:28:03,389]DEBUG 30880[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,390]DEBUG 30881[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,390]DEBUG 30881[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,390]DEBUG 30881[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7bf3c9d3] after transaction
[2015-12-30 10:28:03,390]DEBUG 30881[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,390]DEBUG 30881[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,391]DEBUG 30882[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,391] INFO 30882[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@78aa113f, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 10:28:03,391]DEBUG 30882[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@78aa113f, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,392]DEBUG 30883[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@5f8f81db testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2015-12-30 10:28:03,395]DEBUG 30886[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest].
[2015-12-30 10:28:03,398] INFO 30889[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: using defaults.
[2015-12-30 10:28:03,398]DEBUG 30889[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,398]DEBUG 30889[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,400]DEBUG 30891[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,400]DEBUG 30891[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,400]DEBUG 30891[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,400]DEBUG 30891[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,405]DEBUG 30896[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,405]DEBUG 30896[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,406]DEBUG 30897[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5ff1ea4f, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,412]DEBUG 30903[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,412]DEBUG 30903[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,412]DEBUG 30903[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,413]DEBUG 30904[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,413]DEBUG 30904[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,413]DEBUG 30904[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,413]DEBUG 30904[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,413]DEBUG 30904[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,413]DEBUG 30904[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,413]DEBUG 30904[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,413]DEBUG 30904[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,414]DEBUG 30905[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,414]DEBUG 30905[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'customerTypeDao'
[2015-12-30 10:28:03,414]DEBUG 30905[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,414]DEBUG 30905[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,414]DEBUG 30905[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'dimensionDao'
[2015-12-30 10:28:03,414]DEBUG 30905[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,415]DEBUG 30906[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,415]DEBUG 30906[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'orderDao'
[2015-12-30 10:28:03,415]DEBUG 30906[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,415]DEBUG 30906[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,415]DEBUG 30906[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'orderItemDao'
[2015-12-30 10:28:03,415]DEBUG 30906[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,416]DEBUG 30907[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,416]DEBUG 30907[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'orderStatusDao'
[2015-12-30 10:28:03,416]DEBUG 30907[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,416]DEBUG 30907[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,416]DEBUG 30907[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'productDao'
[2015-12-30 10:28:03,416]DEBUG 30907[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,416]DEBUG 30907[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,417]DEBUG 30908[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'regionDao'
[2015-12-30 10:28:03,417]DEBUG 30908[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,417]DEBUG 30908[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,417]DEBUG 30908[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'roleDao'
[2015-12-30 10:28:03,417]DEBUG 30908[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,417]DEBUG 30908[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,417]DEBUG 30908[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'userDao'
[2015-12-30 10:28:03,418]DEBUG 30909[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,418]DEBUG 30909[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,419]DEBUG 30910[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'sessionFactory'
[2015-12-30 10:28:03,420]DEBUG 30911[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,422]DEBUG 30913[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,422]DEBUG 30913[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,422]DEBUG 30913[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5ff1ea4f]
[2015-12-30 10:28:03,423]DEBUG 30914[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.setUp() throws java.lang.Exception
[2015-12-30 10:28:03,423]DEBUG 30914[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,423]DEBUG 30914[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.tearDown() throws java.lang.Exception
[2015-12-30 10:28:03,424]DEBUG 30915[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,424]DEBUG 30915[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testInsertOrUpdate()
[2015-12-30 10:28:03,424]DEBUG 30915[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,424]DEBUG 30915[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testDelete()
[2015-12-30 10:28:03,424]DEBUG 30915[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,424]DEBUG 30915[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testFindByCriterions()
[2015-12-30 10:28:03,424]DEBUG 30915[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,425]DEBUG 30916[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testFindByOneOfCriterions()
[2015-12-30 10:28:03,425]DEBUG 30916[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,425]DEBUG 30916[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByName()
[2015-12-30 10:28:03,425]DEBUG 30916[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,425]DEBUG 30916[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testcontainsProductByName()
[2015-12-30 10:28:03,425]DEBUG 30916[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,425]DEBUG 30916[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testnumberOfProductByName()
[2015-12-30 10:28:03,426]DEBUG 30917[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,426]DEBUG 30917[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByDescription()
[2015-12-30 10:28:03,426]DEBUG 30917[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,426]DEBUG 30917[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testcontainsProductByDescription()
[2015-12-30 10:28:03,426]DEBUG 30917[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,426]DEBUG 30917[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testnumberOfProductByDescription()
[2015-12-30 10:28:03,427]DEBUG 30918[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPrice' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,427]DEBUG 30918[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByPrice()
[2015-12-30 10:28:03,427]DEBUG 30918[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromTo' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,427]DEBUG 30918[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByPriceFromTo()
[2015-12-30 10:28:03,427]DEBUG 30918[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetRowCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,427]DEBUG 30918[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testGetRowCount()
[2015-12-30 10:28:03,429]DEBUG 30920[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,429]DEBUG 30920[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByID()
[2015-12-30 10:28:03,429]DEBUG 30920[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByNameSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,429]DEBUG 30920[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByNameSorting()
[2015-12-30 10:28:03,429]DEBUG 30920[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescriptionSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,430]DEBUG 30921[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByDescriptionSorting()
[2015-12-30 10:28:03,430]DEBUG 30921[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromToSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,430]DEBUG 30921[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByPriceFromToSorting()
[2015-12-30 10:28:03,430]DEBUG 30921[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2015-12-30 10:28:03,430]DEBUG 30921[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2015-12-30 10:28:03,430]DEBUG 30921[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2015-12-30 10:28:03,430]DEBUG 30921[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2015-12-30 10:28:03,430]DEBUG 30921[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2015-12-30 10:28:03,431]DEBUG 30922[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2015-12-30 10:28:03,431]DEBUG 30922[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2015-12-30 10:28:03,431]DEBUG 30922[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2015-12-30 10:28:03,431]DEBUG 30922[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2015-12-30 10:28:03,431]DEBUG 30922[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2015-12-30 10:28:03,431]DEBUG 30922[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,431]DEBUG 30922[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2015-12-30 10:28:03,431]DEBUG 30922[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2015-12-30 10:28:03,432]DEBUG 30923[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2015-12-30 10:28:03,432]DEBUG 30923[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2015-12-30 10:28:03,432]DEBUG 30923[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2015-12-30 10:28:03,432]DEBUG 30923[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2015-12-30 10:28:03,432]DEBUG 30923[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2015-12-30 10:28:03,432]DEBUG 30923[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2015-12-30 10:28:03,432]DEBUG 30923[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 10:28:03,432]DEBUG 30923[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 10:28:03,432]DEBUG 30923[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2015-12-30 10:28:03,433]DEBUG 30924[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2015-12-30 10:28:03,433]DEBUG 30924[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2015-12-30 10:28:03,433]DEBUG 30924[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2015-12-30 10:28:03,433]DEBUG 30924[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2015-12-30 10:28:03,433]DEBUG 30924[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2015-12-30 10:28:03,433]DEBUG 30924[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2015-12-30 10:28:03,433]DEBUG 30924[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2015-12-30 10:28:03,433]DEBUG 30924[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2015-12-30 10:28:03,433]DEBUG 30924[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 10:28:03,433]DEBUG 30924[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 10:28:03,434]DEBUG 30925[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2015-12-30 10:28:03,434]DEBUG 30925[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 10:28:03,434]DEBUG 30925[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 10:28:03,434]DEBUG 30925[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2015-12-30 10:28:03,434]DEBUG 30925[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2015-12-30 10:28:03,434]DEBUG 30925[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2015-12-30 10:28:03,434]DEBUG 30925[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2015-12-30 10:28:03,434]DEBUG 30925[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2015-12-30 10:28:03,447]DEBUG 30938[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,447]DEBUG 30938[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5ff1ea4f, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,447]DEBUG 30938[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,447]DEBUG 30938[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@4d5cef4c transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,447]DEBUG 30938[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,448]DEBUG 30939[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,448]DEBUG 30939[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640834
[2015-12-30 10:28:03,448]DEBUG 30939[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5f044435] for Hibernate transaction
[2015-12-30 10:28:03,448]DEBUG 30939[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5f044435]
[2015-12-30 10:28:03,448]DEBUG 30939[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,448]DEBUG 30939[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,448]DEBUG 30939[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,449]DEBUG 30940[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5ff1ea4f, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,449] INFO 30940[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,449]DEBUG 30940[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,449]DEBUG 30940[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,450]DEBUG 30941[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[65]]
[2015-12-30 10:28:03,452]DEBUG 30943[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,452]DEBUG 30943[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 65, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,452]DEBUG 30943[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,453]DEBUG 30944[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,454]DEBUG 30945[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[66]]
[2015-12-30 10:28:03,454]DEBUG 30945[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,454]DEBUG 30945[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 66, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,454]DEBUG 30945[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,454]DEBUG 30945[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,456]DEBUG 30947[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[67]]
[2015-12-30 10:28:03,456]DEBUG 30947[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,456]DEBUG 30947[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 67, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,456]DEBUG 30947[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,456]DEBUG 30947[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,457]DEBUG 30948[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[68]]
[2015-12-30 10:28:03,457]DEBUG 30948[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,457]DEBUG 30948[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 68, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,458]DEBUG 30949[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,458]DEBUG 30949[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,459]DEBUG 30950[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[69]]
[2015-12-30 10:28:03,459]DEBUG 30950[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,459]DEBUG 30950[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 69, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,459]DEBUG 30950[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,459]DEBUG 30950[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,460]DEBUG 30951[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 5 insertions, 3 updates, 0 deletions to 5 objects
[2015-12-30 10:28:03,460]DEBUG 30951[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,460]DEBUG 30951[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,460]DEBUG 30951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=65, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,460]DEBUG 30951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=66, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,460]DEBUG 30951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=67, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,460]DEBUG 30951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=68, productDescription=productDescription, active=true, productPrice=400.0, productName=productName}
[2015-12-30 10:28:03,460]DEBUG 30951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=69, productDescription=productDescription2, active=true, productPrice=800.0, productName=productName2}
[2015-12-30 10:28:03,460]DEBUG 30951[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 10:28:03,461]DEBUG 30952[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,461]DEBUG 30952[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,461]DEBUG 30952[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,461]DEBUG 30952[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,461]DEBUG 30952[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,461]DEBUG 30952[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,462]DEBUG 30953[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,462]DEBUG 30953[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,462]DEBUG 30953[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,462]DEBUG 30953[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,462]DEBUG 30953[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 5
[2015-12-30 10:28:03,464]DEBUG 30955[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,464]DEBUG 30955[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,464]DEBUG 30955[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,465]DEBUG 30956[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,465]DEBUG 30956[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,465]DEBUG 30956[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,465]DEBUG 30956[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,465]DEBUG 30956[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,467]DEBUG 30958[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,468]DEBUG 30959[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,468]DEBUG 30959[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,470]DEBUG 30961[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,470]DEBUG 30961[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5ff1ea4f, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,470]DEBUG 30961[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,470]DEBUG 30961[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5f044435]
[2015-12-30 10:28:03,470]DEBUG 30961[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,471]DEBUG 30962[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,471]DEBUG 30962[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,471]DEBUG 30962[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5f044435] after transaction
[2015-12-30 10:28:03,471]DEBUG 30962[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,472]DEBUG 30963[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,472]DEBUG 30963[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,472] INFO 30963[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5ff1ea4f, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,473]DEBUG 30964[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5ff1ea4f, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,473]DEBUG 30964[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,473]DEBUG 30964[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,473]DEBUG 30964[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4a1b9892, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,474]DEBUG 30965[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,474]DEBUG 30965[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,474]DEBUG 30965[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,474]DEBUG 30965[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,474]DEBUG 30965[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,474]DEBUG 30965[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,474]DEBUG 30965[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,474]DEBUG 30965[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,476]DEBUG 30967[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,476]DEBUG 30967[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,476]DEBUG 30967[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,477]DEBUG 30968[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,477]DEBUG 30968[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,477]DEBUG 30968[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,477]DEBUG 30968[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,477]DEBUG 30968[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,477]DEBUG 30968[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,477]DEBUG 30968[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,477]DEBUG 30968[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,477]DEBUG 30968[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,478]DEBUG 30969[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,478]DEBUG 30969[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,478]DEBUG 30969[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4a1b9892]
[2015-12-30 10:28:03,478]DEBUG 30969[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,478]DEBUG 30969[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4a1b9892, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,479]DEBUG 30970[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,479]DEBUG 30970[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,480]DEBUG 30971[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640834
[2015-12-30 10:28:03,480]DEBUG 30971[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6f0dc842] for Hibernate transaction
[2015-12-30 10:28:03,480]DEBUG 30971[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6f0dc842]
[2015-12-30 10:28:03,480]DEBUG 30971[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,480]DEBUG 30971[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,480]DEBUG 30971[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,480]DEBUG 30971[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4a1b9892, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,480] INFO 30971[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,481]DEBUG 30972[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,481]DEBUG 30972[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,482]DEBUG 30973[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[70]]
[2015-12-30 10:28:03,482]DEBUG 30973[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,482]DEBUG 30973[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 70, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,483]DEBUG 30974[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,483]DEBUG 30974[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,484]DEBUG 30975[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[71]]
[2015-12-30 10:28:03,484]DEBUG 30975[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,484]DEBUG 30975[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 71, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,484]DEBUG 30975[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,485]DEBUG 30976[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,486]DEBUG 30977[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[72]]
[2015-12-30 10:28:03,486]DEBUG 30977[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,486]DEBUG 30977[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 72, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,486] INFO 30977[main] - org.hibernate.event.def.DefaultDeleteEventListener.deleteTransientEntity(DefaultDeleteEventListener.java:203) - handling transient entity in delete processing
[2015-12-30 10:28:03,487]DEBUG 30978[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,487]DEBUG 30978[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,487]DEBUG 30978[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,487]DEBUG 30978[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,487]DEBUG 30978[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,488]DEBUG 30979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=72, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,488]DEBUG 30979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=70, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,488]DEBUG 30979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=71, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,488]DEBUG 30979[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 10:28:03,488]DEBUG 30979[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,488]DEBUG 30979[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,489]DEBUG 30980[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,489]DEBUG 30980[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,489]DEBUG 30980[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,489]DEBUG 30980[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,489]DEBUG 30980[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,491]DEBUG 30982[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,492]DEBUG 30983[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,492]DEBUG 30983[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,492]DEBUG 30983[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,492]DEBUG 30983[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,492]DEBUG 30983[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,493]DEBUG 30984[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,493]DEBUG 30984[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,495]DEBUG 30986[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,495]DEBUG 30986[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,495]DEBUG 30986[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2015-12-30 10:28:03,497]DEBUG 30988[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,497]DEBUG 30988[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#70]
[2015-12-30 10:28:03,497]DEBUG 30988[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#71]
[2015-12-30 10:28:03,497]DEBUG 30988[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#72]
[2015-12-30 10:28:03,497]DEBUG 30988[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,497]DEBUG 30988[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,498]DEBUG 30989[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,500]DEBUG 30991[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,500]DEBUG 30991[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,500]DEBUG 30991[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,500]DEBUG 30991[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,500]DEBUG 30991[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,500]DEBUG 30991[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=72, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,500]DEBUG 30991[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=70, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,501]DEBUG 30992[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=71, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,501]DEBUG 30992[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,501]DEBUG 30992[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,502]DEBUG 30993[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,503]DEBUG 30994[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4a1b9892, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,503]DEBUG 30994[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,503]DEBUG 30994[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6f0dc842]
[2015-12-30 10:28:03,503]DEBUG 30994[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,504]DEBUG 30995[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,504]DEBUG 30995[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,504]DEBUG 30995[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6f0dc842] after transaction
[2015-12-30 10:28:03,504]DEBUG 30995[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,505]DEBUG 30996[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,505]DEBUG 30996[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,505] INFO 30996[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4a1b9892, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,506]DEBUG 30997[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4a1b9892, testMethod = testDelete@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,506]DEBUG 30997[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,506]DEBUG 30997[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,506]DEBUG 30997[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@335dd1d3, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,506]DEBUG 30997[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,507]DEBUG 30998[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,507]DEBUG 30998[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,507]DEBUG 30998[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,507]DEBUG 30998[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,507]DEBUG 30998[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,507]DEBUG 30998[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,507]DEBUG 30998[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,507]DEBUG 30998[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,507]DEBUG 30998[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,507]DEBUG 30998[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,507]DEBUG 30998[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,508]DEBUG 30999[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,508]DEBUG 30999[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,508]DEBUG 30999[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,508]DEBUG 30999[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,508]DEBUG 30999[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,508]DEBUG 30999[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,508]DEBUG 30999[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,508]DEBUG 30999[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,508]DEBUG 30999[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,509]DEBUG 31000[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,509]DEBUG 31000[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@335dd1d3]
[2015-12-30 10:28:03,509]DEBUG 31000[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,509]DEBUG 31000[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@335dd1d3, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,509]DEBUG 31000[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,510]DEBUG 31001[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,510]DEBUG 31001[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640835
[2015-12-30 10:28:03,510]DEBUG 31001[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@266a611d] for Hibernate transaction
[2015-12-30 10:28:03,510]DEBUG 31001[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@266a611d]
[2015-12-30 10:28:03,510]DEBUG 31001[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,510]DEBUG 31001[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,510]DEBUG 31001[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,511]DEBUG 31002[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@335dd1d3, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,511] INFO 31002[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,511]DEBUG 31002[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,511]DEBUG 31002[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,512]DEBUG 31003[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[73]]
[2015-12-30 10:28:03,512]DEBUG 31003[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,512]DEBUG 31003[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 73, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,513]DEBUG 31004[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,513]DEBUG 31004[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,514]DEBUG 31005[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[74]]
[2015-12-30 10:28:03,514]DEBUG 31005[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,514]DEBUG 31005[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 74, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,515]DEBUG 31006[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,515]DEBUG 31006[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,516]DEBUG 31007[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[75]]
[2015-12-30 10:28:03,516]DEBUG 31007[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,516]DEBUG 31007[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 75, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,517]DEBUG 31008[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,517]DEBUG 31008[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,517]DEBUG 31008[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,517]DEBUG 31008[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,517]DEBUG 31008[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,517]DEBUG 31008[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=73, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,518]DEBUG 31009[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=75, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,520]DEBUG 31011[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=74, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,520]DEBUG 31011[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 10:28:03,520]DEBUG 31011[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,520]DEBUG 31011[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,521]DEBUG 31012[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,521]DEBUG 31012[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,521]DEBUG 31012[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,521]DEBUG 31012[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,521]DEBUG 31012[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,524]DEBUG 31015[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,525]DEBUG 31016[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,525]DEBUG 31016[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,525]DEBUG 31016[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,526]DEBUG 31017[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,526]DEBUG 31017[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,526]DEBUG 31017[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,527]DEBUG 31018[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,529]DEBUG 31020[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,530]DEBUG 31021[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,530]DEBUG 31021[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName=? and this_.ProductDescription=?
[2015-12-30 10:28:03,531]DEBUG 31022[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,531]DEBUG 31022[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#73]
[2015-12-30 10:28:03,531]DEBUG 31022[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,532]DEBUG 31023[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,532]DEBUG 31023[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,532]DEBUG 31023[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,532]DEBUG 31023[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,532]DEBUG 31023[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,532]DEBUG 31023[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,532]DEBUG 31023[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,532]DEBUG 31023[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=73, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,533]DEBUG 31024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=75, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,533]DEBUG 31024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=74, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,533]DEBUG 31024[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,533]DEBUG 31024[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,534]DEBUG 31025[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,534]DEBUG 31025[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@335dd1d3, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,534]DEBUG 31025[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,535]DEBUG 31026[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@266a611d]
[2015-12-30 10:28:03,535]DEBUG 31026[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,536]DEBUG 31027[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,536]DEBUG 31027[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,536]DEBUG 31027[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@266a611d] after transaction
[2015-12-30 10:28:03,536]DEBUG 31027[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,536]DEBUG 31027[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,536]DEBUG 31027[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,536] INFO 31027[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@335dd1d3, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,537]DEBUG 31028[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@335dd1d3, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,537]DEBUG 31028[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,537]DEBUG 31028[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,538]DEBUG 31029[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@68ee5d93, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,538]DEBUG 31029[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,538]DEBUG 31029[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,538]DEBUG 31029[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,538]DEBUG 31029[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,538]DEBUG 31029[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,538]DEBUG 31029[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,538]DEBUG 31029[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,538]DEBUG 31029[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,538]DEBUG 31029[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,539]DEBUG 31030[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,539]DEBUG 31030[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,539]DEBUG 31030[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,539]DEBUG 31030[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,539]DEBUG 31030[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,539]DEBUG 31030[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,539]DEBUG 31030[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,539]DEBUG 31030[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,539]DEBUG 31030[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,539]DEBUG 31030[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,539]DEBUG 31030[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,540]DEBUG 31031[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,540]DEBUG 31031[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,540]DEBUG 31031[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@68ee5d93]
[2015-12-30 10:28:03,540]DEBUG 31031[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,540]DEBUG 31031[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@68ee5d93, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,540]DEBUG 31031[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,541]DEBUG 31032[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,541]DEBUG 31032[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640835
[2015-12-30 10:28:03,541]DEBUG 31032[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6be7b7cd] for Hibernate transaction
[2015-12-30 10:28:03,541]DEBUG 31032[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6be7b7cd]
[2015-12-30 10:28:03,543]DEBUG 31034[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,543]DEBUG 31034[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,543]DEBUG 31034[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,543]DEBUG 31034[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@68ee5d93, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,544] INFO 31035[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,544]DEBUG 31035[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,544]DEBUG 31035[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,545]DEBUG 31036[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[76]]
[2015-12-30 10:28:03,545]DEBUG 31036[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,545]DEBUG 31036[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 76, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,546]DEBUG 31037[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,546]DEBUG 31037[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,547]DEBUG 31038[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[77]]
[2015-12-30 10:28:03,547]DEBUG 31038[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,547]DEBUG 31038[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 77, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,548]DEBUG 31039[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,548]DEBUG 31039[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,549]DEBUG 31040[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[78]]
[2015-12-30 10:28:03,549]DEBUG 31040[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,549]DEBUG 31040[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 78, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,550]DEBUG 31041[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,550]DEBUG 31041[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,550]DEBUG 31041[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,550]DEBUG 31041[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,550]DEBUG 31041[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,550]DEBUG 31041[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=77, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,551]DEBUG 31042[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=76, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,551]DEBUG 31042[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=78, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,551]DEBUG 31042[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 10:28:03,551]DEBUG 31042[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,551]DEBUG 31042[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,551]DEBUG 31042[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,551]DEBUG 31042[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,552]DEBUG 31043[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,552]DEBUG 31043[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,552]DEBUG 31043[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,554]DEBUG 31045[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,554]DEBUG 31045[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,554]DEBUG 31045[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,554]DEBUG 31045[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,554]DEBUG 31045[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,555]DEBUG 31046[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,555]DEBUG 31046[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,555]DEBUG 31046[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,557]DEBUG 31048[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,557]DEBUG 31048[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,557]DEBUG 31048[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where (this_.ProductName=? or this_.ProductDescription=?)
[2015-12-30 10:28:03,559]DEBUG 31050[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,559]DEBUG 31050[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#76]
[2015-12-30 10:28:03,559]DEBUG 31050[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#78]
[2015-12-30 10:28:03,559]DEBUG 31050[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,559]DEBUG 31050[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,559]DEBUG 31050[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,559]DEBUG 31050[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,560]DEBUG 31051[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,560]DEBUG 31051[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,560]DEBUG 31051[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,560]DEBUG 31051[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,560]DEBUG 31051[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=77, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,560]DEBUG 31051[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=76, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,560]DEBUG 31051[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=78, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,560]DEBUG 31051[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,560]DEBUG 31051[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,562]DEBUG 31053[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,562]DEBUG 31053[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@68ee5d93, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,562]DEBUG 31053[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,562]DEBUG 31053[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6be7b7cd]
[2015-12-30 10:28:03,562]DEBUG 31053[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,563]DEBUG 31054[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,563]DEBUG 31054[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,563]DEBUG 31054[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6be7b7cd] after transaction
[2015-12-30 10:28:03,563]DEBUG 31054[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,563]DEBUG 31054[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,563]DEBUG 31054[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,564] INFO 31055[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@68ee5d93, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,565]DEBUG 31056[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@68ee5d93, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,565]DEBUG 31056[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,565]DEBUG 31056[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,567]DEBUG 31058[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@29e11ff8, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,567]DEBUG 31058[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,567]DEBUG 31058[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,567]DEBUG 31058[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,567]DEBUG 31058[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,567]DEBUG 31058[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,567]DEBUG 31058[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,568]DEBUG 31059[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,568]DEBUG 31059[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,568]DEBUG 31059[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,568]DEBUG 31059[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,568]DEBUG 31059[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,568]DEBUG 31059[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,568]DEBUG 31059[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,568]DEBUG 31059[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,568]DEBUG 31059[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,568]DEBUG 31059[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,569]DEBUG 31060[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,569]DEBUG 31060[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,569]DEBUG 31060[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,569]DEBUG 31060[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,569]DEBUG 31060[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,569]DEBUG 31060[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,569]DEBUG 31060[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@29e11ff8]
[2015-12-30 10:28:03,570]DEBUG 31061[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,570]DEBUG 31061[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@29e11ff8, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,570]DEBUG 31061[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,571]DEBUG 31062[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,571]DEBUG 31062[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640835
[2015-12-30 10:28:03,571]DEBUG 31062[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1a00a506] for Hibernate transaction
[2015-12-30 10:28:03,571]DEBUG 31062[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1a00a506]
[2015-12-30 10:28:03,571]DEBUG 31062[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,571]DEBUG 31062[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,571]DEBUG 31062[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,571]DEBUG 31062[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@29e11ff8, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,572] INFO 31063[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,572]DEBUG 31063[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,572]DEBUG 31063[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,573]DEBUG 31064[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[79]]
[2015-12-30 10:28:03,573]DEBUG 31064[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,573]DEBUG 31064[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 79, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,574]DEBUG 31065[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,574]DEBUG 31065[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,575]DEBUG 31066[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[80]]
[2015-12-30 10:28:03,575]DEBUG 31066[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,575]DEBUG 31066[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 80, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,575]DEBUG 31066[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,575]DEBUG 31066[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,576]DEBUG 31067[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[81]]
[2015-12-30 10:28:03,577]DEBUG 31068[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,577]DEBUG 31068[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 81, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,577]DEBUG 31068[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,577]DEBUG 31068[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,577]DEBUG 31068[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,577]DEBUG 31068[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,578]DEBUG 31069[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,578]DEBUG 31069[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=81, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,578]DEBUG 31069[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=80, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,578]DEBUG 31069[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=79, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,578]DEBUG 31069[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 10:28:03,578]DEBUG 31069[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,578]DEBUG 31069[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,578]DEBUG 31069[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,579]DEBUG 31070[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,579]DEBUG 31070[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,579]DEBUG 31070[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,579]DEBUG 31070[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,581]DEBUG 31072[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,581]DEBUG 31072[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,581]DEBUG 31072[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,581]DEBUG 31072[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,581]DEBUG 31072[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,582]DEBUG 31073[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,582]DEBUG 31073[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,582]DEBUG 31073[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,584]DEBUG 31075[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,584]DEBUG 31075[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,584]DEBUG 31075[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2015-12-30 10:28:03,587]DEBUG 31078[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,587]DEBUG 31078[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#79]
[2015-12-30 10:28:03,587]DEBUG 31078[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#80]
[2015-12-30 10:28:03,587]DEBUG 31078[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#81]
[2015-12-30 10:28:03,587]DEBUG 31078[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,588]DEBUG 31079[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,588]DEBUG 31079[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,588]DEBUG 31079[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,588]DEBUG 31079[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,588]DEBUG 31079[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,589]DEBUG 31080[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,589]DEBUG 31080[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,589]DEBUG 31080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=81, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,589]DEBUG 31080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=80, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,589]DEBUG 31080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=79, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,589]DEBUG 31080[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,589]DEBUG 31080[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=?
[2015-12-30 10:28:03,591]DEBUG 31082[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,591]DEBUG 31082[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#79]
[2015-12-30 10:28:03,591]DEBUG 31082[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#80]
[2015-12-30 10:28:03,592]DEBUG 31083[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#81]
[2015-12-30 10:28:03,592]DEBUG 31083[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,592]DEBUG 31083[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,592]DEBUG 31083[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,593]DEBUG 31084[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,593]DEBUG 31084[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,593]DEBUG 31084[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,593]DEBUG 31084[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,593]DEBUG 31084[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,593]DEBUG 31084[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=81, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,593]DEBUG 31084[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=80, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,594]DEBUG 31085[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=79, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,594]DEBUG 31085[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,594]DEBUG 31085[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=?
[2015-12-30 10:28:03,596]DEBUG 31087[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,596]DEBUG 31087[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#79]
[2015-12-30 10:28:03,596]DEBUG 31087[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#80]
[2015-12-30 10:28:03,596]DEBUG 31087[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#81]
[2015-12-30 10:28:03,596]DEBUG 31087[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,596]DEBUG 31087[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,596]DEBUG 31087[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,597]DEBUG 31088[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,597]DEBUG 31088[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,597]DEBUG 31088[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,597]DEBUG 31088[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,597]DEBUG 31088[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,597]DEBUG 31088[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=81, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,598]DEBUG 31089[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=80, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,598]DEBUG 31089[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=79, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,598]DEBUG 31089[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,598]DEBUG 31089[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=?
[2015-12-30 10:28:03,599]DEBUG 31090[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,600]DEBUG 31091[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#79]
[2015-12-30 10:28:03,600]DEBUG 31091[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#80]
[2015-12-30 10:28:03,600]DEBUG 31091[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#81]
[2015-12-30 10:28:03,600]DEBUG 31091[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,600]DEBUG 31091[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,600]DEBUG 31091[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,600]DEBUG 31091[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,601]DEBUG 31092[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,601]DEBUG 31092[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,601]DEBUG 31092[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,601]DEBUG 31092[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,601]DEBUG 31092[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=81, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,601]DEBUG 31092[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=80, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,601]DEBUG 31092[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=79, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,601]DEBUG 31092[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,601]DEBUG 31092[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,603]DEBUG 31094[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,603]DEBUG 31094[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@29e11ff8, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,603]DEBUG 31094[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,603]DEBUG 31094[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1a00a506]
[2015-12-30 10:28:03,603]DEBUG 31094[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,604]DEBUG 31095[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,604]DEBUG 31095[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,604]DEBUG 31095[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1a00a506] after transaction
[2015-12-30 10:28:03,605]DEBUG 31096[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,605]DEBUG 31096[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,606]DEBUG 31097[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,606] INFO 31097[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@29e11ff8, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,607]DEBUG 31098[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@29e11ff8, testMethod = testfindByName@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,607]DEBUG 31098[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,607]DEBUG 31098[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,608]DEBUG 31099[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5d43c278, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,608]DEBUG 31099[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,608]DEBUG 31099[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,608]DEBUG 31099[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,608]DEBUG 31099[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,608]DEBUG 31099[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,608]DEBUG 31099[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,609]DEBUG 31100[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,609]DEBUG 31100[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,609]DEBUG 31100[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,609]DEBUG 31100[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,609]DEBUG 31100[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,609]DEBUG 31100[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,609]DEBUG 31100[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,609]DEBUG 31100[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,609]DEBUG 31100[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,610]DEBUG 31101[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,610]DEBUG 31101[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,610]DEBUG 31101[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,610]DEBUG 31101[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,610]DEBUG 31101[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,610]DEBUG 31101[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,610]DEBUG 31101[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,610]DEBUG 31101[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5d43c278]
[2015-12-30 10:28:03,611]DEBUG 31102[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,611]DEBUG 31102[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5d43c278, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,611]DEBUG 31102[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,612]DEBUG 31103[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testcontainsProductByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,612]DEBUG 31103[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640836
[2015-12-30 10:28:03,612]DEBUG 31103[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@72b4b3a9] for Hibernate transaction
[2015-12-30 10:28:03,612]DEBUG 31103[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@72b4b3a9]
[2015-12-30 10:28:03,612]DEBUG 31103[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,612]DEBUG 31103[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,612]DEBUG 31103[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,612]DEBUG 31103[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5d43c278, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,612] INFO 31103[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,613]DEBUG 31104[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,613]DEBUG 31104[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,614]DEBUG 31105[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[82]]
[2015-12-30 10:28:03,614]DEBUG 31105[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,615]DEBUG 31106[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 82, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,615]DEBUG 31106[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,615]DEBUG 31106[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,616]DEBUG 31107[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[83]]
[2015-12-30 10:28:03,616]DEBUG 31107[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,617]DEBUG 31108[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 83, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,617]DEBUG 31108[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,617]DEBUG 31108[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,618]DEBUG 31109[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[84]]
[2015-12-30 10:28:03,618]DEBUG 31109[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,618]DEBUG 31109[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 84, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,619]DEBUG 31110[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,619]DEBUG 31110[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,619]DEBUG 31110[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,619]DEBUG 31110[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,619]DEBUG 31110[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,619]DEBUG 31110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=83, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,619]DEBUG 31110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=82, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,620]DEBUG 31111[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=84, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,620]DEBUG 31111[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 10:28:03,620]DEBUG 31111[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,620]DEBUG 31111[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,620]DEBUG 31111[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,620]DEBUG 31111[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,621]DEBUG 31112[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,621]DEBUG 31112[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,621]DEBUG 31112[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,623]DEBUG 31114[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,623]DEBUG 31114[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,623]DEBUG 31114[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,623]DEBUG 31114[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,623]DEBUG 31114[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,624]DEBUG 31115[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,624]DEBUG 31115[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,626]DEBUG 31117[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,628]DEBUG 31119[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,628]DEBUG 31119[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,628]DEBUG 31119[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2015-12-30 10:28:03,630]DEBUG 31121[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,630]DEBUG 31121[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#82]
[2015-12-30 10:28:03,630]DEBUG 31121[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#83]
[2015-12-30 10:28:03,631]DEBUG 31122[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#84]
[2015-12-30 10:28:03,631]DEBUG 31122[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,631]DEBUG 31122[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,631]DEBUG 31122[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,632]DEBUG 31123[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,632]DEBUG 31123[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,632]DEBUG 31123[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,632]DEBUG 31123[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,632]DEBUG 31123[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,632]DEBUG 31123[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=83, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,633]DEBUG 31124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=82, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,633]DEBUG 31124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=84, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,633]DEBUG 31124[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,633]DEBUG 31124[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2015-12-30 10:28:03,635]DEBUG 31126[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,635]DEBUG 31126[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#82]
[2015-12-30 10:28:03,635]DEBUG 31126[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,635]DEBUG 31126[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,635]DEBUG 31126[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,636]DEBUG 31127[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,636]DEBUG 31127[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,636]DEBUG 31127[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,636]DEBUG 31127[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,636]DEBUG 31127[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,637]DEBUG 31128[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=83, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,637]DEBUG 31128[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=82, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,637]DEBUG 31128[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=84, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,637]DEBUG 31128[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,637]DEBUG 31128[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2015-12-30 10:28:03,639]DEBUG 31130[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,639]DEBUG 31130[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#83]
[2015-12-30 10:28:03,639]DEBUG 31130[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,639]DEBUG 31130[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,639]DEBUG 31130[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,640]DEBUG 31131[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,640]DEBUG 31131[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,640]DEBUG 31131[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,640]DEBUG 31131[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,640]DEBUG 31131[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,640]DEBUG 31131[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=83, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,640]DEBUG 31131[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=82, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,641]DEBUG 31132[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=84, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,641]DEBUG 31132[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,641]DEBUG 31132[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2015-12-30 10:28:03,642]DEBUG 31133[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,643]DEBUG 31134[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#84]
[2015-12-30 10:28:03,643]DEBUG 31134[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,643]DEBUG 31134[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,643]DEBUG 31134[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,643]DEBUG 31134[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,643]DEBUG 31134[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,643]DEBUG 31134[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,644]DEBUG 31135[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,644]DEBUG 31135[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,644]DEBUG 31135[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=83, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,644]DEBUG 31135[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=82, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,644]DEBUG 31135[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=84, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,644]DEBUG 31135[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,644]DEBUG 31135[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2015-12-30 10:28:03,646]DEBUG 31137[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,646]DEBUG 31137[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,646]DEBUG 31137[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,646]DEBUG 31137[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,646]DEBUG 31137[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,647]DEBUG 31138[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,647]DEBUG 31138[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,647]DEBUG 31138[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,647]DEBUG 31138[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,649]DEBUG 31140[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=83, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,649]DEBUG 31140[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=82, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,649]DEBUG 31140[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=84, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,649]DEBUG 31140[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,650]DEBUG 31141[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,651]DEBUG 31142[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,651]DEBUG 31142[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5d43c278, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,651]DEBUG 31142[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,651]DEBUG 31142[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@72b4b3a9]
[2015-12-30 10:28:03,651]DEBUG 31142[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,652]DEBUG 31143[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,652]DEBUG 31143[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,653]DEBUG 31144[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@72b4b3a9] after transaction
[2015-12-30 10:28:03,653]DEBUG 31144[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,653]DEBUG 31144[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,653]DEBUG 31144[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,653] INFO 31144[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5d43c278, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,654]DEBUG 31145[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5d43c278, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,654]DEBUG 31145[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,654]DEBUG 31145[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,654]DEBUG 31145[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4c9e88b3, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,655]DEBUG 31146[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,655]DEBUG 31146[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,655]DEBUG 31146[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,655]DEBUG 31146[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,655]DEBUG 31146[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,655]DEBUG 31146[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,655]DEBUG 31146[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,655]DEBUG 31146[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,655]DEBUG 31146[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,655]DEBUG 31146[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,655]DEBUG 31146[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,656]DEBUG 31147[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,656]DEBUG 31147[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,656]DEBUG 31147[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,656]DEBUG 31147[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,656]DEBUG 31147[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,656]DEBUG 31147[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,656]DEBUG 31147[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,656]DEBUG 31147[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,656]DEBUG 31147[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,656]DEBUG 31147[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,657]DEBUG 31148[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,657]DEBUG 31148[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4c9e88b3]
[2015-12-30 10:28:03,657]DEBUG 31148[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,657]DEBUG 31148[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4c9e88b3, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,657]DEBUG 31148[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,658]DEBUG 31149[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testnumberOfProductByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,658]DEBUG 31149[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640836
[2015-12-30 10:28:03,658]DEBUG 31149[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1ee423cf] for Hibernate transaction
[2015-12-30 10:28:03,658]DEBUG 31149[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1ee423cf]
[2015-12-30 10:28:03,658]DEBUG 31149[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,658]DEBUG 31149[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,658]DEBUG 31149[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,659]DEBUG 31150[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4c9e88b3, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,659] INFO 31150[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,659]DEBUG 31150[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,659]DEBUG 31150[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,660]DEBUG 31151[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[85]]
[2015-12-30 10:28:03,660]DEBUG 31151[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,660]DEBUG 31151[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 85, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,661]DEBUG 31152[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,661]DEBUG 31152[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,662]DEBUG 31153[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[86]]
[2015-12-30 10:28:03,662]DEBUG 31153[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,662]DEBUG 31153[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 86, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,662]DEBUG 31153[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,662]DEBUG 31153[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,664]DEBUG 31155[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[87]]
[2015-12-30 10:28:03,664]DEBUG 31155[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,664]DEBUG 31155[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 87, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,664]DEBUG 31155[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,664]DEBUG 31155[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,665]DEBUG 31156[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,665]DEBUG 31156[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,665]DEBUG 31156[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,665]DEBUG 31156[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=85, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,665]DEBUG 31156[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=87, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,665]DEBUG 31156[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=86, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,665]DEBUG 31156[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 10:28:03,665]DEBUG 31156[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,665]DEBUG 31156[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,667]DEBUG 31158[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,667]DEBUG 31158[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,667]DEBUG 31158[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,668]DEBUG 31159[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,668]DEBUG 31159[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,670]DEBUG 31161[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,670]DEBUG 31161[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,670]DEBUG 31161[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,670]DEBUG 31161[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,670]DEBUG 31161[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,670]DEBUG 31161[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,670]DEBUG 31161[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,671]DEBUG 31162[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,673]DEBUG 31164[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,673]DEBUG 31164[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,673]DEBUG 31164[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2015-12-30 10:28:03,674]DEBUG 31165[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,674]DEBUG 31165[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#85]
[2015-12-30 10:28:03,674]DEBUG 31165[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,675]DEBUG 31166[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,675]DEBUG 31166[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,675]DEBUG 31166[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,675]DEBUG 31166[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,675]DEBUG 31166[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,675]DEBUG 31166[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,675]DEBUG 31166[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,675]DEBUG 31166[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=85, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,676]DEBUG 31167[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=87, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,676]DEBUG 31167[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=86, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,676]DEBUG 31167[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,676]DEBUG 31167[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,677]DEBUG 31168[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,677]DEBUG 31168[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4c9e88b3, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,677]DEBUG 31168[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,677]DEBUG 31168[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1ee423cf]
[2015-12-30 10:28:03,677]DEBUG 31168[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,678]DEBUG 31169[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,679]DEBUG 31170[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,679]DEBUG 31170[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1ee423cf] after transaction
[2015-12-30 10:28:03,679]DEBUG 31170[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,679]DEBUG 31170[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,679]DEBUG 31170[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,679] INFO 31170[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4c9e88b3, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,680]DEBUG 31171[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4c9e88b3, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,680]DEBUG 31171[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,680]DEBUG 31171[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,680]DEBUG 31171[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6a2f0b12, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,680]DEBUG 31171[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,681]DEBUG 31172[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,681]DEBUG 31172[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,681]DEBUG 31172[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,681]DEBUG 31172[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,681]DEBUG 31172[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,681]DEBUG 31172[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,681]DEBUG 31172[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,681]DEBUG 31172[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,681]DEBUG 31172[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,681]DEBUG 31172[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,682]DEBUG 31173[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,682]DEBUG 31173[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,682]DEBUG 31173[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,682]DEBUG 31173[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,682]DEBUG 31173[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,682]DEBUG 31173[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,682]DEBUG 31173[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,682]DEBUG 31173[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,682]DEBUG 31173[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,682]DEBUG 31173[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,683]DEBUG 31174[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,683]DEBUG 31174[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6a2f0b12]
[2015-12-30 10:28:03,683]DEBUG 31174[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,683]DEBUG 31174[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6a2f0b12, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,683]DEBUG 31174[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,684]DEBUG 31175[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByDescription]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,684]DEBUG 31175[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640836
[2015-12-30 10:28:03,684]DEBUG 31175[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1f6f7075] for Hibernate transaction
[2015-12-30 10:28:03,684]DEBUG 31175[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1f6f7075]
[2015-12-30 10:28:03,685]DEBUG 31176[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,685]DEBUG 31176[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,685]DEBUG 31176[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,685]DEBUG 31176[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6a2f0b12, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,686] INFO 31177[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,686]DEBUG 31177[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,687]DEBUG 31178[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,688]DEBUG 31179[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[88]]
[2015-12-30 10:28:03,688]DEBUG 31179[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,688]DEBUG 31179[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 88, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,688]DEBUG 31179[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,688]DEBUG 31179[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,692]DEBUG 31183[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[89]]
[2015-12-30 10:28:03,692]DEBUG 31183[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,693]DEBUG 31184[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 89, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,693]DEBUG 31184[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,693]DEBUG 31184[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,694]DEBUG 31185[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[90]]
[2015-12-30 10:28:03,694]DEBUG 31185[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,694]DEBUG 31185[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 90, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,695]DEBUG 31186[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,695]DEBUG 31186[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,695]DEBUG 31186[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,695]DEBUG 31186[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,695]DEBUG 31186[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,696]DEBUG 31187[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=90, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,696]DEBUG 31187[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=88, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,696]DEBUG 31187[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=89, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,696]DEBUG 31187[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 10:28:03,696]DEBUG 31187[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,696]DEBUG 31187[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,697]DEBUG 31188[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,697]DEBUG 31188[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,697]DEBUG 31188[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,697]DEBUG 31188[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,697]DEBUG 31188[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,699]DEBUG 31190[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,699]DEBUG 31190[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,699]DEBUG 31190[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,700]DEBUG 31191[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,700]DEBUG 31191[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,700]DEBUG 31191[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,700]DEBUG 31191[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,700]DEBUG 31191[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,702]DEBUG 31193[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,702]DEBUG 31193[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,702]DEBUG 31193[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2015-12-30 10:28:03,708]DEBUG 31199[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,708]DEBUG 31199[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#88]
[2015-12-30 10:28:03,708]DEBUG 31199[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#89]
[2015-12-30 10:28:03,708]DEBUG 31199[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#90]
[2015-12-30 10:28:03,708]DEBUG 31199[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,708]DEBUG 31199[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,708]DEBUG 31199[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,709]DEBUG 31200[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,709]DEBUG 31200[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,709]DEBUG 31200[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,709]DEBUG 31200[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,709]DEBUG 31200[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,710]DEBUG 31201[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=90, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,710]DEBUG 31201[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=88, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,710]DEBUG 31201[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=89, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,710]DEBUG 31201[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,710]DEBUG 31201[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=?
[2015-12-30 10:28:03,713]DEBUG 31204[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,713]DEBUG 31204[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#88]
[2015-12-30 10:28:03,713]DEBUG 31204[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#89]
[2015-12-30 10:28:03,713]DEBUG 31204[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#90]
[2015-12-30 10:28:03,713]DEBUG 31204[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,713]DEBUG 31204[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,714]DEBUG 31205[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,714]DEBUG 31205[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,714]DEBUG 31205[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,714]DEBUG 31205[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,714]DEBUG 31205[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,714]DEBUG 31205[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,715]DEBUG 31206[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=90, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,715]DEBUG 31206[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=88, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,720]DEBUG 31211[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=89, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,720]DEBUG 31211[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,720]DEBUG 31211[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=?
[2015-12-30 10:28:03,722]DEBUG 31213[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,722]DEBUG 31213[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#88]
[2015-12-30 10:28:03,722]DEBUG 31213[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#89]
[2015-12-30 10:28:03,722]DEBUG 31213[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#90]
[2015-12-30 10:28:03,722]DEBUG 31213[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,722]DEBUG 31213[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,723]DEBUG 31214[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,723]DEBUG 31214[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,723]DEBUG 31214[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,723]DEBUG 31214[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,723]DEBUG 31214[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,724]DEBUG 31215[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,724]DEBUG 31215[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=90, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,724]DEBUG 31215[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=88, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,724]DEBUG 31215[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=89, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,724]DEBUG 31215[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,724]DEBUG 31215[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=?
[2015-12-30 10:28:03,727]DEBUG 31218[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,727]DEBUG 31218[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#88]
[2015-12-30 10:28:03,727]DEBUG 31218[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#89]
[2015-12-30 10:28:03,727]DEBUG 31218[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#90]
[2015-12-30 10:28:03,728]DEBUG 31219[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,728]DEBUG 31219[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,728]DEBUG 31219[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,728]DEBUG 31219[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,728]DEBUG 31219[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,728]DEBUG 31219[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,728]DEBUG 31219[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,728]DEBUG 31219[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,729]DEBUG 31220[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=90, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,729]DEBUG 31220[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=88, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,729]DEBUG 31220[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=89, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,729]DEBUG 31220[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,729]DEBUG 31220[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,733]DEBUG 31224[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,733]DEBUG 31224[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6a2f0b12, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,733]DEBUG 31224[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,733]DEBUG 31224[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1f6f7075]
[2015-12-30 10:28:03,733]DEBUG 31224[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,735]DEBUG 31226[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,735]DEBUG 31226[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,736]DEBUG 31227[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1f6f7075] after transaction
[2015-12-30 10:28:03,736]DEBUG 31227[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,736]DEBUG 31227[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,736]DEBUG 31227[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,736] INFO 31227[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6a2f0b12, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,737]DEBUG 31228[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6a2f0b12, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,737]DEBUG 31228[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,737]DEBUG 31228[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,738]DEBUG 31229[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3ea1d9f0, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,738]DEBUG 31229[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,738]DEBUG 31229[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,738]DEBUG 31229[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,738]DEBUG 31229[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,738]DEBUG 31229[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,738]DEBUG 31229[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,738]DEBUG 31229[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,738]DEBUG 31229[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,738]DEBUG 31229[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,739]DEBUG 31230[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,739]DEBUG 31230[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,739]DEBUG 31230[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,739]DEBUG 31230[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,739]DEBUG 31230[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,739]DEBUG 31230[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,739]DEBUG 31230[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,739]DEBUG 31230[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,739]DEBUG 31230[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,739]DEBUG 31230[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,739]DEBUG 31230[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,740]DEBUG 31231[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,740]DEBUG 31231[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,740]DEBUG 31231[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3ea1d9f0]
[2015-12-30 10:28:03,740]DEBUG 31231[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,740]DEBUG 31231[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3ea1d9f0, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,743]DEBUG 31234[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,744]DEBUG 31235[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testcontainsProductByDescription]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,744]DEBUG 31235[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640837
[2015-12-30 10:28:03,749]DEBUG 31240[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@62580334] for Hibernate transaction
[2015-12-30 10:28:03,749]DEBUG 31240[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@62580334]
[2015-12-30 10:28:03,749]DEBUG 31240[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,749]DEBUG 31240[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,749]DEBUG 31240[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,750]DEBUG 31241[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3ea1d9f0, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,750] INFO 31241[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,750]DEBUG 31241[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,750]DEBUG 31241[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,751]DEBUG 31242[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[91]]
[2015-12-30 10:28:03,751]DEBUG 31242[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,752]DEBUG 31243[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 91, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,752]DEBUG 31243[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,752]DEBUG 31243[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,753]DEBUG 31244[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[92]]
[2015-12-30 10:28:03,753]DEBUG 31244[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,753]DEBUG 31244[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 92, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,753]DEBUG 31244[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,754]DEBUG 31245[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,755]DEBUG 31246[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[93]]
[2015-12-30 10:28:03,755]DEBUG 31246[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,755]DEBUG 31246[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 93, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,755]DEBUG 31246[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,755]DEBUG 31246[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,756]DEBUG 31247[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,756]DEBUG 31247[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,756]DEBUG 31247[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,756]DEBUG 31247[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=91, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,756]DEBUG 31247[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=92, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,756]DEBUG 31247[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=93, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,756]DEBUG 31247[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 10:28:03,756]DEBUG 31247[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,757]DEBUG 31248[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,757]DEBUG 31248[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,757]DEBUG 31248[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,757]DEBUG 31248[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,757]DEBUG 31248[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,757]DEBUG 31248[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,762]DEBUG 31253[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,763]DEBUG 31254[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,763]DEBUG 31254[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,763]DEBUG 31254[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,763]DEBUG 31254[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,764]DEBUG 31255[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,764]DEBUG 31255[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,764]DEBUG 31255[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,766]DEBUG 31257[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,766]DEBUG 31257[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,766]DEBUG 31257[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2015-12-30 10:28:03,769]DEBUG 31260[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,769]DEBUG 31260[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#91]
[2015-12-30 10:28:03,769]DEBUG 31260[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#92]
[2015-12-30 10:28:03,769]DEBUG 31260[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#93]
[2015-12-30 10:28:03,769]DEBUG 31260[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,769]DEBUG 31260[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,770]DEBUG 31261[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,770]DEBUG 31261[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,770]DEBUG 31261[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,770]DEBUG 31261[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,770]DEBUG 31261[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,775]DEBUG 31266[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,775]DEBUG 31266[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=91, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,775]DEBUG 31266[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=92, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,775]DEBUG 31266[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=93, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,775]DEBUG 31266[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,775]DEBUG 31266[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2015-12-30 10:28:03,777]DEBUG 31268[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,777]DEBUG 31268[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#91]
[2015-12-30 10:28:03,777]DEBUG 31268[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,777]DEBUG 31268[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,777]DEBUG 31268[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,778]DEBUG 31269[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,778]DEBUG 31269[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,778]DEBUG 31269[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,778]DEBUG 31269[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,780]DEBUG 31271[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,781]DEBUG 31272[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=91, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,781]DEBUG 31272[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=92, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,781]DEBUG 31272[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=93, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,781]DEBUG 31272[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,781]DEBUG 31272[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2015-12-30 10:28:03,784]DEBUG 31275[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,785]DEBUG 31276[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#92]
[2015-12-30 10:28:03,785]DEBUG 31276[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,785]DEBUG 31276[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,785]DEBUG 31276[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,786]DEBUG 31277[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,786]DEBUG 31277[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,786]DEBUG 31277[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,786]DEBUG 31277[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,786]DEBUG 31277[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,786]DEBUG 31277[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=91, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,787]DEBUG 31278[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=92, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,787]DEBUG 31278[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=93, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,787]DEBUG 31278[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,787]DEBUG 31278[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2015-12-30 10:28:03,788]DEBUG 31279[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,788]DEBUG 31279[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#93]
[2015-12-30 10:28:03,789]DEBUG 31280[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,789]DEBUG 31280[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,789]DEBUG 31280[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,789]DEBUG 31280[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,789]DEBUG 31280[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,789]DEBUG 31280[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,789]DEBUG 31280[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,789]DEBUG 31280[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,790]DEBUG 31281[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=91, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,790]DEBUG 31281[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=92, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,790]DEBUG 31281[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=93, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,790]DEBUG 31281[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,790]DEBUG 31281[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2015-12-30 10:28:03,793]DEBUG 31284[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,794]DEBUG 31285[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,794]DEBUG 31285[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,794]DEBUG 31285[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,794]DEBUG 31285[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,794]DEBUG 31285[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,794]DEBUG 31285[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,794]DEBUG 31285[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,794]DEBUG 31285[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,795]DEBUG 31286[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=91, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,795]DEBUG 31286[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=92, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,795]DEBUG 31286[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=93, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,795]DEBUG 31286[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,795]DEBUG 31286[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,796]DEBUG 31287[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,796]DEBUG 31287[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3ea1d9f0, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,796]DEBUG 31287[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,797]DEBUG 31288[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@62580334]
[2015-12-30 10:28:03,797]DEBUG 31288[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,798]DEBUG 31289[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,798]DEBUG 31289[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,798]DEBUG 31289[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@62580334] after transaction
[2015-12-30 10:28:03,798]DEBUG 31289[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,798]DEBUG 31289[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,798]DEBUG 31289[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,798] INFO 31289[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3ea1d9f0, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,799]DEBUG 31290[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3ea1d9f0, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,799]DEBUG 31290[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,799]DEBUG 31290[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,800]DEBUG 31291[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@13203a4a, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,800]DEBUG 31291[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,800]DEBUG 31291[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,800]DEBUG 31291[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,800]DEBUG 31291[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,800]DEBUG 31291[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,800]DEBUG 31291[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,800]DEBUG 31291[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,800]DEBUG 31291[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,800]DEBUG 31291[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,801]DEBUG 31292[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,801]DEBUG 31292[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,801]DEBUG 31292[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,801]DEBUG 31292[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,801]DEBUG 31292[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,806]DEBUG 31297[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,806]DEBUG 31297[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,806]DEBUG 31297[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,806]DEBUG 31297[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,806]DEBUG 31297[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,806]DEBUG 31297[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,807]DEBUG 31298[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,807]DEBUG 31298[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,807]DEBUG 31298[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@13203a4a]
[2015-12-30 10:28:03,807]DEBUG 31298[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,807]DEBUG 31298[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@13203a4a, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,807]DEBUG 31298[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,808]DEBUG 31299[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testnumberOfProductByDescription]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,808]DEBUG 31299[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640838
[2015-12-30 10:28:03,808]DEBUG 31299[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@39472b5c] for Hibernate transaction
[2015-12-30 10:28:03,808]DEBUG 31299[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@39472b5c]
[2015-12-30 10:28:03,812]DEBUG 31303[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,812]DEBUG 31303[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,812]DEBUG 31303[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,812]DEBUG 31303[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@13203a4a, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,812] INFO 31303[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,812]DEBUG 31303[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,812]DEBUG 31303[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,814]DEBUG 31305[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[94]]
[2015-12-30 10:28:03,814]DEBUG 31305[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,814]DEBUG 31305[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 94, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,814]DEBUG 31305[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,814]DEBUG 31305[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,815]DEBUG 31306[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[95]]
[2015-12-30 10:28:03,816]DEBUG 31307[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,816]DEBUG 31307[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 95, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,816]DEBUG 31307[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,816]DEBUG 31307[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,817]DEBUG 31308[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[96]]
[2015-12-30 10:28:03,817]DEBUG 31308[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,817]DEBUG 31308[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 96, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,818]DEBUG 31309[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,818]DEBUG 31309[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,818]DEBUG 31309[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,818]DEBUG 31309[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,818]DEBUG 31309[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,818]DEBUG 31309[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=96, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,819]DEBUG 31310[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=94, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,819]DEBUG 31310[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=95, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,819]DEBUG 31310[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 10:28:03,819]DEBUG 31310[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,819]DEBUG 31310[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,819]DEBUG 31310[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,819]DEBUG 31310[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,820]DEBUG 31311[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,820]DEBUG 31311[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,820]DEBUG 31311[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,824]DEBUG 31315[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,824]DEBUG 31315[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,824]DEBUG 31315[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,824]DEBUG 31315[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,824]DEBUG 31315[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,825]DEBUG 31316[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,825]DEBUG 31316[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,825]DEBUG 31316[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,827]DEBUG 31318[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,827]DEBUG 31318[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,827]DEBUG 31318[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2015-12-30 10:28:03,829]DEBUG 31320[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,829]DEBUG 31320[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#94]
[2015-12-30 10:28:03,829]DEBUG 31320[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,829]DEBUG 31320[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,829]DEBUG 31320[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,830]DEBUG 31321[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,830]DEBUG 31321[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,830]DEBUG 31321[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,830]DEBUG 31321[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,830]DEBUG 31321[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,830]DEBUG 31321[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=96, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,830]DEBUG 31321[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=94, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,830]DEBUG 31321[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=95, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,832]DEBUG 31323[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,832]DEBUG 31323[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2015-12-30 10:28:03,833]DEBUG 31324[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,833]DEBUG 31324[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,833]DEBUG 31324[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,834]DEBUG 31325[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,834]DEBUG 31325[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,834]DEBUG 31325[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,834]DEBUG 31325[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,834]DEBUG 31325[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,834]DEBUG 31325[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,834]DEBUG 31325[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=96, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,834]DEBUG 31325[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=94, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,835]DEBUG 31326[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=95, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,835]DEBUG 31326[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,835]DEBUG 31326[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,839]DEBUG 31330[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,839]DEBUG 31330[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@13203a4a, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,839]DEBUG 31330[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,839]DEBUG 31330[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@39472b5c]
[2015-12-30 10:28:03,839]DEBUG 31330[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,840]DEBUG 31331[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,840]DEBUG 31331[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,840]DEBUG 31331[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@39472b5c] after transaction
[2015-12-30 10:28:03,840]DEBUG 31331[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,840]DEBUG 31331[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,841]DEBUG 31332[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,841] INFO 31332[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@13203a4a, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,841]DEBUG 31332[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@13203a4a, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,842]DEBUG 31333[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,842]DEBUG 31333[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,842]DEBUG 31333[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3ba3441d, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,842]DEBUG 31333[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,842]DEBUG 31333[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,842]DEBUG 31333[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,842]DEBUG 31333[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,843]DEBUG 31334[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,843]DEBUG 31334[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,843]DEBUG 31334[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,843]DEBUG 31334[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,843]DEBUG 31334[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,843]DEBUG 31334[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,843]DEBUG 31334[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,843]DEBUG 31334[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,843]DEBUG 31334[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,843]DEBUG 31334[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,843]DEBUG 31334[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,844]DEBUG 31335[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,844]DEBUG 31335[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,844]DEBUG 31335[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,844]DEBUG 31335[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,844]DEBUG 31335[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,844]DEBUG 31335[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,844]DEBUG 31335[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,844]DEBUG 31335[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3ba3441d]
[2015-12-30 10:28:03,848]DEBUG 31339[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPrice' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,848]DEBUG 31339[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3ba3441d, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,848]DEBUG 31339[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,849]DEBUG 31340[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByPrice]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,849]DEBUG 31340[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640838
[2015-12-30 10:28:03,849]DEBUG 31340[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@288a2593] for Hibernate transaction
[2015-12-30 10:28:03,849]DEBUG 31340[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@288a2593]
[2015-12-30 10:28:03,849]DEBUG 31340[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,849]DEBUG 31340[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,849]DEBUG 31340[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,849]DEBUG 31340[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3ba3441d, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,849] INFO 31340[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,850]DEBUG 31341[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,850]DEBUG 31341[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,853]DEBUG 31344[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[97]]
[2015-12-30 10:28:03,853]DEBUG 31344[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,853]DEBUG 31344[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 97, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,853]DEBUG 31344[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,853]DEBUG 31344[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,854]DEBUG 31345[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[98]]
[2015-12-30 10:28:03,854]DEBUG 31345[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,855]DEBUG 31346[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 98, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,855]DEBUG 31346[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,855]DEBUG 31346[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,856]DEBUG 31347[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[99]]
[2015-12-30 10:28:03,856]DEBUG 31347[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,856]DEBUG 31347[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 99, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,858]DEBUG 31349[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,858]DEBUG 31349[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,858]DEBUG 31349[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,858]DEBUG 31349[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,858]DEBUG 31349[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,858]DEBUG 31349[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=98, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,859]DEBUG 31350[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=99, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,859]DEBUG 31350[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=97, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,859]DEBUG 31350[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 10:28:03,859]DEBUG 31350[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,859]DEBUG 31350[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,859]DEBUG 31350[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,859]DEBUG 31350[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,860]DEBUG 31351[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,860]DEBUG 31351[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,860]DEBUG 31351[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,864]DEBUG 31355[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,864]DEBUG 31355[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,864]DEBUG 31355[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,864]DEBUG 31355[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,864]DEBUG 31355[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,864]DEBUG 31355[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,865]DEBUG 31356[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,865]DEBUG 31356[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,867]DEBUG 31358[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,867]DEBUG 31358[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,867]DEBUG 31358[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice=? and this_.IsProductActive=?
[2015-12-30 10:28:03,869]DEBUG 31360[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,869]DEBUG 31360[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#98]
[2015-12-30 10:28:03,869]DEBUG 31360[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,869]DEBUG 31360[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,869]DEBUG 31360[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,869]DEBUG 31360[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,869]DEBUG 31360[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,870]DEBUG 31361[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,870]DEBUG 31361[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,870]DEBUG 31361[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,870]DEBUG 31361[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=98, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,870]DEBUG 31361[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=99, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,870]DEBUG 31361[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=97, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,870]DEBUG 31361[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,870]DEBUG 31361[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,874]DEBUG 31365[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,874]DEBUG 31365[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3ba3441d, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,874]DEBUG 31365[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,874]DEBUG 31365[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@288a2593]
[2015-12-30 10:28:03,874]DEBUG 31365[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,875]DEBUG 31366[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,875]DEBUG 31366[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,875]DEBUG 31366[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@288a2593] after transaction
[2015-12-30 10:28:03,875]DEBUG 31366[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,875]DEBUG 31366[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,876]DEBUG 31367[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,876] INFO 31367[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3ba3441d, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,876]DEBUG 31367[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3ba3441d, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,877]DEBUG 31368[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,877]DEBUG 31368[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,877]DEBUG 31368[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5e00ecff, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,877]DEBUG 31368[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,877]DEBUG 31368[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,877]DEBUG 31368[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,877]DEBUG 31368[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,878]DEBUG 31369[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,878]DEBUG 31369[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,878]DEBUG 31369[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,878]DEBUG 31369[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,878]DEBUG 31369[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,878]DEBUG 31369[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,878]DEBUG 31369[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,878]DEBUG 31369[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,878]DEBUG 31369[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,880]DEBUG 31371[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,880]DEBUG 31371[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,880]DEBUG 31371[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,880]DEBUG 31371[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,880]DEBUG 31371[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,880]DEBUG 31371[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,880]DEBUG 31371[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,880]DEBUG 31371[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,881]DEBUG 31372[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,885]DEBUG 31376[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5e00ecff]
[2015-12-30 10:28:03,885]DEBUG 31376[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromTo' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,885]DEBUG 31376[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5e00ecff, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,885]DEBUG 31376[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,887]DEBUG 31378[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByPriceFromTo]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,887]DEBUG 31378[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640838
[2015-12-30 10:28:03,887]DEBUG 31378[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@c41b2ad] for Hibernate transaction
[2015-12-30 10:28:03,887]DEBUG 31378[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@c41b2ad]
[2015-12-30 10:28:03,887]DEBUG 31378[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,887]DEBUG 31378[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,888]DEBUG 31379[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,888]DEBUG 31379[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5e00ecff, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,888] INFO 31379[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (12): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,888]DEBUG 31379[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,888]DEBUG 31379[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,891]DEBUG 31382[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[100]]
[2015-12-30 10:28:03,891]DEBUG 31382[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,891]DEBUG 31382[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 100, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,891]DEBUG 31382[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,891]DEBUG 31382[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,892]DEBUG 31383[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[101]]
[2015-12-30 10:28:03,893]DEBUG 31384[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,893]DEBUG 31384[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 101, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,893]DEBUG 31384[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,893]DEBUG 31384[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,894]DEBUG 31385[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[102]]
[2015-12-30 10:28:03,894]DEBUG 31385[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,894]DEBUG 31385[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 102, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,895]DEBUG 31386[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,895]DEBUG 31386[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,896]DEBUG 31387[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,896]DEBUG 31387[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,896]DEBUG 31387[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,896]DEBUG 31387[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=102, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,896]DEBUG 31387[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=100, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,896]DEBUG 31387[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=101, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,896]DEBUG 31387[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 10:28:03,897]DEBUG 31388[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,897]DEBUG 31388[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,897]DEBUG 31388[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,897]DEBUG 31388[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,897]DEBUG 31388[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,897]DEBUG 31388[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,897]DEBUG 31388[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,902]DEBUG 31393[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,902]DEBUG 31393[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,903]DEBUG 31394[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,903]DEBUG 31394[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,903]DEBUG 31394[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,903]DEBUG 31394[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,903]DEBUG 31394[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,903]DEBUG 31394[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,905]DEBUG 31396[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,906]DEBUG 31397[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,906]DEBUG 31397[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice between ? and ? and this_.IsProductActive=?
[2015-12-30 10:28:03,907]DEBUG 31398[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,907]DEBUG 31398[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#100]
[2015-12-30 10:28:03,908]DEBUG 31399[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,908]DEBUG 31399[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,908]DEBUG 31399[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,908]DEBUG 31399[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,908]DEBUG 31399[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,908]DEBUG 31399[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,908]DEBUG 31399[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,908]DEBUG 31399[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,909]DEBUG 31400[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=102, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,909]DEBUG 31400[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=100, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,909]DEBUG 31400[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=101, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,909]DEBUG 31400[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,909]DEBUG 31400[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,911]DEBUG 31402[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,912]DEBUG 31403[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5e00ecff, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,912]DEBUG 31403[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,912]DEBUG 31403[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@c41b2ad]
[2015-12-30 10:28:03,912]DEBUG 31403[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,914]DEBUG 31405[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,915]DEBUG 31406[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,918]DEBUG 31409[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@c41b2ad] after transaction
[2015-12-30 10:28:03,918]DEBUG 31409[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,918]DEBUG 31409[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,918]DEBUG 31409[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,918] INFO 31409[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5e00ecff, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,919]DEBUG 31410[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5e00ecff, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,919]DEBUG 31410[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,919]DEBUG 31410[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,922]DEBUG 31413[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@620687fe, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,922]DEBUG 31413[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,922]DEBUG 31413[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,922]DEBUG 31413[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,922]DEBUG 31413[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,922]DEBUG 31413[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,922]DEBUG 31413[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,922]DEBUG 31413[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,922]DEBUG 31413[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,922]DEBUG 31413[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,923]DEBUG 31414[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,923]DEBUG 31414[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,923]DEBUG 31414[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,923]DEBUG 31414[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,923]DEBUG 31414[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,923]DEBUG 31414[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,923]DEBUG 31414[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,923]DEBUG 31414[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,923]DEBUG 31414[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,923]DEBUG 31414[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,924]DEBUG 31415[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,924]DEBUG 31415[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,924]DEBUG 31415[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,925]DEBUG 31416[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@620687fe]
[2015-12-30 10:28:03,925]DEBUG 31416[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetRowCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,925]DEBUG 31416[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@620687fe, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,925]DEBUG 31416[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,926]DEBUG 31417[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetRowCount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,926]DEBUG 31417[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640839
[2015-12-30 10:28:03,926]DEBUG 31417[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3b3891e0] for Hibernate transaction
[2015-12-30 10:28:03,926]DEBUG 31417[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3b3891e0]
[2015-12-30 10:28:03,926]DEBUG 31417[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,926]DEBUG 31417[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,926]DEBUG 31417[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,926]DEBUG 31417[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@620687fe, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,927] INFO 31418[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (13): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,927]DEBUG 31418[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,927]DEBUG 31418[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,932]DEBUG 31423[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[103]]
[2015-12-30 10:28:03,932]DEBUG 31423[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,932]DEBUG 31423[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 103, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,932]DEBUG 31423[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,932]DEBUG 31423[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,933]DEBUG 31424[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[104]]
[2015-12-30 10:28:03,934]DEBUG 31425[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,934]DEBUG 31425[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 104, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,934]DEBUG 31425[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,934]DEBUG 31425[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,935]DEBUG 31426[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[105]]
[2015-12-30 10:28:03,935]DEBUG 31426[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,935]DEBUG 31426[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 105, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,936]DEBUG 31427[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,936]DEBUG 31427[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,936]DEBUG 31427[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,936]DEBUG 31427[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,936]DEBUG 31427[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,936]DEBUG 31427[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=105, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,937]DEBUG 31428[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=104, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,937]DEBUG 31428[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=103, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,937]DEBUG 31428[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 10:28:03,937]DEBUG 31428[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,937]DEBUG 31428[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,937]DEBUG 31428[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,937]DEBUG 31428[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,938]DEBUG 31429[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,938]DEBUG 31429[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,938]DEBUG 31429[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,942]DEBUG 31433[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,942]DEBUG 31433[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,942]DEBUG 31433[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,942]DEBUG 31433[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,943]DEBUG 31434[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,944]DEBUG 31435[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,944]DEBUG 31435[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:03,944]DEBUG 31435[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:03,946]DEBUG 31437[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,946]DEBUG 31437[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,947]DEBUG 31438[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select count(*) as y0_ from Products this_ where this_.IsProductActive=?
[2015-12-30 10:28:03,950]DEBUG 31441[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:03,950]DEBUG 31441[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: 
[2015-12-30 10:28:03,950]DEBUG 31441[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:03,950]DEBUG 31441[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,950]DEBUG 31441[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:03,950]DEBUG 31441[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,951]DEBUG 31442[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,951]DEBUG 31442[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,951]DEBUG 31442[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,951]DEBUG 31442[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,951]DEBUG 31442[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=105, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,951]DEBUG 31442[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=104, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,951]DEBUG 31442[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=103, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,951]DEBUG 31442[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,951]DEBUG 31442[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:03,957]DEBUG 31448[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,957]DEBUG 31448[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@620687fe, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,957]DEBUG 31448[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:03,957]DEBUG 31448[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3b3891e0]
[2015-12-30 10:28:03,957]DEBUG 31448[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:03,959]DEBUG 31450[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:03,960]DEBUG 31451[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,960]DEBUG 31451[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3b3891e0] after transaction
[2015-12-30 10:28:03,960]DEBUG 31451[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:03,960]DEBUG 31451[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:03,960]DEBUG 31451[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:03,960] INFO 31451[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@620687fe, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,961]DEBUG 31452[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@620687fe, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:03,963]DEBUG 31454[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,963]DEBUG 31454[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:03,963]DEBUG 31454[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6d661444, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:03,963]DEBUG 31454[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:03,963]DEBUG 31454[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:03,964]DEBUG 31455[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:03,964]DEBUG 31455[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:03,964]DEBUG 31455[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:03,964]DEBUG 31455[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:03,964]DEBUG 31455[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:03,964]DEBUG 31455[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:03,964]DEBUG 31455[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:03,964]DEBUG 31455[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:03,964]DEBUG 31455[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:03,969]DEBUG 31460[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:03,969]DEBUG 31460[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:03,970]DEBUG 31461[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:03,970]DEBUG 31461[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:03,970]DEBUG 31461[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:03,970]DEBUG 31461[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:03,970]DEBUG 31461[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:03,970]DEBUG 31461[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:03,972]DEBUG 31463[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:03,972]DEBUG 31463[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:03,973]DEBUG 31464[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:03,973]DEBUG 31464[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6d661444]
[2015-12-30 10:28:03,978]DEBUG 31469[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,978]DEBUG 31469[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6d661444, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,978]DEBUG 31469[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:03,979]DEBUG 31470[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:03,979]DEBUG 31470[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640839
[2015-12-30 10:28:03,979]DEBUG 31470[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7cd7310d] for Hibernate transaction
[2015-12-30 10:28:03,979]DEBUG 31470[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7cd7310d]
[2015-12-30 10:28:03,979]DEBUG 31470[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:03,979]DEBUG 31470[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:03,980]DEBUG 31471[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:03,980]DEBUG 31471[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6d661444, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:03,980] INFO 31471[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (14): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:03,980]DEBUG 31471[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,980]DEBUG 31471[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,985]DEBUG 31476[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[106]]
[2015-12-30 10:28:03,985]DEBUG 31476[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,985]DEBUG 31476[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 106, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,985]DEBUG 31476[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,985]DEBUG 31476[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,989]DEBUG 31480[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[107]]
[2015-12-30 10:28:03,989]DEBUG 31480[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,989]DEBUG 31480[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 107, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,990]DEBUG 31481[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,990]DEBUG 31481[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:03,993]DEBUG 31484[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[108]]
[2015-12-30 10:28:03,993]DEBUG 31484[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:03,993]DEBUG 31484[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 108, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:03,993]DEBUG 31484[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:03,993]DEBUG 31484[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:03,994]DEBUG 31485[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 10:28:03,994]DEBUG 31485[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:03,994]DEBUG 31485[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:03,994]DEBUG 31485[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=107, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:03,994]DEBUG 31485[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=106, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:03,994]DEBUG 31485[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=108, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:03,994]DEBUG 31485[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 10:28:03,994]DEBUG 31485[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:03,998]DEBUG 31489[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,999]DEBUG 31490[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,999]DEBUG 31490[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,999]DEBUG 31490[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:03,999]DEBUG 31490[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:03,999]DEBUG 31490[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:04,001]DEBUG 31492[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,002]DEBUG 31493[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,002]DEBUG 31493[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:04,002]DEBUG 31493[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:04,002]DEBUG 31493[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:04,002]DEBUG 31493[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:04,002]DEBUG 31493[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:04,002]DEBUG 31493[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:04,008]DEBUG 31499[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,008]DEBUG 31499[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,008]DEBUG 31499[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2015-12-30 10:28:04,009]DEBUG 31500[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:04,010]DEBUG 31501[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#106]
[2015-12-30 10:28:04,010]DEBUG 31501[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#107]
[2015-12-30 10:28:04,010]DEBUG 31501[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#108]
[2015-12-30 10:28:04,010]DEBUG 31501[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:04,010]DEBUG 31501[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,010]DEBUG 31501[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:04,011]DEBUG 31502[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:04,011]DEBUG 31502[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:04,011]DEBUG 31502[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:04,011]DEBUG 31502[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:04,011]DEBUG 31502[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:04,011]DEBUG 31502[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=107, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:04,011]DEBUG 31502[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=106, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:04,011]DEBUG 31502[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=108, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:04,011]DEBUG 31502[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,017]DEBUG 31508[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:04,018]DEBUG 31509[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,018]DEBUG 31509[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6d661444, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:04,018]DEBUG 31509[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:04,018]DEBUG 31509[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7cd7310d]
[2015-12-30 10:28:04,019]DEBUG 31510[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:04,020]DEBUG 31511[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:04,020]DEBUG 31511[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:04,020]DEBUG 31511[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7cd7310d] after transaction
[2015-12-30 10:28:04,020]DEBUG 31511[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:04,020]DEBUG 31511[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:04,020]DEBUG 31511[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:04,020] INFO 31511[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6d661444, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:04,021]DEBUG 31512[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6d661444, testMethod = testfindByID@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:04,021]DEBUG 31512[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:04,021]DEBUG 31512[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:04,024]DEBUG 31515[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59d95947, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:04,025]DEBUG 31516[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:04,026]DEBUG 31517[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:04,026]DEBUG 31517[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:04,026]DEBUG 31517[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:04,026]DEBUG 31517[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:04,026]DEBUG 31517[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:04,026]DEBUG 31517[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:04,026]DEBUG 31517[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:04,026]DEBUG 31517[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:04,026]DEBUG 31517[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:04,026]DEBUG 31517[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:04,027]DEBUG 31518[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:04,027]DEBUG 31518[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:04,027]DEBUG 31518[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:04,028]DEBUG 31519[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:04,028]DEBUG 31519[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:04,028]DEBUG 31519[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:04,028]DEBUG 31519[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:04,028]DEBUG 31519[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:04,028]DEBUG 31519[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:04,028]DEBUG 31519[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:04,035]DEBUG 31526[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:04,035]DEBUG 31526[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59d95947]
[2015-12-30 10:28:04,035]DEBUG 31526[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByNameSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:04,035]DEBUG 31526[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59d95947, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:04,035]DEBUG 31526[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:04,036]DEBUG 31527[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByNameSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:04,036]DEBUG 31527[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640840
[2015-12-30 10:28:04,036]DEBUG 31527[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1adf6bb8] for Hibernate transaction
[2015-12-30 10:28:04,036]DEBUG 31527[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1adf6bb8]
[2015-12-30 10:28:04,036]DEBUG 31527[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:04,041]DEBUG 31532[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:04,041]DEBUG 31532[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:04,041]DEBUG 31532[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59d95947, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:04,041] INFO 31532[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (15): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:04,041]DEBUG 31532[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,041]DEBUG 31532[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:04,043]DEBUG 31534[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[109]]
[2015-12-30 10:28:04,043]DEBUG 31534[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,043]DEBUG 31534[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 109, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:04,043]DEBUG 31534[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,043]DEBUG 31534[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:04,044]DEBUG 31535[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[110]]
[2015-12-30 10:28:04,044]DEBUG 31535[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,045]DEBUG 31536[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 110, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:04,045]DEBUG 31536[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,045]DEBUG 31536[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:04,046]DEBUG 31537[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[111]]
[2015-12-30 10:28:04,046]DEBUG 31537[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,046]DEBUG 31537[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 111, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:04,047]DEBUG 31538[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:04,047]DEBUG 31538[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:04,047]DEBUG 31538[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 10:28:04,047]DEBUG 31538[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:04,047]DEBUG 31538[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:04,047]DEBUG 31538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=111, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:04,047]DEBUG 31538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=110, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:04,048]DEBUG 31539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=109, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:04,048]DEBUG 31539[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 10:28:04,048]DEBUG 31539[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,048]DEBUG 31539[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:04,048]DEBUG 31539[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:04,048]DEBUG 31539[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:04,048]DEBUG 31539[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:04,055]DEBUG 31546[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:04,055]DEBUG 31546[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:04,057]DEBUG 31548[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,057]DEBUG 31548[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,057]DEBUG 31548[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:04,057]DEBUG 31548[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:04,057]DEBUG 31548[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:04,058]DEBUG 31549[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:04,058]DEBUG 31549[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:04,058]DEBUG 31549[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:04,060]DEBUG 31551[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,060]DEBUG 31551[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,060]DEBUG 31551[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=? order by this_.ProductName asc
[2015-12-30 10:28:04,063]DEBUG 31554[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:04,063]DEBUG 31554[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#109]
[2015-12-30 10:28:04,063]DEBUG 31554[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#110]
[2015-12-30 10:28:04,063]DEBUG 31554[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#111]
[2015-12-30 10:28:04,063]DEBUG 31554[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:04,063]DEBUG 31554[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,063]DEBUG 31554[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:04,064]DEBUG 31555[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:04,064]DEBUG 31555[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:04,064]DEBUG 31555[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:04,064]DEBUG 31555[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:04,064]DEBUG 31555[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:04,064]DEBUG 31555[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=111, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:04,070]DEBUG 31561[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=110, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:04,070]DEBUG 31561[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=109, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:04,070]DEBUG 31561[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,070]DEBUG 31561[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=? order by this_.ProductName desc
[2015-12-30 10:28:04,073]DEBUG 31564[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:04,073]DEBUG 31564[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#111]
[2015-12-30 10:28:04,073]DEBUG 31564[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#110]
[2015-12-30 10:28:04,073]DEBUG 31564[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#109]
[2015-12-30 10:28:04,073]DEBUG 31564[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:04,073]DEBUG 31564[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,073]DEBUG 31564[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:04,074]DEBUG 31565[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:04,074]DEBUG 31565[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:04,074]DEBUG 31565[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:04,074]DEBUG 31565[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:04,074]DEBUG 31565[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:04,074]DEBUG 31565[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=111, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:04,074]DEBUG 31565[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=110, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:04,074]DEBUG 31565[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=109, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:04,079]DEBUG 31570[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,079]DEBUG 31570[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:04,080]DEBUG 31571[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,080]DEBUG 31571[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59d95947, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:04,080]DEBUG 31571[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:04,080]DEBUG 31571[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1adf6bb8]
[2015-12-30 10:28:04,080]DEBUG 31571[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:04,081]DEBUG 31572[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:04,081]DEBUG 31572[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:04,082]DEBUG 31573[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1adf6bb8] after transaction
[2015-12-30 10:28:04,082]DEBUG 31573[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:04,082]DEBUG 31573[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:04,082]DEBUG 31573[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:04,082] INFO 31573[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59d95947, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:04,083]DEBUG 31574[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59d95947, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:04,087]DEBUG 31578[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:04,087]DEBUG 31578[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:04,087]DEBUG 31578[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1042ce9b, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:04,088]DEBUG 31579[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:04,088]DEBUG 31579[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:04,088]DEBUG 31579[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:04,088]DEBUG 31579[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:04,088]DEBUG 31579[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:04,088]DEBUG 31579[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:04,088]DEBUG 31579[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:04,088]DEBUG 31579[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:04,088]DEBUG 31579[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:04,088]DEBUG 31579[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:04,088]DEBUG 31579[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:04,089]DEBUG 31580[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:04,089]DEBUG 31580[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:04,089]DEBUG 31580[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:04,089]DEBUG 31580[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:04,089]DEBUG 31580[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:04,089]DEBUG 31580[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:04,089]DEBUG 31580[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:04,089]DEBUG 31580[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:04,089]DEBUG 31580[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:04,089]DEBUG 31580[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:04,094]DEBUG 31585[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:04,094]DEBUG 31585[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1042ce9b]
[2015-12-30 10:28:04,094]DEBUG 31585[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescriptionSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:04,095]DEBUG 31586[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1042ce9b, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:04,095]DEBUG 31586[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:04,095]DEBUG 31586[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByDescriptionSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:04,101]DEBUG 31592[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640841
[2015-12-30 10:28:04,101]DEBUG 31592[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2831bb22] for Hibernate transaction
[2015-12-30 10:28:04,101]DEBUG 31592[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2831bb22]
[2015-12-30 10:28:04,101]DEBUG 31592[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:04,101]DEBUG 31592[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:04,101]DEBUG 31592[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:04,101]DEBUG 31592[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1042ce9b, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:04,101] INFO 31592[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (16): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:04,102]DEBUG 31593[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,102]DEBUG 31593[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:04,108]DEBUG 31599[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[112]]
[2015-12-30 10:28:04,108]DEBUG 31599[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,108]DEBUG 31599[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 112, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:04,108]DEBUG 31599[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,108]DEBUG 31599[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:04,111]DEBUG 31602[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[113]]
[2015-12-30 10:28:04,111]DEBUG 31602[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,111]DEBUG 31602[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 113, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:04,111]DEBUG 31602[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,112]DEBUG 31603[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:04,116]DEBUG 31607[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[114]]
[2015-12-30 10:28:04,116]DEBUG 31607[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,116]DEBUG 31607[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 114, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:04,116]DEBUG 31607[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:04,117]DEBUG 31608[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:04,117]DEBUG 31608[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 10:28:04,117]DEBUG 31608[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:04,117]DEBUG 31608[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:04,117]DEBUG 31608[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=114, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:04,117]DEBUG 31608[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=113, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:04,117]DEBUG 31608[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=112, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:04,121]DEBUG 31612[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 10:28:04,122]DEBUG 31613[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,122]DEBUG 31613[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:04,122]DEBUG 31613[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:04,122]DEBUG 31613[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:04,122]DEBUG 31613[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:04,123]DEBUG 31614[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:04,123]DEBUG 31614[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:04,125]DEBUG 31616[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,125]DEBUG 31616[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,126]DEBUG 31617[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:04,126]DEBUG 31617[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:04,126]DEBUG 31617[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:04,126]DEBUG 31617[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:04,126]DEBUG 31617[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:04,126]DEBUG 31617[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:04,132]DEBUG 31623[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,132]DEBUG 31623[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,132]DEBUG 31623[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=? order by this_.ProductDescription asc
[2015-12-30 10:28:04,135]DEBUG 31626[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:04,135]DEBUG 31626[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#112]
[2015-12-30 10:28:04,135]DEBUG 31626[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#113]
[2015-12-30 10:28:04,135]DEBUG 31626[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#114]
[2015-12-30 10:28:04,135]DEBUG 31626[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:04,135]DEBUG 31626[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,136]DEBUG 31627[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:04,136]DEBUG 31627[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:04,136]DEBUG 31627[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:04,136]DEBUG 31627[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:04,136]DEBUG 31627[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:04,136]DEBUG 31627[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:04,137]DEBUG 31628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=114, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:04,137]DEBUG 31628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=113, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:04,137]DEBUG 31628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=112, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:04,142]DEBUG 31633[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,142]DEBUG 31633[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=? order by this_.ProductDescription desc
[2015-12-30 10:28:04,144]DEBUG 31635[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:04,144]DEBUG 31635[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#114]
[2015-12-30 10:28:04,144]DEBUG 31635[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#113]
[2015-12-30 10:28:04,144]DEBUG 31635[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#112]
[2015-12-30 10:28:04,144]DEBUG 31635[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:04,144]DEBUG 31635[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,144]DEBUG 31635[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:04,145]DEBUG 31636[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:04,145]DEBUG 31636[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:04,145]DEBUG 31636[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:04,145]DEBUG 31636[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:04,145]DEBUG 31636[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:04,149]DEBUG 31640[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=114, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:04,150]DEBUG 31641[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=113, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:04,150]DEBUG 31641[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=112, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:04,150]DEBUG 31641[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,150]DEBUG 31641[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:04,151]DEBUG 31642[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,152]DEBUG 31643[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1042ce9b, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:04,152]DEBUG 31643[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:04,152]DEBUG 31643[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2831bb22]
[2015-12-30 10:28:04,152]DEBUG 31643[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:04,154]DEBUG 31645[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:04,155]DEBUG 31646[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:04,155]DEBUG 31646[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2831bb22] after transaction
[2015-12-30 10:28:04,155]DEBUG 31646[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:04,155]DEBUG 31646[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:04,155]DEBUG 31646[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:04,155] INFO 31646[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1042ce9b, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:04,159]DEBUG 31650[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1042ce9b, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:04,160]DEBUG 31651[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:04,160]DEBUG 31651[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:04,160]DEBUG 31651[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6be738f3, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:04,160]DEBUG 31651[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:04,160]DEBUG 31651[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:04,160]DEBUG 31651[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:04,160]DEBUG 31651[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:04,161]DEBUG 31652[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:04,161]DEBUG 31652[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:04,161]DEBUG 31652[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:04,161]DEBUG 31652[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:04,161]DEBUG 31652[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:04,161]DEBUG 31652[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:04,161]DEBUG 31652[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:04,161]DEBUG 31652[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:04,161]DEBUG 31652[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:04,161]DEBUG 31652[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:04,161]DEBUG 31652[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:04,162]DEBUG 31653[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:04,162]DEBUG 31653[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:04,162]DEBUG 31653[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:04,162]DEBUG 31653[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:04,162]DEBUG 31653[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:04,162]DEBUG 31653[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:04,162]DEBUG 31653[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:04,162]DEBUG 31653[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6be738f3]
[2015-12-30 10:28:04,167]DEBUG 31658[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromToSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:04,167]DEBUG 31658[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6be738f3, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:04,167]DEBUG 31658[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:04,168]DEBUG 31659[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByPriceFromToSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:04,168]DEBUG 31659[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640841
[2015-12-30 10:28:04,168]DEBUG 31659[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@63e8f3e6] for Hibernate transaction
[2015-12-30 10:28:04,168]DEBUG 31659[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@63e8f3e6]
[2015-12-30 10:28:04,168]DEBUG 31659[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:04,168]DEBUG 31659[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:04,168]DEBUG 31659[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:04,172]DEBUG 31663[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6be738f3, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:04,173] INFO 31664[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (17): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:04,173]DEBUG 31664[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,173]DEBUG 31664[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:04,178]DEBUG 31669[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[115]]
[2015-12-30 10:28:04,178]DEBUG 31669[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,178]DEBUG 31669[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 115, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:04,178]DEBUG 31669[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,178]DEBUG 31669[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:04,179]DEBUG 31670[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[116]]
[2015-12-30 10:28:04,180]DEBUG 31671[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,180]DEBUG 31671[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 116, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:04,180]DEBUG 31671[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,180]DEBUG 31671[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:04,185]DEBUG 31676[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[117]]
[2015-12-30 10:28:04,185]DEBUG 31676[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,185]DEBUG 31676[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 117, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:04,185]DEBUG 31676[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:04,186]DEBUG 31677[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:04,186]DEBUG 31677[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 10:28:04,186]DEBUG 31677[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:04,186]DEBUG 31677[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:04,186]DEBUG 31677[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=115, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:04,186]DEBUG 31677[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=117, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:04,186]DEBUG 31677[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=116, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:04,186]DEBUG 31677[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 10:28:04,187]DEBUG 31678[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,187]DEBUG 31678[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:04,192]DEBUG 31683[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:04,192]DEBUG 31683[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:04,192]DEBUG 31683[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:04,192]DEBUG 31683[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:04,192]DEBUG 31683[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:04,194]DEBUG 31685[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,194]DEBUG 31685[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,195]DEBUG 31686[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:04,195]DEBUG 31686[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:04,195]DEBUG 31686[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:04,195]DEBUG 31686[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:04,195]DEBUG 31686[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:04,195]DEBUG 31686[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:04,198]DEBUG 31689[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,201]DEBUG 31692[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,201]DEBUG 31692[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice between ? and ? and this_.IsProductActive=? order by this_.ProductPrice asc
[2015-12-30 10:28:04,203]DEBUG 31694[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:04,203]DEBUG 31694[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#115]
[2015-12-30 10:28:04,203]DEBUG 31694[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#116]
[2015-12-30 10:28:04,203]DEBUG 31694[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#117]
[2015-12-30 10:28:04,203]DEBUG 31694[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:04,203]DEBUG 31694[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,204]DEBUG 31695[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:04,204]DEBUG 31695[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:04,204]DEBUG 31695[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:04,204]DEBUG 31695[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:04,204]DEBUG 31695[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:04,209]DEBUG 31700[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:04,209]DEBUG 31700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=115, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:04,209]DEBUG 31700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=117, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:04,209]DEBUG 31700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=116, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:04,209]DEBUG 31700[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,209]DEBUG 31700[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice between ? and ? and this_.IsProductActive=? order by this_.ProductPrice desc
[2015-12-30 10:28:04,212]DEBUG 31703[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 10:28:04,212]DEBUG 31703[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#117]
[2015-12-30 10:28:04,212]DEBUG 31703[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#116]
[2015-12-30 10:28:04,212]DEBUG 31703[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#115]
[2015-12-30 10:28:04,212]DEBUG 31703[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 10:28:04,212]DEBUG 31703[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,212]DEBUG 31703[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 10:28:04,213]DEBUG 31704[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:04,213]DEBUG 31704[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:04,213]DEBUG 31704[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 10:28:04,213]DEBUG 31704[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:04,213]DEBUG 31704[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:04,213]DEBUG 31704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=115, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:04,213]DEBUG 31704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=117, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:04,214]DEBUG 31705[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=116, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:04,214]DEBUG 31705[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,214]DEBUG 31705[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:04,219]DEBUG 31710[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,219]DEBUG 31710[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6be738f3, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:04,219]DEBUG 31710[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:04,219]DEBUG 31710[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@63e8f3e6]
[2015-12-30 10:28:04,219]DEBUG 31710[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:04,221]DEBUG 31712[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:04,221]DEBUG 31712[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:04,221]DEBUG 31712[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@63e8f3e6] after transaction
[2015-12-30 10:28:04,222]DEBUG 31713[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:04,222]DEBUG 31713[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:04,222]DEBUG 31713[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:04,222] INFO 31713[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6be738f3, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 10:28:04,225]DEBUG 31716[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6be738f3, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:04,229]DEBUG 31720[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:04,229]DEBUG 31720[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:04,232]DEBUG 31723[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@55aae7af, testMethod = [null], testException = [null]]].
[2015-12-30 10:28:04,232]DEBUG 31723[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 10:28:04,232]DEBUG 31723[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 10:28:04,232]DEBUG 31723[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 10:28:04,232]DEBUG 31723[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 10:28:04,232]DEBUG 31723[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 10:28:04,232]DEBUG 31723[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 10:28:04,232]DEBUG 31723[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 10:28:04,232]DEBUG 31723[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 10:28:04,233]DEBUG 31724[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 10:28:04,233]DEBUG 31724[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 10:28:04,233]DEBUG 31724[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 10:28:04,233]DEBUG 31724[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 10:28:04,233]DEBUG 31724[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 10:28:04,233]DEBUG 31724[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 10:28:04,233]DEBUG 31724[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 10:28:04,233]DEBUG 31724[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 10:28:04,233]DEBUG 31724[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 10:28:04,233]DEBUG 31724[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 10:28:04,235]DEBUG 31726[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 10:28:04,237]DEBUG 31728[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 10:28:04,237]DEBUG 31728[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 10:28:04,237]DEBUG 31728[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 10:28:04,238]DEBUG 31729[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@55aae7af]
[2015-12-30 10:28:04,238]DEBUG 31729[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:04,238]DEBUG 31729[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@55aae7af, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 10:28:04,238]DEBUG 31729[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 10:28:04,246]DEBUG 31737[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 10:28:04,246]DEBUG 31737[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514640842
[2015-12-30 10:28:04,246]DEBUG 31737[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6d8bfc76] for Hibernate transaction
[2015-12-30 10:28:04,246]DEBUG 31737[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6d8bfc76]
[2015-12-30 10:28:04,246]DEBUG 31737[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 10:28:04,250]DEBUG 31741[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 10:28:04,250]DEBUG 31741[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 10:28:04,250]DEBUG 31741[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@55aae7af, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 10:28:04,250] INFO 31741[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (18): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3f1084df]; rollback [true]
[2015-12-30 10:28:04,250]DEBUG 31741[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,250]DEBUG 31741[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:04,254]DEBUG 31745[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[118]]
[2015-12-30 10:28:04,254]DEBUG 31745[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,254]DEBUG 31745[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 118, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:04,254]DEBUG 31745[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,255]DEBUG 31746[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:04,257]DEBUG 31748[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[119]]
[2015-12-30 10:28:04,258]DEBUG 31749[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,258]DEBUG 31749[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 119, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:04,258]DEBUG 31749[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,258]DEBUG 31749[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 10:28:04,265]DEBUG 31756[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[120]]
[2015-12-30 10:28:04,266]DEBUG 31757[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,266]DEBUG 31757[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 120, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 10:28:04,266]DEBUG 31757[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 10:28:04,266]DEBUG 31757[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 10:28:04,266]DEBUG 31757[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 10:28:04,267]DEBUG 31758[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 10:28:04,267]DEBUG 31758[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 10:28:04,267]DEBUG 31758[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=120, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 10:28:04,267]DEBUG 31758[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=119, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 10:28:04,267]DEBUG 31758[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=118, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 10:28:04,267]DEBUG 31758[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 10:28:04,267]DEBUG 31758[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,267]DEBUG 31758[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:04,271]DEBUG 31762[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:04,272]DEBUG 31763[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:04,272]DEBUG 31763[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:04,272]DEBUG 31763[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 10:28:04,272]DEBUG 31763[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:04,274]DEBUG 31765[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,274]DEBUG 31765[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,275]DEBUG 31766[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:04,278]DEBUG 31769[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:04,278]DEBUG 31769[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:04,278]DEBUG 31769[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 10:28:04,278]DEBUG 31769[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 10:28:04,278]DEBUG 31769[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 10:28:04,284]DEBUG 31775[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,285]DEBUG 31776[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 10:28:04,285]DEBUG 31776[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 10:28:04,286]DEBUG 31777[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 10:28:04,286]DEBUG 31777[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@55aae7af, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 10:28:04,286]DEBUG 31777[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 10:28:04,286]DEBUG 31777[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6d8bfc76]
[2015-12-30 10:28:04,287]DEBUG 31778[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 10:28:04,288]DEBUG 31779[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 10:28:04,288]DEBUG 31779[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:04,288]DEBUG 31779[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6d8bfc76] after transaction
[2015-12-30 10:28:04,288]DEBUG 31779[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 10:28:04,288]DEBUG 31779[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 10:28:04,289]DEBUG 31780[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 10:28:04,289] INFO 31780[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@55aae7af, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 10:28:04,289]DEBUG 31780[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@55aae7af, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 10:28:04,291]DEBUG 31782[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@7f8e6e65 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2015-12-30 10:28:04,407] INFO 31898[Thread-0] - org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1002) - Closing org.springframework.context.support.GenericApplicationContext@157844d3: startup date [Wed Dec 30 10:27:36 EET 2015]; root of context hierarchy
[2015-12-30 10:28:04,412] INFO 31903[Thread-1] - org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1002) - Closing org.springframework.context.support.GenericApplicationContext@62ad0636: startup date [Wed Dec 30 10:27:54 EET 2015]; root of context hierarchy
[2015-12-30 10:28:04,414]DEBUG 31905[Thread-0] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2015-12-30 10:28:04,415] INFO 31906[Thread-0] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:422) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@61355dd0: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderDao,roleDao,userDao,regionDao,orderStatusDao,productDao,dimensionDao,customerTypeDao,orderItemDao,creditCardTypeDao,sessionFactory]; root of factory hierarchy
[2015-12-30 10:28:04,415]DEBUG 31906[Thread-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2015-12-30 10:28:04,415] INFO 31906[Thread-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:422) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2fb4ebc8: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderDao,roleDao,userDao,regionDao,orderStatusDao,productDao,dimensionDao,customerTypeDao,orderItemDao,creditCardTypeDao,sessionFactory]; root of factory hierarchy
[2015-12-30 10:28:04,419]DEBUG 31910[Thread-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:477) - Retrieved dependent beans for bean 'orderItemDao': [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 10:28:04,419]DEBUG 31910[Thread-1] - org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:172) - Invoking destroy() on bean with name 'sessionFactory'
[2015-12-30 10:28:04,419] INFO 31910[Thread-1] - org.springframework.orm.hibernate3.AbstractSessionFactoryBean.destroy(AbstractSessionFactoryBean.java:246) - Closing Hibernate SessionFactory
[2015-12-30 10:28:04,424]DEBUG 31915[Thread-0] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:477) - Retrieved dependent beans for bean 'orderItemDao': [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest, com.softserveinc.edu.oms.persistence.dao.OrderDaoTest, com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase, com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest, com.softserveinc.edu.oms.persistence.dao.RoleDAOTest, com.softserveinc.edu.oms.persistence.dao.RegionDaoTest, com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest, com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 10:28:04,419] INFO 31910[Thread-1] - org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) - closing
[2015-12-30 10:28:04,424] INFO 31915[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2015-12-30 10:28:04,425]DEBUG 31916[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2015-12-30 10:28:04,425] INFO 31916[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2015-12-30 10:28:04,425]DEBUG 31916[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD3262E1ABF7
[2015-12-30 10:28:04,424]DEBUG 31915[Thread-0] - org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:172) - Invoking destroy() on bean with name 'sessionFactory'
[2015-12-30 10:28:04,426] INFO 31917[Thread-0] - org.springframework.orm.hibernate3.AbstractSessionFactoryBean.destroy(AbstractSessionFactoryBean.java:246) - Closing Hibernate SessionFactory
[2015-12-30 10:28:04,426] INFO 31917[Thread-0] - org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) - closing
[2015-12-30 10:28:04,426] INFO 31917[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2015-12-30 10:28:04,426]DEBUG 31917[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2015-12-30 10:28:04,426] INFO 31917[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2015-12-30 10:28:04,427]DEBUG 31918[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD3262E1ABF7
[2015-12-30 10:28:04,467]DEBUG 31958[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32A6376397
[2015-12-30 10:28:04,468]DEBUG 31959[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop constraint FKA2B1AD3262E1ABF7
[2015-12-30 10:28:04,468]DEBUG 31959[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fka2b1ad3262e1abf7" of relation "orderitems" does not exist
[2015-12-30 10:28:04,468]DEBUG 31959[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32A6376397
[2015-12-30 10:28:04,517]DEBUG 32008[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32BCDB3C97
[2015-12-30 10:28:04,518]DEBUG 32009[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop constraint FKA2B1AD32A6376397
[2015-12-30 10:28:04,518]DEBUG 32009[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fka2b1ad32a6376397" of relation "orderitems" does not exist
[2015-12-30 10:28:04,518]DEBUG 32009[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32BCDB3C97
[2015-12-30 10:28:04,551]DEBUG 32042[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05990DB877
[2015-12-30 10:28:04,551]DEBUG 32042[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop constraint FKA2B1AD32BCDB3C97
[2015-12-30 10:28:04,551]DEBUG 32042[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fka2b1ad32bcdb3c97" of relation "orderitems" does not exist
[2015-12-30 10:28:04,551]DEBUG 32042[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05990DB877
[2015-12-30 10:28:04,601]DEBUG 32092[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05C0F431DD
[2015-12-30 10:28:04,601]DEBUG 32092[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop constraint FK8D444F05990DB877
[2015-12-30 10:28:04,601]DEBUG 32092[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk8d444f05990db877" of relation "orders" does not exist
[2015-12-30 10:28:04,601]DEBUG 32092[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05C0F431DD
[2015-12-30 10:28:04,634]DEBUG 32125[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05F161465
[2015-12-30 10:28:04,635]DEBUG 32126[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop constraint FK8D444F05C0F431DD
[2015-12-30 10:28:04,635]DEBUG 32126[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk8d444f05c0f431dd" of relation "orders" does not exist
[2015-12-30 10:28:04,635]DEBUG 32126[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05F161465
[2015-12-30 10:28:04,668]DEBUG 32159[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE83D05058F
[2015-12-30 10:28:04,668]DEBUG 32159[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop constraint FK8D444F05F161465
[2015-12-30 10:28:04,668]DEBUG 32159[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk8d444f05f161465" of relation "orders" does not exist
[2015-12-30 10:28:04,668]DEBUG 32159[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE83D05058F
[2015-12-30 10:28:04,718]DEBUG 32209[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE89AEF426F
[2015-12-30 10:28:04,718]DEBUG 32209[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop constraint FK4E39DE83D05058F
[2015-12-30 10:28:04,718]DEBUG 32209[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk4e39de83d05058f" of relation "users" does not exist
[2015-12-30 10:28:04,719]DEBUG 32210[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE89AEF426F
[2015-12-30 10:28:04,751]DEBUG 32242[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE8FEAD4DCF
[2015-12-30 10:28:04,752]DEBUG 32243[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop constraint FK4E39DE89AEF426F
[2015-12-30 10:28:04,752]DEBUG 32243[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk4e39de89aef426f" of relation "users" does not exist
[2015-12-30 10:28:04,752]DEBUG 32243[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE8FEAD4DCF
[2015-12-30 10:28:04,801]DEBUG 32292[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CardType cascade
[2015-12-30 10:28:04,802]DEBUG 32293[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop constraint FK4E39DE8FEAD4DCF
[2015-12-30 10:28:04,802]DEBUG 32293[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk4e39de8fead4dcf" of relation "users" does not exist
[2015-12-30 10:28:04,802]DEBUG 32293[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CardType cascade
[2015-12-30 10:28:04,852]DEBUG 32343[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table CardType cascade
[2015-12-30 10:28:04,852]DEBUG 32343[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "cardtype" does not exist
[2015-12-30 10:28:04,852]DEBUG 32343[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CustomerTypes cascade
[2015-12-30 10:28:04,852]DEBUG 32343[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CustomerTypes cascade
[2015-12-30 10:28:04,887]DEBUG 32378[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Dimensions cascade
[2015-12-30 10:28:04,887]DEBUG 32378[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table CustomerTypes cascade
[2015-12-30 10:28:04,888]DEBUG 32379[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "customertypes" does not exist
[2015-12-30 10:28:04,888]DEBUG 32379[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Dimensions cascade
[2015-12-30 10:28:04,927]DEBUG 32418[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderItems cascade
[2015-12-30 10:28:04,927]DEBUG 32418[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Dimensions cascade
[2015-12-30 10:28:04,928]DEBUG 32419[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "dimensions" does not exist
[2015-12-30 10:28:04,928]DEBUG 32419[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderItems cascade
[2015-12-30 10:28:04,961]DEBUG 32452[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderStatuses cascade
[2015-12-30 10:28:04,961]DEBUG 32452[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table OrderItems cascade
[2015-12-30 10:28:04,961]DEBUG 32452[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "orderitems" does not exist
[2015-12-30 10:28:04,961]DEBUG 32452[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderStatuses cascade
[2015-12-30 10:28:04,994]DEBUG 32485[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table OrderStatuses cascade
[2015-12-30 10:28:04,994]DEBUG 32485[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Orders cascade
[2015-12-30 10:28:04,994]DEBUG 32485[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "orderstatuses" does not exist
[2015-12-30 10:28:04,994]DEBUG 32485[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Orders cascade
[2015-12-30 10:28:05,044]DEBUG 32535[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Orders cascade
[2015-12-30 10:28:05,044]DEBUG 32535[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Products cascade
[2015-12-30 10:28:05,044]DEBUG 32535[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "orders" does not exist
[2015-12-30 10:28:05,044]DEBUG 32535[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Products cascade
[2015-12-30 10:28:05,077]DEBUG 32568[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Products cascade
[2015-12-30 10:28:05,077]DEBUG 32568[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Regions cascade
[2015-12-30 10:28:05,078]DEBUG 32569[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "products" does not exist
[2015-12-30 10:28:05,078]DEBUG 32569[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Regions cascade
[2015-12-30 10:28:05,127]DEBUG 32618[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Regions cascade
[2015-12-30 10:28:05,128]DEBUG 32619[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Roles cascade
[2015-12-30 10:28:05,128]DEBUG 32619[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "regions" does not exist
[2015-12-30 10:28:05,128]DEBUG 32619[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Roles cascade
[2015-12-30 10:28:05,177]DEBUG 32668[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Roles cascade
[2015-12-30 10:28:05,177]DEBUG 32668[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Users cascade
[2015-12-30 10:28:05,178]DEBUG 32669[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "roles" does not exist
[2015-12-30 10:28:05,178]DEBUG 32669[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Users cascade
[2015-12-30 10:28:05,211]DEBUG 32702[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Users cascade
[2015-12-30 10:28:05,211]DEBUG 32702[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "users" does not exist
[2015-12-30 10:28:05,211]DEBUG 32702[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop sequence hibernate_sequence
[2015-12-30 10:28:05,211]DEBUG 32702[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop sequence hibernate_sequence
[2015-12-30 10:28:05,261]DEBUG 32752[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop sequence hibernate_sequence
[2015-12-30 10:28:05,261] INFO 32752[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2015-12-30 10:28:05,263] INFO 32754[Thread-1] - org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) - cleaning up connection pool: jdbc:postgresql://192.168.103.164:5432/_055_DB
[2015-12-30 10:28:05,265]DEBUG 32756[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: sequence "hibernate_sequence" does not exist
[2015-12-30 10:28:05,266] INFO 32757[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2015-12-30 10:28:05,266] INFO 32757[Thread-0] - org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) - cleaning up connection pool: jdbc:postgresql://192.168.103.164:5432/_055_DB
