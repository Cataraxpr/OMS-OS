[2015-12-30 00:48:00,000]DEBUG 14163[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@4daf3c28, testMethod = testFindByOrderDateEquals@OrderDaoTest, testException = [null]]]
[2015-12-30 00:48:00,000] INFO 14163[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:00,001]DEBUG 14164[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,001]DEBUG 14164[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:00,005]DEBUG 14168[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,005]DEBUG 14168[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,005]DEBUG 14168[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:00,006]DEBUG 14169[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,006]DEBUG 14169[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,006]DEBUG 14169[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:00,008]DEBUG 14171[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,008]DEBUG 14171[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,008]DEBUG 14171[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:00,009]DEBUG 14172[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,010]DEBUG 14173[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,010]DEBUG 14173[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:00,011]DEBUG 14174[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,012]DEBUG 14175[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,012]DEBUG 14175[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:00,013]DEBUG 14176[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,014]DEBUG 14177[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,014]DEBUG 14177[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:00,015]DEBUG 14178[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,016]DEBUG 14179[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,016]DEBUG 14179[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:00,017]DEBUG 14180[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,017]DEBUG 14180[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,018]DEBUG 14181[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:00,019]DEBUG 14182[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,019]DEBUG 14182[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,019]DEBUG 14182[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,020]DEBUG 14183[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[86]]
[2015-12-30 00:48:00,020]DEBUG 14183[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,020]DEBUG 14183[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 86, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,021]DEBUG 14184[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,021]DEBUG 14184[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,022]DEBUG 14185[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[87]]
[2015-12-30 00:48:00,022]DEBUG 14185[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,022]DEBUG 14185[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 87, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,022]DEBUG 14185[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,022]DEBUG 14185[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,024]DEBUG 14187[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[88]]
[2015-12-30 00:48:00,024]DEBUG 14187[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,024]DEBUG 14187[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 88, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,024]DEBUG 14187[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,025]DEBUG 14188[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,026]DEBUG 14189[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[89]]
[2015-12-30 00:48:00,027]DEBUG 14190[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,027]DEBUG 14190[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 89, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,027]DEBUG 14190[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,028]DEBUG 14191[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,029]DEBUG 14192[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[90]]
[2015-12-30 00:48:00,029]DEBUG 14192[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,030]DEBUG 14193[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 90, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,030]DEBUG 14193[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,032]DEBUG 14195[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,034]DEBUG 14197[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[91]]
[2015-12-30 00:48:00,034]DEBUG 14197[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,034]DEBUG 14197[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 91, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,036]DEBUG 14199[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,036]DEBUG 14199[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,037]DEBUG 14200[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,037]DEBUG 14200[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,038]DEBUG 14201[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,038]DEBUG 14201[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=86, orderStatusName=Pending}
[2015-12-30 00:48:00,038]DEBUG 14201[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=91, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,038]DEBUG 14201[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=88, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,039]DEBUG 14202[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=89, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,039]DEBUG 14202[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=90, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,039]DEBUG 14202[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2015-12-30 00:48:00,040]DEBUG 14203[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Orders
[2015-12-30 00:48:00,040]DEBUG 14203[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,040]DEBUG 14203[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:00,041]DEBUG 14204[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,042]DEBUG 14205[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,043]DEBUG 14206[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,043]DEBUG 14206[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:00,043]DEBUG 14206[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,050]DEBUG 14213[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,050]DEBUG 14213[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,050]DEBUG 14213[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,051]DEBUG 14214[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,053]DEBUG 14216[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,053]DEBUG 14216[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,053]DEBUG 14216[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,054]DEBUG 14217[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:00,054]DEBUG 14217[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,055]DEBUG 14218[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:00,055]DEBUG 14218[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,056]DEBUG 14219[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:00,060]DEBUG 14223[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,061]DEBUG 14224[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,061]DEBUG 14224[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.OrderDate=?
[2015-12-30 00:48:00,071]DEBUG 14234[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:00,071]DEBUG 14234[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#88], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#87], EntityKey[com.softserveinc.edu.oms.domain.entities.User#88], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#86], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#89]
[2015-12-30 00:48:00,071]DEBUG 14234[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#88], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#87], EntityKey[com.softserveinc.edu.oms.domain.entities.User#88], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#86], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#90]
[2015-12-30 00:48:00,072]DEBUG 14235[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#88], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#87], EntityKey[com.softserveinc.edu.oms.domain.entities.User#88], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#86], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#91]
[2015-12-30 00:48:00,072]DEBUG 14235[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:00,072]DEBUG 14235[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,072]DEBUG 14235[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:00,073]DEBUG 14236[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,073]DEBUG 14236[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,074]DEBUG 14237[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,074]DEBUG 14237[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,074]DEBUG 14237[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,074]DEBUG 14237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=86, orderStatusName=Pending}
[2015-12-30 00:48:00,075]DEBUG 14238[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=91, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,075]DEBUG 14238[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=88, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,075]DEBUG 14238[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=89, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,075]DEBUG 14238[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=90, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,075]DEBUG 14238[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2015-12-30 00:48:00,075]DEBUG 14238[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,075]DEBUG 14238[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:00,077]DEBUG 14240[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,077]DEBUG 14240[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,078]DEBUG 14241[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,078]DEBUG 14241[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,078]DEBUG 14241[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,079]DEBUG 14242[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,079]DEBUG 14242[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=86, orderStatusName=Pending}
[2015-12-30 00:48:00,079]DEBUG 14242[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=91, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,080]DEBUG 14243[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=88, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,080]DEBUG 14243[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=89, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,080]DEBUG 14243[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=90, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,080]DEBUG 14243[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2015-12-30 00:48:00,081]DEBUG 14244[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,081]DEBUG 14244[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:00,082]DEBUG 14245[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,083]DEBUG 14246[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,083]DEBUG 14246[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,083]DEBUG 14246[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,084]DEBUG 14247[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,084]DEBUG 14247[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,084]DEBUG 14247[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=86, orderStatusName=Pending}
[2015-12-30 00:48:00,085]DEBUG 14248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=91, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,085]DEBUG 14248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=88, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,085]DEBUG 14248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=89, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,086]DEBUG 14249[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=90, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,086]DEBUG 14249[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2015-12-30 00:48:00,086]DEBUG 14249[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,086]DEBUG 14249[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:00,088]DEBUG 14251[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,088]DEBUG 14251[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,088]DEBUG 14251[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,089]DEBUG 14252[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,089]DEBUG 14252[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,089]DEBUG 14252[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,090]DEBUG 14253[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=86, orderStatusName=Pending}
[2015-12-30 00:48:00,090]DEBUG 14253[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=91, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,090]DEBUG 14253[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=88, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,091]DEBUG 14254[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=89, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,091]DEBUG 14254[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=90, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,091]DEBUG 14254[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2015-12-30 00:48:00,091]DEBUG 14254[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,092]DEBUG 14255[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:00,095]DEBUG 14258[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,095]DEBUG 14258[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,096]DEBUG 14259[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,096]DEBUG 14259[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,097]DEBUG 14260[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,097]DEBUG 14260[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,097]DEBUG 14260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=86, orderStatusName=Pending}
[2015-12-30 00:48:00,097]DEBUG 14260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=91, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,098]DEBUG 14261[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=88, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,098]DEBUG 14261[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=89, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,098]DEBUG 14261[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=90, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,099]DEBUG 14262[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2015-12-30 00:48:00,099]DEBUG 14262[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,099]DEBUG 14262[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:00,101]DEBUG 14264[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,101]DEBUG 14264[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,101]DEBUG 14264[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,102]DEBUG 14265[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,102]DEBUG 14265[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,102]DEBUG 14265[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,103]DEBUG 14266[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=86, orderStatusName=Pending}
[2015-12-30 00:48:00,103]DEBUG 14266[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=91, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,112]DEBUG 14275[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=88, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,113]DEBUG 14276[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=89, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,113]DEBUG 14276[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=90, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,114]DEBUG 14277[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2015-12-30 00:48:00,114]DEBUG 14277[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,114]DEBUG 14277[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:00,116]DEBUG 14279[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,117]DEBUG 14280[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,117]DEBUG 14280[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,118]DEBUG 14281[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,118]DEBUG 14281[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,118]DEBUG 14281[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,118]DEBUG 14281[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=86, orderStatusName=Pending}
[2015-12-30 00:48:00,119]DEBUG 14282[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=91, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,119]DEBUG 14282[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=88, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,119]DEBUG 14282[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=89, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,120]DEBUG 14283[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=90, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,120]DEBUG 14283[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2015-12-30 00:48:00,120]DEBUG 14283[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,121]DEBUG 14284[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:00,122]DEBUG 14285[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,122]DEBUG 14285[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,123]DEBUG 14286[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,123]DEBUG 14286[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,123]DEBUG 14286[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,124]DEBUG 14287[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,124]DEBUG 14287[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=86, orderStatusName=Pending}
[2015-12-30 00:48:00,124]DEBUG 14287[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=91, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,124]DEBUG 14287[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=88, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,125]DEBUG 14288[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=89, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,125]DEBUG 14288[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=90, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,125]DEBUG 14288[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2015-12-30 00:48:00,126]DEBUG 14289[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,128]DEBUG 14291[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:00,129]DEBUG 14292[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,130]DEBUG 14293[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,130]DEBUG 14293[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,131]DEBUG 14294[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,131]DEBUG 14294[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,132]DEBUG 14295[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,132]DEBUG 14295[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=86, orderStatusName=Pending}
[2015-12-30 00:48:00,132]DEBUG 14295[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=91, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,132]DEBUG 14295[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=88, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,133]DEBUG 14296[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=89, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,133]DEBUG 14296[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#88, id=90, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#88, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#86, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,133]DEBUG 14296[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2015-12-30 00:48:00,134]DEBUG 14297[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,134]DEBUG 14297[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:00,135]DEBUG 14298[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,136]DEBUG 14299[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@4daf3c28, testMethod = testFindByOrderDateEquals@OrderDaoTest, testException = [null]]]
[2015-12-30 00:48:00,136]DEBUG 14299[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:00,136]DEBUG 14299[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@8ba578f]
[2015-12-30 00:48:00,136]DEBUG 14299[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:00,138]DEBUG 14301[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:00,138]DEBUG 14301[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:00,138]DEBUG 14301[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@8ba578f] after transaction
[2015-12-30 00:48:00,139]DEBUG 14302[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:00,139]DEBUG 14302[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:00,139]DEBUG 14302[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:00,139] INFO 14302[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@4daf3c28, testMethod = testFindByOrderDateEquals@OrderDaoTest, testException = [null]]]
[2015-12-30 00:48:00,141]DEBUG 14304[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@4daf3c28, testMethod = testFindByOrderDateEquals@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:00,141]DEBUG 14304[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2015-12-30 00:48:00,142]DEBUG 14305[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2015-12-30 00:48:00,142]DEBUG 14305[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2bda037e, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:00,142]DEBUG 14305[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:00,143]DEBUG 14306[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:00,143]DEBUG 14306[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:00,143]DEBUG 14306[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:00,143]DEBUG 14306[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:00,144]DEBUG 14307[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:00,144]DEBUG 14307[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:00,144]DEBUG 14307[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:00,144]DEBUG 14307[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:00,144]DEBUG 14307[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:00,145]DEBUG 14308[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:00,145]DEBUG 14308[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:00,145]DEBUG 14308[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:00,145]DEBUG 14308[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:00,146]DEBUG 14309[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:00,146]DEBUG 14309[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:00,146]DEBUG 14309[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:00,146]DEBUG 14309[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:00,146]DEBUG 14309[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:00,147]DEBUG 14310[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:00,147]DEBUG 14310[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:00,147]DEBUG 14310[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:00,147]DEBUG 14310[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2bda037e]
[2015-12-30 00:48:00,148]DEBUG 14311[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderDateMore' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,148]DEBUG 14311[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2bda037e, testMethod = testFindByOrderDateMore@OrderDaoTest, testException = [null]]]
[2015-12-30 00:48:00,149]DEBUG 14312[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:00,152]DEBUG 14315[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOrderDateMore]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,152]DEBUG 14315[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292801
[2015-12-30 00:48:00,152]DEBUG 14315[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1f9907ee] for Hibernate transaction
[2015-12-30 00:48:00,153]DEBUG 14316[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1f9907ee]
[2015-12-30 00:48:00,153]DEBUG 14316[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:00,153]DEBUG 14316[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:00,153]DEBUG 14316[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:00,153]DEBUG 14316[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2bda037e, testMethod = testFindByOrderDateMore@OrderDaoTest, testException = [null]]]
[2015-12-30 00:48:00,154] INFO 14317[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (12): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:00,154]DEBUG 14317[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,154]DEBUG 14317[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:00,156]DEBUG 14319[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,156]DEBUG 14319[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,157]DEBUG 14320[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:00,158]DEBUG 14321[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,158]DEBUG 14321[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,159]DEBUG 14322[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:00,160]DEBUG 14323[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,160]DEBUG 14323[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,161]DEBUG 14324[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:00,162]DEBUG 14325[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,162]DEBUG 14325[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,163]DEBUG 14326[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:00,164]DEBUG 14327[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,164]DEBUG 14327[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,165]DEBUG 14328[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:00,166]DEBUG 14329[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,166]DEBUG 14329[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,166]DEBUG 14329[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:00,168]DEBUG 14331[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,168]DEBUG 14331[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,168]DEBUG 14331[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:00,170]DEBUG 14333[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,170]DEBUG 14333[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,170]DEBUG 14333[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:00,172]DEBUG 14335[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,172]DEBUG 14335[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,172]DEBUG 14335[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,173]DEBUG 14336[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[92]]
[2015-12-30 00:48:00,174]DEBUG 14337[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,174]DEBUG 14337[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 92, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,174]DEBUG 14337[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,175]DEBUG 14338[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,179]DEBUG 14342[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[93]]
[2015-12-30 00:48:00,180]DEBUG 14343[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,180]DEBUG 14343[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 93, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,180]DEBUG 14343[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,188]DEBUG 14351[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,190]DEBUG 14353[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[94]]
[2015-12-30 00:48:00,190]DEBUG 14353[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,191]DEBUG 14354[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 94, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,193]DEBUG 14356[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,194]DEBUG 14357[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,200]DEBUG 14363[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[95]]
[2015-12-30 00:48:00,200]DEBUG 14363[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,200]DEBUG 14363[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 95, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,201]DEBUG 14364[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,201]DEBUG 14364[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,204]DEBUG 14367[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[96]]
[2015-12-30 00:48:00,205]DEBUG 14368[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,205]DEBUG 14368[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 96, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,205]DEBUG 14368[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,205]DEBUG 14368[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,207]DEBUG 14370[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[97]]
[2015-12-30 00:48:00,207]DEBUG 14370[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,207]DEBUG 14370[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 97, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,208]DEBUG 14371[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,208]DEBUG 14371[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,208]DEBUG 14371[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,208]DEBUG 14371[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,209]DEBUG 14372[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,209]DEBUG 14372[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=96, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,209]DEBUG 14372[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=94, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#93, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,209]DEBUG 14372[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=95, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,209]DEBUG 14372[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=93, roleName=Administrator}
[2015-12-30 00:48:00,209]DEBUG 14372[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=92, orderStatusName=Pending}
[2015-12-30 00:48:00,213]DEBUG 14376[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=97, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,213]DEBUG 14376[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Orders
[2015-12-30 00:48:00,213]DEBUG 14376[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,214]DEBUG 14377[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:00,214]DEBUG 14377[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,215]DEBUG 14378[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,215]DEBUG 14378[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,215]DEBUG 14378[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:00,216]DEBUG 14379[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,217]DEBUG 14380[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,217]DEBUG 14380[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,217]DEBUG 14380[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,217]DEBUG 14380[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,219]DEBUG 14382[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,219]DEBUG 14382[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,219]DEBUG 14382[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,220]DEBUG 14383[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:00,220]DEBUG 14383[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,220]DEBUG 14383[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:00,220]DEBUG 14383[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,220]DEBUG 14383[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:00,223]DEBUG 14386[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,223]DEBUG 14386[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,225]DEBUG 14388[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.OrderDate>?
[2015-12-30 00:48:00,230]DEBUG 14393[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:00,230]DEBUG 14393[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:00,230]DEBUG 14393[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,230]DEBUG 14393[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:00,230]DEBUG 14393[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,231]DEBUG 14394[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,231]DEBUG 14394[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,231]DEBUG 14394[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,231]DEBUG 14394[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,231]DEBUG 14394[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=96, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,231]DEBUG 14394[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=94, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#93, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,232]DEBUG 14395[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=95, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,232]DEBUG 14395[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=93, roleName=Administrator}
[2015-12-30 00:48:00,232]DEBUG 14395[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=92, orderStatusName=Pending}
[2015-12-30 00:48:00,232]DEBUG 14395[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=97, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,232]DEBUG 14395[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,232]DEBUG 14395[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:00,234]DEBUG 14397[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,234]DEBUG 14397[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,234]DEBUG 14397[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,235]DEBUG 14398[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,235]DEBUG 14398[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,235]DEBUG 14398[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,236]DEBUG 14399[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=96, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,236]DEBUG 14399[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=94, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#93, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,236]DEBUG 14399[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=95, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,236]DEBUG 14399[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=93, roleName=Administrator}
[2015-12-30 00:48:00,237]DEBUG 14400[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=92, orderStatusName=Pending}
[2015-12-30 00:48:00,237]DEBUG 14400[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=97, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,237]DEBUG 14400[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,237]DEBUG 14400[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:00,239]DEBUG 14402[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,239]DEBUG 14402[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,239]DEBUG 14402[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,239]DEBUG 14402[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,239]DEBUG 14402[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,240]DEBUG 14403[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,240]DEBUG 14403[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=96, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,240]DEBUG 14403[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=94, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#93, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,240]DEBUG 14403[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=95, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,240]DEBUG 14403[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=93, roleName=Administrator}
[2015-12-30 00:48:00,240]DEBUG 14403[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=92, orderStatusName=Pending}
[2015-12-30 00:48:00,240]DEBUG 14403[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=97, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,241]DEBUG 14404[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,241]DEBUG 14404[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:00,242]DEBUG 14405[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,242]DEBUG 14405[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,242]DEBUG 14405[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,243]DEBUG 14406[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,243]DEBUG 14406[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,243]DEBUG 14406[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,243]DEBUG 14406[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=96, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,244]DEBUG 14407[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=94, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#93, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,245]DEBUG 14408[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=95, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,245]DEBUG 14408[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=93, roleName=Administrator}
[2015-12-30 00:48:00,245]DEBUG 14408[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=92, orderStatusName=Pending}
[2015-12-30 00:48:00,245]DEBUG 14408[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=97, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,245]DEBUG 14408[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,245]DEBUG 14408[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:00,247]DEBUG 14410[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,247]DEBUG 14410[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,247]DEBUG 14410[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,247]DEBUG 14410[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,247]DEBUG 14410[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,247]DEBUG 14410[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,248]DEBUG 14411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=96, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,248]DEBUG 14411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=94, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#93, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,248]DEBUG 14411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=95, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,248]DEBUG 14411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=93, roleName=Administrator}
[2015-12-30 00:48:00,248]DEBUG 14411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=92, orderStatusName=Pending}
[2015-12-30 00:48:00,248]DEBUG 14411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=97, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,248]DEBUG 14411[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,248]DEBUG 14411[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:00,250]DEBUG 14413[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,250]DEBUG 14413[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,250]DEBUG 14413[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,250]DEBUG 14413[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,250]DEBUG 14413[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,250]DEBUG 14413[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,251]DEBUG 14414[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=96, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,251]DEBUG 14414[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=94, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#93, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,251]DEBUG 14414[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=95, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,251]DEBUG 14414[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=93, roleName=Administrator}
[2015-12-30 00:48:00,251]DEBUG 14414[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=92, orderStatusName=Pending}
[2015-12-30 00:48:00,251]DEBUG 14414[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=97, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,251]DEBUG 14414[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,251]DEBUG 14414[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:00,253]DEBUG 14416[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,253]DEBUG 14416[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,253]DEBUG 14416[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,253]DEBUG 14416[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,253]DEBUG 14416[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,253]DEBUG 14416[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,254]DEBUG 14417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=96, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,254]DEBUG 14417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=94, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#93, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,254]DEBUG 14417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=95, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,254]DEBUG 14417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=93, roleName=Administrator}
[2015-12-30 00:48:00,254]DEBUG 14417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=92, orderStatusName=Pending}
[2015-12-30 00:48:00,254]DEBUG 14417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=97, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,254]DEBUG 14417[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,254]DEBUG 14417[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:00,256]DEBUG 14419[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,256]DEBUG 14419[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,256]DEBUG 14419[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,256]DEBUG 14419[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,256]DEBUG 14419[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,256]DEBUG 14419[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,257]DEBUG 14420[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=96, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,258]DEBUG 14421[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=94, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#93, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,258]DEBUG 14421[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=95, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,258]DEBUG 14421[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=93, roleName=Administrator}
[2015-12-30 00:48:00,258]DEBUG 14421[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=92, orderStatusName=Pending}
[2015-12-30 00:48:00,258]DEBUG 14421[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=97, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,258]DEBUG 14421[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,258]DEBUG 14421[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:00,259]DEBUG 14422[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,260]DEBUG 14423[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,260]DEBUG 14423[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,260]DEBUG 14423[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,260]DEBUG 14423[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,260]DEBUG 14423[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,260]DEBUG 14423[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=96, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,261]DEBUG 14424[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=94, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#93, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,261]DEBUG 14424[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=95, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,261]DEBUG 14424[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=93, roleName=Administrator}
[2015-12-30 00:48:00,261]DEBUG 14424[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=92, orderStatusName=Pending}
[2015-12-30 00:48:00,261]DEBUG 14424[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#94, id=97, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#94, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#92, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,261]DEBUG 14424[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,261]DEBUG 14424[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:00,263]DEBUG 14426[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,263]DEBUG 14426[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2bda037e, testMethod = testFindByOrderDateMore@OrderDaoTest, testException = [null]]]
[2015-12-30 00:48:00,263]DEBUG 14426[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:00,263]DEBUG 14426[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1f9907ee]
[2015-12-30 00:48:00,263]DEBUG 14426[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:00,264]DEBUG 14427[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:00,264]DEBUG 14427[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:00,264]DEBUG 14427[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1f9907ee] after transaction
[2015-12-30 00:48:00,265]DEBUG 14428[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:00,265]DEBUG 14428[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:00,265]DEBUG 14428[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:00,265] INFO 14428[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2bda037e, testMethod = testFindByOrderDateMore@OrderDaoTest, testException = [null]]]
[2015-12-30 00:48:00,266]DEBUG 14429[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2bda037e, testMethod = testFindByOrderDateMore@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:00,266]DEBUG 14429[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2015-12-30 00:48:00,266]DEBUG 14429[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2015-12-30 00:48:00,266]DEBUG 14429[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2ea089d4, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:00,267]DEBUG 14430[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:00,267]DEBUG 14430[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:00,267]DEBUG 14430[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:00,267]DEBUG 14430[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:00,267]DEBUG 14430[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:00,267]DEBUG 14430[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:00,267]DEBUG 14430[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:00,267]DEBUG 14430[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:00,268]DEBUG 14431[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:00,268]DEBUG 14431[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:00,268]DEBUG 14431[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:00,268]DEBUG 14431[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:00,268]DEBUG 14431[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:00,268]DEBUG 14431[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:00,268]DEBUG 14431[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:00,268]DEBUG 14431[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:00,268]DEBUG 14431[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:00,269]DEBUG 14432[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:00,269]DEBUG 14432[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:00,269]DEBUG 14432[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:00,270]DEBUG 14433[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:00,270]DEBUG 14433[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:00,270]DEBUG 14433[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2ea089d4]
[2015-12-30 00:48:00,271]DEBUG 14434[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderDateLess' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,271]DEBUG 14434[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2ea089d4, testMethod = testFindByOrderDateLess@OrderDaoTest, testException = [null]]]
[2015-12-30 00:48:00,271]DEBUG 14434[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:00,272]DEBUG 14435[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOrderDateLess]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,272]DEBUG 14435[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292802
[2015-12-30 00:48:00,272]DEBUG 14435[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6d6dac7b] for Hibernate transaction
[2015-12-30 00:48:00,272]DEBUG 14435[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6d6dac7b]
[2015-12-30 00:48:00,272]DEBUG 14435[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:00,272]DEBUG 14435[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:00,272]DEBUG 14435[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:00,272]DEBUG 14435[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2ea089d4, testMethod = testFindByOrderDateLess@OrderDaoTest, testException = [null]]]
[2015-12-30 00:48:00,273] INFO 14436[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (13): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:00,273]DEBUG 14436[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,273]DEBUG 14436[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:00,274]DEBUG 14437[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,274]DEBUG 14437[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,275]DEBUG 14438[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:00,276]DEBUG 14439[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,276]DEBUG 14439[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,282]DEBUG 14445[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:00,283]DEBUG 14446[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,283]DEBUG 14446[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,283]DEBUG 14446[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:00,285]DEBUG 14448[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,285]DEBUG 14448[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,285]DEBUG 14448[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:00,286]DEBUG 14449[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,286]DEBUG 14449[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,287]DEBUG 14450[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:00,288]DEBUG 14451[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,288]DEBUG 14451[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,288]DEBUG 14451[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:00,289]DEBUG 14452[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,289]DEBUG 14452[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,290]DEBUG 14453[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:00,291]DEBUG 14454[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,291]DEBUG 14454[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,291]DEBUG 14454[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:00,293]DEBUG 14456[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,293]DEBUG 14456[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,293]DEBUG 14456[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,295]DEBUG 14458[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[98]]
[2015-12-30 00:48:00,295]DEBUG 14458[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,295]DEBUG 14458[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 98, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,296]DEBUG 14459[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,296]DEBUG 14459[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,297]DEBUG 14460[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[99]]
[2015-12-30 00:48:00,297]DEBUG 14460[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,298]DEBUG 14461[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 99, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,298]DEBUG 14461[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,300]DEBUG 14463[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,301]DEBUG 14464[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[100]]
[2015-12-30 00:48:00,302]DEBUG 14465[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,302]DEBUG 14465[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 100, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,302]DEBUG 14465[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,303]DEBUG 14466[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,304]DEBUG 14467[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[101]]
[2015-12-30 00:48:00,304]DEBUG 14467[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,304]DEBUG 14467[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 101, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,305]DEBUG 14468[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,305]DEBUG 14468[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,307]DEBUG 14470[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[102]]
[2015-12-30 00:48:00,307]DEBUG 14470[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,307]DEBUG 14470[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 102, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,307]DEBUG 14470[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,308]DEBUG 14471[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,309]DEBUG 14472[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[103]]
[2015-12-30 00:48:00,309]DEBUG 14472[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,310]DEBUG 14473[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 103, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,311]DEBUG 14474[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,312]DEBUG 14475[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,312]DEBUG 14475[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,313]DEBUG 14476[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,313]DEBUG 14476[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,313]DEBUG 14476[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=102, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,314]DEBUG 14477[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=101, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,314]DEBUG 14477[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=100, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#99, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,314]DEBUG 14477[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=103, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,315]DEBUG 14478[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=99, roleName=Administrator}
[2015-12-30 00:48:00,315]DEBUG 14478[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=98, orderStatusName=Pending}
[2015-12-30 00:48:00,315]DEBUG 14478[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Orders
[2015-12-30 00:48:00,315]DEBUG 14478[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,316]DEBUG 14479[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:00,316]DEBUG 14479[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,318]DEBUG 14481[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,318]DEBUG 14481[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,318]DEBUG 14481[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:00,319]DEBUG 14482[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,320]DEBUG 14483[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,321]DEBUG 14484[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,321]DEBUG 14484[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,321]DEBUG 14484[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,323]DEBUG 14486[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,324]DEBUG 14487[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,324]DEBUG 14487[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,325]DEBUG 14488[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:00,327]DEBUG 14490[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,327]DEBUG 14490[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:00,328]DEBUG 14491[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,328]DEBUG 14491[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:00,332]DEBUG 14495[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,332]DEBUG 14495[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,332]DEBUG 14495[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.OrderDate<?
[2015-12-30 00:48:00,338]DEBUG 14501[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:00,338]DEBUG 14501[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#100], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#99], EntityKey[com.softserveinc.edu.oms.domain.entities.User#100], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#98], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#101]
[2015-12-30 00:48:00,339]DEBUG 14502[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#100], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#99], EntityKey[com.softserveinc.edu.oms.domain.entities.User#100], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#98], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#102]
[2015-12-30 00:48:00,339]DEBUG 14502[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#100], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#99], EntityKey[com.softserveinc.edu.oms.domain.entities.User#100], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#98], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#103]
[2015-12-30 00:48:00,339]DEBUG 14502[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:00,340]DEBUG 14503[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,340]DEBUG 14503[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:00,340]DEBUG 14503[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,342]DEBUG 14505[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,343]DEBUG 14506[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,343]DEBUG 14506[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,343]DEBUG 14506[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,344]DEBUG 14507[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=102, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,344]DEBUG 14507[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=101, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,344]DEBUG 14507[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=100, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#99, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,345]DEBUG 14508[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=103, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,345]DEBUG 14508[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=99, roleName=Administrator}
[2015-12-30 00:48:00,345]DEBUG 14508[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=98, orderStatusName=Pending}
[2015-12-30 00:48:00,345]DEBUG 14508[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,346]DEBUG 14509[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:00,347]DEBUG 14510[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,348]DEBUG 14511[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,348]DEBUG 14511[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,349]DEBUG 14512[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,349]DEBUG 14512[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,349]DEBUG 14512[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,349]DEBUG 14512[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=102, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,350]DEBUG 14513[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=101, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,350]DEBUG 14513[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=100, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#99, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,350]DEBUG 14513[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=103, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,351]DEBUG 14514[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=99, roleName=Administrator}
[2015-12-30 00:48:00,351]DEBUG 14514[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=98, orderStatusName=Pending}
[2015-12-30 00:48:00,351]DEBUG 14514[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,351]DEBUG 14514[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:00,353]DEBUG 14516[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,353]DEBUG 14516[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,353]DEBUG 14516[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,354]DEBUG 14517[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,354]DEBUG 14517[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,354]DEBUG 14517[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,355]DEBUG 14518[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=102, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,355]DEBUG 14518[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=101, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,355]DEBUG 14518[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=100, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#99, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,356]DEBUG 14519[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=103, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,356]DEBUG 14519[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=99, roleName=Administrator}
[2015-12-30 00:48:00,358]DEBUG 14521[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=98, orderStatusName=Pending}
[2015-12-30 00:48:00,358]DEBUG 14521[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,358]DEBUG 14521[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:00,360]DEBUG 14523[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,360]DEBUG 14523[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,360]DEBUG 14523[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,361]DEBUG 14524[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,361]DEBUG 14524[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,361]DEBUG 14524[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,362]DEBUG 14525[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=102, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,362]DEBUG 14525[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=101, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,362]DEBUG 14525[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=100, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#99, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,363]DEBUG 14526[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=103, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,363]DEBUG 14526[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=99, roleName=Administrator}
[2015-12-30 00:48:00,363]DEBUG 14526[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=98, orderStatusName=Pending}
[2015-12-30 00:48:00,363]DEBUG 14526[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,364]DEBUG 14527[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:00,365]DEBUG 14528[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,366]DEBUG 14529[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,366]DEBUG 14529[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,366]DEBUG 14529[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,367]DEBUG 14530[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,367]DEBUG 14530[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,367]DEBUG 14530[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=102, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,368]DEBUG 14531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=101, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,368]DEBUG 14531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=100, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#99, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,368]DEBUG 14531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=103, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,368]DEBUG 14531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=99, roleName=Administrator}
[2015-12-30 00:48:00,369]DEBUG 14532[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=98, orderStatusName=Pending}
[2015-12-30 00:48:00,369]DEBUG 14532[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,369]DEBUG 14532[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:00,371]DEBUG 14534[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,371]DEBUG 14534[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,371]DEBUG 14534[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,372]DEBUG 14535[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,372]DEBUG 14535[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,372]DEBUG 14535[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,373]DEBUG 14536[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=102, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,373]DEBUG 14536[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=101, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,373]DEBUG 14536[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=100, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#99, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,374]DEBUG 14537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=103, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,374]DEBUG 14537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=99, roleName=Administrator}
[2015-12-30 00:48:00,374]DEBUG 14537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=98, orderStatusName=Pending}
[2015-12-30 00:48:00,374]DEBUG 14537[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,374]DEBUG 14537[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:00,376]DEBUG 14539[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,376]DEBUG 14539[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,377]DEBUG 14540[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,377]DEBUG 14540[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,377]DEBUG 14540[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,378]DEBUG 14541[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,378]DEBUG 14541[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=102, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,378]DEBUG 14541[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=101, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,379]DEBUG 14542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=100, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#99, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,379]DEBUG 14542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=103, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,381]DEBUG 14544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=99, roleName=Administrator}
[2015-12-30 00:48:00,381]DEBUG 14544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=98, orderStatusName=Pending}
[2015-12-30 00:48:00,381]DEBUG 14544[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,382]DEBUG 14545[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:00,383]DEBUG 14546[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,384]DEBUG 14547[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,384]DEBUG 14547[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,384]DEBUG 14547[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,385]DEBUG 14548[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,385]DEBUG 14548[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,385]DEBUG 14548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=102, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,386]DEBUG 14549[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=101, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,386]DEBUG 14549[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=100, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#99, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,386]DEBUG 14549[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=103, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,386]DEBUG 14549[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=99, roleName=Administrator}
[2015-12-30 00:48:00,387]DEBUG 14550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=98, orderStatusName=Pending}
[2015-12-30 00:48:00,387]DEBUG 14550[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,387]DEBUG 14550[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:00,389]DEBUG 14552[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,389]DEBUG 14552[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,389]DEBUG 14552[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,390]DEBUG 14553[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,390]DEBUG 14553[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,390]DEBUG 14553[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,390]DEBUG 14553[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=102, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,391]DEBUG 14554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=101, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,391]DEBUG 14554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=100, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#99, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,391]DEBUG 14554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#100, id=103, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#100, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#98, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,392]DEBUG 14555[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=99, roleName=Administrator}
[2015-12-30 00:48:00,392]DEBUG 14555[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=98, orderStatusName=Pending}
[2015-12-30 00:48:00,392]DEBUG 14555[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,392]DEBUG 14555[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:00,394]DEBUG 14557[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,394]DEBUG 14557[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2ea089d4, testMethod = testFindByOrderDateLess@OrderDaoTest, testException = [null]]]
[2015-12-30 00:48:00,394]DEBUG 14557[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:00,395]DEBUG 14558[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6d6dac7b]
[2015-12-30 00:48:00,395]DEBUG 14558[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:00,396]DEBUG 14559[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:00,396]DEBUG 14559[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:00,397]DEBUG 14560[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6d6dac7b] after transaction
[2015-12-30 00:48:00,397]DEBUG 14560[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:00,397]DEBUG 14560[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:00,397]DEBUG 14560[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:00,397] INFO 14560[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2ea089d4, testMethod = testFindByOrderDateLess@OrderDaoTest, testException = [null]]]
[2015-12-30 00:48:00,404]DEBUG 14567[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2ea089d4, testMethod = testFindByOrderDateLess@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:00,405]DEBUG 14568[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2015-12-30 00:48:00,405]DEBUG 14568[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2015-12-30 00:48:00,405]DEBUG 14568[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7c82101b, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:00,405]DEBUG 14568[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:00,405]DEBUG 14568[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:00,405]DEBUG 14568[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:00,405]DEBUG 14568[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:00,405]DEBUG 14568[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:00,406]DEBUG 14569[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:00,406]DEBUG 14569[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:00,406]DEBUG 14569[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:00,406]DEBUG 14569[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:00,407]DEBUG 14570[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:00,407]DEBUG 14570[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:00,407]DEBUG 14570[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:00,407]DEBUG 14570[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:00,407]DEBUG 14570[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:00,408]DEBUG 14571[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:00,408]DEBUG 14571[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:00,408]DEBUG 14571[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:00,408]DEBUG 14571[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:00,408]DEBUG 14571[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:00,408]DEBUG 14571[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:00,408]DEBUG 14571[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:00,408]DEBUG 14571[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:00,408]DEBUG 14571[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7c82101b]
[2015-12-30 00:48:00,409]DEBUG 14572[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderStatus' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,409]DEBUG 14572[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7c82101b, testMethod = testFindByOrderStatus@OrderDaoTest, testException = [null]]]
[2015-12-30 00:48:00,409]DEBUG 14572[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:00,413]DEBUG 14576[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOrderStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,416]DEBUG 14579[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292804
[2015-12-30 00:48:00,416]DEBUG 14579[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4f3b8e0f] for Hibernate transaction
[2015-12-30 00:48:00,416]DEBUG 14579[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4f3b8e0f]
[2015-12-30 00:48:00,416]DEBUG 14579[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:00,416]DEBUG 14579[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:00,417]DEBUG 14580[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:00,417]DEBUG 14580[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7c82101b, testMethod = testFindByOrderStatus@OrderDaoTest, testException = [null]]]
[2015-12-30 00:48:00,417] INFO 14580[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (14): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:00,417]DEBUG 14580[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,417]DEBUG 14580[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:00,418]DEBUG 14581[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,419]DEBUG 14582[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,419]DEBUG 14582[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:00,420]DEBUG 14583[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,420]DEBUG 14583[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,420]DEBUG 14583[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:00,421]DEBUG 14584[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,421]DEBUG 14584[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,422]DEBUG 14585[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:00,423]DEBUG 14586[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,423]DEBUG 14586[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,423]DEBUG 14586[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:00,424]DEBUG 14587[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,424]DEBUG 14587[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,424]DEBUG 14587[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:00,425]DEBUG 14588[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,426]DEBUG 14589[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,426]DEBUG 14589[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:00,427]DEBUG 14590[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,427]DEBUG 14590[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,427]DEBUG 14590[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:00,428]DEBUG 14591[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,428]DEBUG 14591[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,428]DEBUG 14591[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:00,430]DEBUG 14593[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,430]DEBUG 14593[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,430]DEBUG 14593[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,433]DEBUG 14596[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[104]]
[2015-12-30 00:48:00,433]DEBUG 14596[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,433]DEBUG 14596[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 104, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,433]DEBUG 14596[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,433]DEBUG 14596[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,435]DEBUG 14598[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[105]]
[2015-12-30 00:48:00,435]DEBUG 14598[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,435]DEBUG 14598[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 105, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,435]DEBUG 14598[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,435]DEBUG 14598[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,436]DEBUG 14599[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[106]]
[2015-12-30 00:48:00,436]DEBUG 14599[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,437]DEBUG 14600[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 106, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,437]DEBUG 14600[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,437]DEBUG 14600[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,438]DEBUG 14601[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[107]]
[2015-12-30 00:48:00,438]DEBUG 14601[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,438]DEBUG 14601[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 107, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,439]DEBUG 14602[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,439]DEBUG 14602[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,440]DEBUG 14603[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[108]]
[2015-12-30 00:48:00,440]DEBUG 14603[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,440]DEBUG 14603[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 108, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,440]DEBUG 14603[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,440]DEBUG 14603[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,441]DEBUG 14604[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[109]]
[2015-12-30 00:48:00,442]DEBUG 14605[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,442]DEBUG 14605[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 109, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,443]DEBUG 14606[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,443]DEBUG 14606[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,443]DEBUG 14606[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,443]DEBUG 14606[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,443]DEBUG 14606[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,444]DEBUG 14607[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=109, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,444]DEBUG 14607[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=104, orderStatusName=Pending}
[2015-12-30 00:48:00,445]DEBUG 14608[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=108, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,445]DEBUG 14608[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=107, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,446]DEBUG 14609[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=106, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#105, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,446]DEBUG 14609[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=105, roleName=Administrator}
[2015-12-30 00:48:00,446]DEBUG 14609[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Orders
[2015-12-30 00:48:00,446]DEBUG 14609[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,447]DEBUG 14610[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:00,447]DEBUG 14610[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,449]DEBUG 14612[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,449]DEBUG 14612[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,449]DEBUG 14612[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:00,450]DEBUG 14613[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,453]DEBUG 14616[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,453]DEBUG 14616[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,453]DEBUG 14616[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,454]DEBUG 14617[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,456]DEBUG 14619[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,456]DEBUG 14619[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,456]DEBUG 14619[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,457]DEBUG 14620[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:00,457]DEBUG 14620[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,457]DEBUG 14620[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:00,458]DEBUG 14621[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,458]DEBUG 14621[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:00,461]DEBUG 14624[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,461]DEBUG 14624[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,461]DEBUG 14624[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.OrderStatusRef=?
[2015-12-30 00:48:00,466]DEBUG 14629[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:00,466]DEBUG 14629[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#106], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#105], EntityKey[com.softserveinc.edu.oms.domain.entities.User#106], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#104], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#107]
[2015-12-30 00:48:00,466]DEBUG 14629[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#106], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#105], EntityKey[com.softserveinc.edu.oms.domain.entities.User#106], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#104], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#108]
[2015-12-30 00:48:00,466]DEBUG 14629[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#106], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#105], EntityKey[com.softserveinc.edu.oms.domain.entities.User#106], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#104], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#109]
[2015-12-30 00:48:00,467]DEBUG 14630[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:00,467]DEBUG 14630[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,467]DEBUG 14630[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:00,467]DEBUG 14630[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,467]DEBUG 14630[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,467]DEBUG 14630[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,468]DEBUG 14631[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,468]DEBUG 14631[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,468]DEBUG 14631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=109, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,468]DEBUG 14631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=104, orderStatusName=Pending}
[2015-12-30 00:48:00,469]DEBUG 14632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=108, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,469]DEBUG 14632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=107, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,469]DEBUG 14632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=106, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#105, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,470]DEBUG 14633[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=105, roleName=Administrator}
[2015-12-30 00:48:00,470]DEBUG 14633[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,470]DEBUG 14633[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:00,471]DEBUG 14634[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,472]DEBUG 14635[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,472]DEBUG 14635[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,473]DEBUG 14636[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,473]DEBUG 14636[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,473]DEBUG 14636[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,473]DEBUG 14636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=109, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,474]DEBUG 14637[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=104, orderStatusName=Pending}
[2015-12-30 00:48:00,474]DEBUG 14637[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=108, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,474]DEBUG 14637[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=107, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,475]DEBUG 14638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=106, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#105, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,475]DEBUG 14638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=105, roleName=Administrator}
[2015-12-30 00:48:00,475]DEBUG 14638[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,475]DEBUG 14638[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:00,477]DEBUG 14640[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,479]DEBUG 14642[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,479]DEBUG 14642[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,480]DEBUG 14643[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,480]DEBUG 14643[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,480]DEBUG 14643[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,480]DEBUG 14643[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=109, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,480]DEBUG 14643[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=104, orderStatusName=Pending}
[2015-12-30 00:48:00,481]DEBUG 14644[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=108, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,481]DEBUG 14644[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=107, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,481]DEBUG 14644[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=106, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#105, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,481]DEBUG 14644[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=105, roleName=Administrator}
[2015-12-30 00:48:00,482]DEBUG 14645[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,482]DEBUG 14645[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:00,483]DEBUG 14646[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,483]DEBUG 14646[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,484]DEBUG 14647[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,484]DEBUG 14647[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,484]DEBUG 14647[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,485]DEBUG 14648[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,485]DEBUG 14648[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=109, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,485]DEBUG 14648[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=104, orderStatusName=Pending}
[2015-12-30 00:48:00,486]DEBUG 14649[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=108, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,486]DEBUG 14649[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=107, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,486]DEBUG 14649[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=106, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#105, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,486]DEBUG 14649[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=105, roleName=Administrator}
[2015-12-30 00:48:00,487]DEBUG 14650[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,487]DEBUG 14650[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:00,488]DEBUG 14651[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,489]DEBUG 14652[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,489]DEBUG 14652[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,490]DEBUG 14653[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,490]DEBUG 14653[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,490]DEBUG 14653[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,490]DEBUG 14653[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=109, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,491]DEBUG 14654[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=104, orderStatusName=Pending}
[2015-12-30 00:48:00,491]DEBUG 14654[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=108, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,491]DEBUG 14654[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=107, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,491]DEBUG 14654[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=106, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#105, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,492]DEBUG 14655[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=105, roleName=Administrator}
[2015-12-30 00:48:00,492]DEBUG 14655[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,492]DEBUG 14655[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:00,494]DEBUG 14657[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,494]DEBUG 14657[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,494]DEBUG 14657[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,495]DEBUG 14658[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,495]DEBUG 14658[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,495]DEBUG 14658[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,496]DEBUG 14659[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=109, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,496]DEBUG 14659[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=104, orderStatusName=Pending}
[2015-12-30 00:48:00,496]DEBUG 14659[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=108, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,497]DEBUG 14660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=107, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,497]DEBUG 14660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=106, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#105, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,497]DEBUG 14660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=105, roleName=Administrator}
[2015-12-30 00:48:00,498]DEBUG 14661[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,498]DEBUG 14661[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:00,501]DEBUG 14664[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,501]DEBUG 14664[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,502]DEBUG 14665[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,502]DEBUG 14665[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,503]DEBUG 14666[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,503]DEBUG 14666[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,503]DEBUG 14666[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=109, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,503]DEBUG 14666[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=104, orderStatusName=Pending}
[2015-12-30 00:48:00,504]DEBUG 14667[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=108, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,504]DEBUG 14667[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=107, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,504]DEBUG 14667[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=106, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#105, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,505]DEBUG 14668[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=105, roleName=Administrator}
[2015-12-30 00:48:00,505]DEBUG 14668[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,505]DEBUG 14668[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:00,506]DEBUG 14669[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,507]DEBUG 14670[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,507]DEBUG 14670[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,508]DEBUG 14671[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,508]DEBUG 14671[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,508]DEBUG 14671[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,508]DEBUG 14671[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=109, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,509]DEBUG 14672[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=104, orderStatusName=Pending}
[2015-12-30 00:48:00,509]DEBUG 14672[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=108, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,509]DEBUG 14672[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=107, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,510]DEBUG 14673[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=106, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#105, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,510]DEBUG 14673[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=105, roleName=Administrator}
[2015-12-30 00:48:00,510]DEBUG 14673[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,510]DEBUG 14673[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:00,512]DEBUG 14675[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,512]DEBUG 14675[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,512]DEBUG 14675[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,513]DEBUG 14676[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,513]DEBUG 14676[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,513]DEBUG 14676[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,514]DEBUG 14677[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=109, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,514]DEBUG 14677[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=104, orderStatusName=Pending}
[2015-12-30 00:48:00,514]DEBUG 14677[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=108, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,514]DEBUG 14677[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#106, id=107, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#106, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#104, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,515]DEBUG 14678[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=106, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#105, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,515]DEBUG 14678[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=105, roleName=Administrator}
[2015-12-30 00:48:00,515]DEBUG 14678[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,515]DEBUG 14678[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:00,517]DEBUG 14680[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,517]DEBUG 14680[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7c82101b, testMethod = testFindByOrderStatus@OrderDaoTest, testException = [null]]]
[2015-12-30 00:48:00,517]DEBUG 14680[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:00,518]DEBUG 14681[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4f3b8e0f]
[2015-12-30 00:48:00,518]DEBUG 14681[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:00,519]DEBUG 14682[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:00,519]DEBUG 14682[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:00,519]DEBUG 14682[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4f3b8e0f] after transaction
[2015-12-30 00:48:00,520]DEBUG 14683[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:00,520]DEBUG 14683[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:00,536]DEBUG 14699[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:00,536] INFO 14699[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7c82101b, testMethod = testFindByOrderStatus@OrderDaoTest, testException = [null]]]
[2015-12-30 00:48:00,537]DEBUG 14700[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7c82101b, testMethod = testFindByOrderStatus@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:00,537]DEBUG 14700[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2015-12-30 00:48:00,538]DEBUG 14701[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2015-12-30 00:48:00,539]DEBUG 14702[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@45c68eef, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:00,539]DEBUG 14702[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:00,539]DEBUG 14702[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:00,539]DEBUG 14702[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:00,539]DEBUG 14702[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:00,539]DEBUG 14702[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:00,539]DEBUG 14702[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:00,540]DEBUG 14703[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:00,540]DEBUG 14703[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:00,540]DEBUG 14703[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:00,540]DEBUG 14703[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:00,540]DEBUG 14703[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:00,540]DEBUG 14703[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:00,540]DEBUG 14703[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:00,540]DEBUG 14703[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:00,540]DEBUG 14703[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:00,540]DEBUG 14703[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:00,541]DEBUG 14704[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:00,541]DEBUG 14704[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:00,541]DEBUG 14704[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:00,541]DEBUG 14704[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:00,541]DEBUG 14704[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:00,541]DEBUG 14704[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:00,541]DEBUG 14704[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@45c68eef]
[2015-12-30 00:48:00,542]DEBUG 14705[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,542]DEBUG 14705[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@45c68eef, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:00,542]DEBUG 14705[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:00,543]DEBUG 14706[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,543]DEBUG 14706[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292805
[2015-12-30 00:48:00,543]DEBUG 14706[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@11307187] for Hibernate transaction
[2015-12-30 00:48:00,543]DEBUG 14706[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@11307187]
[2015-12-30 00:48:00,543]DEBUG 14706[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:00,543]DEBUG 14706[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:00,543]DEBUG 14706[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:00,544]DEBUG 14707[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@45c68eef, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:00,544] INFO 14707[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (15): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:00,544]DEBUG 14707[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,544]DEBUG 14707[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:00,545]DEBUG 14708[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,546]DEBUG 14709[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,546]DEBUG 14709[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:00,548]DEBUG 14711[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,548]DEBUG 14711[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,548]DEBUG 14711[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:00,549]DEBUG 14712[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,550]DEBUG 14713[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,550]DEBUG 14713[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:00,551]DEBUG 14714[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,552]DEBUG 14715[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,552]DEBUG 14715[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:00,553]DEBUG 14716[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,554]DEBUG 14717[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,554]DEBUG 14717[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:00,555]DEBUG 14718[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,555]DEBUG 14718[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,556]DEBUG 14719[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:00,559]DEBUG 14722[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,559]DEBUG 14722[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,559]DEBUG 14722[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:00,561]DEBUG 14724[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,561]DEBUG 14724[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,561]DEBUG 14724[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:00,562]DEBUG 14725[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,562]DEBUG 14725[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,562]DEBUG 14725[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,568]DEBUG 14731[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[110]]
[2015-12-30 00:48:00,569]DEBUG 14732[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,569]DEBUG 14732[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 110, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,569]DEBUG 14732[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,570]DEBUG 14733[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,571]DEBUG 14734[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[111]]
[2015-12-30 00:48:00,571]DEBUG 14734[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,572]DEBUG 14735[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 111, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,572]DEBUG 14735[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,572]DEBUG 14735[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,574]DEBUG 14737[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[112]]
[2015-12-30 00:48:00,574]DEBUG 14737[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,574]DEBUG 14737[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 112, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,575]DEBUG 14738[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,575]DEBUG 14738[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,576]DEBUG 14739[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[113]]
[2015-12-30 00:48:00,576]DEBUG 14739[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,577]DEBUG 14740[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 113, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,577]DEBUG 14740[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,577]DEBUG 14740[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,579]DEBUG 14742[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[114]]
[2015-12-30 00:48:00,580]DEBUG 14743[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,580]DEBUG 14743[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 114, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,580]DEBUG 14743[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,581]DEBUG 14744[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,582]DEBUG 14745[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[115]]
[2015-12-30 00:48:00,582]DEBUG 14745[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,583]DEBUG 14746[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 115, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,583]DEBUG 14746[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,584]DEBUG 14747[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,584]DEBUG 14747[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,584]DEBUG 14747[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,585]DEBUG 14748[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,585]DEBUG 14748[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=111, roleName=Administrator}
[2015-12-30 00:48:00,585]DEBUG 14748[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=113, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,586]DEBUG 14749[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=114, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,586]DEBUG 14749[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=112, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#111, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,586]DEBUG 14749[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=110, orderStatusName=Pending}
[2015-12-30 00:48:00,586]DEBUG 14749[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=115, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,587]DEBUG 14750[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,587]DEBUG 14750[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:00,590]DEBUG 14753[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,591]DEBUG 14754[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,591]DEBUG 14754[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,591]DEBUG 14754[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,592]DEBUG 14755[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,592]DEBUG 14755[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,592]DEBUG 14755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=111, roleName=Administrator}
[2015-12-30 00:48:00,593]DEBUG 14756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=113, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,593]DEBUG 14756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=114, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,593]DEBUG 14756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=112, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#111, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,593]DEBUG 14756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=110, orderStatusName=Pending}
[2015-12-30 00:48:00,594]DEBUG 14757[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=115, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,594]DEBUG 14757[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,594]DEBUG 14757[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:00,596]DEBUG 14759[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,596]DEBUG 14759[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,596]DEBUG 14759[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,597]DEBUG 14760[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,597]DEBUG 14760[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,597]DEBUG 14760[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,597]DEBUG 14760[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=111, roleName=Administrator}
[2015-12-30 00:48:00,598]DEBUG 14761[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=113, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,598]DEBUG 14761[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=114, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,598]DEBUG 14761[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=112, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#111, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,599]DEBUG 14762[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=110, orderStatusName=Pending}
[2015-12-30 00:48:00,599]DEBUG 14762[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=115, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,599]DEBUG 14762[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,599]DEBUG 14762[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:00,601]DEBUG 14764[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,601]DEBUG 14764[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,601]DEBUG 14764[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,602]DEBUG 14765[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,602]DEBUG 14765[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,602]DEBUG 14765[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,603]DEBUG 14766[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=111, roleName=Administrator}
[2015-12-30 00:48:00,603]DEBUG 14766[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=113, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,603]DEBUG 14766[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=114, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,604]DEBUG 14767[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=112, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#111, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,604]DEBUG 14767[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=110, orderStatusName=Pending}
[2015-12-30 00:48:00,604]DEBUG 14767[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=115, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,604]DEBUG 14767[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Orders
[2015-12-30 00:48:00,605]DEBUG 14768[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,605]DEBUG 14768[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:00,605]DEBUG 14768[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,606]DEBUG 14769[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,606]DEBUG 14769[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,606]DEBUG 14769[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:00,607]DEBUG 14770[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,608]DEBUG 14771[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,608]DEBUG 14771[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,608]DEBUG 14771[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,608]DEBUG 14771[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,610]DEBUG 14773[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,611]DEBUG 14774[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,611]DEBUG 14774[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,611]DEBUG 14774[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:00,611]DEBUG 14774[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,612]DEBUG 14775[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:00,612]DEBUG 14775[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,612]DEBUG 14775[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:00,615]DEBUG 14778[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,615]DEBUG 14778[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,615]DEBUG 14778[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:00,617]DEBUG 14780[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,617]DEBUG 14780[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,617]DEBUG 14780[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,618]DEBUG 14781[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,618]DEBUG 14781[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,619]DEBUG 14782[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,619]DEBUG 14782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=111, roleName=Administrator}
[2015-12-30 00:48:00,619]DEBUG 14782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=113, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,619]DEBUG 14782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=114, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,620]DEBUG 14783[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=112, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#111, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,620]DEBUG 14783[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=110, orderStatusName=Pending}
[2015-12-30 00:48:00,620]DEBUG 14783[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=115, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,621]DEBUG 14784[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,621]DEBUG 14784[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:00,622]DEBUG 14785[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,623]DEBUG 14786[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,623]DEBUG 14786[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,623]DEBUG 14786[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,624]DEBUG 14787[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,624]DEBUG 14787[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,624]DEBUG 14787[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=111, roleName=Administrator}
[2015-12-30 00:48:00,624]DEBUG 14787[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=113, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,625]DEBUG 14788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=114, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,625]DEBUG 14788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=112, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#111, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,625]DEBUG 14788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=110, orderStatusName=Pending}
[2015-12-30 00:48:00,626]DEBUG 14789[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=115, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,626]DEBUG 14789[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,626]DEBUG 14789[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:00,627]DEBUG 14790[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,628]DEBUG 14791[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,628]DEBUG 14791[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,629]DEBUG 14792[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,629]DEBUG 14792[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,629]DEBUG 14792[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,629]DEBUG 14792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=111, roleName=Administrator}
[2015-12-30 00:48:00,630]DEBUG 14793[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=113, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,630]DEBUG 14793[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=114, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,630]DEBUG 14793[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=112, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#111, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,631]DEBUG 14794[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=110, orderStatusName=Pending}
[2015-12-30 00:48:00,631]DEBUG 14794[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=115, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,631]DEBUG 14794[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,631]DEBUG 14794[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:00,635]DEBUG 14798[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,637]DEBUG 14800[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,641]DEBUG 14804[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,643]DEBUG 14806[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,643]DEBUG 14806[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,643]DEBUG 14806[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,643]DEBUG 14806[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=111, roleName=Administrator}
[2015-12-30 00:48:00,644]DEBUG 14807[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=113, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,644]DEBUG 14807[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=114, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,645]DEBUG 14808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=112, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#111, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,645]DEBUG 14808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=110, orderStatusName=Pending}
[2015-12-30 00:48:00,645]DEBUG 14808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=115, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,645]DEBUG 14808[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,646]DEBUG 14809[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:00,647]DEBUG 14810[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,647]DEBUG 14810[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,648]DEBUG 14811[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,648]DEBUG 14811[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,649]DEBUG 14812[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,649]DEBUG 14812[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,649]DEBUG 14812[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=111, roleName=Administrator}
[2015-12-30 00:48:00,649]DEBUG 14812[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=113, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,650]DEBUG 14813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=114, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,650]DEBUG 14813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=112, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#111, active=true, login=test, firstName=test, password=test}
[2015-12-30 00:48:00,650]DEBUG 14813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=110, orderStatusName=Pending}
[2015-12-30 00:48:00,651]DEBUG 14814[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#112, id=115, orderDate=Wed Dec 30 00:48:00 EET 2015, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Wed Dec 30 00:48:00 EET 2015, customer=com.softserveinc.edu.oms.domain.entities.User#112, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#110, totalPrice=100.0, preferableDeliveryDate=null}
[2015-12-30 00:48:00,651]DEBUG 14814[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,651]DEBUG 14814[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:00,653]DEBUG 14816[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,653]DEBUG 14816[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@45c68eef, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:00,653]DEBUG 14816[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:00,653]DEBUG 14816[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@11307187]
[2015-12-30 00:48:00,653]DEBUG 14816[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:00,655]DEBUG 14818[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:00,655]DEBUG 14818[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:00,656]DEBUG 14819[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@11307187] after transaction
[2015-12-30 00:48:00,656]DEBUG 14819[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:00,656]DEBUG 14819[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:00,656]DEBUG 14819[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:00,657] INFO 14820[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@45c68eef, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:00,658]DEBUG 14821[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@45c68eef, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:00,659]DEBUG 14822[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@41016a75 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2015-12-30 00:48:00,668]DEBUG 14831[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase].
[2015-12-30 00:48:00,668] INFO 14831[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: using defaults.
[2015-12-30 00:48:00,670]DEBUG 14833[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2015-12-30 00:48:00,670]DEBUG 14833[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2015-12-30 00:48:00,671]DEBUG 14834[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2015-12-30 00:48:00,671]DEBUG 14834[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2015-12-30 00:48:00,671]DEBUG 14834[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2015-12-30 00:48:00,671]DEBUG 14834[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2015-12-30 00:48:00,672]DEBUG 14835[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2015-12-30 00:48:00,672]DEBUG 14835[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2015-12-30 00:48:00,673]DEBUG 14836[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@3f51b349 testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@cd19e19, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:00,678]DEBUG 14841[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:00,679]DEBUG 14842[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:00,679]DEBUG 14842[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:00,681]DEBUG 14844[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:00,681]DEBUG 14844[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:00,681]DEBUG 14844[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:00,682]DEBUG 14845[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:00,682]DEBUG 14845[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:00,682]DEBUG 14845[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:00,682]DEBUG 14845[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:00,683]DEBUG 14846[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:00,683]DEBUG 14846[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:00,683]DEBUG 14846[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'customerTypeDao'
[2015-12-30 00:48:00,684]DEBUG 14847[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:00,689]DEBUG 14852[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:00,689]DEBUG 14852[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'dimensionDao'
[2015-12-30 00:48:00,689]DEBUG 14852[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:00,689]DEBUG 14852[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:00,689]DEBUG 14852[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'orderDao'
[2015-12-30 00:48:00,689]DEBUG 14852[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:00,690]DEBUG 14853[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:00,690]DEBUG 14853[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'orderItemDao'
[2015-12-30 00:48:00,690]DEBUG 14853[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:00,690]DEBUG 14853[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:00,690]DEBUG 14853[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'orderStatusDao'
[2015-12-30 00:48:00,691]DEBUG 14854[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:00,691]DEBUG 14854[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:00,691]DEBUG 14854[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'productDao'
[2015-12-30 00:48:00,691]DEBUG 14854[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:00,691]DEBUG 14854[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:00,691]DEBUG 14854[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'regionDao'
[2015-12-30 00:48:00,692]DEBUG 14855[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:00,692]DEBUG 14855[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:00,692]DEBUG 14855[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'roleDao'
[2015-12-30 00:48:00,692]DEBUG 14855[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:00,692]DEBUG 14855[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:00,693]DEBUG 14856[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'userDao'
[2015-12-30 00:48:00,693]DEBUG 14856[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:00,693]DEBUG 14856[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:00,693]DEBUG 14856[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'sessionFactory'
[2015-12-30 00:48:00,693]DEBUG 14856[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:00,694]DEBUG 14857[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,694]DEBUG 14857[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:00,695]DEBUG 14858[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@cd19e19]
[2015-12-30 00:48:00,696]DEBUG 14859[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2015-12-30 00:48:00,696]DEBUG 14859[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2015-12-30 00:48:00,696]DEBUG 14859[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2015-12-30 00:48:00,696]DEBUG 14859[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2015-12-30 00:48:00,697]DEBUG 14860[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2015-12-30 00:48:00,697]DEBUG 14860[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2015-12-30 00:48:00,697]DEBUG 14860[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2015-12-30 00:48:00,697]DEBUG 14860[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2015-12-30 00:48:00,697]DEBUG 14860[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2015-12-30 00:48:00,697]DEBUG 14860[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2015-12-30 00:48:00,697]DEBUG 14860[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2015-12-30 00:48:00,698]DEBUG 14861[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2015-12-30 00:48:00,699]DEBUG 14862[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2015-12-30 00:48:00,699]DEBUG 14862[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2015-12-30 00:48:00,699]DEBUG 14862[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2015-12-30 00:48:00,699]DEBUG 14862[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2015-12-30 00:48:00,699]DEBUG 14862[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2015-12-30 00:48:00,699]DEBUG 14862[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:00,699]DEBUG 14862[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:00,699]DEBUG 14862[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2015-12-30 00:48:00,700]DEBUG 14863[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2015-12-30 00:48:00,700]DEBUG 14863[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2015-12-30 00:48:00,700]DEBUG 14863[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2015-12-30 00:48:00,700]DEBUG 14863[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2015-12-30 00:48:00,700]DEBUG 14863[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2015-12-30 00:48:00,700]DEBUG 14863[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2015-12-30 00:48:00,700]DEBUG 14863[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2015-12-30 00:48:00,700]DEBUG 14863[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2015-12-30 00:48:00,700]DEBUG 14863[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:00,701]DEBUG 14864[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:00,701]DEBUG 14864[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2015-12-30 00:48:00,701]DEBUG 14864[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:00,701]DEBUG 14864[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:00,701]DEBUG 14864[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2015-12-30 00:48:00,701]DEBUG 14864[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2015-12-30 00:48:00,701]DEBUG 14864[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2015-12-30 00:48:00,701]DEBUG 14864[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2015-12-30 00:48:00,701]DEBUG 14864[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2015-12-30 00:48:00,702]DEBUG 14865[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2015-12-30 00:48:00,711]DEBUG 14874[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,711]DEBUG 14874[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@3f51b349 testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@cd19e19, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:00,711]DEBUG 14874[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2015-12-30 00:48:00,711]DEBUG 14874[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@505c9fe0 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2015-12-30 00:48:00,711]DEBUG 14874[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:00,711]DEBUG 14874[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,712]DEBUG 14875[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292807
[2015-12-30 00:48:00,712]DEBUG 14875[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4a02bb5a] for Hibernate transaction
[2015-12-30 00:48:00,712]DEBUG 14875[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4a02bb5a]
[2015-12-30 00:48:00,712]DEBUG 14875[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:00,712]DEBUG 14875[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:00,712]DEBUG 14875[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:00,712]DEBUG 14875[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@3f51b349 testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@cd19e19, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:00,712] INFO 14875[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:00,712]DEBUG 14875[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@3f51b349 testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@cd19e19, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:00,713]DEBUG 14876[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:00,713]DEBUG 14876[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4a02bb5a]
[2015-12-30 00:48:00,713]DEBUG 14876[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:00,713]DEBUG 14876[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:00,713]DEBUG 14876[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:00,714]DEBUG 14877[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4a02bb5a] after transaction
[2015-12-30 00:48:00,714]DEBUG 14877[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:00,715]DEBUG 14878[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:00,715]DEBUG 14878[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:00,715] INFO 14878[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@3f51b349 testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@cd19e19, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:00,715]DEBUG 14878[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@3f51b349 testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@cd19e19, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:00,715]DEBUG 14878[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@3f51b349 testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2015-12-30 00:48:00,717]DEBUG 14880[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest].
[2015-12-30 00:48:00,718] INFO 14881[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: using defaults.
[2015-12-30 00:48:00,718]DEBUG 14881[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:00,718]DEBUG 14881[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:00,719]DEBUG 14882[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:00,719]DEBUG 14882[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:00,719]DEBUG 14882[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:00,719]DEBUG 14882[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:00,720]DEBUG 14883[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:00,720]DEBUG 14883[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:00,721]DEBUG 14884[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@23041911, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:00,725]DEBUG 14888[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:00,725]DEBUG 14888[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:00,725]DEBUG 14888[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:00,725]DEBUG 14888[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:00,725]DEBUG 14888[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:00,726]DEBUG 14889[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:00,726]DEBUG 14889[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:00,726]DEBUG 14889[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:00,726]DEBUG 14889[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:00,726]DEBUG 14889[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:00,726]DEBUG 14889[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:00,726]DEBUG 14889[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:00,727]DEBUG 14890[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'customerTypeDao'
[2015-12-30 00:48:00,727]DEBUG 14890[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:00,732]DEBUG 14895[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:00,732]DEBUG 14895[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'dimensionDao'
[2015-12-30 00:48:00,732]DEBUG 14895[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:00,732]DEBUG 14895[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:00,732]DEBUG 14895[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'orderDao'
[2015-12-30 00:48:00,732]DEBUG 14895[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:00,733]DEBUG 14896[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:00,733]DEBUG 14896[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'orderItemDao'
[2015-12-30 00:48:00,733]DEBUG 14896[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:00,733]DEBUG 14896[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:00,733]DEBUG 14896[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'orderStatusDao'
[2015-12-30 00:48:00,733]DEBUG 14896[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:00,734]DEBUG 14897[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:00,734]DEBUG 14897[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'productDao'
[2015-12-30 00:48:00,734]DEBUG 14897[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:00,734]DEBUG 14897[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:00,739]DEBUG 14902[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'regionDao'
[2015-12-30 00:48:00,739]DEBUG 14902[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:00,740]DEBUG 14903[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:00,740]DEBUG 14903[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'roleDao'
[2015-12-30 00:48:00,740]DEBUG 14903[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:00,740]DEBUG 14903[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:00,740]DEBUG 14903[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'userDao'
[2015-12-30 00:48:00,740]DEBUG 14903[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:00,741]DEBUG 14904[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:00,741]DEBUG 14904[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'sessionFactory'
[2015-12-30 00:48:00,741]DEBUG 14904[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:00,742]DEBUG 14905[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,742]DEBUG 14905[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:00,742]DEBUG 14905[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@23041911]
[2015-12-30 00:48:00,745]DEBUG 14908[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.setUp()
[2015-12-30 00:48:00,746]DEBUG 14909[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,746]DEBUG 14909[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.tearDown() throws java.lang.Exception
[2015-12-30 00:48:00,746]DEBUG 14909[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,746]DEBUG 14909[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindById()
[2015-12-30 00:48:00,746]DEBUG 14909[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,746]DEBUG 14909[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindAll()
[2015-12-30 00:48:00,747]DEBUG 14910[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testPaging' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,747]DEBUG 14910[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testPaging()
[2015-12-30 00:48:00,747]DEBUG 14910[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAllWithSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,747]DEBUG 14910[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindAllWithSorting()
[2015-12-30 00:48:00,747]DEBUG 14910[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testRowCountWithCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,748]DEBUG 14911[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testRowCountWithCriterions()
[2015-12-30 00:48:00,748]DEBUG 14911[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrder' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,748]DEBUG 14911[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindByOrder()
[2015-12-30 00:48:00,748]DEBUG 14911[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2015-12-30 00:48:00,748]DEBUG 14911[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2015-12-30 00:48:00,748]DEBUG 14911[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2015-12-30 00:48:00,748]DEBUG 14911[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2015-12-30 00:48:00,749]DEBUG 14912[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2015-12-30 00:48:00,749]DEBUG 14912[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2015-12-30 00:48:00,749]DEBUG 14912[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2015-12-30 00:48:00,749]DEBUG 14912[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2015-12-30 00:48:00,749]DEBUG 14912[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2015-12-30 00:48:00,749]DEBUG 14912[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2015-12-30 00:48:00,749]DEBUG 14912[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,750]DEBUG 14913[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2015-12-30 00:48:00,750]DEBUG 14913[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2015-12-30 00:48:00,750]DEBUG 14913[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2015-12-30 00:48:00,750]DEBUG 14913[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2015-12-30 00:48:00,750]DEBUG 14913[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2015-12-30 00:48:00,750]DEBUG 14913[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2015-12-30 00:48:00,750]DEBUG 14913[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2015-12-30 00:48:00,750]DEBUG 14913[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:00,752]DEBUG 14915[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:00,752]DEBUG 14915[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2015-12-30 00:48:00,752]DEBUG 14915[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2015-12-30 00:48:00,752]DEBUG 14915[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2015-12-30 00:48:00,752]DEBUG 14915[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2015-12-30 00:48:00,753]DEBUG 14916[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2015-12-30 00:48:00,753]DEBUG 14916[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2015-12-30 00:48:00,753]DEBUG 14916[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2015-12-30 00:48:00,753]DEBUG 14916[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2015-12-30 00:48:00,753]DEBUG 14916[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2015-12-30 00:48:00,753]DEBUG 14916[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:00,753]DEBUG 14916[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:00,753]DEBUG 14916[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2015-12-30 00:48:00,753]DEBUG 14916[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:00,754]DEBUG 14917[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:00,754]DEBUG 14917[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2015-12-30 00:48:00,754]DEBUG 14917[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2015-12-30 00:48:00,754]DEBUG 14917[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2015-12-30 00:48:00,754]DEBUG 14917[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2015-12-30 00:48:00,754]DEBUG 14917[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2015-12-30 00:48:00,754]DEBUG 14917[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2015-12-30 00:48:00,775]DEBUG 14938[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,775]DEBUG 14938[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@23041911, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:00,775]DEBUG 14938[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:00,775]DEBUG 14938[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@3f7b7a85 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:00,775]DEBUG 14938[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:00,776]DEBUG 14939[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,776]DEBUG 14939[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292807
[2015-12-30 00:48:00,776]DEBUG 14939[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6a908be8] for Hibernate transaction
[2015-12-30 00:48:00,776]DEBUG 14939[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6a908be8]
[2015-12-30 00:48:00,776]DEBUG 14939[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:00,776]DEBUG 14939[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:00,777]DEBUG 14940[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:00,777]DEBUG 14940[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@23041911, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:00,777] INFO 14940[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:00,777]DEBUG 14940[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,777]DEBUG 14940[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:00,779]DEBUG 14942[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,779]DEBUG 14942[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,779]DEBUG 14942[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:00,780]DEBUG 14943[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,781]DEBUG 14944[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,781]DEBUG 14944[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:00,782]DEBUG 14945[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,782]DEBUG 14945[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,785]DEBUG 14948[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:00,786]DEBUG 14949[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,786]DEBUG 14949[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,786]DEBUG 14949[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:00,788]DEBUG 14951[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,788]DEBUG 14951[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,788]DEBUG 14951[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:00,789]DEBUG 14952[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,789]DEBUG 14952[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,789]DEBUG 14952[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:00,790]DEBUG 14953[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,791]DEBUG 14954[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,791]DEBUG 14954[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:00,792]DEBUG 14955[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,793]DEBUG 14956[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,793]DEBUG 14956[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:00,794]DEBUG 14957[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,794]DEBUG 14957[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,794]DEBUG 14957[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,795]DEBUG 14958[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[116]]
[2015-12-30 00:48:00,796]DEBUG 14959[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,796]DEBUG 14959[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 116, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,796]DEBUG 14959[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,796]DEBUG 14959[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,797]DEBUG 14960[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[117]]
[2015-12-30 00:48:00,797]DEBUG 14960[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,797]DEBUG 14960[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 117, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,798]DEBUG 14961[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,798]DEBUG 14961[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,799]DEBUG 14962[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[118]]
[2015-12-30 00:48:00,799]DEBUG 14962[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,799]DEBUG 14962[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 118, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,799]DEBUG 14962[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,799]DEBUG 14962[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,801]DEBUG 14964[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[119]]
[2015-12-30 00:48:00,801]DEBUG 14964[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,801]DEBUG 14964[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 119, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,801]DEBUG 14964[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,801]DEBUG 14964[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,802]DEBUG 14965[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[120]]
[2015-12-30 00:48:00,802]DEBUG 14965[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,803]DEBUG 14966[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 120, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,803]DEBUG 14966[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,803]DEBUG 14966[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,804]DEBUG 14967[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[121]]
[2015-12-30 00:48:00,804]DEBUG 14967[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,804]DEBUG 14967[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 121, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,805]DEBUG 14968[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,805]DEBUG 14968[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,806]DEBUG 14969[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,808]DEBUG 14971[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,809]DEBUG 14972[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,809]DEBUG 14972[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=117, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,809]DEBUG 14972[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=119, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,809]DEBUG 14972[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#118, id=120, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#119, order=com.softserveinc.edu.oms.domain.entities.Order#116, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,810]DEBUG 14973[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#118, id=121, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#119, order=com.softserveinc.edu.oms.domain.entities.Order#117, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,810]DEBUG 14973[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=118, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,810]DEBUG 14973[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=116, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,811]DEBUG 14974[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderItems
[2015-12-30 00:48:00,811]DEBUG 14974[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,811]DEBUG 14974[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,812]DEBUG 14975[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:00,812]DEBUG 14975[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,819]DEBUG 14982[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 2
[2015-12-30 00:48:00,822]DEBUG 14985[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,822]DEBUG 14985[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,822]DEBUG 14985[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:00,823]DEBUG 14986[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,825]DEBUG 14988[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,826]DEBUG 14989[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,826]DEBUG 14989[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts, ID) values (?, ?, ?)
[2015-12-30 00:48:00,828]DEBUG 14991[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,832]DEBUG 14995[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,832]DEBUG 14995[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,832]DEBUG 14995[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,832]DEBUG 14995[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:00,832]DEBUG 14995[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,832]DEBUG 14995[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 2
[2015-12-30 00:48:00,835]DEBUG 14998[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,835]DEBUG 14998[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,835]DEBUG 14998[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:00,836]DEBUG 14999[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,837]DEBUG 15000[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,837]DEBUG 15000[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,837]DEBUG 15000[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,837]DEBUG 15000[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,837]DEBUG 15000[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,837]DEBUG 15000[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=117, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,837]DEBUG 15000[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=119, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,838]DEBUG 15001[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#118, id=120, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#119, order=com.softserveinc.edu.oms.domain.entities.Order#116, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,838]DEBUG 15001[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#118, id=121, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#119, order=com.softserveinc.edu.oms.domain.entities.Order#117, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,838]DEBUG 15001[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=118, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,838]DEBUG 15001[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=116, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,838]DEBUG 15001[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,838]DEBUG 15001[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:00,839]DEBUG 15002[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,839]DEBUG 15002[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,840]DEBUG 15003[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,840]DEBUG 15003[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,840]DEBUG 15003[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,840]DEBUG 15003[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,842]DEBUG 15005[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=117, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,842]DEBUG 15005[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=119, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,843]DEBUG 15006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#118, id=120, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#119, order=com.softserveinc.edu.oms.domain.entities.Order#116, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,843]DEBUG 15006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#118, id=121, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#119, order=com.softserveinc.edu.oms.domain.entities.Order#117, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,843]DEBUG 15006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=118, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,843]DEBUG 15006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=116, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,843]DEBUG 15006[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,843]DEBUG 15006[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:00,846]DEBUG 15009[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,846]DEBUG 15009[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,846]DEBUG 15009[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,847]DEBUG 15010[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,847]DEBUG 15010[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,847]DEBUG 15010[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,848]DEBUG 15011[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=117, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,848]DEBUG 15011[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=119, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,848]DEBUG 15011[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#118, id=120, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#119, order=com.softserveinc.edu.oms.domain.entities.Order#116, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,848]DEBUG 15011[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#118, id=121, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#119, order=com.softserveinc.edu.oms.domain.entities.Order#117, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,848]DEBUG 15011[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=118, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,849]DEBUG 15012[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=116, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,849]DEBUG 15012[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,849]DEBUG 15012[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:00,850]DEBUG 15013[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,851]DEBUG 15014[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,851]DEBUG 15014[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,852]DEBUG 15015[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,852]DEBUG 15015[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,852]DEBUG 15015[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,852]DEBUG 15015[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=117, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,852]DEBUG 15015[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=119, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,853]DEBUG 15016[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#118, id=120, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#119, order=com.softserveinc.edu.oms.domain.entities.Order#116, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,853]DEBUG 15016[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#118, id=121, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#119, order=com.softserveinc.edu.oms.domain.entities.Order#117, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,853]DEBUG 15016[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=118, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,854]DEBUG 15017[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=116, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,854]DEBUG 15017[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,854]DEBUG 15017[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:00,855]DEBUG 15018[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,856]DEBUG 15019[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,856]DEBUG 15019[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,857]DEBUG 15020[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,857]DEBUG 15020[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,857]DEBUG 15020[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,857]DEBUG 15020[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=117, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,857]DEBUG 15020[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=119, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,858]DEBUG 15021[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#118, id=120, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#119, order=com.softserveinc.edu.oms.domain.entities.Order#116, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,858]DEBUG 15021[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#118, id=121, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#119, order=com.softserveinc.edu.oms.domain.entities.Order#117, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,858]DEBUG 15021[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=118, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,859]DEBUG 15022[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=116, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,859]DEBUG 15022[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,859]DEBUG 15022[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:00,860]DEBUG 15023[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,861]DEBUG 15024[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,861]DEBUG 15024[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,861]DEBUG 15024[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,862]DEBUG 15025[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,862]DEBUG 15025[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,864]DEBUG 15027[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=117, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,864]DEBUG 15027[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=119, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,865]DEBUG 15028[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#118, id=120, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#119, order=com.softserveinc.edu.oms.domain.entities.Order#116, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,865]DEBUG 15028[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#118, id=121, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#119, order=com.softserveinc.edu.oms.domain.entities.Order#117, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,865]DEBUG 15028[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=118, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,865]DEBUG 15028[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=116, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,866]DEBUG 15029[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,866]DEBUG 15029[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:00,867]DEBUG 15030[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,868]DEBUG 15031[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,868]DEBUG 15031[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,870]DEBUG 15033[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,870]DEBUG 15033[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,871]DEBUG 15034[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,871]DEBUG 15034[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=117, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,871]DEBUG 15034[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=119, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,871]DEBUG 15034[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#118, id=120, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#119, order=com.softserveinc.edu.oms.domain.entities.Order#116, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,872]DEBUG 15035[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#118, id=121, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#119, order=com.softserveinc.edu.oms.domain.entities.Order#117, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,872]DEBUG 15035[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=118, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,872]DEBUG 15035[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=116, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,873]DEBUG 15036[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,873]DEBUG 15036[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:00,875]DEBUG 15038[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,875]DEBUG 15038[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,875]DEBUG 15038[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,876]DEBUG 15039[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,876]DEBUG 15039[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,876]DEBUG 15039[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,877]DEBUG 15040[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=117, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,877]DEBUG 15040[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=119, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,877]DEBUG 15040[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#118, id=120, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#119, order=com.softserveinc.edu.oms.domain.entities.Order#116, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,878]DEBUG 15041[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#118, id=121, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#119, order=com.softserveinc.edu.oms.domain.entities.Order#117, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,878]DEBUG 15041[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=118, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,878]DEBUG 15041[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=116, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,878]DEBUG 15041[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,879]DEBUG 15042[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:00,880]DEBUG 15043[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,880]DEBUG 15043[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@23041911, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:00,881]DEBUG 15044[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:00,881]DEBUG 15044[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6a908be8]
[2015-12-30 00:48:00,881]DEBUG 15044[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:00,882]DEBUG 15045[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:00,882]DEBUG 15045[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:00,883]DEBUG 15046[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6a908be8] after transaction
[2015-12-30 00:48:00,883]DEBUG 15046[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:00,883]DEBUG 15046[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:00,883]DEBUG 15046[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:00,887] INFO 15050[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@23041911, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:00,887]DEBUG 15050[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@23041911, testMethod = testFindById@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:00,888]DEBUG 15051[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:00,888]DEBUG 15051[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:00,888]DEBUG 15051[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3845180e, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:00,888]DEBUG 15051[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:00,888]DEBUG 15051[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:00,888]DEBUG 15051[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:00,889]DEBUG 15052[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:00,889]DEBUG 15052[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:00,889]DEBUG 15052[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:00,890]DEBUG 15053[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:00,890]DEBUG 15053[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:00,890]DEBUG 15053[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:00,890]DEBUG 15053[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:00,890]DEBUG 15053[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:00,890]DEBUG 15053[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:00,891]DEBUG 15054[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:00,891]DEBUG 15054[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:00,891]DEBUG 15054[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:00,891]DEBUG 15054[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:00,891]DEBUG 15054[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:00,891]DEBUG 15054[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:00,891]DEBUG 15054[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:00,891]DEBUG 15054[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:00,891]DEBUG 15054[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:00,892]DEBUG 15055[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:00,892]DEBUG 15055[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3845180e]
[2015-12-30 00:48:00,892]DEBUG 15055[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,892]DEBUG 15055[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3845180e, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:00,892]DEBUG 15055[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:00,893]DEBUG 15056[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:00,893]DEBUG 15056[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292808
[2015-12-30 00:48:00,893]DEBUG 15056[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@150718c9] for Hibernate transaction
[2015-12-30 00:48:00,893]DEBUG 15056[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@150718c9]
[2015-12-30 00:48:00,893]DEBUG 15056[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:00,893]DEBUG 15056[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:00,893]DEBUG 15056[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:00,894]DEBUG 15057[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3845180e, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:00,894] INFO 15057[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:00,894]DEBUG 15057[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,894]DEBUG 15057[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:00,895]DEBUG 15058[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,895]DEBUG 15058[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,895]DEBUG 15058[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:00,897]DEBUG 15060[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,897]DEBUG 15060[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,897]DEBUG 15060[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:00,898]DEBUG 15061[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,898]DEBUG 15061[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,898]DEBUG 15061[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:00,899]DEBUG 15062[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,899]DEBUG 15062[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,900]DEBUG 15063[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:00,901]DEBUG 15064[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,901]DEBUG 15064[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,901]DEBUG 15064[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:00,902]DEBUG 15065[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,902]DEBUG 15065[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,902]DEBUG 15065[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:00,904]DEBUG 15067[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,904]DEBUG 15067[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,904]DEBUG 15067[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:00,905]DEBUG 15068[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,906]DEBUG 15069[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,906]DEBUG 15069[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:00,907]DEBUG 15070[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,909]DEBUG 15072[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,910]DEBUG 15073[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,911]DEBUG 15074[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[122]]
[2015-12-30 00:48:00,911]DEBUG 15074[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,911]DEBUG 15074[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 122, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,912]DEBUG 15075[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,912]DEBUG 15075[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,914]DEBUG 15077[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[123]]
[2015-12-30 00:48:00,914]DEBUG 15077[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,914]DEBUG 15077[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 123, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,914]DEBUG 15077[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,915]DEBUG 15078[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,916]DEBUG 15079[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[124]]
[2015-12-30 00:48:00,916]DEBUG 15079[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,916]DEBUG 15079[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 124, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,917]DEBUG 15080[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,917]DEBUG 15080[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,918]DEBUG 15081[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[125]]
[2015-12-30 00:48:00,918]DEBUG 15081[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,918]DEBUG 15081[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 125, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,919]DEBUG 15082[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,919]DEBUG 15082[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,920]DEBUG 15083[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[126]]
[2015-12-30 00:48:00,920]DEBUG 15083[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,920]DEBUG 15083[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 126, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,921]DEBUG 15084[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,921]DEBUG 15084[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:00,922]DEBUG 15085[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[127]]
[2015-12-30 00:48:00,922]DEBUG 15085[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,922]DEBUG 15085[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 127, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:00,927]DEBUG 15090[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,927]DEBUG 15090[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,928]DEBUG 15091[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,928]DEBUG 15091[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,928]DEBUG 15091[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,928]DEBUG 15091[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=124, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,928]DEBUG 15091[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=127, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#123, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,928]DEBUG 15091[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=126, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#122, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,928]DEBUG 15091[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=125, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,929]DEBUG 15092[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=122, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,929]DEBUG 15092[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=123, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,929]DEBUG 15092[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderItems
[2015-12-30 00:48:00,929]DEBUG 15092[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,929]DEBUG 15092[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,929]DEBUG 15092[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:00,929]DEBUG 15092[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,930]DEBUG 15093[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 2
[2015-12-30 00:48:00,933]DEBUG 15096[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,933]DEBUG 15096[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,933]DEBUG 15096[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:00,933]DEBUG 15096[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,935]DEBUG 15098[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,935]DEBUG 15098[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,935]DEBUG 15098[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts, ID) values (?, ?, ?)
[2015-12-30 00:48:00,935]DEBUG 15098[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:00,936]DEBUG 15099[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,936]DEBUG 15099[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,937]DEBUG 15100[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,937]DEBUG 15100[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:00,937]DEBUG 15100[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:00,937]DEBUG 15100[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 2
[2015-12-30 00:48:00,939]DEBUG 15102[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,940]DEBUG 15103[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,940]DEBUG 15103[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_9_, this_.Cost as Cost8_9_, this_.DimensionRef as Dimensio5_8_9_, this_.ItemPrice as ItemPrice8_9_, this_.OrderRef as OrderRef8_9_, this_.ProductRef as ProductRef8_9_, this_.Quantity as Quantity8_9_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, customerty5_.ID as ID2_3_, customerty5_.Discount as Discount2_3_, customerty5_.MaxRange as MaxRange2_3_, customerty5_.MinRange as MinRange2_3_, customerty5_.TypeName as TypeName2_3_, region6_.ID as ID1_4_, region6_.RegionName as RegionName1_4_, role7_.ID as ID0_5_, role7_.RoleName as RoleName0_5_, user8_.ID as ID3_6_, user8_.IsUserActive as IsUserAc2_3_6_, user8_.Balance as Balance3_6_, user8_.CustomerTypeRef as Customer9_3_6_, user8_.Email as Email3_6_, user8_.FirstName as FirstName3_6_, user8_.LastName as LastName3_6_, user8_.Login as Login3_6_, user8_.Password as Password3_6_, user8_.RegionRef as RegionRef3_6_, user8_.RoleRef as RoleRef3_6_, orderstatu9_.ID as ID4_7_, orderstatu9_.OrederStatusName as OrederSt2_4_7_, product10_.ID as ID6_8_, product10_.IsProductActive as IsProduc2_6_8_, product10_.ProductDescription as ProductD3_6_8_, product10_.ProductName as ProductN4_6_8_, product10_.ProductPrice as ProductP5_6_8_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join CustomerTypes customerty5_ on user4_.CustomerTypeRef=customerty5_.ID left outer join Regions region6_ on user4_.RegionRef=region6_.ID left outer join Roles role7_ on user4_.RoleRef=role7_.ID left outer join Users user8_ on order3_.Customer=user8_.ID left outer join OrderStatuses orderstatu9_ on order3_.OrderStatusRef=orderstatu9_.ID left outer join Products product10_ on this_.ProductRef=product10_.ID
[2015-12-30 00:48:00,948]DEBUG 15111[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:00,949]DEBUG 15112[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#125], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#122], null, null, null, null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#124], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#126]
[2015-12-30 00:48:00,949]DEBUG 15112[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#125], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#123], null, null, null, null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#124], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#127]
[2015-12-30 00:48:00,949]DEBUG 15112[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:00,950]DEBUG 15113[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,950]DEBUG 15113[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:00,950]DEBUG 15113[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,951]DEBUG 15114[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,951]DEBUG 15114[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,951]DEBUG 15114[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,952]DEBUG 15115[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,952]DEBUG 15115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=124, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,952]DEBUG 15115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=127, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#123, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,953]DEBUG 15116[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=126, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#122, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,953]DEBUG 15116[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=125, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,953]DEBUG 15116[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=122, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,953]DEBUG 15116[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=123, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,954]DEBUG 15117[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,954]DEBUG 15117[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:00,955]DEBUG 15118[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,956]DEBUG 15119[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,956]DEBUG 15119[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,956]DEBUG 15119[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,956]DEBUG 15119[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,957]DEBUG 15120[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,957]DEBUG 15120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=124, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,957]DEBUG 15120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=127, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#123, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,957]DEBUG 15120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=126, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#122, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,958]DEBUG 15121[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=125, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,958]DEBUG 15121[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=122, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,958]DEBUG 15121[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=123, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,958]DEBUG 15121[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,958]DEBUG 15121[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:00,961]DEBUG 15124[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,961]DEBUG 15124[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,962]DEBUG 15125[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,962]DEBUG 15125[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,962]DEBUG 15125[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,962]DEBUG 15125[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,963]DEBUG 15126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=124, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,963]DEBUG 15126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=127, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#123, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,963]DEBUG 15126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=126, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#122, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,963]DEBUG 15126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=125, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,963]DEBUG 15126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=122, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,963]DEBUG 15126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=123, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,964]DEBUG 15127[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,964]DEBUG 15127[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:00,965]DEBUG 15128[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,966]DEBUG 15129[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,966]DEBUG 15129[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,966]DEBUG 15129[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,967]DEBUG 15130[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,967]DEBUG 15130[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,967]DEBUG 15130[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=124, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,967]DEBUG 15130[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=127, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#123, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,968]DEBUG 15131[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=126, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#122, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,968]DEBUG 15131[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=125, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,968]DEBUG 15131[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=122, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,968]DEBUG 15131[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=123, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,969]DEBUG 15132[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,969]DEBUG 15132[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:00,970]DEBUG 15133[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,971]DEBUG 15134[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,971]DEBUG 15134[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,972]DEBUG 15135[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,972]DEBUG 15135[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,972]DEBUG 15135[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,972]DEBUG 15135[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=124, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,973]DEBUG 15136[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=127, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#123, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,973]DEBUG 15136[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=126, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#122, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,973]DEBUG 15136[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=125, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,973]DEBUG 15136[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=122, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,974]DEBUG 15137[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=123, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,974]DEBUG 15137[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,974]DEBUG 15137[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:00,975]DEBUG 15138[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,976]DEBUG 15139[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,976]DEBUG 15139[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,977]DEBUG 15140[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,977]DEBUG 15140[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,977]DEBUG 15140[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,977]DEBUG 15140[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=124, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,978]DEBUG 15141[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=127, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#123, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,978]DEBUG 15141[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=126, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#122, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,978]DEBUG 15141[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=125, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,979]DEBUG 15142[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=122, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,979]DEBUG 15142[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=123, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,979]DEBUG 15142[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,979]DEBUG 15142[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:00,983]DEBUG 15146[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,983]DEBUG 15146[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,983]DEBUG 15146[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,984]DEBUG 15147[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,984]DEBUG 15147[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,984]DEBUG 15147[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,984]DEBUG 15147[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=124, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,985]DEBUG 15148[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=127, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#123, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,985]DEBUG 15148[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=126, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#122, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,985]DEBUG 15148[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=125, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,986]DEBUG 15149[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=122, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,986]DEBUG 15149[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=123, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,986]DEBUG 15149[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,986]DEBUG 15149[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:00,988]DEBUG 15151[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,988]DEBUG 15151[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,988]DEBUG 15151[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,989]DEBUG 15152[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,989]DEBUG 15152[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,989]DEBUG 15152[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,989]DEBUG 15152[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=124, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,990]DEBUG 15153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=127, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#123, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,990]DEBUG 15153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=126, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#122, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,990]DEBUG 15153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=125, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,991]DEBUG 15154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=122, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,991]DEBUG 15154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=123, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,991]DEBUG 15154[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,991]DEBUG 15154[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:00,993]DEBUG 15156[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,993]DEBUG 15156[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:00,993]DEBUG 15156[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:00,994]DEBUG 15157[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:00,994]DEBUG 15157[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:00,994]DEBUG 15157[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:00,994]DEBUG 15157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=124, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:00,995]DEBUG 15158[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=127, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#123, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:00,995]DEBUG 15158[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#124, id=126, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#125, order=com.softserveinc.edu.oms.domain.entities.Order#122, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:00,995]DEBUG 15158[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=125, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:00,996]DEBUG 15159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=122, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,996]DEBUG 15159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=123, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:00,996]DEBUG 15159[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:00,996]DEBUG 15159[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:00,998]DEBUG 15161[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:00,998]DEBUG 15161[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3845180e, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:00,998]DEBUG 15161[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:00,998]DEBUG 15161[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@150718c9]
[2015-12-30 00:48:00,998]DEBUG 15161[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:01,000]DEBUG 15163[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:01,000]DEBUG 15163[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:01,000]DEBUG 15163[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@150718c9] after transaction
[2015-12-30 00:48:01,000]DEBUG 15163[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:01,001]DEBUG 15164[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:01,001]DEBUG 15164[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:01,001] INFO 15164[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3845180e, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:01,002]DEBUG 15165[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3845180e, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:01,003]DEBUG 15166[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:01,003]DEBUG 15166[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:01,003]DEBUG 15166[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@686cfb7d, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:01,005]DEBUG 15168[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:01,005]DEBUG 15168[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:01,005]DEBUG 15168[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:01,005]DEBUG 15168[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:01,006]DEBUG 15169[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:01,006]DEBUG 15169[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:01,006]DEBUG 15169[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:01,006]DEBUG 15169[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:01,006]DEBUG 15169[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:01,006]DEBUG 15169[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:01,006]DEBUG 15169[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:01,006]DEBUG 15169[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:01,006]DEBUG 15169[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:01,007]DEBUG 15170[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:01,007]DEBUG 15170[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:01,007]DEBUG 15170[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:01,007]DEBUG 15170[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:01,007]DEBUG 15170[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:01,007]DEBUG 15170[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:01,007]DEBUG 15170[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:01,007]DEBUG 15170[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:01,007]DEBUG 15170[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:01,008]DEBUG 15171[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@686cfb7d]
[2015-12-30 00:48:01,008]DEBUG 15171[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testPaging' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,008]DEBUG 15171[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@686cfb7d, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:01,008]DEBUG 15171[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:01,009]DEBUG 15172[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testPaging]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,009]DEBUG 15172[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292810
[2015-12-30 00:48:01,009]DEBUG 15172[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@566624f0] for Hibernate transaction
[2015-12-30 00:48:01,009]DEBUG 15172[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@566624f0]
[2015-12-30 00:48:01,010]DEBUG 15173[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:01,010]DEBUG 15173[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:01,010]DEBUG 15173[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:01,010]DEBUG 15173[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@686cfb7d, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:01,010] INFO 15173[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:01,011]DEBUG 15174[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,011]DEBUG 15174[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:01,012]DEBUG 15175[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,013]DEBUG 15176[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,013]DEBUG 15176[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:01,014]DEBUG 15177[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,014]DEBUG 15177[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,014]DEBUG 15177[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:01,015]DEBUG 15178[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,015]DEBUG 15178[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,016]DEBUG 15179[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:01,017]DEBUG 15180[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,017]DEBUG 15180[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,017]DEBUG 15180[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:01,018]DEBUG 15181[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,019]DEBUG 15182[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,019]DEBUG 15182[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:01,020]DEBUG 15183[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,021]DEBUG 15184[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,021]DEBUG 15184[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:01,022]DEBUG 15185[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,023]DEBUG 15186[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,025]DEBUG 15188[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:01,026]DEBUG 15189[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,026]DEBUG 15189[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,026]DEBUG 15189[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:01,027]DEBUG 15190[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,027]DEBUG 15190[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,027]DEBUG 15190[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,029]DEBUG 15192[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[128]]
[2015-12-30 00:48:01,029]DEBUG 15192[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,029]DEBUG 15192[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 128, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,029]DEBUG 15192[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,029]DEBUG 15192[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,030]DEBUG 15193[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[129]]
[2015-12-30 00:48:01,030]DEBUG 15193[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,031]DEBUG 15194[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 129, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,031]DEBUG 15194[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,031]DEBUG 15194[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,032]DEBUG 15195[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[130]]
[2015-12-30 00:48:01,032]DEBUG 15195[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,032]DEBUG 15195[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 130, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,032]DEBUG 15195[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,033]DEBUG 15196[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,034]DEBUG 15197[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[131]]
[2015-12-30 00:48:01,034]DEBUG 15197[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,034]DEBUG 15197[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 131, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,034]DEBUG 15197[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,034]DEBUG 15197[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,035]DEBUG 15198[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[132]]
[2015-12-30 00:48:01,035]DEBUG 15198[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,036]DEBUG 15199[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 132, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,036]DEBUG 15199[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,036]DEBUG 15199[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,037]DEBUG 15200[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[133]]
[2015-12-30 00:48:01,037]DEBUG 15200[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,037]DEBUG 15200[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 133, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,038]DEBUG 15201[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,043]DEBUG 15206[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,043]DEBUG 15206[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,044]DEBUG 15207[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,044]DEBUG 15207[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,044]DEBUG 15207[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=128, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,044]DEBUG 15207[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=133, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#129, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,044]DEBUG 15207[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=129, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,044]DEBUG 15207[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=132, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#128, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,044]DEBUG 15207[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=131, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,045]DEBUG 15208[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=130, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,045]DEBUG 15208[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderItems
[2015-12-30 00:48:01,049]DEBUG 15212[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,049]DEBUG 15212[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,049]DEBUG 15212[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,050]DEBUG 15213[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,050]DEBUG 15213[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 2
[2015-12-30 00:48:01,052]DEBUG 15215[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,052]DEBUG 15215[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,052]DEBUG 15215[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:01,052]DEBUG 15215[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:01,054]DEBUG 15217[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,054]DEBUG 15217[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,054]DEBUG 15217[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts, ID) values (?, ?, ?)
[2015-12-30 00:48:01,054]DEBUG 15217[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:01,055]DEBUG 15218[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,055]DEBUG 15218[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,056]DEBUG 15219[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,056]DEBUG 15219[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,056]DEBUG 15219[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,056]DEBUG 15219[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 2
[2015-12-30 00:48:01,058]DEBUG 15221[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,059]DEBUG 15222[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,059]DEBUG 15222[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_9_, this_.Cost as Cost8_9_, this_.DimensionRef as Dimensio5_8_9_, this_.ItemPrice as ItemPrice8_9_, this_.OrderRef as OrderRef8_9_, this_.ProductRef as ProductRef8_9_, this_.Quantity as Quantity8_9_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, customerty5_.ID as ID2_3_, customerty5_.Discount as Discount2_3_, customerty5_.MaxRange as MaxRange2_3_, customerty5_.MinRange as MinRange2_3_, customerty5_.TypeName as TypeName2_3_, region6_.ID as ID1_4_, region6_.RegionName as RegionName1_4_, role7_.ID as ID0_5_, role7_.RoleName as RoleName0_5_, user8_.ID as ID3_6_, user8_.IsUserActive as IsUserAc2_3_6_, user8_.Balance as Balance3_6_, user8_.CustomerTypeRef as Customer9_3_6_, user8_.Email as Email3_6_, user8_.FirstName as FirstName3_6_, user8_.LastName as LastName3_6_, user8_.Login as Login3_6_, user8_.Password as Password3_6_, user8_.RegionRef as RegionRef3_6_, user8_.RoleRef as RoleRef3_6_, orderstatu9_.ID as ID4_7_, orderstatu9_.OrederStatusName as OrederSt2_4_7_, product10_.ID as ID6_8_, product10_.IsProductActive as IsProduc2_6_8_, product10_.ProductDescription as ProductD3_6_8_, product10_.ProductName as ProductN4_6_8_, product10_.ProductPrice as ProductP5_6_8_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join CustomerTypes customerty5_ on user4_.CustomerTypeRef=customerty5_.ID left outer join Regions region6_ on user4_.RegionRef=region6_.ID left outer join Roles role7_ on user4_.RoleRef=role7_.ID left outer join Users user8_ on order3_.Customer=user8_.ID left outer join OrderStatuses orderstatu9_ on order3_.OrderStatusRef=orderstatu9_.ID left outer join Products product10_ on this_.ProductRef=product10_.ID where this_.OrderRef=? limit ?
[2015-12-30 00:48:01,067]DEBUG 15230[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:01,067]DEBUG 15230[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#131], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#128], null, null, null, null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#130], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#132]
[2015-12-30 00:48:01,067]DEBUG 15230[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:01,067]DEBUG 15230[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,067]DEBUG 15230[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:01,069]DEBUG 15232[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,069]DEBUG 15232[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,069]DEBUG 15232[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,069]DEBUG 15232[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,069]DEBUG 15232[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,069]DEBUG 15232[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=128, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,070]DEBUG 15233[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=133, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#129, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,070]DEBUG 15233[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=129, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,070]DEBUG 15233[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=132, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#128, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,070]DEBUG 15233[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=131, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,070]DEBUG 15233[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=130, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,070]DEBUG 15233[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,070]DEBUG 15233[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_9_, this_.Cost as Cost8_9_, this_.DimensionRef as Dimensio5_8_9_, this_.ItemPrice as ItemPrice8_9_, this_.OrderRef as OrderRef8_9_, this_.ProductRef as ProductRef8_9_, this_.Quantity as Quantity8_9_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, customerty5_.ID as ID2_3_, customerty5_.Discount as Discount2_3_, customerty5_.MaxRange as MaxRange2_3_, customerty5_.MinRange as MinRange2_3_, customerty5_.TypeName as TypeName2_3_, region6_.ID as ID1_4_, region6_.RegionName as RegionName1_4_, role7_.ID as ID0_5_, role7_.RoleName as RoleName0_5_, user8_.ID as ID3_6_, user8_.IsUserActive as IsUserAc2_3_6_, user8_.Balance as Balance3_6_, user8_.CustomerTypeRef as Customer9_3_6_, user8_.Email as Email3_6_, user8_.FirstName as FirstName3_6_, user8_.LastName as LastName3_6_, user8_.Login as Login3_6_, user8_.Password as Password3_6_, user8_.RegionRef as RegionRef3_6_, user8_.RoleRef as RoleRef3_6_, orderstatu9_.ID as ID4_7_, orderstatu9_.OrederStatusName as OrederSt2_4_7_, product10_.ID as ID6_8_, product10_.IsProductActive as IsProduc2_6_8_, product10_.ProductDescription as ProductD3_6_8_, product10_.ProductName as ProductN4_6_8_, product10_.ProductPrice as ProductP5_6_8_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join CustomerTypes customerty5_ on user4_.CustomerTypeRef=customerty5_.ID left outer join Regions region6_ on user4_.RegionRef=region6_.ID left outer join Roles role7_ on user4_.RoleRef=role7_.ID left outer join Users user8_ on order3_.Customer=user8_.ID left outer join OrderStatuses orderstatu9_ on order3_.OrderStatusRef=orderstatu9_.ID left outer join Products product10_ on this_.ProductRef=product10_.ID where this_.OrderRef=? limit ? offset ?
[2015-12-30 00:48:01,080]DEBUG 15243[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:01,081]DEBUG 15244[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:01,081]DEBUG 15244[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,081]DEBUG 15244[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:01,084]DEBUG 15247[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,084]DEBUG 15247[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,084]DEBUG 15247[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,085]DEBUG 15248[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,085]DEBUG 15248[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,085]DEBUG 15248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=128, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,085]DEBUG 15248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=133, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#129, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,086]DEBUG 15249[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=129, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,086]DEBUG 15249[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=132, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#128, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,086]DEBUG 15249[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=131, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,086]DEBUG 15249[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=130, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,087]DEBUG 15250[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,087]DEBUG 15250[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:01,089]DEBUG 15252[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,089]DEBUG 15252[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,089]DEBUG 15252[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,090]DEBUG 15253[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,090]DEBUG 15253[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,090]DEBUG 15253[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,091]DEBUG 15254[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=128, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,091]DEBUG 15254[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=133, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#129, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,091]DEBUG 15254[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=129, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,091]DEBUG 15254[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=132, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#128, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,092]DEBUG 15255[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=131, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,092]DEBUG 15255[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=130, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,092]DEBUG 15255[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,092]DEBUG 15255[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:01,094]DEBUG 15257[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,094]DEBUG 15257[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,094]DEBUG 15257[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,095]DEBUG 15258[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,095]DEBUG 15258[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,095]DEBUG 15258[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,096]DEBUG 15259[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=128, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,096]DEBUG 15259[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=133, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#129, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,096]DEBUG 15259[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=129, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,096]DEBUG 15259[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=132, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#128, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,097]DEBUG 15260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=131, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,097]DEBUG 15260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=130, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,097]DEBUG 15260[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,097]DEBUG 15260[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:01,099]DEBUG 15262[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,099]DEBUG 15262[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,099]DEBUG 15262[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,100]DEBUG 15263[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,100]DEBUG 15263[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,100]DEBUG 15263[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,101]DEBUG 15264[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=128, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,101]DEBUG 15264[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=133, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#129, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,101]DEBUG 15264[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=129, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,101]DEBUG 15264[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=132, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#128, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,102]DEBUG 15265[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=131, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,102]DEBUG 15265[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=130, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,102]DEBUG 15265[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,102]DEBUG 15265[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:01,104]DEBUG 15267[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,106]DEBUG 15269[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,107]DEBUG 15270[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,107]DEBUG 15270[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,107]DEBUG 15270[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,108]DEBUG 15271[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,108]DEBUG 15271[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=128, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,108]DEBUG 15271[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=133, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#129, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,108]DEBUG 15271[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=129, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,109]DEBUG 15272[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=132, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#128, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,109]DEBUG 15272[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=131, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,109]DEBUG 15272[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=130, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,110]DEBUG 15273[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,110]DEBUG 15273[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:01,111]DEBUG 15274[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,111]DEBUG 15274[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,112]DEBUG 15275[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,112]DEBUG 15275[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,112]DEBUG 15275[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,113]DEBUG 15276[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,113]DEBUG 15276[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=128, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,113]DEBUG 15276[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=133, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#129, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,113]DEBUG 15276[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=129, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,114]DEBUG 15277[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=132, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#128, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,114]DEBUG 15277[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=131, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,114]DEBUG 15277[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=130, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,115]DEBUG 15278[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,115]DEBUG 15278[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:01,116]DEBUG 15279[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,116]DEBUG 15279[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,117]DEBUG 15280[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,117]DEBUG 15280[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,117]DEBUG 15280[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,117]DEBUG 15280[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,118]DEBUG 15281[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=128, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,118]DEBUG 15281[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=133, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#129, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,118]DEBUG 15281[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=129, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,119]DEBUG 15282[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=132, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#128, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,119]DEBUG 15282[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=131, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,119]DEBUG 15282[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=130, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,119]DEBUG 15282[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,120]DEBUG 15283[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:01,121]DEBUG 15284[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,121]DEBUG 15284[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,121]DEBUG 15284[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,122]DEBUG 15285[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,122]DEBUG 15285[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,122]DEBUG 15285[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,123]DEBUG 15286[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=128, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,123]DEBUG 15286[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=133, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#129, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,123]DEBUG 15286[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=129, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,123]DEBUG 15286[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=132, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#128, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,124]DEBUG 15287[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=131, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,124]DEBUG 15287[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=130, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,124]DEBUG 15287[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,124]DEBUG 15287[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:01,126]DEBUG 15289[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,126]DEBUG 15289[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,129]DEBUG 15292[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,129]DEBUG 15292[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,130]DEBUG 15293[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,130]DEBUG 15293[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,130]DEBUG 15293[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=128, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,130]DEBUG 15293[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=133, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#129, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,131]DEBUG 15294[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=129, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,131]DEBUG 15294[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#130, id=132, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#131, order=com.softserveinc.edu.oms.domain.entities.Order#128, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,131]DEBUG 15294[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=131, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,131]DEBUG 15294[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=130, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,132]DEBUG 15295[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,132]DEBUG 15295[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:01,133]DEBUG 15296[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,134]DEBUG 15297[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@686cfb7d, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:01,134]DEBUG 15297[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:01,134]DEBUG 15297[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@566624f0]
[2015-12-30 00:48:01,134]DEBUG 15297[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:01,135]DEBUG 15298[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:01,136]DEBUG 15299[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:01,136]DEBUG 15299[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@566624f0] after transaction
[2015-12-30 00:48:01,136]DEBUG 15299[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:01,136]DEBUG 15299[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:01,137]DEBUG 15300[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:01,137] INFO 15300[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@686cfb7d, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:01,138]DEBUG 15301[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@686cfb7d, testMethod = testPaging@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:01,138]DEBUG 15301[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:01,139]DEBUG 15302[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:01,139]DEBUG 15302[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@33850e46, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:01,139]DEBUG 15302[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:01,140]DEBUG 15303[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:01,140]DEBUG 15303[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:01,140]DEBUG 15303[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:01,140]DEBUG 15303[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:01,140]DEBUG 15303[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:01,141]DEBUG 15304[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:01,141]DEBUG 15304[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:01,141]DEBUG 15304[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:01,141]DEBUG 15304[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:01,142]DEBUG 15305[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:01,142]DEBUG 15305[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:01,142]DEBUG 15305[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:01,142]DEBUG 15305[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:01,142]DEBUG 15305[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:01,143]DEBUG 15306[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:01,143]DEBUG 15306[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:01,143]DEBUG 15306[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:01,143]DEBUG 15306[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:01,143]DEBUG 15306[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:01,144]DEBUG 15307[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:01,144]DEBUG 15307[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:01,144]DEBUG 15307[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@33850e46]
[2015-12-30 00:48:01,145]DEBUG 15308[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAllWithSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,145]DEBUG 15308[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@33850e46, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:01,145]DEBUG 15308[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:01,145]DEBUG 15308[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAllWithSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,146]DEBUG 15309[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292811
[2015-12-30 00:48:01,146]DEBUG 15309[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@164a0811] for Hibernate transaction
[2015-12-30 00:48:01,146]DEBUG 15309[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@164a0811]
[2015-12-30 00:48:01,147]DEBUG 15310[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:01,147]DEBUG 15310[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:01,147]DEBUG 15310[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:01,147]DEBUG 15310[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@33850e46, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:01,147] INFO 15310[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:01,148]DEBUG 15311[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,148]DEBUG 15311[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:01,149]DEBUG 15312[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,149]DEBUG 15312[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,149]DEBUG 15312[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:01,151]DEBUG 15314[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,151]DEBUG 15314[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,151]DEBUG 15314[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:01,153]DEBUG 15316[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,153]DEBUG 15316[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,153]DEBUG 15316[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:01,154]DEBUG 15317[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,155]DEBUG 15318[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,155]DEBUG 15318[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:01,156]DEBUG 15319[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,157]DEBUG 15320[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,157]DEBUG 15320[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:01,158]DEBUG 15321[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,159]DEBUG 15322[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,159]DEBUG 15322[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:01,160]DEBUG 15323[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,160]DEBUG 15323[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,161]DEBUG 15324[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:01,163]DEBUG 15326[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,163]DEBUG 15326[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,163]DEBUG 15326[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:01,166]DEBUG 15329[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,166]DEBUG 15329[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,166]DEBUG 15329[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,169]DEBUG 15332[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[134]]
[2015-12-30 00:48:01,170]DEBUG 15333[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,170]DEBUG 15333[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 134, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,170]DEBUG 15333[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,172]DEBUG 15335[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,174]DEBUG 15337[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[135]]
[2015-12-30 00:48:01,174]DEBUG 15337[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,174]DEBUG 15337[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 135, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,174]DEBUG 15337[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,175]DEBUG 15338[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,176]DEBUG 15339[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[136]]
[2015-12-30 00:48:01,176]DEBUG 15339[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,177]DEBUG 15340[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 136, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,177]DEBUG 15340[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,177]DEBUG 15340[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,179]DEBUG 15342[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[137]]
[2015-12-30 00:48:01,179]DEBUG 15342[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,179]DEBUG 15342[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 137, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,182]DEBUG 15345[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,182]DEBUG 15345[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,184]DEBUG 15347[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[138]]
[2015-12-30 00:48:01,184]DEBUG 15347[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,184]DEBUG 15347[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 138, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,185]DEBUG 15348[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,185]DEBUG 15348[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,186]DEBUG 15349[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[139]]
[2015-12-30 00:48:01,187]DEBUG 15350[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,187]DEBUG 15350[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 139, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,191]DEBUG 15354[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,191]DEBUG 15354[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,192]DEBUG 15355[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,192]DEBUG 15355[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,192]DEBUG 15355[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,192]DEBUG 15355[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=137, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,193]DEBUG 15356[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=134, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,193]DEBUG 15356[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=135, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,193]DEBUG 15356[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=136, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,194]DEBUG 15357[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=139, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#135, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,194]DEBUG 15357[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=138, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#134, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,194]DEBUG 15357[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderItems
[2015-12-30 00:48:01,195]DEBUG 15358[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,195]DEBUG 15358[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,196]DEBUG 15359[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,196]DEBUG 15359[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,196]DEBUG 15359[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 2
[2015-12-30 00:48:01,199]DEBUG 15362[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,199]DEBUG 15362[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,199]DEBUG 15362[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:01,200]DEBUG 15363[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:01,201]DEBUG 15364[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,202]DEBUG 15365[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,202]DEBUG 15365[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts, ID) values (?, ?, ?)
[2015-12-30 00:48:01,202]DEBUG 15365[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:01,204]DEBUG 15367[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,204]DEBUG 15367[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,205]DEBUG 15368[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,205]DEBUG 15368[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,205]DEBUG 15368[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,206]DEBUG 15369[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 2
[2015-12-30 00:48:01,208]DEBUG 15371[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,208]DEBUG 15371[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,209]DEBUG 15372[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_9_, this_.Cost as Cost8_9_, this_.DimensionRef as Dimensio5_8_9_, this_.ItemPrice as ItemPrice8_9_, this_.OrderRef as OrderRef8_9_, this_.ProductRef as ProductRef8_9_, this_.Quantity as Quantity8_9_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, customerty5_.ID as ID2_3_, customerty5_.Discount as Discount2_3_, customerty5_.MaxRange as MaxRange2_3_, customerty5_.MinRange as MinRange2_3_, customerty5_.TypeName as TypeName2_3_, region6_.ID as ID1_4_, region6_.RegionName as RegionName1_4_, role7_.ID as ID0_5_, role7_.RoleName as RoleName0_5_, user8_.ID as ID3_6_, user8_.IsUserActive as IsUserAc2_3_6_, user8_.Balance as Balance3_6_, user8_.CustomerTypeRef as Customer9_3_6_, user8_.Email as Email3_6_, user8_.FirstName as FirstName3_6_, user8_.LastName as LastName3_6_, user8_.Login as Login3_6_, user8_.Password as Password3_6_, user8_.RegionRef as RegionRef3_6_, user8_.RoleRef as RoleRef3_6_, orderstatu9_.ID as ID4_7_, orderstatu9_.OrederStatusName as OrederSt2_4_7_, product10_.ID as ID6_8_, product10_.IsProductActive as IsProduc2_6_8_, product10_.ProductDescription as ProductD3_6_8_, product10_.ProductName as ProductN4_6_8_, product10_.ProductPrice as ProductP5_6_8_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join CustomerTypes customerty5_ on user4_.CustomerTypeRef=customerty5_.ID left outer join Regions region6_ on user4_.RegionRef=region6_.ID left outer join Roles role7_ on user4_.RoleRef=role7_.ID left outer join Users user8_ on order3_.Customer=user8_.ID left outer join OrderStatuses orderstatu9_ on order3_.OrderStatusRef=orderstatu9_.ID left outer join Products product10_ on this_.ProductRef=product10_.ID order by this_.Cost desc
[2015-12-30 00:48:01,218]DEBUG 15381[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:01,221]DEBUG 15384[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#137], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#135], null, null, null, null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#136], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#139]
[2015-12-30 00:48:01,222]DEBUG 15385[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#137], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#134], null, null, null, null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#136], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#138]
[2015-12-30 00:48:01,222]DEBUG 15385[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:01,222]DEBUG 15385[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,222]DEBUG 15385[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:01,223]DEBUG 15386[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,223]DEBUG 15386[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,224]DEBUG 15387[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,224]DEBUG 15387[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,224]DEBUG 15387[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,224]DEBUG 15387[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=137, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,225]DEBUG 15388[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=134, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,225]DEBUG 15388[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=135, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,225]DEBUG 15388[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=136, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,225]DEBUG 15388[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=139, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#135, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,226]DEBUG 15389[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=138, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#134, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,226]DEBUG 15389[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,226]DEBUG 15389[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:01,228]DEBUG 15391[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,228]DEBUG 15391[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,229]DEBUG 15392[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,229]DEBUG 15392[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,229]DEBUG 15392[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,230]DEBUG 15393[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,230]DEBUG 15393[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=137, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,230]DEBUG 15393[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=134, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,230]DEBUG 15393[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=135, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,231]DEBUG 15394[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=136, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,231]DEBUG 15394[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=139, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#135, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,231]DEBUG 15394[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=138, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#134, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,232]DEBUG 15395[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,232]DEBUG 15395[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:01,233]DEBUG 15396[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,234]DEBUG 15397[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,234]DEBUG 15397[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,234]DEBUG 15397[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,235]DEBUG 15398[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,235]DEBUG 15398[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,235]DEBUG 15398[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=137, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,235]DEBUG 15398[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=134, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,236]DEBUG 15399[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=135, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,236]DEBUG 15399[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=136, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,236]DEBUG 15399[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=139, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#135, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,236]DEBUG 15399[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=138, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#134, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,237]DEBUG 15400[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,237]DEBUG 15400[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:01,238]DEBUG 15401[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,239]DEBUG 15402[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,239]DEBUG 15402[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,239]DEBUG 15402[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,240]DEBUG 15403[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,240]DEBUG 15403[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,240]DEBUG 15403[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=137, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,240]DEBUG 15403[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=134, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,241]DEBUG 15404[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=135, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,241]DEBUG 15404[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=136, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,243]DEBUG 15406[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=139, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#135, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,243]DEBUG 15406[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=138, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#134, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,244]DEBUG 15407[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,244]DEBUG 15407[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:01,245]DEBUG 15408[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,246]DEBUG 15409[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,246]DEBUG 15409[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,246]DEBUG 15409[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,247]DEBUG 15410[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,247]DEBUG 15410[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,247]DEBUG 15410[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=137, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,247]DEBUG 15410[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=134, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,248]DEBUG 15411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=135, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,248]DEBUG 15411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=136, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,248]DEBUG 15411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=139, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#135, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,248]DEBUG 15411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=138, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#134, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,249]DEBUG 15412[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,249]DEBUG 15412[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:01,251]DEBUG 15414[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,251]DEBUG 15414[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,252]DEBUG 15415[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,252]DEBUG 15415[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,252]DEBUG 15415[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,252]DEBUG 15415[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,253]DEBUG 15416[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=137, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,253]DEBUG 15416[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=134, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,253]DEBUG 15416[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=135, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,253]DEBUG 15416[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=136, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,254]DEBUG 15417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=139, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#135, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,254]DEBUG 15417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=138, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#134, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,254]DEBUG 15417[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,255]DEBUG 15418[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:01,256]DEBUG 15419[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,256]DEBUG 15419[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,257]DEBUG 15420[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,257]DEBUG 15420[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,257]DEBUG 15420[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,258]DEBUG 15421[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,258]DEBUG 15421[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=137, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,258]DEBUG 15421[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=134, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,258]DEBUG 15421[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=135, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,259]DEBUG 15422[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=136, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,259]DEBUG 15422[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=139, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#135, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,259]DEBUG 15422[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=138, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#134, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,259]DEBUG 15422[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,260]DEBUG 15423[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:01,261]DEBUG 15424[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,261]DEBUG 15424[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,262]DEBUG 15425[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,262]DEBUG 15425[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,262]DEBUG 15425[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,263]DEBUG 15426[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,263]DEBUG 15426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=137, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,263]DEBUG 15426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=134, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,263]DEBUG 15426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=135, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,264]DEBUG 15427[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=136, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,264]DEBUG 15427[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=139, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#135, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,266]DEBUG 15429[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=138, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#134, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,266]DEBUG 15429[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,267]DEBUG 15430[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:01,270]DEBUG 15433[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,270]DEBUG 15433[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,271]DEBUG 15434[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,271]DEBUG 15434[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,272]DEBUG 15435[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,272]DEBUG 15435[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,272]DEBUG 15435[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=137, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,272]DEBUG 15435[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=134, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,273]DEBUG 15436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=135, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,273]DEBUG 15436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=136, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,273]DEBUG 15436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=139, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#135, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,273]DEBUG 15436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#136, id=138, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#137, order=com.softserveinc.edu.oms.domain.entities.Order#134, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,274]DEBUG 15437[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,274]DEBUG 15437[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:01,275]DEBUG 15438[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,276]DEBUG 15439[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@33850e46, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:01,276]DEBUG 15439[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:01,276]DEBUG 15439[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@164a0811]
[2015-12-30 00:48:01,276]DEBUG 15439[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:01,278]DEBUG 15441[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:01,278]DEBUG 15441[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:01,278]DEBUG 15441[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@164a0811] after transaction
[2015-12-30 00:48:01,279]DEBUG 15442[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:01,279]DEBUG 15442[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:01,279]DEBUG 15442[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:01,279] INFO 15442[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@33850e46, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:01,280]DEBUG 15443[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@33850e46, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:01,281]DEBUG 15444[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:01,281]DEBUG 15444[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:01,282]DEBUG 15445[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7f9bd819, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:01,282]DEBUG 15445[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:01,282]DEBUG 15445[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:01,283]DEBUG 15446[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:01,283]DEBUG 15446[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:01,283]DEBUG 15446[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:01,283]DEBUG 15446[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:01,283]DEBUG 15446[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:01,284]DEBUG 15447[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:01,284]DEBUG 15447[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:01,284]DEBUG 15447[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:01,284]DEBUG 15447[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:01,284]DEBUG 15447[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:01,285]DEBUG 15448[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:01,285]DEBUG 15448[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:01,285]DEBUG 15448[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:01,285]DEBUG 15448[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:01,285]DEBUG 15448[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:01,286]DEBUG 15449[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:01,286]DEBUG 15449[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:01,286]DEBUG 15449[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:01,286]DEBUG 15449[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:01,287]DEBUG 15450[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:01,287]DEBUG 15450[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7f9bd819]
[2015-12-30 00:48:01,288]DEBUG 15451[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testRowCountWithCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,288]DEBUG 15451[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7f9bd819, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:01,290]DEBUG 15453[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:01,291]DEBUG 15454[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testRowCountWithCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,291]DEBUG 15454[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292812
[2015-12-30 00:48:01,291]DEBUG 15454[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6b0d3025] for Hibernate transaction
[2015-12-30 00:48:01,291]DEBUG 15454[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6b0d3025]
[2015-12-30 00:48:01,292]DEBUG 15455[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:01,292]DEBUG 15455[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:01,292]DEBUG 15455[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:01,292]DEBUG 15455[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7f9bd819, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:01,293] INFO 15456[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:01,293]DEBUG 15456[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,293]DEBUG 15456[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:01,295]DEBUG 15458[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,295]DEBUG 15458[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,295]DEBUG 15458[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:01,297]DEBUG 15460[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,297]DEBUG 15460[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,297]DEBUG 15460[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:01,299]DEBUG 15462[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,299]DEBUG 15462[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,299]DEBUG 15462[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:01,301]DEBUG 15464[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,301]DEBUG 15464[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,302]DEBUG 15465[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:01,303]DEBUG 15466[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,303]DEBUG 15466[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,304]DEBUG 15467[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:01,305]DEBUG 15468[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,305]DEBUG 15468[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,305]DEBUG 15468[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:01,306]DEBUG 15469[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,307]DEBUG 15470[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,307]DEBUG 15470[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:01,308]DEBUG 15471[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,308]DEBUG 15471[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,308]DEBUG 15471[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:01,309]DEBUG 15472[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,310]DEBUG 15473[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,310]DEBUG 15473[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,311]DEBUG 15474[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[140]]
[2015-12-30 00:48:01,311]DEBUG 15474[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,312]DEBUG 15475[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 140, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,312]DEBUG 15475[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,312]DEBUG 15475[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,314]DEBUG 15477[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[141]]
[2015-12-30 00:48:01,314]DEBUG 15477[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,314]DEBUG 15477[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 141, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,315]DEBUG 15478[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,315]DEBUG 15478[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,316]DEBUG 15479[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[142]]
[2015-12-30 00:48:01,316]DEBUG 15479[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,317]DEBUG 15480[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 142, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,317]DEBUG 15480[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,319]DEBUG 15482[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,321]DEBUG 15484[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[143]]
[2015-12-30 00:48:01,321]DEBUG 15484[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,321]DEBUG 15484[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 143, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,321]DEBUG 15484[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,321]DEBUG 15484[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,323]DEBUG 15486[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[144]]
[2015-12-30 00:48:01,323]DEBUG 15486[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,323]DEBUG 15486[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 144, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,324]DEBUG 15487[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,324]DEBUG 15487[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,325]DEBUG 15488[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[145]]
[2015-12-30 00:48:01,325]DEBUG 15488[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,326]DEBUG 15489[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 145, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,331]DEBUG 15494[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,331]DEBUG 15494[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,332]DEBUG 15495[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,332]DEBUG 15495[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,332]DEBUG 15495[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,333]DEBUG 15496[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=144, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#140, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,333]DEBUG 15496[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=145, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#141, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,333]DEBUG 15496[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=141, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,334]DEBUG 15497[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=142, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,334]DEBUG 15497[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=143, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,334]DEBUG 15497[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=140, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,334]DEBUG 15497[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderItems
[2015-12-30 00:48:01,335]DEBUG 15498[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,335]DEBUG 15498[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,335]DEBUG 15498[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,336]DEBUG 15499[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,336]DEBUG 15499[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 2
[2015-12-30 00:48:01,338]DEBUG 15501[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,339]DEBUG 15502[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,339]DEBUG 15502[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:01,339]DEBUG 15502[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:01,341]DEBUG 15504[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,341]DEBUG 15504[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,341]DEBUG 15504[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts, ID) values (?, ?, ?)
[2015-12-30 00:48:01,342]DEBUG 15505[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:01,343]DEBUG 15506[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,344]DEBUG 15507[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,344]DEBUG 15507[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,344]DEBUG 15507[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,345]DEBUG 15508[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,345]DEBUG 15508[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 2
[2015-12-30 00:48:01,347]DEBUG 15510[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,348]DEBUG 15511[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,348]DEBUG 15511[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select count(*) as y0_ from OrderItems this_
[2015-12-30 00:48:01,350]DEBUG 15513[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:01,350]DEBUG 15513[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: 
[2015-12-30 00:48:01,351]DEBUG 15514[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:01,351]DEBUG 15514[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,351]DEBUG 15514[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:01,351]DEBUG 15514[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,351]DEBUG 15514[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,352]DEBUG 15515[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,352]DEBUG 15515[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,352]DEBUG 15515[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,352]DEBUG 15515[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=144, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#140, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,352]DEBUG 15515[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=145, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#141, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,352]DEBUG 15515[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=141, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,352]DEBUG 15515[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=142, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,353]DEBUG 15516[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=143, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,353]DEBUG 15516[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=140, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,353]DEBUG 15516[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,353]DEBUG 15516[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select count(*) as y0_ from OrderItems this_ where this_.OrderRef=?
[2015-12-30 00:48:01,354]DEBUG 15517[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:01,354]DEBUG 15517[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: 
[2015-12-30 00:48:01,355]DEBUG 15518[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:01,355]DEBUG 15518[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,355]DEBUG 15518[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:01,355]DEBUG 15518[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,355]DEBUG 15518[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,355]DEBUG 15518[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,355]DEBUG 15518[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,356]DEBUG 15519[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,356]DEBUG 15519[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=144, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#140, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,356]DEBUG 15519[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=145, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#141, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,356]DEBUG 15519[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=141, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,356]DEBUG 15519[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=142, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,356]DEBUG 15519[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=143, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,356]DEBUG 15519[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=140, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,356]DEBUG 15519[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,357]DEBUG 15520[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:01,358]DEBUG 15521[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,358]DEBUG 15521[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,358]DEBUG 15521[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,358]DEBUG 15521[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,358]DEBUG 15521[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,358]DEBUG 15521[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,359]DEBUG 15522[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=144, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#140, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,359]DEBUG 15522[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=145, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#141, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,359]DEBUG 15522[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=141, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,359]DEBUG 15522[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=142, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,361]DEBUG 15524[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=143, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,361]DEBUG 15524[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=140, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,362]DEBUG 15525[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,362]DEBUG 15525[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:01,363]DEBUG 15526[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,363]DEBUG 15526[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,364]DEBUG 15527[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,365]DEBUG 15528[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,365]DEBUG 15528[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,365]DEBUG 15528[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,365]DEBUG 15528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=144, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#140, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,365]DEBUG 15528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=145, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#141, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,365]DEBUG 15528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=141, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,365]DEBUG 15528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=142, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,365]DEBUG 15528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=143, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,366]DEBUG 15529[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=140, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,366]DEBUG 15529[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,366]DEBUG 15529[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:01,367]DEBUG 15530[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,367]DEBUG 15530[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,367]DEBUG 15530[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,368]DEBUG 15531[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,368]DEBUG 15531[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,368]DEBUG 15531[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,368]DEBUG 15531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=144, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#140, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,368]DEBUG 15531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=145, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#141, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,368]DEBUG 15531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=141, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,368]DEBUG 15531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=142, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,369]DEBUG 15532[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=143, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,369]DEBUG 15532[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=140, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,369]DEBUG 15532[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,369]DEBUG 15532[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:01,370]DEBUG 15533[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,370]DEBUG 15533[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,370]DEBUG 15533[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,376]DEBUG 15539[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,376]DEBUG 15539[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,376]DEBUG 15539[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,376]DEBUG 15539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=144, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#140, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,376]DEBUG 15539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=145, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#141, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,380]DEBUG 15543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=141, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,380]DEBUG 15543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=142, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,380]DEBUG 15543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=143, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,380]DEBUG 15543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=140, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,380]DEBUG 15543[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,381]DEBUG 15544[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:01,382]DEBUG 15545[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,382]DEBUG 15545[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,382]DEBUG 15545[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,382]DEBUG 15545[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,382]DEBUG 15545[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,383]DEBUG 15546[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,383]DEBUG 15546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=144, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#140, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,383]DEBUG 15546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=145, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#141, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,383]DEBUG 15546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=141, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,383]DEBUG 15546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=142, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,383]DEBUG 15546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=143, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,383]DEBUG 15546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=140, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,387]DEBUG 15550[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,388]DEBUG 15551[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:01,389]DEBUG 15552[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,389]DEBUG 15552[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,390]DEBUG 15553[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,391]DEBUG 15554[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,391]DEBUG 15554[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,391]DEBUG 15554[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,391]DEBUG 15554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=144, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#140, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,391]DEBUG 15554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=145, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#141, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,391]DEBUG 15554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=141, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,391]DEBUG 15554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=142, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,391]DEBUG 15554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=143, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,392]DEBUG 15555[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=140, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,392]DEBUG 15555[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,392]DEBUG 15555[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:01,396]DEBUG 15559[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,396]DEBUG 15559[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,396]DEBUG 15559[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,396]DEBUG 15559[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,396]DEBUG 15559[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,396]DEBUG 15559[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,396]DEBUG 15559[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=144, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#140, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,397]DEBUG 15560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=145, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#141, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,397]DEBUG 15560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=141, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,397]DEBUG 15560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=142, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,397]DEBUG 15560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=143, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,397]DEBUG 15560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=140, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,397]DEBUG 15560[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,397]DEBUG 15560[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:01,403]DEBUG 15566[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,403]DEBUG 15566[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,403]DEBUG 15566[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,403]DEBUG 15566[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,403]DEBUG 15566[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,403]DEBUG 15566[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,404]DEBUG 15567[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=144, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#140, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,404]DEBUG 15567[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#142, id=145, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#143, order=com.softserveinc.edu.oms.domain.entities.Order#141, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,404]DEBUG 15567[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=141, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,404]DEBUG 15567[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=142, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,404]DEBUG 15567[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=143, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,404]DEBUG 15567[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=140, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,404]DEBUG 15567[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,404]DEBUG 15567[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:01,410]DEBUG 15573[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,410]DEBUG 15573[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7f9bd819, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:01,410]DEBUG 15573[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:01,410]DEBUG 15573[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6b0d3025]
[2015-12-30 00:48:01,410]DEBUG 15573[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:01,411]DEBUG 15574[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:01,411]DEBUG 15574[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:01,411]DEBUG 15574[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6b0d3025] after transaction
[2015-12-30 00:48:01,411]DEBUG 15574[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:01,412]DEBUG 15575[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:01,412]DEBUG 15575[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:01,412] INFO 15575[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7f9bd819, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:01,412]DEBUG 15575[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7f9bd819, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:01,416]DEBUG 15579[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:01,416]DEBUG 15579[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:01,416]DEBUG 15579[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@1354eea9, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:01,417]DEBUG 15580[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:01,417]DEBUG 15580[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:01,418]DEBUG 15581[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:01,418]DEBUG 15581[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:01,418]DEBUG 15581[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:01,418]DEBUG 15581[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:01,418]DEBUG 15581[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:01,418]DEBUG 15581[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:01,419]DEBUG 15582[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:01,419]DEBUG 15582[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:01,419]DEBUG 15582[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:01,419]DEBUG 15582[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:01,419]DEBUG 15582[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:01,419]DEBUG 15582[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:01,419]DEBUG 15582[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:01,419]DEBUG 15582[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:01,419]DEBUG 15582[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:01,419]DEBUG 15582[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:01,420]DEBUG 15583[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:01,420]DEBUG 15583[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:01,420]DEBUG 15583[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:01,426]DEBUG 15589[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:01,426]DEBUG 15589[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@1354eea9]
[2015-12-30 00:48:01,429]DEBUG 15592[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrder' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,429]DEBUG 15592[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@1354eea9, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:01,429]DEBUG 15592[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:01,430]DEBUG 15593[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOrder]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,430]DEBUG 15593[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292814
[2015-12-30 00:48:01,430]DEBUG 15593[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@26620166] for Hibernate transaction
[2015-12-30 00:48:01,435]DEBUG 15598[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@26620166]
[2015-12-30 00:48:01,435]DEBUG 15598[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:01,435]DEBUG 15598[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:01,435]DEBUG 15598[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:01,435]DEBUG 15598[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@1354eea9, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:01,435] INFO 15598[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:01,435]DEBUG 15598[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,436]DEBUG 15599[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:01,438]DEBUG 15601[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,438]DEBUG 15601[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,438]DEBUG 15601[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:01,440]DEBUG 15603[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,441]DEBUG 15604[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,441]DEBUG 15604[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:01,442]DEBUG 15605[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,442]DEBUG 15605[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,442]DEBUG 15605[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:01,443]DEBUG 15606[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,444]DEBUG 15607[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,444]DEBUG 15607[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:01,445]DEBUG 15608[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,445]DEBUG 15608[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,445]DEBUG 15608[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:01,447]DEBUG 15610[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,447]DEBUG 15610[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,447]DEBUG 15610[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:01,448]DEBUG 15611[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,448]DEBUG 15611[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,448]DEBUG 15611[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:01,451]DEBUG 15614[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,451]DEBUG 15614[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,451]DEBUG 15614[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:01,453]DEBUG 15616[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,454]DEBUG 15617[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,454]DEBUG 15617[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,455]DEBUG 15618[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[146]]
[2015-12-30 00:48:01,455]DEBUG 15618[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,455]DEBUG 15618[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 146, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,455]DEBUG 15618[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,456]DEBUG 15619[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,457]DEBUG 15620[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[147]]
[2015-12-30 00:48:01,457]DEBUG 15620[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,457]DEBUG 15620[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 147, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,457]DEBUG 15620[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,457]DEBUG 15620[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,458]DEBUG 15621[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[148]]
[2015-12-30 00:48:01,458]DEBUG 15621[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,459]DEBUG 15622[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 148, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,459]DEBUG 15622[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,459]DEBUG 15622[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,462]DEBUG 15625[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[149]]
[2015-12-30 00:48:01,462]DEBUG 15625[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,462]DEBUG 15625[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 149, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,462]DEBUG 15625[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,462]DEBUG 15625[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,465]DEBUG 15628[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[150]]
[2015-12-30 00:48:01,465]DEBUG 15628[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,465]DEBUG 15628[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 150, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,465]DEBUG 15628[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,465]DEBUG 15628[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,466]DEBUG 15629[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[151]]
[2015-12-30 00:48:01,466]DEBUG 15629[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,467]DEBUG 15630[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 151, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,468]DEBUG 15631[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,468]DEBUG 15631[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,468]DEBUG 15631[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,468]DEBUG 15631[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,468]DEBUG 15631[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,473]DEBUG 15636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=148, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,473]DEBUG 15636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=150, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#146, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,473]DEBUG 15636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=151, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#147, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,473]DEBUG 15636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=149, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,473]DEBUG 15636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=146, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,473]DEBUG 15636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=147, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,473]DEBUG 15636[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderItems
[2015-12-30 00:48:01,474]DEBUG 15637[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,474]DEBUG 15637[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,478]DEBUG 15641[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,478]DEBUG 15641[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,478]DEBUG 15641[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 2
[2015-12-30 00:48:01,481]DEBUG 15644[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,481]DEBUG 15644[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,482]DEBUG 15645[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:01,482]DEBUG 15645[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:01,486]DEBUG 15649[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,486]DEBUG 15649[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,486]DEBUG 15649[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts, ID) values (?, ?, ?)
[2015-12-30 00:48:01,486]DEBUG 15649[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:01,487]DEBUG 15650[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,488]DEBUG 15651[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,488]DEBUG 15651[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,488]DEBUG 15651[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,488]DEBUG 15651[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,488]DEBUG 15651[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 2
[2015-12-30 00:48:01,490]DEBUG 15653[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,490]DEBUG 15653[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,490]DEBUG 15653[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_9_, this_.Cost as Cost8_9_, this_.DimensionRef as Dimensio5_8_9_, this_.ItemPrice as ItemPrice8_9_, this_.OrderRef as OrderRef8_9_, this_.ProductRef as ProductRef8_9_, this_.Quantity as Quantity8_9_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, customerty5_.ID as ID2_3_, customerty5_.Discount as Discount2_3_, customerty5_.MaxRange as MaxRange2_3_, customerty5_.MinRange as MinRange2_3_, customerty5_.TypeName as TypeName2_3_, region6_.ID as ID1_4_, region6_.RegionName as RegionName1_4_, role7_.ID as ID0_5_, role7_.RoleName as RoleName0_5_, user8_.ID as ID3_6_, user8_.IsUserActive as IsUserAc2_3_6_, user8_.Balance as Balance3_6_, user8_.CustomerTypeRef as Customer9_3_6_, user8_.Email as Email3_6_, user8_.FirstName as FirstName3_6_, user8_.LastName as LastName3_6_, user8_.Login as Login3_6_, user8_.Password as Password3_6_, user8_.RegionRef as RegionRef3_6_, user8_.RoleRef as RoleRef3_6_, orderstatu9_.ID as ID4_7_, orderstatu9_.OrederStatusName as OrederSt2_4_7_, product10_.ID as ID6_8_, product10_.IsProductActive as IsProduc2_6_8_, product10_.ProductDescription as ProductD3_6_8_, product10_.ProductName as ProductN4_6_8_, product10_.ProductPrice as ProductP5_6_8_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join CustomerTypes customerty5_ on user4_.CustomerTypeRef=customerty5_.ID left outer join Regions region6_ on user4_.RegionRef=region6_.ID left outer join Roles role7_ on user4_.RoleRef=role7_.ID left outer join Users user8_ on order3_.Customer=user8_.ID left outer join OrderStatuses orderstatu9_ on order3_.OrderStatusRef=orderstatu9_.ID left outer join Products product10_ on this_.ProductRef=product10_.ID where this_.OrderRef=?
[2015-12-30 00:48:01,498]DEBUG 15661[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:01,499]DEBUG 15662[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#149], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#146], null, null, null, null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#148], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#150]
[2015-12-30 00:48:01,499]DEBUG 15662[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:01,499]DEBUG 15662[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,499]DEBUG 15662[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:01,499]DEBUG 15662[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,499]DEBUG 15662[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,500]DEBUG 15663[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,500]DEBUG 15663[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,500]DEBUG 15663[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,500]DEBUG 15663[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=148, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,500]DEBUG 15663[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=150, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#146, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,500]DEBUG 15663[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=151, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#147, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,500]DEBUG 15663[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=149, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,500]DEBUG 15663[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=146, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,501]DEBUG 15664[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=147, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,501]DEBUG 15664[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,501]DEBUG 15664[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:01,503]DEBUG 15666[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,504]DEBUG 15667[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,504]DEBUG 15667[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,504]DEBUG 15667[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,504]DEBUG 15667[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,504]DEBUG 15667[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,504]DEBUG 15667[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=148, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,505]DEBUG 15668[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=150, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#146, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,505]DEBUG 15668[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=151, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#147, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,505]DEBUG 15668[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=149, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,505]DEBUG 15668[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=146, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,506]DEBUG 15669[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=147, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,506]DEBUG 15669[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,506]DEBUG 15669[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:01,510]DEBUG 15673[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,510]DEBUG 15673[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,510]DEBUG 15673[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,510]DEBUG 15673[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,510]DEBUG 15673[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,510]DEBUG 15673[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,510]DEBUG 15673[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=148, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,511]DEBUG 15674[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=150, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#146, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,511]DEBUG 15674[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=151, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#147, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,511]DEBUG 15674[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=149, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,513]DEBUG 15676[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=146, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,514]DEBUG 15677[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=147, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,514]DEBUG 15677[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,514]DEBUG 15677[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:01,516]DEBUG 15679[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,516]DEBUG 15679[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,517]DEBUG 15680[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,517]DEBUG 15680[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,517]DEBUG 15680[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,517]DEBUG 15680[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,517]DEBUG 15680[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=148, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,517]DEBUG 15680[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=150, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#146, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,517]DEBUG 15680[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=151, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#147, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,518]DEBUG 15681[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=149, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,518]DEBUG 15681[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=146, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,518]DEBUG 15681[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=147, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,518]DEBUG 15681[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,518]DEBUG 15681[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:01,523]DEBUG 15686[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,523]DEBUG 15686[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,523]DEBUG 15686[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,523]DEBUG 15686[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,524]DEBUG 15687[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,524]DEBUG 15687[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,524]DEBUG 15687[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=148, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,524]DEBUG 15687[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=150, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#146, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,524]DEBUG 15687[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=151, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#147, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,524]DEBUG 15687[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=149, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,524]DEBUG 15687[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=146, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,524]DEBUG 15687[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=147, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,525]DEBUG 15688[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,525]DEBUG 15688[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:01,527]DEBUG 15690[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,528]DEBUG 15691[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,528]DEBUG 15691[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,528]DEBUG 15691[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,528]DEBUG 15691[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,528]DEBUG 15691[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,528]DEBUG 15691[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=148, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,528]DEBUG 15691[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=150, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#146, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,529]DEBUG 15692[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=151, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#147, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,529]DEBUG 15692[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=149, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,529]DEBUG 15692[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=146, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,529]DEBUG 15692[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=147, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,535]DEBUG 15698[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,535]DEBUG 15698[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:01,536]DEBUG 15699[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,536]DEBUG 15699[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,536]DEBUG 15699[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,537]DEBUG 15700[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,537]DEBUG 15700[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,537]DEBUG 15700[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,537]DEBUG 15700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=148, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,537]DEBUG 15700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=150, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#146, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,537]DEBUG 15700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=151, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#147, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,537]DEBUG 15700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=149, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,538]DEBUG 15701[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=146, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,538]DEBUG 15701[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=147, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,538]DEBUG 15701[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,538]DEBUG 15701[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:01,539]DEBUG 15702[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,539]DEBUG 15702[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,539]DEBUG 15702[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,539]DEBUG 15702[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,540]DEBUG 15703[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,540]DEBUG 15703[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,540]DEBUG 15703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=148, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,540]DEBUG 15703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=150, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#146, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,540]DEBUG 15703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=151, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#147, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,540]DEBUG 15703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=149, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,540]DEBUG 15703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=146, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,540]DEBUG 15703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=147, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,541]DEBUG 15704[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,541]DEBUG 15704[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:01,543]DEBUG 15706[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,544]DEBUG 15707[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,544]DEBUG 15707[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,544]DEBUG 15707[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,544]DEBUG 15707[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,544]DEBUG 15707[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,544]DEBUG 15707[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=148, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,545]DEBUG 15708[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=150, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#146, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,545]DEBUG 15708[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#148, id=151, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#149, order=com.softserveinc.edu.oms.domain.entities.Order#147, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,545]DEBUG 15708[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=149, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,545]DEBUG 15708[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=146, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,545]DEBUG 15708[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=147, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,545]DEBUG 15708[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,545]DEBUG 15708[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:01,546]DEBUG 15709[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,547]DEBUG 15710[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@1354eea9, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:01,547]DEBUG 15710[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:01,547]DEBUG 15710[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@26620166]
[2015-12-30 00:48:01,547]DEBUG 15710[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:01,548]DEBUG 15711[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:01,548]DEBUG 15711[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:01,548]DEBUG 15711[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@26620166] after transaction
[2015-12-30 00:48:01,548]DEBUG 15711[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:01,548]DEBUG 15711[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:01,549]DEBUG 15712[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:01,549] INFO 15712[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@1354eea9, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2015-12-30 00:48:01,549]DEBUG 15712[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@1354eea9, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:01,551]DEBUG 15714[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:01,551]DEBUG 15714[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2015-12-30 00:48:01,555]DEBUG 15718[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@30b7b8ff, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:01,555]DEBUG 15718[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:01,555]DEBUG 15718[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:01,555]DEBUG 15718[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:01,555]DEBUG 15718[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:01,555]DEBUG 15718[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:01,555]DEBUG 15718[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:01,555]DEBUG 15718[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:01,555]DEBUG 15718[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:01,556]DEBUG 15719[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:01,556]DEBUG 15719[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:01,556]DEBUG 15719[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:01,556]DEBUG 15719[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:01,556]DEBUG 15719[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:01,556]DEBUG 15719[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:01,556]DEBUG 15719[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:01,556]DEBUG 15719[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:01,556]DEBUG 15719[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:01,556]DEBUG 15719[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:01,557]DEBUG 15720[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:01,557]DEBUG 15720[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:01,557]DEBUG 15720[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:01,557]DEBUG 15720[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:01,557]DEBUG 15720[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@30b7b8ff]
[2015-12-30 00:48:01,558]DEBUG 15721[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,558]DEBUG 15721[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@30b7b8ff, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:01,558]DEBUG 15721[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:01,558]DEBUG 15721[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,558]DEBUG 15721[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292815
[2015-12-30 00:48:01,558]DEBUG 15721[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@36e5713e] for Hibernate transaction
[2015-12-30 00:48:01,558]DEBUG 15721[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@36e5713e]
[2015-12-30 00:48:01,559]DEBUG 15722[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:01,559]DEBUG 15722[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:01,559]DEBUG 15722[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:01,559]DEBUG 15722[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@30b7b8ff, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:01,559] INFO 15722[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:01,559]DEBUG 15722[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,559]DEBUG 15722[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:01,563]DEBUG 15726[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,563]DEBUG 15726[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,563]DEBUG 15726[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:01,564]DEBUG 15727[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,564]DEBUG 15727[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,564]DEBUG 15727[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:01,565]DEBUG 15728[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,566]DEBUG 15729[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,566]DEBUG 15729[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:01,567]DEBUG 15730[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,567]DEBUG 15730[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,567]DEBUG 15730[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:01,568]DEBUG 15731[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,569]DEBUG 15732[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,569]DEBUG 15732[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:01,570]DEBUG 15733[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,570]DEBUG 15733[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,571]DEBUG 15734[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:01,572]DEBUG 15735[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,572]DEBUG 15735[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,573]DEBUG 15736[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:01,574]DEBUG 15737[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,574]DEBUG 15737[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,574]DEBUG 15737[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:01,575]DEBUG 15738[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,575]DEBUG 15738[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,575]DEBUG 15738[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,577]DEBUG 15740[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[152]]
[2015-12-30 00:48:01,577]DEBUG 15740[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,577]DEBUG 15740[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 152, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,578]DEBUG 15741[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,578]DEBUG 15741[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,579]DEBUG 15742[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[153]]
[2015-12-30 00:48:01,580]DEBUG 15743[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,580]DEBUG 15743[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 153, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,580]DEBUG 15743[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,581]DEBUG 15744[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,582]DEBUG 15745[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[154]]
[2015-12-30 00:48:01,582]DEBUG 15745[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,583]DEBUG 15746[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 154, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,583]DEBUG 15746[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,583]DEBUG 15746[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,585]DEBUG 15748[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[155]]
[2015-12-30 00:48:01,585]DEBUG 15748[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,585]DEBUG 15748[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 155, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,586]DEBUG 15749[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,586]DEBUG 15749[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,587]DEBUG 15750[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[156]]
[2015-12-30 00:48:01,587]DEBUG 15750[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,588]DEBUG 15751[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 156, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,588]DEBUG 15751[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,588]DEBUG 15751[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,590]DEBUG 15753[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[157]]
[2015-12-30 00:48:01,590]DEBUG 15753[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,590]DEBUG 15753[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 157, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,591]DEBUG 15754[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,591]DEBUG 15754[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,591]DEBUG 15754[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 6 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,591]DEBUG 15754[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,592]DEBUG 15755[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,592]DEBUG 15755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=155, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,592]DEBUG 15755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=152, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,592]DEBUG 15755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#154, id=156, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#155, order=com.softserveinc.edu.oms.domain.entities.Order#152, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,593]DEBUG 15756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=154, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,593]DEBUG 15756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#154, id=157, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#155, order=com.softserveinc.edu.oms.domain.entities.Order#153, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,593]DEBUG 15756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=153, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,594]DEBUG 15757[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderItems
[2015-12-30 00:48:01,594]DEBUG 15757[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,596]DEBUG 15759[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,597]DEBUG 15760[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,597]DEBUG 15760[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,597]DEBUG 15760[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 2
[2015-12-30 00:48:01,600]DEBUG 15763[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,600]DEBUG 15763[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,600]DEBUG 15763[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:01,601]DEBUG 15764[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:01,602]DEBUG 15765[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,603]DEBUG 15766[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,603]DEBUG 15766[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts, ID) values (?, ?, ?)
[2015-12-30 00:48:01,603]DEBUG 15766[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:01,605]DEBUG 15768[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,605]DEBUG 15768[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,605]DEBUG 15768[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,606]DEBUG 15769[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,606]DEBUG 15769[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:01,606]DEBUG 15769[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 2
[2015-12-30 00:48:01,608]DEBUG 15771[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,609]DEBUG 15772[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,609]DEBUG 15772[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:01,610]DEBUG 15773[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,611]DEBUG 15774[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,611]DEBUG 15774[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,611]DEBUG 15774[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,612]DEBUG 15775[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,612]DEBUG 15775[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,612]DEBUG 15775[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=155, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,612]DEBUG 15775[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=152, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,613]DEBUG 15776[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#154, id=156, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#155, order=com.softserveinc.edu.oms.domain.entities.Order#152, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,613]DEBUG 15776[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=154, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,613]DEBUG 15776[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#154, id=157, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#155, order=com.softserveinc.edu.oms.domain.entities.Order#153, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,613]DEBUG 15776[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=153, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,613]DEBUG 15776[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,614]DEBUG 15777[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:01,615]DEBUG 15778[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,616]DEBUG 15779[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,616]DEBUG 15779[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,616]DEBUG 15779[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,617]DEBUG 15780[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,617]DEBUG 15780[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,617]DEBUG 15780[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=155, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,617]DEBUG 15780[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=152, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,618]DEBUG 15781[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#154, id=156, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#155, order=com.softserveinc.edu.oms.domain.entities.Order#152, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,618]DEBUG 15781[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=154, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,618]DEBUG 15781[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#154, id=157, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#155, order=com.softserveinc.edu.oms.domain.entities.Order#153, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,618]DEBUG 15781[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=153, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,619]DEBUG 15782[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,619]DEBUG 15782[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:01,620]DEBUG 15783[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,621]DEBUG 15784[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,621]DEBUG 15784[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,621]DEBUG 15784[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,623]DEBUG 15786[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,624]DEBUG 15787[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,624]DEBUG 15787[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=155, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,624]DEBUG 15787[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=152, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,624]DEBUG 15787[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#154, id=156, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#155, order=com.softserveinc.edu.oms.domain.entities.Order#152, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,625]DEBUG 15788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=154, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,625]DEBUG 15788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#154, id=157, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#155, order=com.softserveinc.edu.oms.domain.entities.Order#153, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,625]DEBUG 15788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=153, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,625]DEBUG 15788[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,626]DEBUG 15789[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:01,627]DEBUG 15790[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,628]DEBUG 15791[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,628]DEBUG 15791[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,628]DEBUG 15791[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,629]DEBUG 15792[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,629]DEBUG 15792[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,629]DEBUG 15792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=155, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,629]DEBUG 15792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=152, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,630]DEBUG 15793[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#154, id=156, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#155, order=com.softserveinc.edu.oms.domain.entities.Order#152, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,630]DEBUG 15793[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=154, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,630]DEBUG 15793[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#154, id=157, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#155, order=com.softserveinc.edu.oms.domain.entities.Order#153, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,630]DEBUG 15793[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=153, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,631]DEBUG 15794[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,631]DEBUG 15794[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:01,632]DEBUG 15795[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,632]DEBUG 15795[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,633]DEBUG 15796[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,633]DEBUG 15796[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,633]DEBUG 15796[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,634]DEBUG 15797[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,634]DEBUG 15797[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=155, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,634]DEBUG 15797[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=152, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,634]DEBUG 15797[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#154, id=156, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#155, order=com.softserveinc.edu.oms.domain.entities.Order#152, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,635]DEBUG 15798[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=154, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,635]DEBUG 15798[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#154, id=157, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#155, order=com.softserveinc.edu.oms.domain.entities.Order#153, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,635]DEBUG 15798[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=153, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,635]DEBUG 15798[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,636]DEBUG 15799[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:01,637]DEBUG 15800[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,637]DEBUG 15800[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,637]DEBUG 15800[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,638]DEBUG 15801[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,638]DEBUG 15801[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,638]DEBUG 15801[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,639]DEBUG 15802[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=155, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,639]DEBUG 15802[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=152, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,639]DEBUG 15802[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#154, id=156, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#155, order=com.softserveinc.edu.oms.domain.entities.Order#152, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,639]DEBUG 15802[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=154, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,640]DEBUG 15803[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#154, id=157, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#155, order=com.softserveinc.edu.oms.domain.entities.Order#153, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,640]DEBUG 15803[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=153, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,640]DEBUG 15803[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,640]DEBUG 15803[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:01,642]DEBUG 15805[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,642]DEBUG 15805[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,642]DEBUG 15805[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,643]DEBUG 15806[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,643]DEBUG 15806[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,645]DEBUG 15808[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,645]DEBUG 15808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=155, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,645]DEBUG 15808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=152, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,646]DEBUG 15809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#154, id=156, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#155, order=com.softserveinc.edu.oms.domain.entities.Order#152, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,646]DEBUG 15809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=154, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,646]DEBUG 15809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#154, id=157, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#155, order=com.softserveinc.edu.oms.domain.entities.Order#153, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,646]DEBUG 15809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=153, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,647]DEBUG 15810[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,647]DEBUG 15810[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:01,648]DEBUG 15811[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,649]DEBUG 15812[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,649]DEBUG 15812[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,650]DEBUG 15813[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2015-12-30 00:48:01,650]DEBUG 15813[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,650]DEBUG 15813[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,650]DEBUG 15813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=155, dimensionName=dimensionName, numberOfProduct=5}
[2015-12-30 00:48:01,650]DEBUG 15813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=152, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,651]DEBUG 15814[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#154, id=156, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#155, order=com.softserveinc.edu.oms.domain.entities.Order#152, quantity=1, itemPrice=1.0, cost=5.0}
[2015-12-30 00:48:01,651]DEBUG 15814[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=154, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2015-12-30 00:48:01,651]DEBUG 15814[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#154, id=157, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#155, order=com.softserveinc.edu.oms.domain.entities.Order#153, quantity=2, itemPrice=1.0, cost=10.0}
[2015-12-30 00:48:01,651]DEBUG 15814[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=153, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2015-12-30 00:48:01,652]DEBUG 15815[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,652]DEBUG 15815[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:01,653]DEBUG 15816[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,654]DEBUG 15817[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@30b7b8ff, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:01,654]DEBUG 15817[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:01,654]DEBUG 15817[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@36e5713e]
[2015-12-30 00:48:01,654]DEBUG 15817[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:01,656]DEBUG 15819[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:01,656]DEBUG 15819[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:01,656]DEBUG 15819[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@36e5713e] after transaction
[2015-12-30 00:48:01,656]DEBUG 15819[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:01,657]DEBUG 15820[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:01,657]DEBUG 15820[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:01,657] INFO 15820[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@30b7b8ff, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:01,658]DEBUG 15821[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@30b7b8ff, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:01,659]DEBUG 15822[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@649b97b1 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2015-12-30 00:48:01,667]DEBUG 15830[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest].
[2015-12-30 00:48:01,668] INFO 15831[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: using defaults.
[2015-12-30 00:48:01,668]DEBUG 15831[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:01,668]DEBUG 15831[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:01,674]DEBUG 15837[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:01,674]DEBUG 15837[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:01,674]DEBUG 15837[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:01,674]DEBUG 15837[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:01,685]DEBUG 15848[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:01,685]DEBUG 15848[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:01,689]DEBUG 15852[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5c431c56, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:01,696]DEBUG 15859[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:01,696]DEBUG 15859[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:01,696]DEBUG 15859[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:01,697]DEBUG 15860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:01,697]DEBUG 15860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:01,697]DEBUG 15860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:01,697]DEBUG 15860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:01,697]DEBUG 15860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:01,697]DEBUG 15860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:01,697]DEBUG 15860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:01,697]DEBUG 15860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:01,698]DEBUG 15861[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:01,698]DEBUG 15861[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'customerTypeDao'
[2015-12-30 00:48:01,698]DEBUG 15861[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:01,698]DEBUG 15861[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:01,698]DEBUG 15861[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'dimensionDao'
[2015-12-30 00:48:01,698]DEBUG 15861[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:01,699]DEBUG 15862[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:01,699]DEBUG 15862[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'orderDao'
[2015-12-30 00:48:01,699]DEBUG 15862[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:01,699]DEBUG 15862[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:01,699]DEBUG 15862[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'orderItemDao'
[2015-12-30 00:48:01,699]DEBUG 15862[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:01,699]DEBUG 15862[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:01,700]DEBUG 15863[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'orderStatusDao'
[2015-12-30 00:48:01,700]DEBUG 15863[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:01,700]DEBUG 15863[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:01,700]DEBUG 15863[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'productDao'
[2015-12-30 00:48:01,700]DEBUG 15863[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:01,700]DEBUG 15863[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:01,701]DEBUG 15864[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'regionDao'
[2015-12-30 00:48:01,701]DEBUG 15864[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:01,701]DEBUG 15864[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:01,701]DEBUG 15864[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'roleDao'
[2015-12-30 00:48:01,701]DEBUG 15864[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:01,701]DEBUG 15864[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:01,701]DEBUG 15864[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'userDao'
[2015-12-30 00:48:01,702]DEBUG 15865[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:01,702]DEBUG 15865[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:01,702]DEBUG 15865[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'sessionFactory'
[2015-12-30 00:48:01,703]DEBUG 15866[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:01,703]DEBUG 15866[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,703]DEBUG 15866[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:01,703]DEBUG 15866[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5c431c56]
[2015-12-30 00:48:01,704]DEBUG 15867[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.setUp()
[2015-12-30 00:48:01,704]DEBUG 15867[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,704]DEBUG 15867[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.tearDown() throws java.lang.Exception
[2015-12-30 00:48:01,705]DEBUG 15868[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetAdminRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,705]DEBUG 15868[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetAdminRole()
[2015-12-30 00:48:01,705]DEBUG 15868[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetCustomerRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,706]DEBUG 15869[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetCustomerRole()
[2015-12-30 00:48:01,707]DEBUG 15870[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetMerchandiserRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,707]DEBUG 15870[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetMerchandiserRole()
[2015-12-30 00:48:01,710]DEBUG 15873[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSupervisorRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,710]DEBUG 15873[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetSupervisorRole()
[2015-12-30 00:48:01,710]DEBUG 15873[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,710]DEBUG 15873[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testInsertOrUpdate()
[2015-12-30 00:48:01,710]DEBUG 15873[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,710]DEBUG 15873[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testDelete()
[2015-12-30 00:48:01,711]DEBUG 15874[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,711]DEBUG 15874[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByRoleName()
[2015-12-30 00:48:01,711]DEBUG 15874[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContainsRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,711]DEBUG 15874[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testContainsRole()
[2015-12-30 00:48:01,711]DEBUG 15874[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,711]DEBUG 15874[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByCriterionsSorting()
[2015-12-30 00:48:01,718]DEBUG 15881[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,718]DEBUG 15881[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByCriterions()
[2015-12-30 00:48:01,719]DEBUG 15882[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,719]DEBUG 15882[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByOneOfCriterions()
[2015-12-30 00:48:01,719]DEBUG 15882[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,719]DEBUG 15882[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByOneOfCriterionsSorting()
[2015-12-30 00:48:01,719]DEBUG 15882[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,720]DEBUG 15883[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByID()
[2015-12-30 00:48:01,720]DEBUG 15883[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,720]DEBUG 15883[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByRoleNameWithUserSelectWayConditions()
[2015-12-30 00:48:01,720]DEBUG 15883[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,720]DEBUG 15883[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByRoleNameWithUserSelectWayConditionsSorting()
[2015-12-30 00:48:01,720]DEBUG 15883[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2015-12-30 00:48:01,720]DEBUG 15883[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2015-12-30 00:48:01,721]DEBUG 15884[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2015-12-30 00:48:01,721]DEBUG 15884[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2015-12-30 00:48:01,721]DEBUG 15884[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2015-12-30 00:48:01,721]DEBUG 15884[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2015-12-30 00:48:01,721]DEBUG 15884[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2015-12-30 00:48:01,721]DEBUG 15884[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2015-12-30 00:48:01,725]DEBUG 15888[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2015-12-30 00:48:01,725]DEBUG 15888[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2015-12-30 00:48:01,725]DEBUG 15888[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,725]DEBUG 15888[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2015-12-30 00:48:01,725]DEBUG 15888[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2015-12-30 00:48:01,725]DEBUG 15888[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2015-12-30 00:48:01,725]DEBUG 15888[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2015-12-30 00:48:01,726]DEBUG 15889[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2015-12-30 00:48:01,726]DEBUG 15889[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2015-12-30 00:48:01,726]DEBUG 15889[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2015-12-30 00:48:01,726]DEBUG 15889[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:01,726]DEBUG 15889[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:01,726]DEBUG 15889[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2015-12-30 00:48:01,734]DEBUG 15897[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2015-12-30 00:48:01,735]DEBUG 15898[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2015-12-30 00:48:01,735]DEBUG 15898[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2015-12-30 00:48:01,735]DEBUG 15898[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2015-12-30 00:48:01,735]DEBUG 15898[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2015-12-30 00:48:01,735]DEBUG 15898[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2015-12-30 00:48:01,735]DEBUG 15898[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2015-12-30 00:48:01,735]DEBUG 15898[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2015-12-30 00:48:01,735]DEBUG 15898[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:01,736]DEBUG 15899[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:01,736]DEBUG 15899[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2015-12-30 00:48:01,736]DEBUG 15899[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:01,736]DEBUG 15899[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:01,736]DEBUG 15899[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2015-12-30 00:48:01,736]DEBUG 15899[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2015-12-30 00:48:01,736]DEBUG 15899[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2015-12-30 00:48:01,736]DEBUG 15899[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2015-12-30 00:48:01,736]DEBUG 15899[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2015-12-30 00:48:01,737]DEBUG 15900[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2015-12-30 00:48:01,780]DEBUG 15943[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetAdminRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,780]DEBUG 15943[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5c431c56, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:01,783]DEBUG 15946[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:01,783]DEBUG 15946[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@2f97c904 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:01,783]DEBUG 15946[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:01,783]DEBUG 15946[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetAdminRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,784]DEBUG 15947[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292817
[2015-12-30 00:48:01,784]DEBUG 15947[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4ee50f28] for Hibernate transaction
[2015-12-30 00:48:01,784]DEBUG 15947[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4ee50f28]
[2015-12-30 00:48:01,784]DEBUG 15947[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:01,784]DEBUG 15947[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:01,784]DEBUG 15947[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:01,784]DEBUG 15947[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5c431c56, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:01,784] INFO 15947[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:01,789]DEBUG 15952[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,789]DEBUG 15952[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,790]DEBUG 15953[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[158]]
[2015-12-30 00:48:01,790]DEBUG 15953[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,790]DEBUG 15953[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 158, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,791]DEBUG 15954[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,791]DEBUG 15954[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,792]DEBUG 15955[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[159]]
[2015-12-30 00:48:01,797]DEBUG 15960[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,797]DEBUG 15960[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 159, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,797]DEBUG 15960[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,797]DEBUG 15960[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,798]DEBUG 15961[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[160]]
[2015-12-30 00:48:01,798]DEBUG 15961[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,799]DEBUG 15962[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 160, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,799]DEBUG 15962[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,799]DEBUG 15962[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,800]DEBUG 15963[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[161]]
[2015-12-30 00:48:01,800]DEBUG 15963[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,800]DEBUG 15963[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 161, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,801]DEBUG 15964[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,801]DEBUG 15964[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,801]DEBUG 15964[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:01,801]DEBUG 15964[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,801]DEBUG 15964[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,801]DEBUG 15964[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=161, roleName=Merchandiser}
[2015-12-30 00:48:01,801]DEBUG 15964[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=160, roleName=Customer}
[2015-12-30 00:48:01,802]DEBUG 15965[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=159, roleName=Supervisor}
[2015-12-30 00:48:01,802]DEBUG 15965[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=158, roleName=Administrator}
[2015-12-30 00:48:01,802]DEBUG 15965[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:01,802]DEBUG 15965[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,802]DEBUG 15965[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:01,802]DEBUG 15965[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,802]DEBUG 15965[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:01,803]DEBUG 15966[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,803]DEBUG 15966[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:01,803]DEBUG 15966[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,803]DEBUG 15966[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:01,803]DEBUG 15966[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:01,805]DEBUG 15968[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,805]DEBUG 15968[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,805]DEBUG 15968[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:01,807]DEBUG 15970[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:01,807]DEBUG 15970[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#158]
[2015-12-30 00:48:01,807]DEBUG 15970[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:01,808]DEBUG 15971[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,809]DEBUG 15972[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:01,809]DEBUG 15972[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,809]DEBUG 15972[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,810]DEBUG 15973[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:01,810]DEBUG 15973[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,810]DEBUG 15973[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,811]DEBUG 15974[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=161, roleName=Merchandiser}
[2015-12-30 00:48:01,811]DEBUG 15974[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=160, roleName=Customer}
[2015-12-30 00:48:01,811]DEBUG 15974[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=159, roleName=Supervisor}
[2015-12-30 00:48:01,811]DEBUG 15974[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=158, roleName=Administrator}
[2015-12-30 00:48:01,811]DEBUG 15974[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,811]DEBUG 15974[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:01,813]DEBUG 15976[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:01,813]DEBUG 15976[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#158]
[2015-12-30 00:48:01,816]DEBUG 15979[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:01,816]DEBUG 15979[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,817]DEBUG 15980[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:01,817]DEBUG 15980[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,818]DEBUG 15981[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,818]DEBUG 15981[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 00:48:01,818]DEBUG 15981[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,818]DEBUG 15981[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,819]DEBUG 15982[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=161, roleName=Merchandiser}
[2015-12-30 00:48:01,819]DEBUG 15982[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=160, roleName=Customer}
[2015-12-30 00:48:01,819]DEBUG 15982[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=159, roleName=Supervisor}
[2015-12-30 00:48:01,819]DEBUG 15982[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=158, roleName=Administrator}
[2015-12-30 00:48:01,820]DEBUG 15983[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:01,820]DEBUG 15983[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,820]DEBUG 15983[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2015-12-30 00:48:01,820]DEBUG 15983[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:01,822]DEBUG 15985[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,822]DEBUG 15985[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,823]DEBUG 15986[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:01,824]DEBUG 15987[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:01,824]DEBUG 15987[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:01,824]DEBUG 15987[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,825]DEBUG 15988[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:01,825]DEBUG 15988[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,825]DEBUG 15988[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,826]DEBUG 15989[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[162]]
[2015-12-30 00:48:01,826]DEBUG 15989[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,826]DEBUG 15989[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 162, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,826]DEBUG 15989[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,827]DEBUG 15990[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,827]DEBUG 15990[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:01,827]DEBUG 15990[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,827]DEBUG 15990[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,827]DEBUG 15990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=162, roleName=Administrator}
[2015-12-30 00:48:01,827]DEBUG 15990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=161, roleName=Merchandiser}
[2015-12-30 00:48:01,827]DEBUG 15990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=160, roleName=Customer}
[2015-12-30 00:48:01,827]DEBUG 15990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=159, roleName=Supervisor}
[2015-12-30 00:48:01,828]DEBUG 15991[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:01,828]DEBUG 15991[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,828]DEBUG 15991[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:01,828]DEBUG 15991[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:01,829]DEBUG 15992[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,830]DEBUG 15993[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,830]DEBUG 15993[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:01,831]DEBUG 15994[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,832]DEBUG 15995[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5c431c56, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:01,832]DEBUG 15995[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:01,832]DEBUG 15995[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4ee50f28]
[2015-12-30 00:48:01,832]DEBUG 15995[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:01,834]DEBUG 15997[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:01,834]DEBUG 15997[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:01,834]DEBUG 15997[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4ee50f28] after transaction
[2015-12-30 00:48:01,834]DEBUG 15997[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:01,835]DEBUG 15998[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:01,835]DEBUG 15998[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:01,835] INFO 15998[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5c431c56, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:01,838]DEBUG 16001[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5c431c56, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:01,839]DEBUG 16002[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:01,839]DEBUG 16002[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:01,844]DEBUG 16007[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5829e2c6, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:01,844]DEBUG 16007[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:01,845]DEBUG 16008[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:01,845]DEBUG 16008[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:01,845]DEBUG 16008[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:01,845]DEBUG 16008[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:01,846]DEBUG 16009[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:01,846]DEBUG 16009[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:01,846]DEBUG 16009[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:01,846]DEBUG 16009[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:01,847]DEBUG 16010[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:01,847]DEBUG 16010[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:01,847]DEBUG 16010[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:01,847]DEBUG 16010[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:01,847]DEBUG 16010[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:01,848]DEBUG 16011[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:01,848]DEBUG 16011[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:01,848]DEBUG 16011[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:01,848]DEBUG 16011[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:01,848]DEBUG 16011[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:01,849]DEBUG 16012[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:01,849]DEBUG 16012[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:01,850]DEBUG 16013[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:01,850]DEBUG 16013[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5829e2c6]
[2015-12-30 00:48:01,851]DEBUG 16014[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetCustomerRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,851]DEBUG 16014[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5829e2c6, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:01,851]DEBUG 16014[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:01,852]DEBUG 16015[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetCustomerRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,853]DEBUG 16016[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292818
[2015-12-30 00:48:01,853]DEBUG 16016[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@66bdb6a9] for Hibernate transaction
[2015-12-30 00:48:01,853]DEBUG 16016[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@66bdb6a9]
[2015-12-30 00:48:01,853]DEBUG 16016[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:01,854]DEBUG 16017[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:01,854]DEBUG 16017[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:01,854]DEBUG 16017[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5829e2c6, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:01,854] INFO 16017[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:01,855]DEBUG 16018[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,855]DEBUG 16018[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,857]DEBUG 16020[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[163]]
[2015-12-30 00:48:01,857]DEBUG 16020[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,857]DEBUG 16020[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 163, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,858]DEBUG 16021[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,858]DEBUG 16021[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,859]DEBUG 16022[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[164]]
[2015-12-30 00:48:01,860]DEBUG 16023[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,860]DEBUG 16023[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 164, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,860]DEBUG 16023[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,860]DEBUG 16023[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,862]DEBUG 16025[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[165]]
[2015-12-30 00:48:01,862]DEBUG 16025[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,862]DEBUG 16025[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 165, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,863]DEBUG 16026[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,865]DEBUG 16028[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,866]DEBUG 16029[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[166]]
[2015-12-30 00:48:01,866]DEBUG 16029[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,867]DEBUG 16030[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 166, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,867]DEBUG 16030[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,868]DEBUG 16031[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,868]DEBUG 16031[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:01,868]DEBUG 16031[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,869]DEBUG 16032[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,869]DEBUG 16032[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=164, roleName=Supervisor}
[2015-12-30 00:48:01,869]DEBUG 16032[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=163, roleName=Administrator}
[2015-12-30 00:48:01,869]DEBUG 16032[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=166, roleName=Merchandiser}
[2015-12-30 00:48:01,869]DEBUG 16032[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=165, roleName=Customer}
[2015-12-30 00:48:01,870]DEBUG 16033[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:01,870]DEBUG 16033[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,870]DEBUG 16033[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:01,871]DEBUG 16034[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,871]DEBUG 16034[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:01,871]DEBUG 16034[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,871]DEBUG 16034[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:01,872]DEBUG 16035[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,872]DEBUG 16035[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:01,872]DEBUG 16035[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:01,875]DEBUG 16038[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,875]DEBUG 16038[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,875]DEBUG 16038[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:01,877]DEBUG 16040[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:01,877]DEBUG 16040[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#165]
[2015-12-30 00:48:01,878]DEBUG 16041[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:01,878]DEBUG 16041[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,878]DEBUG 16041[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:01,879]DEBUG 16042[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,879]DEBUG 16042[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,879]DEBUG 16042[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:01,879]DEBUG 16042[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,880]DEBUG 16043[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,880]DEBUG 16043[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=164, roleName=Supervisor}
[2015-12-30 00:48:01,880]DEBUG 16043[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=163, roleName=Administrator}
[2015-12-30 00:48:01,880]DEBUG 16043[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=166, roleName=Merchandiser}
[2015-12-30 00:48:01,880]DEBUG 16043[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=165, roleName=Customer}
[2015-12-30 00:48:01,881]DEBUG 16044[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,881]DEBUG 16044[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:01,883]DEBUG 16046[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:01,883]DEBUG 16046[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#165]
[2015-12-30 00:48:01,883]DEBUG 16046[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:01,884]DEBUG 16047[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,884]DEBUG 16047[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:01,885]DEBUG 16048[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,885]DEBUG 16048[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,886]DEBUG 16049[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 00:48:01,886]DEBUG 16049[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,886]DEBUG 16049[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,887]DEBUG 16050[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=164, roleName=Supervisor}
[2015-12-30 00:48:01,889]DEBUG 16052[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=163, roleName=Administrator}
[2015-12-30 00:48:01,889]DEBUG 16052[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=166, roleName=Merchandiser}
[2015-12-30 00:48:01,889]DEBUG 16052[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=165, roleName=Customer}
[2015-12-30 00:48:01,889]DEBUG 16052[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:01,890]DEBUG 16053[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,890]DEBUG 16053[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2015-12-30 00:48:01,890]DEBUG 16053[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:01,892]DEBUG 16055[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,892]DEBUG 16055[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,892]DEBUG 16055[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:01,894]DEBUG 16057[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:01,894]DEBUG 16057[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:01,895]DEBUG 16058[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,895]DEBUG 16058[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:01,895]DEBUG 16058[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,895]DEBUG 16058[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,897]DEBUG 16060[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[167]]
[2015-12-30 00:48:01,897]DEBUG 16060[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,897]DEBUG 16060[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 167, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,898]DEBUG 16061[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,898]DEBUG 16061[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,898]DEBUG 16061[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:01,899]DEBUG 16062[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,899]DEBUG 16062[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,899]DEBUG 16062[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=164, roleName=Supervisor}
[2015-12-30 00:48:01,899]DEBUG 16062[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=163, roleName=Administrator}
[2015-12-30 00:48:01,899]DEBUG 16062[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=167, roleName=Customer}
[2015-12-30 00:48:01,900]DEBUG 16063[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=166, roleName=Merchandiser}
[2015-12-30 00:48:01,900]DEBUG 16063[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:01,900]DEBUG 16063[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,900]DEBUG 16063[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:01,901]DEBUG 16064[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:01,902]DEBUG 16065[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,903]DEBUG 16066[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,903]DEBUG 16066[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:01,904]DEBUG 16067[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,905]DEBUG 16068[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5829e2c6, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:01,905]DEBUG 16068[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:01,905]DEBUG 16068[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@66bdb6a9]
[2015-12-30 00:48:01,905]DEBUG 16068[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:01,907]DEBUG 16070[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:01,907]DEBUG 16070[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:01,907]DEBUG 16070[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@66bdb6a9] after transaction
[2015-12-30 00:48:01,907]DEBUG 16070[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:01,908]DEBUG 16071[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:01,908]DEBUG 16071[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:01,908] INFO 16071[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5829e2c6, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:01,910]DEBUG 16073[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5829e2c6, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:01,910]DEBUG 16073[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:01,910]DEBUG 16073[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:01,911]DEBUG 16074[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@30594770, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:01,911]DEBUG 16074[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:01,911]DEBUG 16074[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:01,912]DEBUG 16075[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:01,912]DEBUG 16075[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:01,912]DEBUG 16075[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:01,914]DEBUG 16077[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:01,914]DEBUG 16077[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:01,914]DEBUG 16077[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:01,915]DEBUG 16078[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:01,915]DEBUG 16078[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:01,915]DEBUG 16078[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:01,915]DEBUG 16078[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:01,915]DEBUG 16078[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:01,916]DEBUG 16079[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:01,916]DEBUG 16079[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:01,916]DEBUG 16079[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:01,916]DEBUG 16079[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:01,917]DEBUG 16080[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:01,917]DEBUG 16080[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:01,917]DEBUG 16080[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:01,917]DEBUG 16080[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:01,918]DEBUG 16081[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:01,918]DEBUG 16081[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@30594770]
[2015-12-30 00:48:01,919]DEBUG 16082[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetMerchandiserRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,919]DEBUG 16082[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@30594770, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:01,919]DEBUG 16082[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:01,920]DEBUG 16083[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetMerchandiserRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,921]DEBUG 16084[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292819
[2015-12-30 00:48:01,921]DEBUG 16084[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@558f6df5] for Hibernate transaction
[2015-12-30 00:48:01,921]DEBUG 16084[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@558f6df5]
[2015-12-30 00:48:01,921]DEBUG 16084[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:01,922]DEBUG 16085[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:01,922]DEBUG 16085[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:01,922]DEBUG 16085[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@30594770, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:01,922] INFO 16085[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:01,923]DEBUG 16086[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,923]DEBUG 16086[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,924]DEBUG 16087[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[168]]
[2015-12-30 00:48:01,925]DEBUG 16088[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,925]DEBUG 16088[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 168, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,925]DEBUG 16088[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,925]DEBUG 16088[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,926]DEBUG 16089[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[169]]
[2015-12-30 00:48:01,927]DEBUG 16090[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,927]DEBUG 16090[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 169, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,927]DEBUG 16090[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,927]DEBUG 16090[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,929]DEBUG 16092[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[170]]
[2015-12-30 00:48:01,929]DEBUG 16092[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,929]DEBUG 16092[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 170, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,930]DEBUG 16093[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,930]DEBUG 16093[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,931]DEBUG 16094[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[171]]
[2015-12-30 00:48:01,932]DEBUG 16095[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,932]DEBUG 16095[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 171, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,932]DEBUG 16095[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,933]DEBUG 16096[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,933]DEBUG 16096[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:01,933]DEBUG 16096[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,935]DEBUG 16098[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,935]DEBUG 16098[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=171, roleName=Merchandiser}
[2015-12-30 00:48:01,935]DEBUG 16098[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=170, roleName=Customer}
[2015-12-30 00:48:01,935]DEBUG 16098[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=169, roleName=Supervisor}
[2015-12-30 00:48:01,936]DEBUG 16099[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=168, roleName=Administrator}
[2015-12-30 00:48:01,936]DEBUG 16099[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:01,936]DEBUG 16099[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,936]DEBUG 16099[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:01,936]DEBUG 16099[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,936]DEBUG 16099[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:01,937]DEBUG 16100[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,937]DEBUG 16100[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:01,937]DEBUG 16100[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:01,937]DEBUG 16100[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:01,937]DEBUG 16100[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:01,939]DEBUG 16102[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,939]DEBUG 16102[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,939]DEBUG 16102[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:01,940]DEBUG 16103[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:01,941]DEBUG 16104[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#171]
[2015-12-30 00:48:01,941]DEBUG 16104[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:01,941]DEBUG 16104[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,942]DEBUG 16105[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:01,942]DEBUG 16105[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,942]DEBUG 16105[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,943]DEBUG 16106[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:01,943]DEBUG 16106[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,943]DEBUG 16106[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,943]DEBUG 16106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=171, roleName=Merchandiser}
[2015-12-30 00:48:01,944]DEBUG 16107[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=170, roleName=Customer}
[2015-12-30 00:48:01,944]DEBUG 16107[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=169, roleName=Supervisor}
[2015-12-30 00:48:01,944]DEBUG 16107[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=168, roleName=Administrator}
[2015-12-30 00:48:01,944]DEBUG 16107[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,945]DEBUG 16108[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:01,946]DEBUG 16109[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:01,946]DEBUG 16109[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#171]
[2015-12-30 00:48:01,946]DEBUG 16109[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:01,947]DEBUG 16110[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,947]DEBUG 16110[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:01,948]DEBUG 16111[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,948]DEBUG 16111[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,948]DEBUG 16111[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 00:48:01,948]DEBUG 16111[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,949]DEBUG 16112[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,949]DEBUG 16112[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=171, roleName=Merchandiser}
[2015-12-30 00:48:01,949]DEBUG 16112[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=170, roleName=Customer}
[2015-12-30 00:48:01,949]DEBUG 16112[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=169, roleName=Supervisor}
[2015-12-30 00:48:01,950]DEBUG 16113[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=168, roleName=Administrator}
[2015-12-30 00:48:01,950]DEBUG 16113[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:01,950]DEBUG 16113[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,950]DEBUG 16113[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2015-12-30 00:48:01,951]DEBUG 16114[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:01,952]DEBUG 16115[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,954]DEBUG 16117[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,954]DEBUG 16117[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:01,956]DEBUG 16119[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:01,956]DEBUG 16119[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:01,956]DEBUG 16119[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,957]DEBUG 16120[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:01,957]DEBUG 16120[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,957]DEBUG 16120[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,959]DEBUG 16122[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[172]]
[2015-12-30 00:48:01,959]DEBUG 16122[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,959]DEBUG 16122[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 172, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,960]DEBUG 16123[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,960]DEBUG 16123[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,960]DEBUG 16123[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:01,960]DEBUG 16123[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,961]DEBUG 16124[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,961]DEBUG 16124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=172, roleName=Merchandiser}
[2015-12-30 00:48:01,961]DEBUG 16124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=170, roleName=Customer}
[2015-12-30 00:48:01,961]DEBUG 16124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=169, roleName=Supervisor}
[2015-12-30 00:48:01,961]DEBUG 16124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=168, roleName=Administrator}
[2015-12-30 00:48:01,962]DEBUG 16125[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:01,962]DEBUG 16125[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,962]DEBUG 16125[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:01,963]DEBUG 16126[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:01,964]DEBUG 16127[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,964]DEBUG 16127[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,964]DEBUG 16127[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:01,966]DEBUG 16129[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,966]DEBUG 16129[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@30594770, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:01,967]DEBUG 16130[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:01,967]DEBUG 16130[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@558f6df5]
[2015-12-30 00:48:01,967]DEBUG 16130[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:01,968]DEBUG 16131[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:01,968]DEBUG 16131[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:01,969]DEBUG 16132[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@558f6df5] after transaction
[2015-12-30 00:48:01,969]DEBUG 16132[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:01,969]DEBUG 16132[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:01,969]DEBUG 16132[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:01,970] INFO 16133[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@30594770, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:01,971]DEBUG 16134[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@30594770, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:01,972]DEBUG 16135[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:01,972]DEBUG 16135[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:01,973]DEBUG 16136[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7057ba95, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:01,973]DEBUG 16136[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:01,973]DEBUG 16136[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:01,974]DEBUG 16137[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:01,974]DEBUG 16137[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:01,974]DEBUG 16137[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:01,974]DEBUG 16137[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:01,974]DEBUG 16137[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:01,975]DEBUG 16138[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:01,975]DEBUG 16138[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:01,975]DEBUG 16138[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:01,975]DEBUG 16138[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:01,976]DEBUG 16139[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:01,976]DEBUG 16139[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:01,976]DEBUG 16139[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:01,978]DEBUG 16141[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:01,978]DEBUG 16141[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:01,978]DEBUG 16141[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:01,979]DEBUG 16142[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:01,979]DEBUG 16142[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:01,979]DEBUG 16142[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:01,979]DEBUG 16142[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:01,980]DEBUG 16143[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:01,980]DEBUG 16143[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7057ba95]
[2015-12-30 00:48:01,981]DEBUG 16144[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSupervisorRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,981]DEBUG 16144[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7057ba95, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:01,981]DEBUG 16144[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:01,983]DEBUG 16146[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetSupervisorRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:01,983]DEBUG 16146[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292819
[2015-12-30 00:48:01,983]DEBUG 16146[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4514c8dd] for Hibernate transaction
[2015-12-30 00:48:01,983]DEBUG 16146[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4514c8dd]
[2015-12-30 00:48:01,983]DEBUG 16146[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:01,984]DEBUG 16147[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:01,984]DEBUG 16147[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:01,984]DEBUG 16147[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7057ba95, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:01,984] INFO 16147[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:01,984]DEBUG 16147[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,985]DEBUG 16148[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,986]DEBUG 16149[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[173]]
[2015-12-30 00:48:01,986]DEBUG 16149[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,987]DEBUG 16150[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 173, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,987]DEBUG 16150[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,987]DEBUG 16150[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,989]DEBUG 16152[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[174]]
[2015-12-30 00:48:01,989]DEBUG 16152[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,989]DEBUG 16152[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 174, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,989]DEBUG 16152[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,990]DEBUG 16153[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,991]DEBUG 16154[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[175]]
[2015-12-30 00:48:01,991]DEBUG 16154[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,992]DEBUG 16155[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 175, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,992]DEBUG 16155[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,992]DEBUG 16155[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:01,994]DEBUG 16157[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[176]]
[2015-12-30 00:48:01,994]DEBUG 16157[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:01,994]DEBUG 16157[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 176, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:01,995]DEBUG 16158[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:01,995]DEBUG 16158[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:01,996]DEBUG 16159[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:01,996]DEBUG 16159[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:01,996]DEBUG 16159[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:01,996]DEBUG 16159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=175, roleName=Customer}
[2015-12-30 00:48:01,996]DEBUG 16159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=176, roleName=Merchandiser}
[2015-12-30 00:48:01,997]DEBUG 16160[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=173, roleName=Administrator}
[2015-12-30 00:48:01,997]DEBUG 16160[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=174, roleName=Supervisor}
[2015-12-30 00:48:01,997]DEBUG 16160[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:01,997]DEBUG 16160[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:01,998]DEBUG 16161[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:01,998]DEBUG 16161[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,000]DEBUG 16163[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,001]DEBUG 16164[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,001]DEBUG 16164[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,001]DEBUG 16164[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,001]DEBUG 16164[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,002]DEBUG 16165[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:02,004]DEBUG 16167[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,004]DEBUG 16167[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,005]DEBUG 16168[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:02,006]DEBUG 16169[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,006]DEBUG 16169[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#174]
[2015-12-30 00:48:02,007]DEBUG 16170[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,007]DEBUG 16170[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,007]DEBUG 16170[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,008]DEBUG 16171[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,008]DEBUG 16171[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,008]DEBUG 16171[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,009]DEBUG 16172[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,009]DEBUG 16172[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,009]DEBUG 16172[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=175, roleName=Customer}
[2015-12-30 00:48:02,009]DEBUG 16172[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=176, roleName=Merchandiser}
[2015-12-30 00:48:02,009]DEBUG 16172[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=173, roleName=Administrator}
[2015-12-30 00:48:02,010]DEBUG 16173[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=174, roleName=Supervisor}
[2015-12-30 00:48:02,010]DEBUG 16173[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,010]DEBUG 16173[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:02,012]DEBUG 16175[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,012]DEBUG 16175[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#174]
[2015-12-30 00:48:02,012]DEBUG 16175[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,013]DEBUG 16176[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,013]DEBUG 16176[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,014]DEBUG 16177[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,014]DEBUG 16177[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,014]DEBUG 16177[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 00:48:02,014]DEBUG 16177[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,015]DEBUG 16178[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,015]DEBUG 16178[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=175, roleName=Customer}
[2015-12-30 00:48:02,015]DEBUG 16178[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=176, roleName=Merchandiser}
[2015-12-30 00:48:02,015]DEBUG 16178[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=173, roleName=Administrator}
[2015-12-30 00:48:02,015]DEBUG 16178[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=174, roleName=Supervisor}
[2015-12-30 00:48:02,016]DEBUG 16179[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:02,016]DEBUG 16179[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,016]DEBUG 16179[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2015-12-30 00:48:02,017]DEBUG 16180[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:02,018]DEBUG 16181[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,019]DEBUG 16182[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,019]DEBUG 16182[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:02,020]DEBUG 16183[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,021]DEBUG 16184[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,021]DEBUG 16184[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,021]DEBUG 16184[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,021]DEBUG 16184[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,022]DEBUG 16185[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,025]DEBUG 16188[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[177]]
[2015-12-30 00:48:02,025]DEBUG 16188[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,025]DEBUG 16188[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 177, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,026]DEBUG 16189[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,026]DEBUG 16189[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,026]DEBUG 16189[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,027]DEBUG 16190[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,027]DEBUG 16190[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,027]DEBUG 16190[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=177, roleName=Supervisor}
[2015-12-30 00:48:02,028]DEBUG 16191[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=175, roleName=Customer}
[2015-12-30 00:48:02,028]DEBUG 16191[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=176, roleName=Merchandiser}
[2015-12-30 00:48:02,028]DEBUG 16191[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=173, roleName=Administrator}
[2015-12-30 00:48:02,028]DEBUG 16191[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:02,029]DEBUG 16192[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,029]DEBUG 16192[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,029]DEBUG 16192[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:02,030]DEBUG 16193[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,031]DEBUG 16194[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,031]DEBUG 16194[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:02,033]DEBUG 16196[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,033]DEBUG 16196[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7057ba95, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,033]DEBUG 16196[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,033]DEBUG 16196[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4514c8dd]
[2015-12-30 00:48:02,033]DEBUG 16196[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,035]DEBUG 16198[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,035]DEBUG 16198[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,035]DEBUG 16198[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4514c8dd] after transaction
[2015-12-30 00:48:02,035]DEBUG 16198[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,036]DEBUG 16199[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,036]DEBUG 16199[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,036] INFO 16199[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7057ba95, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,038]DEBUG 16201[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7057ba95, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,038]DEBUG 16201[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,038]DEBUG 16201[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,039]DEBUG 16202[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1aeb7308, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,039]DEBUG 16202[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,039]DEBUG 16202[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,040]DEBUG 16203[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,040]DEBUG 16203[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,040]DEBUG 16203[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,040]DEBUG 16203[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,040]DEBUG 16203[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,041]DEBUG 16204[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,041]DEBUG 16204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,041]DEBUG 16204[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,041]DEBUG 16204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,041]DEBUG 16204[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,042]DEBUG 16205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,042]DEBUG 16205[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,042]DEBUG 16205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,042]DEBUG 16205[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,043]DEBUG 16206[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,043]DEBUG 16206[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,043]DEBUG 16206[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,043]DEBUG 16206[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,043]DEBUG 16206[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,044]DEBUG 16207[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,044]DEBUG 16207[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1aeb7308]
[2015-12-30 00:48:02,047]DEBUG 16210[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,047]DEBUG 16210[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1aeb7308, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,047]DEBUG 16210[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,049]DEBUG 16212[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,049]DEBUG 16212[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292820
[2015-12-30 00:48:02,049]DEBUG 16212[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4525e0c0] for Hibernate transaction
[2015-12-30 00:48:02,049]DEBUG 16212[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4525e0c0]
[2015-12-30 00:48:02,050]DEBUG 16213[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,050]DEBUG 16213[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,050]DEBUG 16213[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,050]DEBUG 16213[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1aeb7308, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,050] INFO 16213[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,051]DEBUG 16214[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,051]DEBUG 16214[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,053]DEBUG 16216[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[178]]
[2015-12-30 00:48:02,053]DEBUG 16216[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,053]DEBUG 16216[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 178, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,053]DEBUG 16216[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,054]DEBUG 16217[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,055]DEBUG 16218[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[179]]
[2015-12-30 00:48:02,055]DEBUG 16218[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,056]DEBUG 16219[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 179, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,056]DEBUG 16219[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,056]DEBUG 16219[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,058]DEBUG 16221[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[180]]
[2015-12-30 00:48:02,058]DEBUG 16221[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,058]DEBUG 16221[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 180, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,058]DEBUG 16221[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,059]DEBUG 16222[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,060]DEBUG 16223[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[181]]
[2015-12-30 00:48:02,060]DEBUG 16223[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,061]DEBUG 16224[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 181, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,061]DEBUG 16224[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,061]DEBUG 16224[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,064]DEBUG 16227[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[182]]
[2015-12-30 00:48:02,066]DEBUG 16229[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,066]DEBUG 16229[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 182, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,067]DEBUG 16230[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,067]DEBUG 16230[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,069]DEBUG 16232[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 5 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 00:48:02,069]DEBUG 16232[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,070]DEBUG 16233[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,070]DEBUG 16233[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=179, roleName=Supervisor}
[2015-12-30 00:48:02,071]DEBUG 16234[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=180, roleName=Customer}
[2015-12-30 00:48:02,072]DEBUG 16235[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=178, roleName=Administrator}
[2015-12-30 00:48:02,072]DEBUG 16235[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=181, roleName=Merchandiser}
[2015-12-30 00:48:02,072]DEBUG 16235[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=182, roleName=tempRole}
[2015-12-30 00:48:02,073]DEBUG 16236[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:02,073]DEBUG 16236[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,073]DEBUG 16236[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,074]DEBUG 16237[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,074]DEBUG 16237[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,076]DEBUG 16239[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,076]DEBUG 16239[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,077]DEBUG 16240[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,077]DEBUG 16240[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,077]DEBUG 16240[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,077]DEBUG 16240[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,078]DEBUG 16241[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 5
[2015-12-30 00:48:02,080]DEBUG 16243[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,080]DEBUG 16243[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,081]DEBUG 16244[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_
[2015-12-30 00:48:02,082]DEBUG 16245[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,083]DEBUG 16246[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#178]
[2015-12-30 00:48:02,083]DEBUG 16246[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#179]
[2015-12-30 00:48:02,083]DEBUG 16246[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#180]
[2015-12-30 00:48:02,084]DEBUG 16247[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#181]
[2015-12-30 00:48:02,084]DEBUG 16247[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#182]
[2015-12-30 00:48:02,084]DEBUG 16247[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,084]DEBUG 16247[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,084]DEBUG 16247[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,085]DEBUG 16248[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,085]DEBUG 16248[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,085]DEBUG 16248[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 00:48:02,085]DEBUG 16248[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,085]DEBUG 16248[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,085]DEBUG 16248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=179, roleName=Supervisor}
[2015-12-30 00:48:02,085]DEBUG 16248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=180, roleName=Customer}
[2015-12-30 00:48:02,086]DEBUG 16249[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=178, roleName=Administrator}
[2015-12-30 00:48:02,086]DEBUG 16249[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=181, roleName=Merchandiser}
[2015-12-30 00:48:02,086]DEBUG 16249[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=182, roleName=tempRole}
[2015-12-30 00:48:02,086]DEBUG 16249[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,086]DEBUG 16249[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:02,087]DEBUG 16250[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,090]DEBUG 16253[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1aeb7308, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,091]DEBUG 16254[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,091]DEBUG 16254[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4525e0c0]
[2015-12-30 00:48:02,091]DEBUG 16254[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,092]DEBUG 16255[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,092]DEBUG 16255[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,093]DEBUG 16256[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4525e0c0] after transaction
[2015-12-30 00:48:02,093]DEBUG 16256[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,093]DEBUG 16256[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,093]DEBUG 16256[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,093] INFO 16256[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1aeb7308, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,099]DEBUG 16262[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1aeb7308, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,102]DEBUG 16265[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,102]DEBUG 16265[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,102]DEBUG 16265[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@e7b2339, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,103]DEBUG 16266[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,103]DEBUG 16266[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,103]DEBUG 16266[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,103]DEBUG 16266[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,104]DEBUG 16267[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,104]DEBUG 16267[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,104]DEBUG 16267[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,104]DEBUG 16267[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,105]DEBUG 16268[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,105]DEBUG 16268[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,106]DEBUG 16269[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,106]DEBUG 16269[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,106]DEBUG 16269[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,106]DEBUG 16269[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,106]DEBUG 16269[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,106]DEBUG 16269[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,106]DEBUG 16269[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,106]DEBUG 16269[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,106]DEBUG 16269[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,107]DEBUG 16270[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,107]DEBUG 16270[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,107]DEBUG 16270[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,107]DEBUG 16270[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@e7b2339]
[2015-12-30 00:48:02,107]DEBUG 16270[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,107]DEBUG 16270[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@e7b2339, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,108]DEBUG 16271[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,108]DEBUG 16271[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,108]DEBUG 16271[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292821
[2015-12-30 00:48:02,108]DEBUG 16271[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@27debd32] for Hibernate transaction
[2015-12-30 00:48:02,109]DEBUG 16272[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@27debd32]
[2015-12-30 00:48:02,109]DEBUG 16272[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,109]DEBUG 16272[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,109]DEBUG 16272[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,109]DEBUG 16272[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@e7b2339, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,109] INFO 16272[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,109]DEBUG 16272[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,109]DEBUG 16272[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,111]DEBUG 16274[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[183]]
[2015-12-30 00:48:02,111]DEBUG 16274[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,111]DEBUG 16274[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 183, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,112]DEBUG 16275[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,112]DEBUG 16275[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,114]DEBUG 16277[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[184]]
[2015-12-30 00:48:02,114]DEBUG 16277[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,114]DEBUG 16277[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 184, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,114]DEBUG 16277[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,114]DEBUG 16277[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,115]DEBUG 16278[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[185]]
[2015-12-30 00:48:02,115]DEBUG 16278[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,116]DEBUG 16279[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 185, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,116]DEBUG 16279[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,116]DEBUG 16279[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,117]DEBUG 16280[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[186]]
[2015-12-30 00:48:02,117]DEBUG 16280[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,117]DEBUG 16280[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 186, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,117]DEBUG 16280[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,117]DEBUG 16280[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,119]DEBUG 16282[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[187]]
[2015-12-30 00:48:02,119]DEBUG 16282[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,119]DEBUG 16282[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 187, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,120]DEBUG 16283[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,122]DEBUG 16285[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,122]DEBUG 16285[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 5 insertions, 0 updates, 1 deletions to 5 objects
[2015-12-30 00:48:02,123]DEBUG 16286[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,123]DEBUG 16286[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,123]DEBUG 16286[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=187, roleName=tempRole}
[2015-12-30 00:48:02,123]DEBUG 16286[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=185, roleName=Customer}
[2015-12-30 00:48:02,123]DEBUG 16286[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=186, roleName=Merchandiser}
[2015-12-30 00:48:02,124]DEBUG 16287[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=183, roleName=Administrator}
[2015-12-30 00:48:02,124]DEBUG 16287[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=184, roleName=Supervisor}
[2015-12-30 00:48:02,124]DEBUG 16287[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:02,124]DEBUG 16287[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,124]DEBUG 16287[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,125]DEBUG 16288[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,125]DEBUG 16288[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,125]DEBUG 16288[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,125]DEBUG 16288[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,125]DEBUG 16288[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,126]DEBUG 16289[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,126]DEBUG 16289[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,126]DEBUG 16289[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,126]DEBUG 16289[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 5
[2015-12-30 00:48:02,128]DEBUG 16291[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,128]DEBUG 16291[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,128]DEBUG 16291[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2015-12-30 00:48:02,129]DEBUG 16292[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:02,130]DEBUG 16293[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,131]DEBUG 16294[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,131]DEBUG 16294[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_
[2015-12-30 00:48:02,132]DEBUG 16295[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,133]DEBUG 16296[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#183]
[2015-12-30 00:48:02,133]DEBUG 16296[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#184]
[2015-12-30 00:48:02,134]DEBUG 16297[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#185]
[2015-12-30 00:48:02,134]DEBUG 16297[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#186]
[2015-12-30 00:48:02,134]DEBUG 16297[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,134]DEBUG 16297[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,135]DEBUG 16298[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,135]DEBUG 16298[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,135]DEBUG 16298[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,136]DEBUG 16299[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,137]DEBUG 16300[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,137]DEBUG 16300[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,137]DEBUG 16300[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=185, roleName=Customer}
[2015-12-30 00:48:02,137]DEBUG 16300[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=186, roleName=Merchandiser}
[2015-12-30 00:48:02,137]DEBUG 16300[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=183, roleName=Administrator}
[2015-12-30 00:48:02,138]DEBUG 16301[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=184, roleName=Supervisor}
[2015-12-30 00:48:02,138]DEBUG 16301[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,138]DEBUG 16301[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:02,140]DEBUG 16303[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,140]DEBUG 16303[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@e7b2339, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,140]DEBUG 16303[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,141]DEBUG 16304[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@27debd32]
[2015-12-30 00:48:02,141]DEBUG 16304[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,142]DEBUG 16305[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,142]DEBUG 16305[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,144]DEBUG 16307[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@27debd32] after transaction
[2015-12-30 00:48:02,144]DEBUG 16307[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,146]DEBUG 16309[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,146]DEBUG 16309[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,147] INFO 16310[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@e7b2339, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,147]DEBUG 16310[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@e7b2339, testMethod = testDelete@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,148]DEBUG 16311[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,148]DEBUG 16311[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,148]DEBUG 16311[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@ab2f206, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,148]DEBUG 16311[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,148]DEBUG 16311[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,148]DEBUG 16311[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,148]DEBUG 16311[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,148]DEBUG 16311[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,149]DEBUG 16312[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,149]DEBUG 16312[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,149]DEBUG 16312[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,149]DEBUG 16312[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,149]DEBUG 16312[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,149]DEBUG 16312[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,149]DEBUG 16312[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,149]DEBUG 16312[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,149]DEBUG 16312[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,149]DEBUG 16312[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,150]DEBUG 16313[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,150]DEBUG 16313[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,150]DEBUG 16313[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,150]DEBUG 16313[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,150]DEBUG 16313[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,150]DEBUG 16313[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,150]DEBUG 16313[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,150]DEBUG 16313[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@ab2f206]
[2015-12-30 00:48:02,151]DEBUG 16314[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,151]DEBUG 16314[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@ab2f206, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,151]DEBUG 16314[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,152]DEBUG 16315[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByRoleName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,152]DEBUG 16315[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292821
[2015-12-30 00:48:02,152]DEBUG 16315[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4a584f43] for Hibernate transaction
[2015-12-30 00:48:02,152]DEBUG 16315[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4a584f43]
[2015-12-30 00:48:02,152]DEBUG 16315[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,152]DEBUG 16315[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,152]DEBUG 16315[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,152]DEBUG 16315[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@ab2f206, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,152] INFO 16315[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,153]DEBUG 16316[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,153]DEBUG 16316[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,154]DEBUG 16317[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[188]]
[2015-12-30 00:48:02,154]DEBUG 16317[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,154]DEBUG 16317[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 188, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,154]DEBUG 16317[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,155]DEBUG 16318[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,156]DEBUG 16319[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[189]]
[2015-12-30 00:48:02,156]DEBUG 16319[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,156]DEBUG 16319[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 189, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,157]DEBUG 16320[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,157]DEBUG 16320[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,160]DEBUG 16323[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[190]]
[2015-12-30 00:48:02,160]DEBUG 16323[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,161]DEBUG 16324[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 190, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,161]DEBUG 16324[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,161]DEBUG 16324[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,163]DEBUG 16326[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[191]]
[2015-12-30 00:48:02,167]DEBUG 16330[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,167]DEBUG 16330[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 191, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,169]DEBUG 16332[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,169]DEBUG 16332[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,172]DEBUG 16335[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,172]DEBUG 16335[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,172]DEBUG 16335[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,172]DEBUG 16335[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=188, roleName=Administrator}
[2015-12-30 00:48:02,172]DEBUG 16335[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=190, roleName=Customer}
[2015-12-30 00:48:02,173]DEBUG 16336[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=189, roleName=Supervisor}
[2015-12-30 00:48:02,173]DEBUG 16336[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=191, roleName=Merchandiser}
[2015-12-30 00:48:02,173]DEBUG 16336[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:02,173]DEBUG 16336[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,173]DEBUG 16336[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,174]DEBUG 16337[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,174]DEBUG 16337[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,174]DEBUG 16337[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,174]DEBUG 16337[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,174]DEBUG 16337[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,181]DEBUG 16344[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,182]DEBUG 16345[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:02,184]DEBUG 16347[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,184]DEBUG 16347[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,184]DEBUG 16347[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:02,186]DEBUG 16349[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,186]DEBUG 16349[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#191]
[2015-12-30 00:48:02,186]DEBUG 16349[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,186]DEBUG 16349[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,186]DEBUG 16349[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,187]DEBUG 16350[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,187]DEBUG 16350[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,187]DEBUG 16350[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,187]DEBUG 16350[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,187]DEBUG 16350[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,187]DEBUG 16350[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=188, roleName=Administrator}
[2015-12-30 00:48:02,187]DEBUG 16350[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=190, roleName=Customer}
[2015-12-30 00:48:02,187]DEBUG 16350[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=189, roleName=Supervisor}
[2015-12-30 00:48:02,188]DEBUG 16351[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=191, roleName=Merchandiser}
[2015-12-30 00:48:02,188]DEBUG 16351[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,188]DEBUG 16351[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:02,189]DEBUG 16352[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,189]DEBUG 16352[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#189]
[2015-12-30 00:48:02,189]DEBUG 16352[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,189]DEBUG 16352[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,190]DEBUG 16353[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,190]DEBUG 16353[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,191]DEBUG 16354[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,191]DEBUG 16354[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,191]DEBUG 16354[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,191]DEBUG 16354[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,191]DEBUG 16354[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=188, roleName=Administrator}
[2015-12-30 00:48:02,192]DEBUG 16355[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=190, roleName=Customer}
[2015-12-30 00:48:02,192]DEBUG 16355[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=189, roleName=Supervisor}
[2015-12-30 00:48:02,192]DEBUG 16355[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=191, roleName=Merchandiser}
[2015-12-30 00:48:02,192]DEBUG 16355[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,193]DEBUG 16356[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:02,194]DEBUG 16357[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,194]DEBUG 16357[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#188]
[2015-12-30 00:48:02,194]DEBUG 16357[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,194]DEBUG 16357[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,194]DEBUG 16357[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,195]DEBUG 16358[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,195]DEBUG 16358[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,195]DEBUG 16358[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,195]DEBUG 16358[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,195]DEBUG 16358[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,195]DEBUG 16358[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=188, roleName=Administrator}
[2015-12-30 00:48:02,195]DEBUG 16358[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=190, roleName=Customer}
[2015-12-30 00:48:02,196]DEBUG 16359[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=189, roleName=Supervisor}
[2015-12-30 00:48:02,196]DEBUG 16359[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=191, roleName=Merchandiser}
[2015-12-30 00:48:02,196]DEBUG 16359[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,196]DEBUG 16359[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:02,197]DEBUG 16360[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,198]DEBUG 16361[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#190]
[2015-12-30 00:48:02,198]DEBUG 16361[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,198]DEBUG 16361[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,198]DEBUG 16361[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,199]DEBUG 16362[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,199]DEBUG 16362[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,199]DEBUG 16362[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,199]DEBUG 16362[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,200]DEBUG 16363[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,200]DEBUG 16363[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=188, roleName=Administrator}
[2015-12-30 00:48:02,200]DEBUG 16363[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=190, roleName=Customer}
[2015-12-30 00:48:02,200]DEBUG 16363[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=189, roleName=Supervisor}
[2015-12-30 00:48:02,200]DEBUG 16363[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=191, roleName=Merchandiser}
[2015-12-30 00:48:02,200]DEBUG 16363[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,200]DEBUG 16363[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:02,202]DEBUG 16365[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,202]DEBUG 16365[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@ab2f206, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,202]DEBUG 16365[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,202]DEBUG 16365[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4a584f43]
[2015-12-30 00:48:02,203]DEBUG 16366[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,204]DEBUG 16367[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,204]DEBUG 16367[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,204]DEBUG 16367[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4a584f43] after transaction
[2015-12-30 00:48:02,204]DEBUG 16367[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,204]DEBUG 16367[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,204]DEBUG 16367[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,204] INFO 16367[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@ab2f206, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,205]DEBUG 16368[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@ab2f206, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,205]DEBUG 16368[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,206]DEBUG 16369[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,207]DEBUG 16370[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@49df1f20, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,207]DEBUG 16370[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,208]DEBUG 16371[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,208]DEBUG 16371[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,208]DEBUG 16371[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,208]DEBUG 16371[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,208]DEBUG 16371[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,209]DEBUG 16372[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,209]DEBUG 16372[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,209]DEBUG 16372[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,209]DEBUG 16372[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,210]DEBUG 16373[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,210]DEBUG 16373[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,210]DEBUG 16373[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,210]DEBUG 16373[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,210]DEBUG 16373[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,211]DEBUG 16374[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,211]DEBUG 16374[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,211]DEBUG 16374[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,211]DEBUG 16374[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,211]DEBUG 16374[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,212]DEBUG 16375[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,212]DEBUG 16375[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,212]DEBUG 16375[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@49df1f20]
[2015-12-30 00:48:02,213]DEBUG 16376[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContainsRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,214]DEBUG 16377[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@49df1f20, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,214]DEBUG 16377[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,215]DEBUG 16378[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContainsRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,216]DEBUG 16379[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292822
[2015-12-30 00:48:02,216]DEBUG 16379[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7f6e8cd] for Hibernate transaction
[2015-12-30 00:48:02,218]DEBUG 16381[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7f6e8cd]
[2015-12-30 00:48:02,218]DEBUG 16381[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,218]DEBUG 16381[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,218]DEBUG 16381[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,219]DEBUG 16382[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@49df1f20, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,219] INFO 16382[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,219]DEBUG 16382[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,219]DEBUG 16382[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,221]DEBUG 16384[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[192]]
[2015-12-30 00:48:02,221]DEBUG 16384[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,221]DEBUG 16384[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 192, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,221]DEBUG 16384[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,222]DEBUG 16385[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,223]DEBUG 16386[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[193]]
[2015-12-30 00:48:02,223]DEBUG 16386[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,223]DEBUG 16386[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 193, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,224]DEBUG 16387[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,224]DEBUG 16387[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,225]DEBUG 16388[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[194]]
[2015-12-30 00:48:02,225]DEBUG 16388[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,226]DEBUG 16389[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 194, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,226]DEBUG 16389[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,226]DEBUG 16389[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,227]DEBUG 16390[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[195]]
[2015-12-30 00:48:02,228]DEBUG 16391[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,228]DEBUG 16391[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 195, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,229]DEBUG 16392[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,229]DEBUG 16392[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,229]DEBUG 16392[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,229]DEBUG 16392[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,229]DEBUG 16392[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,229]DEBUG 16392[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=194, roleName=Customer}
[2015-12-30 00:48:02,229]DEBUG 16392[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=193, roleName=Supervisor}
[2015-12-30 00:48:02,229]DEBUG 16392[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=195, roleName=Merchandiser}
[2015-12-30 00:48:02,230]DEBUG 16393[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=192, roleName=Administrator}
[2015-12-30 00:48:02,230]DEBUG 16393[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:02,230]DEBUG 16393[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,230]DEBUG 16393[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,230]DEBUG 16393[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,230]DEBUG 16393[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,230]DEBUG 16393[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,231]DEBUG 16394[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,231]DEBUG 16394[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,231]DEBUG 16394[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,231]DEBUG 16394[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:02,233]DEBUG 16396[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,233]DEBUG 16396[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,234]DEBUG 16397[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:02,235]DEBUG 16398[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,235]DEBUG 16398[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#192]
[2015-12-30 00:48:02,236]DEBUG 16399[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,236]DEBUG 16399[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,236]DEBUG 16399[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,237]DEBUG 16400[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,237]DEBUG 16400[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,237]DEBUG 16400[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,238]DEBUG 16401[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,238]DEBUG 16401[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,238]DEBUG 16401[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=194, roleName=Customer}
[2015-12-30 00:48:02,238]DEBUG 16401[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=193, roleName=Supervisor}
[2015-12-30 00:48:02,238]DEBUG 16401[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=195, roleName=Merchandiser}
[2015-12-30 00:48:02,239]DEBUG 16402[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=192, roleName=Administrator}
[2015-12-30 00:48:02,239]DEBUG 16402[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,239]DEBUG 16402[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:02,241]DEBUG 16404[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,242]DEBUG 16405[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#193]
[2015-12-30 00:48:02,242]DEBUG 16405[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,242]DEBUG 16405[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,242]DEBUG 16405[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,243]DEBUG 16406[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,243]DEBUG 16406[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,243]DEBUG 16406[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,244]DEBUG 16407[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,244]DEBUG 16407[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,244]DEBUG 16407[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=194, roleName=Customer}
[2015-12-30 00:48:02,244]DEBUG 16407[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=193, roleName=Supervisor}
[2015-12-30 00:48:02,245]DEBUG 16408[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=195, roleName=Merchandiser}
[2015-12-30 00:48:02,245]DEBUG 16408[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=192, roleName=Administrator}
[2015-12-30 00:48:02,247]DEBUG 16410[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,247]DEBUG 16410[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:02,249]DEBUG 16412[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,249]DEBUG 16412[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#195]
[2015-12-30 00:48:02,249]DEBUG 16412[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,249]DEBUG 16412[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,250]DEBUG 16413[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,250]DEBUG 16413[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,250]DEBUG 16413[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,251]DEBUG 16414[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,251]DEBUG 16414[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,251]DEBUG 16414[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,251]DEBUG 16414[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=194, roleName=Customer}
[2015-12-30 00:48:02,252]DEBUG 16415[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=193, roleName=Supervisor}
[2015-12-30 00:48:02,252]DEBUG 16415[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=195, roleName=Merchandiser}
[2015-12-30 00:48:02,252]DEBUG 16415[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=192, roleName=Administrator}
[2015-12-30 00:48:02,252]DEBUG 16415[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,253]DEBUG 16416[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:02,254]DEBUG 16417[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,255]DEBUG 16418[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#194]
[2015-12-30 00:48:02,255]DEBUG 16418[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,255]DEBUG 16418[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,255]DEBUG 16418[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,256]DEBUG 16419[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,256]DEBUG 16419[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,256]DEBUG 16419[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,257]DEBUG 16420[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,257]DEBUG 16420[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,257]DEBUG 16420[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=194, roleName=Customer}
[2015-12-30 00:48:02,257]DEBUG 16420[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=193, roleName=Supervisor}
[2015-12-30 00:48:02,258]DEBUG 16421[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=195, roleName=Merchandiser}
[2015-12-30 00:48:02,258]DEBUG 16421[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=192, roleName=Administrator}
[2015-12-30 00:48:02,258]DEBUG 16421[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,258]DEBUG 16421[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:02,260]DEBUG 16423[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,260]DEBUG 16423[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,261]DEBUG 16424[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,261]DEBUG 16424[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,261]DEBUG 16424[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,262]DEBUG 16425[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,262]DEBUG 16425[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,262]DEBUG 16425[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,262]DEBUG 16425[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,263]DEBUG 16426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=194, roleName=Customer}
[2015-12-30 00:48:02,263]DEBUG 16426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=193, roleName=Supervisor}
[2015-12-30 00:48:02,263]DEBUG 16426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=195, roleName=Merchandiser}
[2015-12-30 00:48:02,263]DEBUG 16426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=192, roleName=Administrator}
[2015-12-30 00:48:02,264]DEBUG 16427[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,264]DEBUG 16427[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:02,265]DEBUG 16428[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,266]DEBUG 16429[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,266]DEBUG 16429[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,266]DEBUG 16429[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,266]DEBUG 16429[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,268]DEBUG 16431[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,269]DEBUG 16432[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,269]DEBUG 16432[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,269]DEBUG 16432[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,269]DEBUG 16432[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=194, roleName=Customer}
[2015-12-30 00:48:02,269]DEBUG 16432[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=193, roleName=Supervisor}
[2015-12-30 00:48:02,270]DEBUG 16433[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=195, roleName=Merchandiser}
[2015-12-30 00:48:02,270]DEBUG 16433[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=192, roleName=Administrator}
[2015-12-30 00:48:02,270]DEBUG 16433[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,270]DEBUG 16433[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:02,272]DEBUG 16435[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,272]DEBUG 16435[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@49df1f20, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,272]DEBUG 16435[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,273]DEBUG 16436[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7f6e8cd]
[2015-12-30 00:48:02,273]DEBUG 16436[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,274]DEBUG 16437[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,274]DEBUG 16437[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,274]DEBUG 16437[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7f6e8cd] after transaction
[2015-12-30 00:48:02,275]DEBUG 16438[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,275]DEBUG 16438[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,275]DEBUG 16438[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,275] INFO 16438[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@49df1f20, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,277]DEBUG 16440[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@49df1f20, testMethod = testContainsRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,277]DEBUG 16440[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,278]DEBUG 16441[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,278]DEBUG 16441[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@e13b2fb, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,278]DEBUG 16441[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,278]DEBUG 16441[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,279]DEBUG 16442[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,279]DEBUG 16442[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,279]DEBUG 16442[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,279]DEBUG 16442[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,280]DEBUG 16443[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,280]DEBUG 16443[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,280]DEBUG 16443[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,280]DEBUG 16443[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,280]DEBUG 16443[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,281]DEBUG 16444[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,281]DEBUG 16444[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,281]DEBUG 16444[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,281]DEBUG 16444[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,281]DEBUG 16444[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,282]DEBUG 16445[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,282]DEBUG 16445[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,282]DEBUG 16445[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,282]DEBUG 16445[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,283]DEBUG 16446[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,283]DEBUG 16446[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,283]DEBUG 16446[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@e13b2fb]
[2015-12-30 00:48:02,284]DEBUG 16447[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,284]DEBUG 16447[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@e13b2fb, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,284]DEBUG 16447[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,285]DEBUG 16448[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterionsSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,285]DEBUG 16448[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292822
[2015-12-30 00:48:02,285]DEBUG 16448[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@60e789be] for Hibernate transaction
[2015-12-30 00:48:02,285]DEBUG 16448[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@60e789be]
[2015-12-30 00:48:02,285]DEBUG 16448[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,286]DEBUG 16449[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,286]DEBUG 16449[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,287]DEBUG 16450[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@e13b2fb, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,287] INFO 16450[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,287]DEBUG 16450[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,287]DEBUG 16450[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,289]DEBUG 16452[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[196]]
[2015-12-30 00:48:02,289]DEBUG 16452[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,289]DEBUG 16452[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 196, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,290]DEBUG 16453[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,290]DEBUG 16453[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,291]DEBUG 16454[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[197]]
[2015-12-30 00:48:02,292]DEBUG 16455[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,292]DEBUG 16455[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 197, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,292]DEBUG 16455[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,292]DEBUG 16455[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,294]DEBUG 16457[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[198]]
[2015-12-30 00:48:02,294]DEBUG 16457[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,294]DEBUG 16457[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 198, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,295]DEBUG 16458[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,295]DEBUG 16458[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,296]DEBUG 16459[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[199]]
[2015-12-30 00:48:02,296]DEBUG 16459[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,297]DEBUG 16460[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 199, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,297]DEBUG 16460[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,298]DEBUG 16461[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,298]DEBUG 16461[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,298]DEBUG 16461[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,299]DEBUG 16462[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,299]DEBUG 16462[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=196, roleName=Administrator}
[2015-12-30 00:48:02,299]DEBUG 16462[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=198, roleName=Customer}
[2015-12-30 00:48:02,299]DEBUG 16462[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=197, roleName=Supervisor}
[2015-12-30 00:48:02,299]DEBUG 16462[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=199, roleName=Merchandiser}
[2015-12-30 00:48:02,300]DEBUG 16463[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:02,300]DEBUG 16463[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,300]DEBUG 16463[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,301]DEBUG 16464[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,301]DEBUG 16464[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,301]DEBUG 16464[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,302]DEBUG 16465[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,302]DEBUG 16465[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,302]DEBUG 16465[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,302]DEBUG 16465[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:02,304]DEBUG 16467[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,304]DEBUG 16467[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,305]DEBUG 16468[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName asc
[2015-12-30 00:48:02,306]DEBUG 16469[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,307]DEBUG 16470[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,307]DEBUG 16470[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,307]DEBUG 16470[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,307]DEBUG 16470[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,307]DEBUG 16470[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,307]DEBUG 16470[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,309]DEBUG 16472[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,309]DEBUG 16472[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,309]DEBUG 16472[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=196, roleName=Administrator}
[2015-12-30 00:48:02,309]DEBUG 16472[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=198, roleName=Customer}
[2015-12-30 00:48:02,309]DEBUG 16472[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=197, roleName=Supervisor}
[2015-12-30 00:48:02,309]DEBUG 16472[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=199, roleName=Merchandiser}
[2015-12-30 00:48:02,309]DEBUG 16472[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,309]DEBUG 16472[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName desc
[2015-12-30 00:48:02,311]DEBUG 16474[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,311]DEBUG 16474[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,311]DEBUG 16474[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,311]DEBUG 16474[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,312]DEBUG 16475[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,312]DEBUG 16475[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,312]DEBUG 16475[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,312]DEBUG 16475[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,312]DEBUG 16475[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,312]DEBUG 16475[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=196, roleName=Administrator}
[2015-12-30 00:48:02,312]DEBUG 16475[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=198, roleName=Customer}
[2015-12-30 00:48:02,313]DEBUG 16476[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=197, roleName=Supervisor}
[2015-12-30 00:48:02,313]DEBUG 16476[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=199, roleName=Merchandiser}
[2015-12-30 00:48:02,313]DEBUG 16476[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,313]DEBUG 16476[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.ID asc
[2015-12-30 00:48:02,314]DEBUG 16477[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,315]DEBUG 16478[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,315]DEBUG 16478[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,315]DEBUG 16478[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,315]DEBUG 16478[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,315]DEBUG 16478[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,315]DEBUG 16478[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,316]DEBUG 16479[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,316]DEBUG 16479[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,317]DEBUG 16480[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=196, roleName=Administrator}
[2015-12-30 00:48:02,319]DEBUG 16482[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=198, roleName=Customer}
[2015-12-30 00:48:02,320]DEBUG 16483[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=197, roleName=Supervisor}
[2015-12-30 00:48:02,320]DEBUG 16483[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=199, roleName=Merchandiser}
[2015-12-30 00:48:02,320]DEBUG 16483[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,320]DEBUG 16483[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.ID desc
[2015-12-30 00:48:02,321]DEBUG 16484[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,322]DEBUG 16485[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,322]DEBUG 16485[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,322]DEBUG 16485[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,322]DEBUG 16485[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,322]DEBUG 16485[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,322]DEBUG 16485[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,322]DEBUG 16485[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,322]DEBUG 16485[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,322]DEBUG 16485[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=196, roleName=Administrator}
[2015-12-30 00:48:02,323]DEBUG 16486[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=198, roleName=Customer}
[2015-12-30 00:48:02,323]DEBUG 16486[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=197, roleName=Supervisor}
[2015-12-30 00:48:02,323]DEBUG 16486[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=199, roleName=Merchandiser}
[2015-12-30 00:48:02,323]DEBUG 16486[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,323]DEBUG 16486[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:02,324]DEBUG 16487[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,325]DEBUG 16488[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@e13b2fb, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,326]DEBUG 16489[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,326]DEBUG 16489[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@60e789be]
[2015-12-30 00:48:02,326]DEBUG 16489[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,327]DEBUG 16490[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,327]DEBUG 16490[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,327]DEBUG 16490[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@60e789be] after transaction
[2015-12-30 00:48:02,328]DEBUG 16491[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,328]DEBUG 16491[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,328]DEBUG 16491[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,328] INFO 16491[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@e13b2fb, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,330]DEBUG 16493[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@e13b2fb, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,330]DEBUG 16493[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,331]DEBUG 16494[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,331]DEBUG 16494[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1c4af586, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,331]DEBUG 16494[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,332]DEBUG 16495[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,332]DEBUG 16495[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,332]DEBUG 16495[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,332]DEBUG 16495[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,332]DEBUG 16495[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,333]DEBUG 16496[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,333]DEBUG 16496[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,333]DEBUG 16496[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,333]DEBUG 16496[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,333]DEBUG 16496[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,334]DEBUG 16497[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,334]DEBUG 16497[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,334]DEBUG 16497[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,334]DEBUG 16497[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,334]DEBUG 16497[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,335]DEBUG 16498[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,335]DEBUG 16498[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,335]DEBUG 16498[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,335]DEBUG 16498[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,335]DEBUG 16498[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,336]DEBUG 16499[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,336]DEBUG 16499[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1c4af586]
[2015-12-30 00:48:02,337]DEBUG 16500[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,337]DEBUG 16500[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1c4af586, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,337]DEBUG 16500[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,338]DEBUG 16501[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,339]DEBUG 16502[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292823
[2015-12-30 00:48:02,339]DEBUG 16502[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@11147fb7] for Hibernate transaction
[2015-12-30 00:48:02,339]DEBUG 16502[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@11147fb7]
[2015-12-30 00:48:02,339]DEBUG 16502[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,339]DEBUG 16502[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,340]DEBUG 16503[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,340]DEBUG 16503[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1c4af586, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,340] INFO 16503[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,340]DEBUG 16503[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,341]DEBUG 16504[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,342]DEBUG 16505[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[200]]
[2015-12-30 00:48:02,342]DEBUG 16505[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,343]DEBUG 16506[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 200, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,343]DEBUG 16506[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,343]DEBUG 16506[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,346]DEBUG 16509[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[201]]
[2015-12-30 00:48:02,346]DEBUG 16509[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,346]DEBUG 16509[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 201, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,346]DEBUG 16509[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,346]DEBUG 16509[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,348]DEBUG 16511[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[202]]
[2015-12-30 00:48:02,348]DEBUG 16511[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,348]DEBUG 16511[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 202, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,348]DEBUG 16511[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,348]DEBUG 16511[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,349]DEBUG 16512[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[203]]
[2015-12-30 00:48:02,349]DEBUG 16512[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,349]DEBUG 16512[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 203, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,350]DEBUG 16513[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,350]DEBUG 16513[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,350]DEBUG 16513[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,350]DEBUG 16513[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,350]DEBUG 16513[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,350]DEBUG 16513[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=202, roleName=Customer}
[2015-12-30 00:48:02,350]DEBUG 16513[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=201, roleName=Supervisor}
[2015-12-30 00:48:02,351]DEBUG 16514[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=203, roleName=Merchandiser}
[2015-12-30 00:48:02,351]DEBUG 16514[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=200, roleName=Administrator}
[2015-12-30 00:48:02,351]DEBUG 16514[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:02,351]DEBUG 16514[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,351]DEBUG 16514[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,351]DEBUG 16514[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,351]DEBUG 16514[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,352]DEBUG 16515[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,352]DEBUG 16515[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,352]DEBUG 16515[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,352]DEBUG 16515[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,352]DEBUG 16515[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:02,354]DEBUG 16517[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,354]DEBUG 16517[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,354]DEBUG 16517[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=? and this_.ID<=?
[2015-12-30 00:48:02,356]DEBUG 16519[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,356]DEBUG 16519[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,356]DEBUG 16519[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,356]DEBUG 16519[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,356]DEBUG 16519[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,356]DEBUG 16519[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,357]DEBUG 16520[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,357]DEBUG 16520[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,357]DEBUG 16520[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,357]DEBUG 16520[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=202, roleName=Customer}
[2015-12-30 00:48:02,357]DEBUG 16520[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=201, roleName=Supervisor}
[2015-12-30 00:48:02,357]DEBUG 16520[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=203, roleName=Merchandiser}
[2015-12-30 00:48:02,357]DEBUG 16520[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=200, roleName=Administrator}
[2015-12-30 00:48:02,357]DEBUG 16520[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,357]DEBUG 16520[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:02,359]DEBUG 16522[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,359]DEBUG 16522[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1c4af586, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,360]DEBUG 16523[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,360]DEBUG 16523[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@11147fb7]
[2015-12-30 00:48:02,360]DEBUG 16523[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,361]DEBUG 16524[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,362]DEBUG 16525[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,362]DEBUG 16525[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@11147fb7] after transaction
[2015-12-30 00:48:02,362]DEBUG 16525[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,362]DEBUG 16525[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,362]DEBUG 16525[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,362] INFO 16525[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1c4af586, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,363]DEBUG 16526[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1c4af586, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,363]DEBUG 16526[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,363]DEBUG 16526[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,363]DEBUG 16526[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@766c6aef, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,364]DEBUG 16527[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,364]DEBUG 16527[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,364]DEBUG 16527[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,364]DEBUG 16527[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,364]DEBUG 16527[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,364]DEBUG 16527[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,364]DEBUG 16527[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,364]DEBUG 16527[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,364]DEBUG 16527[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,364]DEBUG 16527[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,365]DEBUG 16528[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,365]DEBUG 16528[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,365]DEBUG 16528[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,365]DEBUG 16528[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,365]DEBUG 16528[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,365]DEBUG 16528[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,365]DEBUG 16528[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,365]DEBUG 16528[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,365]DEBUG 16528[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,365]DEBUG 16528[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,366]DEBUG 16529[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,366]DEBUG 16529[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,366]DEBUG 16529[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@766c6aef]
[2015-12-30 00:48:02,371]DEBUG 16534[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,372]DEBUG 16535[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@766c6aef, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,372]DEBUG 16535[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,372]DEBUG 16535[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,372]DEBUG 16535[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292823
[2015-12-30 00:48:02,374]DEBUG 16537[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6689ef79] for Hibernate transaction
[2015-12-30 00:48:02,374]DEBUG 16537[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6689ef79]
[2015-12-30 00:48:02,374]DEBUG 16537[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,374]DEBUG 16537[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,374]DEBUG 16537[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,374]DEBUG 16537[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@766c6aef, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,374] INFO 16537[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,375]DEBUG 16538[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,375]DEBUG 16538[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,377]DEBUG 16540[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[204]]
[2015-12-30 00:48:02,377]DEBUG 16540[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,377]DEBUG 16540[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 204, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,377]DEBUG 16540[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,378]DEBUG 16541[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,379]DEBUG 16542[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[205]]
[2015-12-30 00:48:02,379]DEBUG 16542[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,380]DEBUG 16543[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 205, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,381]DEBUG 16544[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,381]DEBUG 16544[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,382]DEBUG 16545[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[206]]
[2015-12-30 00:48:02,382]DEBUG 16545[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,382]DEBUG 16545[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 206, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,382]DEBUG 16545[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,382]DEBUG 16545[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,383]DEBUG 16546[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[207]]
[2015-12-30 00:48:02,383]DEBUG 16546[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,384]DEBUG 16547[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 207, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,385]DEBUG 16548[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,385]DEBUG 16548[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,385]DEBUG 16548[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,385]DEBUG 16548[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,385]DEBUG 16548[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,385]DEBUG 16548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=204, roleName=Administrator}
[2015-12-30 00:48:02,386]DEBUG 16549[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=205, roleName=Supervisor}
[2015-12-30 00:48:02,386]DEBUG 16549[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=206, roleName=Customer}
[2015-12-30 00:48:02,386]DEBUG 16549[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=207, roleName=Merchandiser}
[2015-12-30 00:48:02,386]DEBUG 16549[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:02,386]DEBUG 16549[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,386]DEBUG 16549[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,386]DEBUG 16549[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,386]DEBUG 16549[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,387]DEBUG 16550[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,387]DEBUG 16550[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,387]DEBUG 16550[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,387]DEBUG 16550[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,387]DEBUG 16550[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:02,389]DEBUG 16552[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,390]DEBUG 16553[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,390]DEBUG 16553[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where (this_.RoleName like ? or this_.ID<=?)
[2015-12-30 00:48:02,391]DEBUG 16554[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,392]DEBUG 16555[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#204]
[2015-12-30 00:48:02,392]DEBUG 16555[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#205]
[2015-12-30 00:48:02,392]DEBUG 16555[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#207]
[2015-12-30 00:48:02,393]DEBUG 16556[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,393]DEBUG 16556[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,393]DEBUG 16556[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,393]DEBUG 16556[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,394]DEBUG 16557[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,394]DEBUG 16557[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,394]DEBUG 16557[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,394]DEBUG 16557[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,395]DEBUG 16558[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=204, roleName=Administrator}
[2015-12-30 00:48:02,395]DEBUG 16558[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=205, roleName=Supervisor}
[2015-12-30 00:48:02,395]DEBUG 16558[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=206, roleName=Customer}
[2015-12-30 00:48:02,395]DEBUG 16558[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=207, roleName=Merchandiser}
[2015-12-30 00:48:02,395]DEBUG 16558[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,396]DEBUG 16559[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:02,399]DEBUG 16562[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,399]DEBUG 16562[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@766c6aef, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,400]DEBUG 16563[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,400]DEBUG 16563[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6689ef79]
[2015-12-30 00:48:02,400]DEBUG 16563[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,401]DEBUG 16564[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,401]DEBUG 16564[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,401]DEBUG 16564[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6689ef79] after transaction
[2015-12-30 00:48:02,401]DEBUG 16564[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,401]DEBUG 16564[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,401]DEBUG 16564[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,402] INFO 16565[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@766c6aef, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,402]DEBUG 16565[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@766c6aef, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,403]DEBUG 16566[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,403]DEBUG 16566[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,403]DEBUG 16566[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4419bacb, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,403]DEBUG 16566[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,403]DEBUG 16566[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,403]DEBUG 16566[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,403]DEBUG 16566[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,404]DEBUG 16567[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,404]DEBUG 16567[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,404]DEBUG 16567[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,404]DEBUG 16567[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,404]DEBUG 16567[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,404]DEBUG 16567[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,404]DEBUG 16567[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,404]DEBUG 16567[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,404]DEBUG 16567[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,405]DEBUG 16568[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,405]DEBUG 16568[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,405]DEBUG 16568[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,405]DEBUG 16568[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,405]DEBUG 16568[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,406]DEBUG 16569[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,406]DEBUG 16569[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,406]DEBUG 16569[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,406]DEBUG 16569[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,406]DEBUG 16569[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4419bacb]
[2015-12-30 00:48:02,407]DEBUG 16570[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,407]DEBUG 16570[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4419bacb, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,407]DEBUG 16570[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,409]DEBUG 16572[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterionsSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,409]DEBUG 16572[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292824
[2015-12-30 00:48:02,409]DEBUG 16572[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5cd38dd] for Hibernate transaction
[2015-12-30 00:48:02,409]DEBUG 16572[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5cd38dd]
[2015-12-30 00:48:02,410]DEBUG 16573[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,410]DEBUG 16573[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,410]DEBUG 16573[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,410]DEBUG 16573[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4419bacb, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,411] INFO 16574[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (12): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,411]DEBUG 16574[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,411]DEBUG 16574[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,413]DEBUG 16576[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[208]]
[2015-12-30 00:48:02,413]DEBUG 16576[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,413]DEBUG 16576[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 208, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,413]DEBUG 16576[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,416]DEBUG 16579[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,417]DEBUG 16580[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[209]]
[2015-12-30 00:48:02,417]DEBUG 16580[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,418]DEBUG 16581[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 209, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,418]DEBUG 16581[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,418]DEBUG 16581[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,420]DEBUG 16583[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[210]]
[2015-12-30 00:48:02,420]DEBUG 16583[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,420]DEBUG 16583[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 210, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,421]DEBUG 16584[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,421]DEBUG 16584[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,422]DEBUG 16585[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[211]]
[2015-12-30 00:48:02,423]DEBUG 16586[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,423]DEBUG 16586[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 211, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,424]DEBUG 16587[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,424]DEBUG 16587[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,424]DEBUG 16587[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,424]DEBUG 16587[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,425]DEBUG 16588[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,425]DEBUG 16588[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=209, roleName=Supervisor}
[2015-12-30 00:48:02,425]DEBUG 16588[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=210, roleName=Customer}
[2015-12-30 00:48:02,425]DEBUG 16588[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=211, roleName=Merchandiser}
[2015-12-30 00:48:02,426]DEBUG 16589[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=208, roleName=Administrator}
[2015-12-30 00:48:02,426]DEBUG 16589[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:02,426]DEBUG 16589[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,426]DEBUG 16589[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,427]DEBUG 16590[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,427]DEBUG 16590[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,428]DEBUG 16591[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,428]DEBUG 16591[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,428]DEBUG 16591[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,428]DEBUG 16591[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,429]DEBUG 16592[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:02,431]DEBUG 16594[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,431]DEBUG 16594[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,431]DEBUG 16594[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName asc
[2015-12-30 00:48:02,433]DEBUG 16596[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,433]DEBUG 16596[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,434]DEBUG 16597[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,434]DEBUG 16597[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,434]DEBUG 16597[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,435]DEBUG 16598[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,438]DEBUG 16601[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,438]DEBUG 16601[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,438]DEBUG 16601[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,439]DEBUG 16602[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=209, roleName=Supervisor}
[2015-12-30 00:48:02,439]DEBUG 16602[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=210, roleName=Customer}
[2015-12-30 00:48:02,439]DEBUG 16602[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=211, roleName=Merchandiser}
[2015-12-30 00:48:02,439]DEBUG 16602[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=208, roleName=Administrator}
[2015-12-30 00:48:02,440]DEBUG 16603[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,440]DEBUG 16603[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName desc
[2015-12-30 00:48:02,443]DEBUG 16606[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,444]DEBUG 16607[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,444]DEBUG 16607[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,444]DEBUG 16607[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,445]DEBUG 16608[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,445]DEBUG 16608[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,445]DEBUG 16608[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,445]DEBUG 16608[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,445]DEBUG 16608[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,445]DEBUG 16608[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=209, roleName=Supervisor}
[2015-12-30 00:48:02,445]DEBUG 16608[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=210, roleName=Customer}
[2015-12-30 00:48:02,445]DEBUG 16608[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=211, roleName=Merchandiser}
[2015-12-30 00:48:02,445]DEBUG 16608[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=208, roleName=Administrator}
[2015-12-30 00:48:02,446]DEBUG 16609[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,446]DEBUG 16609[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:02,447]DEBUG 16610[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,447]DEBUG 16610[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4419bacb, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,447]DEBUG 16610[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,447]DEBUG 16610[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5cd38dd]
[2015-12-30 00:48:02,447]DEBUG 16610[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,448]DEBUG 16611[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,449]DEBUG 16612[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,449]DEBUG 16612[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5cd38dd] after transaction
[2015-12-30 00:48:02,449]DEBUG 16612[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,449]DEBUG 16612[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,450]DEBUG 16613[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,450] INFO 16613[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4419bacb, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,451]DEBUG 16614[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4419bacb, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,452]DEBUG 16615[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,452]DEBUG 16615[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,452]DEBUG 16615[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@240e3cc5, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,452]DEBUG 16615[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,452]DEBUG 16615[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,452]DEBUG 16615[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,452]DEBUG 16615[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,453]DEBUG 16616[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,453]DEBUG 16616[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,453]DEBUG 16616[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,453]DEBUG 16616[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,453]DEBUG 16616[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,453]DEBUG 16616[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,454]DEBUG 16617[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,454]DEBUG 16617[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,454]DEBUG 16617[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,454]DEBUG 16617[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,454]DEBUG 16617[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,454]DEBUG 16617[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,454]DEBUG 16617[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,454]DEBUG 16617[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,454]DEBUG 16617[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,454]DEBUG 16617[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,455]DEBUG 16618[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,455]DEBUG 16618[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,455]DEBUG 16618[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@240e3cc5]
[2015-12-30 00:48:02,455]DEBUG 16618[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,455]DEBUG 16618[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@240e3cc5, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,455]DEBUG 16618[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,456]DEBUG 16619[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,457]DEBUG 16620[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292824
[2015-12-30 00:48:02,457]DEBUG 16620[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@455f712c] for Hibernate transaction
[2015-12-30 00:48:02,457]DEBUG 16620[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@455f712c]
[2015-12-30 00:48:02,458]DEBUG 16621[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,458]DEBUG 16621[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,458]DEBUG 16621[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,458]DEBUG 16621[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@240e3cc5, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,458] INFO 16621[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (13): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,458]DEBUG 16621[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,458]DEBUG 16621[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,460]DEBUG 16623[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[212]]
[2015-12-30 00:48:02,460]DEBUG 16623[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,460]DEBUG 16623[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 212, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,460]DEBUG 16623[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,460]DEBUG 16623[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,461]DEBUG 16624[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[213]]
[2015-12-30 00:48:02,461]DEBUG 16624[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,461]DEBUG 16624[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 213, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,462]DEBUG 16625[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,462]DEBUG 16625[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,463]DEBUG 16626[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[214]]
[2015-12-30 00:48:02,463]DEBUG 16626[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,463]DEBUG 16626[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 214, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,463]DEBUG 16626[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,463]DEBUG 16626[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,464]DEBUG 16627[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[215]]
[2015-12-30 00:48:02,465]DEBUG 16628[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,465]DEBUG 16628[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 215, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,465]DEBUG 16628[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,465]DEBUG 16628[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,465]DEBUG 16628[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,466]DEBUG 16629[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,466]DEBUG 16629[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,466]DEBUG 16629[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=212, roleName=Administrator}
[2015-12-30 00:48:02,466]DEBUG 16629[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=213, roleName=Supervisor}
[2015-12-30 00:48:02,466]DEBUG 16629[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=214, roleName=Customer}
[2015-12-30 00:48:02,466]DEBUG 16629[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=215, roleName=Merchandiser}
[2015-12-30 00:48:02,466]DEBUG 16629[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:02,466]DEBUG 16629[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,466]DEBUG 16629[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,467]DEBUG 16630[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,467]DEBUG 16630[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,467]DEBUG 16630[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,467]DEBUG 16630[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,467]DEBUG 16630[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,467]DEBUG 16630[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,468]DEBUG 16631[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:02,469]DEBUG 16632[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,469]DEBUG 16632[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,470]DEBUG 16633[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_
[2015-12-30 00:48:02,471]DEBUG 16634[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,472]DEBUG 16635[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#212]
[2015-12-30 00:48:02,472]DEBUG 16635[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#213]
[2015-12-30 00:48:02,472]DEBUG 16635[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#214]
[2015-12-30 00:48:02,473]DEBUG 16636[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#215]
[2015-12-30 00:48:02,473]DEBUG 16636[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,473]DEBUG 16636[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,473]DEBUG 16636[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,473]DEBUG 16636[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,473]DEBUG 16636[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,474]DEBUG 16637[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,474]DEBUG 16637[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,474]DEBUG 16637[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,474]DEBUG 16637[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=212, roleName=Administrator}
[2015-12-30 00:48:02,474]DEBUG 16637[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=213, roleName=Supervisor}
[2015-12-30 00:48:02,474]DEBUG 16637[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=214, roleName=Customer}
[2015-12-30 00:48:02,474]DEBUG 16637[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=215, roleName=Merchandiser}
[2015-12-30 00:48:02,474]DEBUG 16637[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,474]DEBUG 16637[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:02,476]DEBUG 16639[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,476]DEBUG 16639[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@240e3cc5, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,476]DEBUG 16639[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,476]DEBUG 16639[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@455f712c]
[2015-12-30 00:48:02,476]DEBUG 16639[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,477]DEBUG 16640[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,477]DEBUG 16640[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,477]DEBUG 16640[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@455f712c] after transaction
[2015-12-30 00:48:02,478]DEBUG 16641[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,478]DEBUG 16641[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,478]DEBUG 16641[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,478] INFO 16641[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@240e3cc5, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,479]DEBUG 16642[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@240e3cc5, testMethod = testFindByID@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,479]DEBUG 16642[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,479]DEBUG 16642[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,479]DEBUG 16642[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@20648b59, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,479]DEBUG 16642[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,480]DEBUG 16643[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,480]DEBUG 16643[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,480]DEBUG 16643[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,480]DEBUG 16643[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,480]DEBUG 16643[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,480]DEBUG 16643[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,480]DEBUG 16643[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,480]DEBUG 16643[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,480]DEBUG 16643[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,480]DEBUG 16643[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,481]DEBUG 16644[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,481]DEBUG 16644[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,481]DEBUG 16644[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,481]DEBUG 16644[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,481]DEBUG 16644[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,481]DEBUG 16644[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,481]DEBUG 16644[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,481]DEBUG 16644[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,481]DEBUG 16644[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,481]DEBUG 16644[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,482]DEBUG 16645[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,482]DEBUG 16645[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@20648b59]
[2015-12-30 00:48:02,482]DEBUG 16645[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,484]DEBUG 16647[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@20648b59, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,484]DEBUG 16647[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,484]DEBUG 16647[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByRoleNameWithUserSelectWayConditions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,485]DEBUG 16648[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292824
[2015-12-30 00:48:02,485]DEBUG 16648[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@53b99c61] for Hibernate transaction
[2015-12-30 00:48:02,485]DEBUG 16648[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@53b99c61]
[2015-12-30 00:48:02,485]DEBUG 16648[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,485]DEBUG 16648[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,485]DEBUG 16648[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,485]DEBUG 16648[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@20648b59, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,485] INFO 16648[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (14): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,485]DEBUG 16648[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,486]DEBUG 16649[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,487]DEBUG 16650[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[216]]
[2015-12-30 00:48:02,487]DEBUG 16650[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,487]DEBUG 16650[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 216, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,488]DEBUG 16651[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,488]DEBUG 16651[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,489]DEBUG 16652[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[217]]
[2015-12-30 00:48:02,489]DEBUG 16652[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,489]DEBUG 16652[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 217, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,489]DEBUG 16652[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,489]DEBUG 16652[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,491]DEBUG 16654[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[218]]
[2015-12-30 00:48:02,491]DEBUG 16654[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,491]DEBUG 16654[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 218, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,491]DEBUG 16654[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,491]DEBUG 16654[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,492]DEBUG 16655[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[219]]
[2015-12-30 00:48:02,492]DEBUG 16655[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,492]DEBUG 16655[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 219, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,492]DEBUG 16655[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,493]DEBUG 16656[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,494]DEBUG 16657[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[220]]
[2015-12-30 00:48:02,494]DEBUG 16657[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,494]DEBUG 16657[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 220, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,496]DEBUG 16659[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,496]DEBUG 16659[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,497]DEBUG 16660[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 5 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 00:48:02,497]DEBUG 16660[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,497]DEBUG 16660[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,497]DEBUG 16660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=217, roleName=Supervisor}
[2015-12-30 00:48:02,497]DEBUG 16660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=218, roleName=Customer}
[2015-12-30 00:48:02,497]DEBUG 16660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=219, roleName=Merchandiser}
[2015-12-30 00:48:02,497]DEBUG 16660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=220, roleName=tempAdmin}
[2015-12-30 00:48:02,497]DEBUG 16660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=216, roleName=Administrator}
[2015-12-30 00:48:02,497]DEBUG 16660[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:02,498]DEBUG 16661[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,498]DEBUG 16661[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,498]DEBUG 16661[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,499]DEBUG 16662[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,499]DEBUG 16662[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,500]DEBUG 16663[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,500]DEBUG 16663[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,500]DEBUG 16663[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,500]DEBUG 16663[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,500]DEBUG 16663[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,500]DEBUG 16663[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 5
[2015-12-30 00:48:02,502]DEBUG 16665[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,502]DEBUG 16665[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,502]DEBUG 16665[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:02,504]DEBUG 16667[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,504]DEBUG 16667[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#220]
[2015-12-30 00:48:02,504]DEBUG 16667[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,504]DEBUG 16667[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,504]DEBUG 16667[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,505]DEBUG 16668[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,505]DEBUG 16668[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,506]DEBUG 16669[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2015-12-30 00:48:02,506]DEBUG 16669[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,506]DEBUG 16669[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,506]DEBUG 16669[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=217, roleName=Supervisor}
[2015-12-30 00:48:02,506]DEBUG 16669[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=218, roleName=Customer}
[2015-12-30 00:48:02,506]DEBUG 16669[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=219, roleName=Merchandiser}
[2015-12-30 00:48:02,507]DEBUG 16670[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=220, roleName=tempAdmin and something}
[2015-12-30 00:48:02,507]DEBUG 16670[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=216, roleName=Administrator}
[2015-12-30 00:48:02,507]DEBUG 16670[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:02,507]DEBUG 16670[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,508]DEBUG 16671[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2015-12-30 00:48:02,508]DEBUG 16671[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:02,509]DEBUG 16672[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,510]DEBUG 16673[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,510]DEBUG 16673[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2015-12-30 00:48:02,511]DEBUG 16674[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,511]DEBUG 16674[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#220]
[2015-12-30 00:48:02,511]DEBUG 16674[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,511]DEBUG 16674[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,512]DEBUG 16675[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,512]DEBUG 16675[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,512]DEBUG 16675[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,512]DEBUG 16675[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2015-12-30 00:48:02,512]DEBUG 16675[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,512]DEBUG 16675[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,513]DEBUG 16676[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=217, roleName=Supervisor}
[2015-12-30 00:48:02,513]DEBUG 16676[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=218, roleName=Customer}
[2015-12-30 00:48:02,513]DEBUG 16676[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=219, roleName=Merchandiser}
[2015-12-30 00:48:02,513]DEBUG 16676[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=220, roleName=something heretempAdmin and something and something here}
[2015-12-30 00:48:02,513]DEBUG 16676[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=216, roleName=Administrator}
[2015-12-30 00:48:02,513]DEBUG 16676[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:02,515]DEBUG 16678[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,515]DEBUG 16678[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2015-12-30 00:48:02,515]DEBUG 16678[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:02,516]DEBUG 16679[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,517]DEBUG 16680[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,517]DEBUG 16680[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2015-12-30 00:48:02,518]DEBUG 16681[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,518]DEBUG 16681[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#220]
[2015-12-30 00:48:02,518]DEBUG 16681[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,518]DEBUG 16681[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,518]DEBUG 16681[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,519]DEBUG 16682[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,519]DEBUG 16682[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,519]DEBUG 16682[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 00:48:02,519]DEBUG 16682[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,519]DEBUG 16682[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,519]DEBUG 16682[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=217, roleName=Supervisor}
[2015-12-30 00:48:02,519]DEBUG 16682[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=218, roleName=Customer}
[2015-12-30 00:48:02,519]DEBUG 16682[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=219, roleName=Merchandiser}
[2015-12-30 00:48:02,520]DEBUG 16683[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=220, roleName=something heretempAdmin and something and something here}
[2015-12-30 00:48:02,520]DEBUG 16683[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=216, roleName=Administrator}
[2015-12-30 00:48:02,520]DEBUG 16683[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,520]DEBUG 16683[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:02,521]DEBUG 16684[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,521]DEBUG 16684[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@20648b59, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,522]DEBUG 16685[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,522]DEBUG 16685[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@53b99c61]
[2015-12-30 00:48:02,522]DEBUG 16685[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,523]DEBUG 16686[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,523]DEBUG 16686[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,523]DEBUG 16686[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@53b99c61] after transaction
[2015-12-30 00:48:02,524]DEBUG 16687[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,524]DEBUG 16687[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,524]DEBUG 16687[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,524] INFO 16687[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@20648b59, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,526]DEBUG 16689[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@20648b59, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,526]DEBUG 16689[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,526]DEBUG 16689[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,526]DEBUG 16689[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@77c1a8f5, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,527]DEBUG 16690[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,527]DEBUG 16690[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,527]DEBUG 16690[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,527]DEBUG 16690[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,527]DEBUG 16690[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,527]DEBUG 16690[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,527]DEBUG 16690[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,527]DEBUG 16690[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,528]DEBUG 16691[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,528]DEBUG 16691[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,528]DEBUG 16691[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,528]DEBUG 16691[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,528]DEBUG 16691[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,528]DEBUG 16691[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,528]DEBUG 16691[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,528]DEBUG 16691[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,528]DEBUG 16691[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,528]DEBUG 16691[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,530]DEBUG 16693[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,530]DEBUG 16693[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,530]DEBUG 16693[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,530]DEBUG 16693[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,530]DEBUG 16693[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@77c1a8f5]
[2015-12-30 00:48:02,531]DEBUG 16694[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,531]DEBUG 16694[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@77c1a8f5, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,531]DEBUG 16694[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,531]DEBUG 16694[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByRoleNameWithUserSelectWayConditionsSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,532]DEBUG 16695[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292825
[2015-12-30 00:48:02,532]DEBUG 16695[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@860d510] for Hibernate transaction
[2015-12-30 00:48:02,532]DEBUG 16695[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@860d510]
[2015-12-30 00:48:02,532]DEBUG 16695[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,532]DEBUG 16695[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,532]DEBUG 16695[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,532]DEBUG 16695[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@77c1a8f5, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,532] INFO 16695[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (15): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,532]DEBUG 16695[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,533]DEBUG 16696[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,534]DEBUG 16697[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[221]]
[2015-12-30 00:48:02,534]DEBUG 16697[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,534]DEBUG 16697[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 221, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,535]DEBUG 16698[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,535]DEBUG 16698[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,536]DEBUG 16699[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[222]]
[2015-12-30 00:48:02,536]DEBUG 16699[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,537]DEBUG 16700[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 222, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,537]DEBUG 16700[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,537]DEBUG 16700[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,539]DEBUG 16702[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[223]]
[2015-12-30 00:48:02,539]DEBUG 16702[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,539]DEBUG 16702[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 223, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,539]DEBUG 16702[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,540]DEBUG 16703[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,541]DEBUG 16704[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[224]]
[2015-12-30 00:48:02,541]DEBUG 16704[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,541]DEBUG 16704[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 224, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,542]DEBUG 16705[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,542]DEBUG 16705[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,543]DEBUG 16706[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[225]]
[2015-12-30 00:48:02,543]DEBUG 16706[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,544]DEBUG 16707[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 225, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,544]DEBUG 16707[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,544]DEBUG 16707[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,545]DEBUG 16708[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 5 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 00:48:02,545]DEBUG 16708[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,545]DEBUG 16708[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,545]DEBUG 16708[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=225, roleName=tempAdmin}
[2015-12-30 00:48:02,546]DEBUG 16709[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=222, roleName=Supervisor}
[2015-12-30 00:48:02,546]DEBUG 16709[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=221, roleName=Administrator}
[2015-12-30 00:48:02,546]DEBUG 16709[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=224, roleName=Merchandiser}
[2015-12-30 00:48:02,546]DEBUG 16709[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=223, roleName=Customer}
[2015-12-30 00:48:02,548]DEBUG 16711[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:02,549]DEBUG 16712[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,549]DEBUG 16712[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,549]DEBUG 16712[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,550]DEBUG 16713[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,550]DEBUG 16713[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,550]DEBUG 16713[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,551]DEBUG 16714[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,551]DEBUG 16714[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,551]DEBUG 16714[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,551]DEBUG 16714[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,552]DEBUG 16715[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 5
[2015-12-30 00:48:02,554]DEBUG 16717[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,554]DEBUG 16717[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,554]DEBUG 16717[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2015-12-30 00:48:02,556]DEBUG 16719[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,556]DEBUG 16719[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#225]
[2015-12-30 00:48:02,557]DEBUG 16720[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,557]DEBUG 16720[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,557]DEBUG 16720[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,557]DEBUG 16720[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,558]DEBUG 16721[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,558]DEBUG 16721[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2015-12-30 00:48:02,558]DEBUG 16721[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,558]DEBUG 16721[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,558]DEBUG 16721[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=225, roleName=tempAdmin and something}
[2015-12-30 00:48:02,559]DEBUG 16722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=222, roleName=Supervisor}
[2015-12-30 00:48:02,559]DEBUG 16722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=221, roleName=Administrator}
[2015-12-30 00:48:02,559]DEBUG 16722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=224, roleName=Merchandiser}
[2015-12-30 00:48:02,559]DEBUG 16722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=223, roleName=Customer}
[2015-12-30 00:48:02,559]DEBUG 16722[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:02,560]DEBUG 16723[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,560]DEBUG 16723[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2015-12-30 00:48:02,560]DEBUG 16723[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:02,561]DEBUG 16724[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,562]DEBUG 16725[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,562]DEBUG 16725[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2015-12-30 00:48:02,563]DEBUG 16726[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,563]DEBUG 16726[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#225]
[2015-12-30 00:48:02,563]DEBUG 16726[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,563]DEBUG 16726[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,563]DEBUG 16726[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,564]DEBUG 16727[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,564]DEBUG 16727[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,564]DEBUG 16727[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2015-12-30 00:48:02,564]DEBUG 16727[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,564]DEBUG 16727[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,564]DEBUG 16727[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=225, roleName=something heretempAdmin and something and something here}
[2015-12-30 00:48:02,564]DEBUG 16727[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=222, roleName=Supervisor}
[2015-12-30 00:48:02,564]DEBUG 16727[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=221, roleName=Administrator}
[2015-12-30 00:48:02,566]DEBUG 16729[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=224, roleName=Merchandiser}
[2015-12-30 00:48:02,566]DEBUG 16729[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=223, roleName=Customer}
[2015-12-30 00:48:02,566]DEBUG 16729[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:02,566]DEBUG 16729[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,566]DEBUG 16729[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2015-12-30 00:48:02,566]DEBUG 16729[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:02,568]DEBUG 16731[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,568]DEBUG 16731[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,568]DEBUG 16731[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2015-12-30 00:48:02,570]DEBUG 16733[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,570]DEBUG 16733[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#225]
[2015-12-30 00:48:02,570]DEBUG 16733[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,570]DEBUG 16733[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,570]DEBUG 16733[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,571]DEBUG 16734[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,571]DEBUG 16734[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,571]DEBUG 16734[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 00:48:02,572]DEBUG 16735[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,572]DEBUG 16735[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,572]DEBUG 16735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=225, roleName=something heretempAdmin and something and something here}
[2015-12-30 00:48:02,572]DEBUG 16735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=222, roleName=Supervisor}
[2015-12-30 00:48:02,572]DEBUG 16735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=221, roleName=Administrator}
[2015-12-30 00:48:02,573]DEBUG 16736[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=224, roleName=Merchandiser}
[2015-12-30 00:48:02,573]DEBUG 16736[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=223, roleName=Customer}
[2015-12-30 00:48:02,573]DEBUG 16736[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,573]DEBUG 16736[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:02,575]DEBUG 16738[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,575]DEBUG 16738[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@77c1a8f5, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,575]DEBUG 16738[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,575]DEBUG 16738[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@860d510]
[2015-12-30 00:48:02,575]DEBUG 16738[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,576]DEBUG 16739[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,576]DEBUG 16739[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,577]DEBUG 16740[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@860d510] after transaction
[2015-12-30 00:48:02,577]DEBUG 16740[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,577]DEBUG 16740[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,577]DEBUG 16740[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,577] INFO 16740[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@77c1a8f5, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2015-12-30 00:48:02,578]DEBUG 16741[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@77c1a8f5, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,578]DEBUG 16741[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,578]DEBUG 16741[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2015-12-30 00:48:02,579]DEBUG 16742[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7863940f, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,579]DEBUG 16742[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,579]DEBUG 16742[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,579]DEBUG 16742[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,579]DEBUG 16742[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,579]DEBUG 16742[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,579]DEBUG 16742[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,579]DEBUG 16742[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,579]DEBUG 16742[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,579]DEBUG 16742[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,580]DEBUG 16743[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,580]DEBUG 16743[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,580]DEBUG 16743[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,580]DEBUG 16743[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,580]DEBUG 16743[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,581]DEBUG 16744[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,581]DEBUG 16744[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,581]DEBUG 16744[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,581]DEBUG 16744[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,581]DEBUG 16744[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,582]DEBUG 16745[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,582]DEBUG 16745[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,582]DEBUG 16745[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,582]DEBUG 16745[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7863940f]
[2015-12-30 00:48:02,585]DEBUG 16748[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,585]DEBUG 16748[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7863940f, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:02,585]DEBUG 16748[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,586]DEBUG 16749[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,586]DEBUG 16749[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292825
[2015-12-30 00:48:02,586]DEBUG 16749[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5a831414] for Hibernate transaction
[2015-12-30 00:48:02,586]DEBUG 16749[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5a831414]
[2015-12-30 00:48:02,586]DEBUG 16749[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,587]DEBUG 16750[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,587]DEBUG 16750[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,587]DEBUG 16750[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7863940f, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:02,587] INFO 16750[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (16): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,587]DEBUG 16750[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,587]DEBUG 16750[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,589]DEBUG 16752[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[226]]
[2015-12-30 00:48:02,589]DEBUG 16752[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,589]DEBUG 16752[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 226, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,589]DEBUG 16752[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,589]DEBUG 16752[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,591]DEBUG 16754[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[227]]
[2015-12-30 00:48:02,591]DEBUG 16754[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,591]DEBUG 16754[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 227, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,592]DEBUG 16755[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,592]DEBUG 16755[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,593]DEBUG 16756[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[228]]
[2015-12-30 00:48:02,593]DEBUG 16756[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,594]DEBUG 16757[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 228, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,594]DEBUG 16757[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,594]DEBUG 16757[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,595]DEBUG 16758[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[229]]
[2015-12-30 00:48:02,596]DEBUG 16759[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,596]DEBUG 16759[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 229, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,597]DEBUG 16760[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,597]DEBUG 16760[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,597]DEBUG 16760[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:02,597]DEBUG 16760[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,598]DEBUG 16761[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,598]DEBUG 16761[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=226, roleName=Administrator}
[2015-12-30 00:48:02,598]DEBUG 16761[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=228, roleName=Customer}
[2015-12-30 00:48:02,598]DEBUG 16761[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=227, roleName=Supervisor}
[2015-12-30 00:48:02,599]DEBUG 16762[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=229, roleName=Merchandiser}
[2015-12-30 00:48:02,599]DEBUG 16762[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2015-12-30 00:48:02,599]DEBUG 16762[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,599]DEBUG 16762[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,600]DEBUG 16763[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,602]DEBUG 16765[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,602]DEBUG 16765[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,602]DEBUG 16765[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,603]DEBUG 16766[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,603]DEBUG 16766[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:02,603]DEBUG 16766[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:02,605]DEBUG 16768[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,606]DEBUG 16769[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,606]DEBUG 16769[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:02,607]DEBUG 16770[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,608]DEBUG 16771[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7863940f, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:02,608]DEBUG 16771[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,608]DEBUG 16771[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5a831414]
[2015-12-30 00:48:02,608]DEBUG 16771[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,609]DEBUG 16772[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,610]DEBUG 16773[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,610]DEBUG 16773[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5a831414] after transaction
[2015-12-30 00:48:02,610]DEBUG 16773[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,610]DEBUG 16773[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,611]DEBUG 16774[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,611] INFO 16774[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7863940f, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:02,612]DEBUG 16775[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7863940f, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,613]DEBUG 16776[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@5929c0d testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2015-12-30 00:48:02,619]DEBUG 16782[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.RegionDaoTest].
[2015-12-30 00:48:02,619] INFO 16782[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: using defaults.
[2015-12-30 00:48:02,620]DEBUG 16783[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,620]DEBUG 16783[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,621]DEBUG 16784[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,622]DEBUG 16785[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,622]DEBUG 16785[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,622]DEBUG 16785[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,625]DEBUG 16788[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,625]DEBUG 16788[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,625]DEBUG 16788[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@2abc4d92, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,630]DEBUG 16793[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,630]DEBUG 16793[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,630]DEBUG 16793[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,630]DEBUG 16793[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,630]DEBUG 16793[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,630]DEBUG 16793[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,631]DEBUG 16794[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,631]DEBUG 16794[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,631]DEBUG 16794[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,631]DEBUG 16794[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,631]DEBUG 16794[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,631]DEBUG 16794[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,631]DEBUG 16794[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'customerTypeDao'
[2015-12-30 00:48:02,631]DEBUG 16794[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,633]DEBUG 16796[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,634]DEBUG 16797[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'dimensionDao'
[2015-12-30 00:48:02,635]DEBUG 16798[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,635]DEBUG 16798[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,635]DEBUG 16798[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'orderDao'
[2015-12-30 00:48:02,635]DEBUG 16798[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,635]DEBUG 16798[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,635]DEBUG 16798[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'orderItemDao'
[2015-12-30 00:48:02,636]DEBUG 16799[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,636]DEBUG 16799[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,636]DEBUG 16799[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'orderStatusDao'
[2015-12-30 00:48:02,636]DEBUG 16799[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,636]DEBUG 16799[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,636]DEBUG 16799[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'productDao'
[2015-12-30 00:48:02,637]DEBUG 16800[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,637]DEBUG 16800[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,637]DEBUG 16800[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'regionDao'
[2015-12-30 00:48:02,637]DEBUG 16800[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,637]DEBUG 16800[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,637]DEBUG 16800[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'roleDao'
[2015-12-30 00:48:02,637]DEBUG 16800[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,638]DEBUG 16801[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,638]DEBUG 16801[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'userDao'
[2015-12-30 00:48:02,638]DEBUG 16801[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,638]DEBUG 16801[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,638]DEBUG 16801[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'sessionFactory'
[2015-12-30 00:48:02,639]DEBUG 16802[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,639]DEBUG 16802[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,639]DEBUG 16802[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,639]DEBUG 16802[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@2abc4d92]
[2015-12-30 00:48:02,640]DEBUG 16803[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RegionDaoTest.setUp()
[2015-12-30 00:48:02,640]DEBUG 16803[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,640]DEBUG 16803[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RegionDaoTest.tearDown()
[2015-12-30 00:48:02,640]DEBUG 16803[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,640]DEBUG 16803[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RegionDaoTest.testFindAll()
[2015-12-30 00:48:02,641]DEBUG 16804[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,641]DEBUG 16804[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RegionDaoTest.testInsertOrUpdate()
[2015-12-30 00:48:02,641]DEBUG 16804[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,641]DEBUG 16804[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RegionDaoTest.testDelete()
[2015-12-30 00:48:02,641]DEBUG 16804[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRegionName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,641]DEBUG 16804[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RegionDaoTest.testFindByRegionName()
[2015-12-30 00:48:02,642]DEBUG 16805[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,642]DEBUG 16805[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RegionDaoTest.testFindByOneOfCriterions()
[2015-12-30 00:48:02,642]DEBUG 16805[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,642]DEBUG 16805[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RegionDaoTest.testFindByID()
[2015-12-30 00:48:02,642]DEBUG 16805[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2015-12-30 00:48:02,642]DEBUG 16805[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2015-12-30 00:48:02,642]DEBUG 16805[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2015-12-30 00:48:02,643]DEBUG 16806[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2015-12-30 00:48:02,643]DEBUG 16806[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2015-12-30 00:48:02,643]DEBUG 16806[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2015-12-30 00:48:02,644]DEBUG 16807[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2015-12-30 00:48:02,644]DEBUG 16807[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2015-12-30 00:48:02,644]DEBUG 16807[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2015-12-30 00:48:02,644]DEBUG 16807[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2015-12-30 00:48:02,645]DEBUG 16808[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,645]DEBUG 16808[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2015-12-30 00:48:02,645]DEBUG 16808[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2015-12-30 00:48:02,645]DEBUG 16808[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2015-12-30 00:48:02,645]DEBUG 16808[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2015-12-30 00:48:02,645]DEBUG 16808[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2015-12-30 00:48:02,645]DEBUG 16808[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2015-12-30 00:48:02,645]DEBUG 16808[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2015-12-30 00:48:02,645]DEBUG 16808[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:02,646]DEBUG 16809[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:02,646]DEBUG 16809[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2015-12-30 00:48:02,646]DEBUG 16809[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2015-12-30 00:48:02,646]DEBUG 16809[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2015-12-30 00:48:02,646]DEBUG 16809[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2015-12-30 00:48:02,646]DEBUG 16809[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2015-12-30 00:48:02,646]DEBUG 16809[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2015-12-30 00:48:02,646]DEBUG 16809[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2015-12-30 00:48:02,646]DEBUG 16809[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2015-12-30 00:48:02,647]DEBUG 16810[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2015-12-30 00:48:02,647]DEBUG 16810[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:02,647]DEBUG 16810[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:02,647]DEBUG 16810[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2015-12-30 00:48:02,647]DEBUG 16810[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:02,647]DEBUG 16810[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:02,647]DEBUG 16810[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2015-12-30 00:48:02,647]DEBUG 16810[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2015-12-30 00:48:02,647]DEBUG 16810[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2015-12-30 00:48:02,647]DEBUG 16810[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2015-12-30 00:48:02,648]DEBUG 16811[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2015-12-30 00:48:02,648]DEBUG 16811[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2015-12-30 00:48:02,661]DEBUG 16824[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,661]DEBUG 16824[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@2abc4d92, testMethod = testFindAll@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,661]DEBUG 16824[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,662]DEBUG 16825[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@7d346071 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,662]DEBUG 16825[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,662]DEBUG 16825[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,662]DEBUG 16825[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292826
[2015-12-30 00:48:02,662]DEBUG 16825[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@41df352b] for Hibernate transaction
[2015-12-30 00:48:02,664]DEBUG 16827[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@41df352b]
[2015-12-30 00:48:02,664]DEBUG 16827[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,664]DEBUG 16827[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,664]DEBUG 16827[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,664]DEBUG 16827[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@2abc4d92, testMethod = testFindAll@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,664] INFO 16827[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,665]DEBUG 16828[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,665]DEBUG 16828[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,666]DEBUG 16829[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[230]]
[2015-12-30 00:48:02,666]DEBUG 16829[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,666]DEBUG 16829[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 230, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,667]DEBUG 16830[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,667]DEBUG 16830[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,668]DEBUG 16831[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[231]]
[2015-12-30 00:48:02,668]DEBUG 16831[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,668]DEBUG 16831[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 231, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,668]DEBUG 16831[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,669]DEBUG 16832[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,670]DEBUG 16833[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[232]]
[2015-12-30 00:48:02,670]DEBUG 16833[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,670]DEBUG 16833[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 232, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,671]DEBUG 16834[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,671]DEBUG 16834[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,672]DEBUG 16835[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:02,672]DEBUG 16835[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,672]DEBUG 16835[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,672]DEBUG 16835[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=231, regionName=Bibrka}
[2015-12-30 00:48:02,673]DEBUG 16836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=230, regionName=Donetsk}
[2015-12-30 00:48:02,673]DEBUG 16836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=232, regionName=Pidrahuilivka}
[2015-12-30 00:48:02,673]DEBUG 16836[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Regions
[2015-12-30 00:48:02,675]DEBUG 16838[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,675]DEBUG 16838[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,675]DEBUG 16838[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,676]DEBUG 16839[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,676]DEBUG 16839[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,676]DEBUG 16839[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,677]DEBUG 16840[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:02,679]DEBUG 16842[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,679]DEBUG 16842[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,679]DEBUG 16842[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID1_0_, this_.RegionName as RegionName1_0_ from Regions this_
[2015-12-30 00:48:02,681]DEBUG 16844[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,681]DEBUG 16844[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Region#230]
[2015-12-30 00:48:02,682]DEBUG 16845[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Region#231]
[2015-12-30 00:48:02,682]DEBUG 16845[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Region#232]
[2015-12-30 00:48:02,682]DEBUG 16845[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,682]DEBUG 16845[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,683]DEBUG 16846[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,683]DEBUG 16846[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,683]DEBUG 16846[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,684]DEBUG 16847[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:02,684]DEBUG 16847[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,687]DEBUG 16850[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,688]DEBUG 16851[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=231, regionName=Bibrka}
[2015-12-30 00:48:02,688]DEBUG 16851[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=230, regionName=Donetsk}
[2015-12-30 00:48:02,688]DEBUG 16851[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=232, regionName=Pidrahuilivka}
[2015-12-30 00:48:02,688]DEBUG 16851[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,689]DEBUG 16852[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:02,691]DEBUG 16854[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,691]DEBUG 16854[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@2abc4d92, testMethod = testFindAll@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,691]DEBUG 16854[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,691]DEBUG 16854[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@41df352b]
[2015-12-30 00:48:02,692]DEBUG 16855[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,693]DEBUG 16856[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,693]DEBUG 16856[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,693]DEBUG 16856[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@41df352b] after transaction
[2015-12-30 00:48:02,693]DEBUG 16856[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,694]DEBUG 16857[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,694]DEBUG 16857[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,694] INFO 16857[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@2abc4d92, testMethod = testFindAll@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,695]DEBUG 16858[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@2abc4d92, testMethod = testFindAll@RegionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,696]DEBUG 16859[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,696]DEBUG 16859[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,697]DEBUG 16860[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@24fed660, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,697]DEBUG 16860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,697]DEBUG 16860[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,697]DEBUG 16860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,698]DEBUG 16861[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,698]DEBUG 16861[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,698]DEBUG 16861[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,698]DEBUG 16861[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,698]DEBUG 16861[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,699]DEBUG 16862[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,699]DEBUG 16862[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,699]DEBUG 16862[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,699]DEBUG 16862[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,699]DEBUG 16862[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,700]DEBUG 16863[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,700]DEBUG 16863[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,700]DEBUG 16863[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,700]DEBUG 16863[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,700]DEBUG 16863[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,701]DEBUG 16864[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,701]DEBUG 16864[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,701]DEBUG 16864[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,701]DEBUG 16864[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,702]DEBUG 16865[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@24fed660]
[2015-12-30 00:48:02,702]DEBUG 16865[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,703]DEBUG 16866[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@24fed660, testMethod = testInsertOrUpdate@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,703]DEBUG 16866[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,704]DEBUG 16867[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,704]DEBUG 16867[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292827
[2015-12-30 00:48:02,704]DEBUG 16867[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@29991f85] for Hibernate transaction
[2015-12-30 00:48:02,704]DEBUG 16867[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@29991f85]
[2015-12-30 00:48:02,704]DEBUG 16867[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,704]DEBUG 16867[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,705]DEBUG 16868[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,705]DEBUG 16868[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@24fed660, testMethod = testInsertOrUpdate@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,705] INFO 16868[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,705]DEBUG 16868[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,705]DEBUG 16868[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,708]DEBUG 16871[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[233]]
[2015-12-30 00:48:02,708]DEBUG 16871[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,708]DEBUG 16871[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 233, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,709]DEBUG 16872[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,709]DEBUG 16872[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,710]DEBUG 16873[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[234]]
[2015-12-30 00:48:02,710]DEBUG 16873[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,710]DEBUG 16873[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 234, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,710]DEBUG 16873[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,710]DEBUG 16873[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,712]DEBUG 16875[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[235]]
[2015-12-30 00:48:02,712]DEBUG 16875[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,712]DEBUG 16875[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 235, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,713]DEBUG 16876[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,713]DEBUG 16876[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,714]DEBUG 16877[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:02,714]DEBUG 16877[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,714]DEBUG 16877[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,715]DEBUG 16878[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=235, regionName=Pidrahuilivka}
[2015-12-30 00:48:02,715]DEBUG 16878[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=233, regionName=Donetsk}
[2015-12-30 00:48:02,715]DEBUG 16878[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=234, regionName=Bibrka}
[2015-12-30 00:48:02,715]DEBUG 16878[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Regions
[2015-12-30 00:48:02,716]DEBUG 16879[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,716]DEBUG 16879[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,716]DEBUG 16879[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,717]DEBUG 16880[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,717]DEBUG 16880[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,717]DEBUG 16880[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,717]DEBUG 16880[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:02,719]DEBUG 16882[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,720]DEBUG 16883[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,720]DEBUG 16883[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID1_0_, this_.RegionName as RegionName1_0_ from Regions this_
[2015-12-30 00:48:02,721]DEBUG 16884[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,722]DEBUG 16885[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Region#233]
[2015-12-30 00:48:02,722]DEBUG 16885[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Region#234]
[2015-12-30 00:48:02,722]DEBUG 16885[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Region#235]
[2015-12-30 00:48:02,723]DEBUG 16886[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,723]DEBUG 16886[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,723]DEBUG 16886[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,724]DEBUG 16887[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,724]DEBUG 16887[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,724]DEBUG 16887[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:02,724]DEBUG 16887[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,724]DEBUG 16887[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,725]DEBUG 16888[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=235, regionName=Pidrahuilivka}
[2015-12-30 00:48:02,725]DEBUG 16888[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=233, regionName=Donetsk}
[2015-12-30 00:48:02,725]DEBUG 16888[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=234, regionName=Bibrka}
[2015-12-30 00:48:02,725]DEBUG 16888[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,726]DEBUG 16889[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:02,727]DEBUG 16890[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,728]DEBUG 16891[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@24fed660, testMethod = testInsertOrUpdate@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,729]DEBUG 16892[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,730]DEBUG 16893[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@29991f85]
[2015-12-30 00:48:02,730]DEBUG 16893[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,731]DEBUG 16894[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,731]DEBUG 16894[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,731]DEBUG 16894[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@29991f85] after transaction
[2015-12-30 00:48:02,732]DEBUG 16895[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,732]DEBUG 16895[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,732]DEBUG 16895[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,732] INFO 16895[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@24fed660, testMethod = testInsertOrUpdate@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,733]DEBUG 16896[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@24fed660, testMethod = testInsertOrUpdate@RegionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,734]DEBUG 16897[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,734]DEBUG 16897[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,734]DEBUG 16897[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5b016119, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,735]DEBUG 16898[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,735]DEBUG 16898[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,735]DEBUG 16898[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,735]DEBUG 16898[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,736]DEBUG 16899[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,736]DEBUG 16899[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,736]DEBUG 16899[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,736]DEBUG 16899[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,737]DEBUG 16900[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,737]DEBUG 16900[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,737]DEBUG 16900[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,737]DEBUG 16900[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,737]DEBUG 16900[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,738]DEBUG 16901[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,738]DEBUG 16901[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,738]DEBUG 16901[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,738]DEBUG 16901[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,738]DEBUG 16901[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,739]DEBUG 16902[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,739]DEBUG 16902[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,741]DEBUG 16904[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,741]DEBUG 16904[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,741]DEBUG 16904[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5b016119]
[2015-12-30 00:48:02,744]DEBUG 16907[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,744]DEBUG 16907[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5b016119, testMethod = testDelete@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,745]DEBUG 16908[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,746]DEBUG 16909[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,754]DEBUG 16917[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292827
[2015-12-30 00:48:02,754]DEBUG 16917[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@695e2e5] for Hibernate transaction
[2015-12-30 00:48:02,754]DEBUG 16917[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@695e2e5]
[2015-12-30 00:48:02,754]DEBUG 16917[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,754]DEBUG 16917[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,755]DEBUG 16918[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,755]DEBUG 16918[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5b016119, testMethod = testDelete@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,755] INFO 16918[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,755]DEBUG 16918[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,756]DEBUG 16919[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,762]DEBUG 16925[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[236]]
[2015-12-30 00:48:02,763]DEBUG 16926[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,763]DEBUG 16926[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 236, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,763]DEBUG 16926[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,764]DEBUG 16927[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,767]DEBUG 16930[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[237]]
[2015-12-30 00:48:02,767]DEBUG 16930[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,769]DEBUG 16932[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 237, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,769]DEBUG 16932[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,769]DEBUG 16932[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,770]DEBUG 16933[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[238]]
[2015-12-30 00:48:02,770]DEBUG 16933[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,770]DEBUG 16933[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 238, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,771]DEBUG 16934[main] - org.hibernate.event.def.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:442) - load request found matching entity in context, but it is scheduled for removal; returning null
[2015-12-30 00:48:02,771]DEBUG 16934[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,771]DEBUG 16934[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,771]DEBUG 16934[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 1 deletions to 3 objects
[2015-12-30 00:48:02,771]DEBUG 16934[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,771]DEBUG 16934[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,771]DEBUG 16934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=237, regionName=Bibrka}
[2015-12-30 00:48:02,772]DEBUG 16935[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=238, regionName=Pidrahuilivka}
[2015-12-30 00:48:02,772]DEBUG 16935[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=236, regionName=Donetsk}
[2015-12-30 00:48:02,772]DEBUG 16935[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Regions
[2015-12-30 00:48:02,772]DEBUG 16935[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,772]DEBUG 16935[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,772]DEBUG 16935[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,772]DEBUG 16935[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,772]DEBUG 16935[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,773]DEBUG 16936[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,773]DEBUG 16936[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:02,776]DEBUG 16939[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,776]DEBUG 16939[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,776]DEBUG 16939[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions where ID=?
[2015-12-30 00:48:02,777]DEBUG 16940[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:02,778]DEBUG 16941[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,778]DEBUG 16941[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,778]DEBUG 16941[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:02,779]DEBUG 16942[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,780]DEBUG 16943[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5b016119, testMethod = testDelete@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,780]DEBUG 16943[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,780]DEBUG 16943[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@695e2e5]
[2015-12-30 00:48:02,780]DEBUG 16943[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,781]DEBUG 16944[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,781]DEBUG 16944[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,781]DEBUG 16944[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@695e2e5] after transaction
[2015-12-30 00:48:02,781]DEBUG 16944[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,782]DEBUG 16945[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,782]DEBUG 16945[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,782] INFO 16945[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5b016119, testMethod = testDelete@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,783]DEBUG 16946[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5b016119, testMethod = testDelete@RegionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,784]DEBUG 16947[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,784]DEBUG 16947[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,784]DEBUG 16947[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5498416, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,785]DEBUG 16948[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,785]DEBUG 16948[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,785]DEBUG 16948[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,785]DEBUG 16948[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,786]DEBUG 16949[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,786]DEBUG 16949[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,786]DEBUG 16949[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,786]DEBUG 16949[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,786]DEBUG 16949[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,787]DEBUG 16950[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,788]DEBUG 16951[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,789]DEBUG 16952[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,789]DEBUG 16952[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,789]DEBUG 16952[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,789]DEBUG 16952[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,789]DEBUG 16952[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,790]DEBUG 16953[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,790]DEBUG 16953[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,790]DEBUG 16953[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,790]DEBUG 16953[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,790]DEBUG 16953[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,791]DEBUG 16954[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,791]DEBUG 16954[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5498416]
[2015-12-30 00:48:02,792]DEBUG 16955[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRegionName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,792]DEBUG 16955[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5498416, testMethod = testFindByRegionName@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,792]DEBUG 16955[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,792]DEBUG 16955[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByRegionName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,792]DEBUG 16955[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292827
[2015-12-30 00:48:02,792]DEBUG 16955[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@571e723b] for Hibernate transaction
[2015-12-30 00:48:02,793]DEBUG 16956[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@571e723b]
[2015-12-30 00:48:02,793]DEBUG 16956[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,793]DEBUG 16956[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,793]DEBUG 16956[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,793]DEBUG 16956[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5498416, testMethod = testFindByRegionName@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,793] INFO 16956[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,793]DEBUG 16956[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,793]DEBUG 16956[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,795]DEBUG 16958[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[239]]
[2015-12-30 00:48:02,795]DEBUG 16958[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,795]DEBUG 16958[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 239, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,795]DEBUG 16958[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,795]DEBUG 16958[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,796]DEBUG 16959[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[240]]
[2015-12-30 00:48:02,797]DEBUG 16960[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,797]DEBUG 16960[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 240, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,797]DEBUG 16960[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,797]DEBUG 16960[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,799]DEBUG 16962[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[241]]
[2015-12-30 00:48:02,799]DEBUG 16962[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,799]DEBUG 16962[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 241, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,800]DEBUG 16963[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,800]DEBUG 16963[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,800]DEBUG 16963[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:02,801]DEBUG 16964[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,801]DEBUG 16964[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,801]DEBUG 16964[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=241, regionName=Pidrahuilivka}
[2015-12-30 00:48:02,801]DEBUG 16964[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=239, regionName=Donetsk}
[2015-12-30 00:48:02,802]DEBUG 16965[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=240, regionName=Bibrka}
[2015-12-30 00:48:02,802]DEBUG 16965[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Regions
[2015-12-30 00:48:02,802]DEBUG 16965[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,802]DEBUG 16965[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,803]DEBUG 16966[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,803]DEBUG 16966[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,805]DEBUG 16968[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,806]DEBUG 16969[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,806]DEBUG 16969[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:02,808]DEBUG 16971[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,808]DEBUG 16971[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,809]DEBUG 16972[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID1_0_, this_.RegionName as RegionName1_0_ from Regions this_ where this_.RegionName like ?
[2015-12-30 00:48:02,810]DEBUG 16973[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:02,810]DEBUG 16973[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Region#240]
[2015-12-30 00:48:02,811]DEBUG 16974[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:02,811]DEBUG 16974[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,811]DEBUG 16974[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:02,812]DEBUG 16975[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,812]DEBUG 16975[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,812]DEBUG 16975[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:02,812]DEBUG 16975[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,813]DEBUG 16976[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,813]DEBUG 16976[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=241, regionName=Pidrahuilivka}
[2015-12-30 00:48:02,813]DEBUG 16976[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=239, regionName=Donetsk}
[2015-12-30 00:48:02,813]DEBUG 16976[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=240, regionName=Bibrka}
[2015-12-30 00:48:02,813]DEBUG 16976[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,814]DEBUG 16977[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:02,815]DEBUG 16978[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,815]DEBUG 16978[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5498416, testMethod = testFindByRegionName@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,816]DEBUG 16979[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,816]DEBUG 16979[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@571e723b]
[2015-12-30 00:48:02,816]DEBUG 16979[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,817]DEBUG 16980[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,817]DEBUG 16980[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,817]DEBUG 16980[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@571e723b] after transaction
[2015-12-30 00:48:02,818]DEBUG 16981[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,818]DEBUG 16981[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,818]DEBUG 16981[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,818] INFO 16981[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5498416, testMethod = testFindByRegionName@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,819]DEBUG 16982[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5498416, testMethod = testFindByRegionName@RegionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,820]DEBUG 16983[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,820]DEBUG 16983[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,820]DEBUG 16983[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6f49fc9b, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,821]DEBUG 16984[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,821]DEBUG 16984[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,821]DEBUG 16984[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,821]DEBUG 16984[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,822]DEBUG 16985[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,822]DEBUG 16985[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,822]DEBUG 16985[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,822]DEBUG 16985[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,822]DEBUG 16985[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,823]DEBUG 16986[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,823]DEBUG 16986[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,823]DEBUG 16986[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,823]DEBUG 16986[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,823]DEBUG 16986[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,824]DEBUG 16987[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,824]DEBUG 16987[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,824]DEBUG 16987[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,824]DEBUG 16987[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,824]DEBUG 16987[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,825]DEBUG 16988[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,825]DEBUG 16988[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,827]DEBUG 16990[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,827]DEBUG 16990[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6f49fc9b]
[2015-12-30 00:48:02,828]DEBUG 16991[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,828]DEBUG 16991[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6f49fc9b, testMethod = testFindByOneOfCriterions@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,828]DEBUG 16991[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,829]DEBUG 16992[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,829]DEBUG 16992[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292828
[2015-12-30 00:48:02,830]DEBUG 16993[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@28370f7b] for Hibernate transaction
[2015-12-30 00:48:02,830]DEBUG 16993[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@28370f7b]
[2015-12-30 00:48:02,830]DEBUG 16993[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,830]DEBUG 16993[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,830]DEBUG 16993[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,831]DEBUG 16994[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6f49fc9b, testMethod = testFindByOneOfCriterions@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,831] INFO 16994[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,831]DEBUG 16994[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,831]DEBUG 16994[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,833]DEBUG 16996[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[242]]
[2015-12-30 00:48:02,833]DEBUG 16996[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,833]DEBUG 16996[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 242, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,834]DEBUG 16997[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,834]DEBUG 16997[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,835]DEBUG 16998[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[243]]
[2015-12-30 00:48:02,835]DEBUG 16998[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,836]DEBUG 16999[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 243, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,836]DEBUG 16999[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,836]DEBUG 16999[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,838]DEBUG 17001[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[244]]
[2015-12-30 00:48:02,838]DEBUG 17001[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,838]DEBUG 17001[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 244, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,839]DEBUG 17002[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,839]DEBUG 17002[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,839]DEBUG 17002[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:02,839]DEBUG 17002[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,840]DEBUG 17003[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,840]DEBUG 17003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=243, regionName=Bibrka}
[2015-12-30 00:48:02,840]DEBUG 17003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=244, regionName=Pidrahuilivka}
[2015-12-30 00:48:02,840]DEBUG 17003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=242, regionName=Donetsk}
[2015-12-30 00:48:02,840]DEBUG 17003[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Regions
[2015-12-30 00:48:02,841]DEBUG 17004[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,841]DEBUG 17004[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,841]DEBUG 17004[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,842]DEBUG 17005[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,842]DEBUG 17005[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,842]DEBUG 17005[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,842]DEBUG 17005[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:02,844]DEBUG 17007[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,845]DEBUG 17008[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,845]DEBUG 17008[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:02,846]DEBUG 17009[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,847]DEBUG 17010[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6f49fc9b, testMethod = testFindByOneOfCriterions@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,847]DEBUG 17010[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,847]DEBUG 17010[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@28370f7b]
[2015-12-30 00:48:02,847]DEBUG 17010[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,848]DEBUG 17011[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,848]DEBUG 17011[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,850]DEBUG 17013[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@28370f7b] after transaction
[2015-12-30 00:48:02,850]DEBUG 17013[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,851]DEBUG 17014[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,851]DEBUG 17014[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,851] INFO 17014[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6f49fc9b, testMethod = testFindByOneOfCriterions@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,852]DEBUG 17015[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6f49fc9b, testMethod = testFindByOneOfCriterions@RegionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,853]DEBUG 17016[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,853]DEBUG 17016[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,853]DEBUG 17016[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@4359a380, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,854]DEBUG 17017[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,854]DEBUG 17017[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,854]DEBUG 17017[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,854]DEBUG 17017[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,855]DEBUG 17018[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,855]DEBUG 17018[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,855]DEBUG 17018[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,855]DEBUG 17018[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,855]DEBUG 17018[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,856]DEBUG 17019[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,856]DEBUG 17019[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,856]DEBUG 17019[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,856]DEBUG 17019[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,856]DEBUG 17019[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,857]DEBUG 17020[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,857]DEBUG 17020[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,857]DEBUG 17020[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,857]DEBUG 17020[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,857]DEBUG 17020[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,858]DEBUG 17021[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,858]DEBUG 17021[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,858]DEBUG 17021[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,858]DEBUG 17021[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@4359a380]
[2015-12-30 00:48:02,859]DEBUG 17022[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,859]DEBUG 17022[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@4359a380, testMethod = testFindByID@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,859]DEBUG 17022[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,860]DEBUG 17023[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,860]DEBUG 17023[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292828
[2015-12-30 00:48:02,861]DEBUG 17024[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@734023be] for Hibernate transaction
[2015-12-30 00:48:02,861]DEBUG 17024[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@734023be]
[2015-12-30 00:48:02,861]DEBUG 17024[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,861]DEBUG 17024[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,861]DEBUG 17024[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,862]DEBUG 17025[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@4359a380, testMethod = testFindByID@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,862] INFO 17025[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,862]DEBUG 17025[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,862]DEBUG 17025[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,864]DEBUG 17027[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[245]]
[2015-12-30 00:48:02,864]DEBUG 17027[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,864]DEBUG 17027[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 245, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,865]DEBUG 17028[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,865]DEBUG 17028[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,867]DEBUG 17030[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[246]]
[2015-12-30 00:48:02,867]DEBUG 17030[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,867]DEBUG 17030[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 246, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,868]DEBUG 17031[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,868]DEBUG 17031[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,871]DEBUG 17034[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[247]]
[2015-12-30 00:48:02,871]DEBUG 17034[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,871]DEBUG 17034[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 247, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,872]DEBUG 17035[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,872]DEBUG 17035[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,872]DEBUG 17035[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:02,873]DEBUG 17036[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,873]DEBUG 17036[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,873]DEBUG 17036[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=245, regionName=Donetsk}
[2015-12-30 00:48:02,873]DEBUG 17036[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=246, regionName=Bibrka}
[2015-12-30 00:48:02,873]DEBUG 17036[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=247, regionName=Pidrahuilivka}
[2015-12-30 00:48:02,874]DEBUG 17037[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Regions
[2015-12-30 00:48:02,874]DEBUG 17037[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,874]DEBUG 17037[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,875]DEBUG 17038[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,875]DEBUG 17038[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,875]DEBUG 17038[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,875]DEBUG 17038[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,876]DEBUG 17039[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:02,878]DEBUG 17041[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,878]DEBUG 17041[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,878]DEBUG 17041[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:02,880]DEBUG 17043[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,880]DEBUG 17043[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@4359a380, testMethod = testFindByID@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,880]DEBUG 17043[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,880]DEBUG 17043[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@734023be]
[2015-12-30 00:48:02,881]DEBUG 17044[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,882]DEBUG 17045[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,882]DEBUG 17045[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,882]DEBUG 17045[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@734023be] after transaction
[2015-12-30 00:48:02,882]DEBUG 17045[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,883]DEBUG 17046[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,883]DEBUG 17046[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,883] INFO 17046[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@4359a380, testMethod = testFindByID@RegionDaoTest, testException = [null]]]
[2015-12-30 00:48:02,884]DEBUG 17047[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@4359a380, testMethod = testFindByID@RegionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,885]DEBUG 17048[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,885]DEBUG 17048[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2015-12-30 00:48:02,885]DEBUG 17048[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5ce68501, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,886]DEBUG 17049[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:02,886]DEBUG 17049[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:02,886]DEBUG 17049[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:02,886]DEBUG 17049[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:02,886]DEBUG 17049[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:02,887]DEBUG 17050[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:02,887]DEBUG 17050[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:02,887]DEBUG 17050[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:02,887]DEBUG 17050[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:02,887]DEBUG 17050[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:02,888]DEBUG 17051[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:02,888]DEBUG 17051[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:02,888]DEBUG 17051[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:02,888]DEBUG 17051[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:02,888]DEBUG 17051[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:02,889]DEBUG 17052[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:02,889]DEBUG 17052[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:02,889]DEBUG 17052[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:02,889]DEBUG 17052[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:02,891]DEBUG 17054[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:02,891]DEBUG 17054[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:02,892]DEBUG 17055[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:02,892]DEBUG 17055[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5ce68501]
[2015-12-30 00:48:02,893]DEBUG 17056[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,893]DEBUG 17056[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5ce68501, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:02,893]DEBUG 17056[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:02,894]DEBUG 17057[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:02,894]DEBUG 17057[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292828
[2015-12-30 00:48:02,894]DEBUG 17057[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@45a8bf4] for Hibernate transaction
[2015-12-30 00:48:02,895]DEBUG 17058[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@45a8bf4]
[2015-12-30 00:48:02,895]DEBUG 17058[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:02,895]DEBUG 17058[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:02,895]DEBUG 17058[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:02,895]DEBUG 17058[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5ce68501, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:02,896] INFO 17059[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:02,896]DEBUG 17059[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,896]DEBUG 17059[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,898]DEBUG 17061[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[248]]
[2015-12-30 00:48:02,898]DEBUG 17061[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,898]DEBUG 17061[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 248, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,898]DEBUG 17061[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,899]DEBUG 17062[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,900]DEBUG 17063[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[249]]
[2015-12-30 00:48:02,900]DEBUG 17063[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,900]DEBUG 17063[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 249, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,901]DEBUG 17064[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,901]DEBUG 17064[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:02,902]DEBUG 17065[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[250]]
[2015-12-30 00:48:02,903]DEBUG 17066[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,903]DEBUG 17066[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 250, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:02,903]DEBUG 17066[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:02,903]DEBUG 17066[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:02,904]DEBUG 17067[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:02,904]DEBUG 17067[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:02,904]DEBUG 17067[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:02,904]DEBUG 17067[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=250, regionName=Pidrahuilivka}
[2015-12-30 00:48:02,904]DEBUG 17067[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=249, regionName=Bibrka}
[2015-12-30 00:48:02,905]DEBUG 17068[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=248, regionName=Donetsk}
[2015-12-30 00:48:02,905]DEBUG 17068[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Regions
[2015-12-30 00:48:02,905]DEBUG 17068[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,905]DEBUG 17068[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,905]DEBUG 17068[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,905]DEBUG 17068[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,905]DEBUG 17068[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:02,905]DEBUG 17068[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:02,906]DEBUG 17069[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:02,907]DEBUG 17070[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,907]DEBUG 17070[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:02,908]DEBUG 17071[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:02,909]DEBUG 17072[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:02,909]DEBUG 17072[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5ce68501, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:02,909]DEBUG 17072[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:02,909]DEBUG 17072[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@45a8bf4]
[2015-12-30 00:48:02,909]DEBUG 17072[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:02,912]DEBUG 17075[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:02,912]DEBUG 17075[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,912]DEBUG 17075[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@45a8bf4] after transaction
[2015-12-30 00:48:02,913]DEBUG 17076[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:02,913]DEBUG 17076[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:02,913]DEBUG 17076[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:02,913] INFO 17076[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5ce68501, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:02,914]DEBUG 17077[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@5ce68501, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:02,915]DEBUG 17078[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@50423558 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2015-12-30 00:48:02,920]DEBUG 17083[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest].
[2015-12-30 00:48:02,921] INFO 17084[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: using defaults.
[2015-12-30 00:48:02,922]DEBUG 17085[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:02,923]DEBUG 17086[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:02,924]DEBUG 17087[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:02,924]DEBUG 17087[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:02,924]DEBUG 17087[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:02,924]DEBUG 17087[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:02,929]DEBUG 17092[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:02,929]DEBUG 17092[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:02,930]DEBUG 17093[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4d72f5d6, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:02,930]DEBUG 17093[main] - org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:75) - Loading ApplicationContext for locations [classpath:testApplicationContex.xml,classpath:testApplicationContex.xml].
[2015-12-30 00:48:02,930] INFO 17093[main] - org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from class path resource [testApplicationContex.xml]
[2015-12-30 00:48:02,932]DEBUG 17095[main] - org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[2015-12-30 00:48:02,933]DEBUG 17096[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:140) - Loading schema mappings from [META-INF/spring.schemas]
[2015-12-30 00:48:02,939]DEBUG 17102[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:146) - Loaded schema mappings: {http://www.springframework.org/schema/security/spring-security-3.0.4.xsd=org/springframework/security/config/spring-security-3.0.4.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/security/spring-security-2.0.2.xsd=org/springframework/security/config/spring-security-2.0.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/security/spring-security-3.0.3.xsd=org/springframework/security/config/spring-security-3.0.3.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/security/spring-security-2.0.1.xsd=org/springframework/security/config/spring-security-2.0.1.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/security/spring-security-2.0.xsd=org/springframework/security/config/spring-security-2.0.xsd, http://www.springframework.org/schema/security/spring-security-3.0.xsd=org/springframework/security/config/spring-security-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/security/spring-security-2.0.4.xsd=org/springframework/security/config/spring-security-2.0.4.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/security/spring-security.xsd=org/springframework/security/config/spring-security-3.0.4.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
[2015-12-30 00:48:02,940]DEBUG 17103[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
[2015-12-30 00:48:02,997]DEBUG 17160[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tx/spring-tx-2.5.xsd] in classpath: org/springframework/transaction/config/spring-tx-2.5.xsd
[2015-12-30 00:48:03,012]DEBUG 17175[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-2.5.xsd
[2015-12-30 00:48:03,023]DEBUG 17186[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
[2015-12-30 00:48:03,034]DEBUG 17197[main] - org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:87) - Loading bean definitions
[2015-12-30 00:48:03,037]DEBUG 17200[main] - org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:156) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/security=org.springframework.security.config.SecurityNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[2015-12-30 00:48:03,038] INFO 17201[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:186) - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
[2015-12-30 00:48:03,039]DEBUG 17202[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:552) - Looking for matching resources in directory tree [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities]
[2015-12-30 00:48:03,039]DEBUG 17202[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:614) - Searching directory [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities] for files matching pattern [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/**/*.class]
[2015-12-30 00:48:03,049]DEBUG 17212[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:353) - Resolved location pattern [classpath*:com/softserveinc/edu/oms/domain/entities/**/*.class] to resources [file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/Product.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/CustomerType.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/User.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/Role.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/Dimension.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/OrderItem.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/Region.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/Order.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/OrderStatus.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/CreditCardType.class]]
[2015-12-30 00:48:03,060] INFO 17223[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:186) - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
[2015-12-30 00:48:03,060]DEBUG 17223[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:552) - Looking for matching resources in directory tree [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete]
[2015-12-30 00:48:03,061]DEBUG 17224[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:614) - Searching directory [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete] for files matching pattern [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/**/*.class]
[2015-12-30 00:48:03,068]DEBUG 17231[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:353) - Resolved location pattern [classpath*:com/softserveinc/edu/oms/persistence/dao/concrete/**/*.class] to resources [file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RoleDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RegionDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderStatusDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/ProductDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/DimensionDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao$1.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CustomerTypeDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderItemDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CreditCardTypeDao.class]]
[2015-12-30 00:48:03,069]DEBUG 17232[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderDao.class]
[2015-12-30 00:48:03,073]DEBUG 17236[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RoleDao.class]
[2015-12-30 00:48:03,078]DEBUG 17241[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao.class]
[2015-12-30 00:48:03,079]DEBUG 17242[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RegionDao.class]
[2015-12-30 00:48:03,079]DEBUG 17242[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderStatusDao.class]
[2015-12-30 00:48:03,079]DEBUG 17242[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/ProductDao.class]
[2015-12-30 00:48:03,080]DEBUG 17243[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/DimensionDao.class]
[2015-12-30 00:48:03,080]DEBUG 17243[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CustomerTypeDao.class]
[2015-12-30 00:48:03,080]DEBUG 17243[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderItemDao.class]
[2015-12-30 00:48:03,127]DEBUG 17290[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CreditCardTypeDao.class]
[2015-12-30 00:48:03,128]DEBUG 17291[main] - org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:185) - Loaded 21 bean definitions from location pattern [classpath:testApplicationContex.xml]
[2015-12-30 00:48:03,128] INFO 17291[main] - org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from class path resource [testApplicationContex.xml]
[2015-12-30 00:48:03,132]DEBUG 17295[main] - org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[2015-12-30 00:48:03,136]DEBUG 17299[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
[2015-12-30 00:48:03,165]DEBUG 17328[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tx/spring-tx-2.5.xsd] in classpath: org/springframework/transaction/config/spring-tx-2.5.xsd
[2015-12-30 00:48:03,169]DEBUG 17332[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-2.5.xsd
[2015-12-30 00:48:03,172]DEBUG 17335[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
[2015-12-30 00:48:03,190]DEBUG 17353[main] - org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:87) - Loading bean definitions
[2015-12-30 00:48:03,191] INFO 17354[main] - org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:618) - Overriding bean definition for bean 'transactionManager': replacing [Generic bean: class [org.springframework.orm.hibernate3.HibernateTransactionManager]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [testApplicationContex.xml]] with [Generic bean: class [org.springframework.orm.hibernate3.HibernateTransactionManager]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [testApplicationContex.xml]]
[2015-12-30 00:48:03,191] INFO 17354[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:186) - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
[2015-12-30 00:48:03,195]DEBUG 17358[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:552) - Looking for matching resources in directory tree [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities]
[2015-12-30 00:48:03,196]DEBUG 17359[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:614) - Searching directory [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities] for files matching pattern [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/**/*.class]
[2015-12-30 00:48:03,212]DEBUG 17375[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:353) - Resolved location pattern [classpath*:com/softserveinc/edu/oms/domain/entities/**/*.class] to resources [file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/Product.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/CustomerType.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/User.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/Role.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/Dimension.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/OrderItem.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/Region.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/Order.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/OrderStatus.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/CreditCardType.class]]
[2015-12-30 00:48:03,236] INFO 17399[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:186) - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
[2015-12-30 00:48:03,237]DEBUG 17400[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:552) - Looking for matching resources in directory tree [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete]
[2015-12-30 00:48:03,237]DEBUG 17400[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:614) - Searching directory [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete] for files matching pattern [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/**/*.class]
[2015-12-30 00:48:03,249]DEBUG 17412[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:353) - Resolved location pattern [classpath*:com/softserveinc/edu/oms/persistence/dao/concrete/**/*.class] to resources [file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RoleDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RegionDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderStatusDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/ProductDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/DimensionDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao$1.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CustomerTypeDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderItemDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CreditCardTypeDao.class]]
[2015-12-30 00:48:03,254]DEBUG 17417[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderDao.class]
[2015-12-30 00:48:03,255]DEBUG 17418[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RoleDao.class]
[2015-12-30 00:48:03,259]DEBUG 17422[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao.class]
[2015-12-30 00:48:03,260]DEBUG 17423[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RegionDao.class]
[2015-12-30 00:48:03,261]DEBUG 17424[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderStatusDao.class]
[2015-12-30 00:48:03,261]DEBUG 17424[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/ProductDao.class]
[2015-12-30 00:48:03,266]DEBUG 17429[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/DimensionDao.class]
[2015-12-30 00:48:03,267]DEBUG 17430[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CustomerTypeDao.class]
[2015-12-30 00:48:03,267]DEBUG 17430[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderItemDao.class]
[2015-12-30 00:48:03,273]DEBUG 17436[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CreditCardTypeDao.class]
[2015-12-30 00:48:03,281] INFO 17444[main] - org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:618) - Overriding bean definition for bean 'sessionFactory': replacing [Generic bean: class [org.springframework.orm.hibernate3.LocalSessionFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [testApplicationContex.xml]] with [Generic bean: class [org.springframework.orm.hibernate3.LocalSessionFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [testApplicationContex.xml]]
[2015-12-30 00:48:03,281]DEBUG 17444[main] - org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:185) - Loaded 0 bean definitions from location pattern [classpath:testApplicationContex.xml]
[2015-12-30 00:48:03,281] INFO 17444[main] - org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:456) - Refreshing org.springframework.context.support.GenericApplicationContext@1a1d85b8: startup date [Wed Dec 30 00:48:03 EET 2015]; root of context hierarchy
[2015-12-30 00:48:03,281]DEBUG 17444[main] - org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:470) - Bean factory for org.springframework.context.support.GenericApplicationContext@1a1d85b8: org.springframework.beans.factory.support.DefaultListableBeanFactory@349ef43d: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderDao,roleDao,userDao,regionDao,orderStatusDao,productDao,dimensionDao,customerTypeDao,orderItemDao,creditCardTypeDao,sessionFactory]; root of factory hierarchy
[2015-12-30 00:48:03,286]DEBUG 17449[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2015-12-30 00:48:03,286]DEBUG 17449[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2015-12-30 00:48:03,286]DEBUG 17449[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
[2015-12-30 00:48:03,286]DEBUG 17449[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2015-12-30 00:48:03,311]DEBUG 17474[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2015-12-30 00:48:03,311]DEBUG 17474[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2015-12-30 00:48:03,311] INFO 17474[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:137) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2015-12-30 00:48:03,311]DEBUG 17474[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
[2015-12-30 00:48:03,311]DEBUG 17474[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2015-12-30 00:48:03,311]DEBUG 17474[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2015-12-30 00:48:03,315]DEBUG 17478[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2015-12-30 00:48:03,316]DEBUG 17479[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
[2015-12-30 00:48:03,316]DEBUG 17479[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2015-12-30 00:48:03,316]DEBUG 17479[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2015-12-30 00:48:03,316]DEBUG 17479[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2015-12-30 00:48:03,316]DEBUG 17479[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
[2015-12-30 00:48:03,316]DEBUG 17479[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2015-12-30 00:48:03,317]DEBUG 17480[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2015-12-30 00:48:03,317]DEBUG 17480[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2015-12-30 00:48:03,317]DEBUG 17480[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
[2015-12-30 00:48:03,317]DEBUG 17480[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2015-12-30 00:48:03,317]DEBUG 17480[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2015-12-30 00:48:03,317]DEBUG 17480[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2015-12-30 00:48:03,322]DEBUG 17485[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
[2015-12-30 00:48:03,322]DEBUG 17485[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2015-12-30 00:48:03,322]DEBUG 17485[main] - org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:776) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@607ed9a5]
[2015-12-30 00:48:03,322]DEBUG 17485[main] - org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:800) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6159a20c]
[2015-12-30 00:48:03,323] INFO 17486[main] - org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:555) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@349ef43d: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderDao,roleDao,userDao,regionDao,orderStatusDao,productDao,dimensionDao,customerTypeDao,orderItemDao,creditCardTypeDao,sessionFactory]; root of factory hierarchy
[2015-12-30 00:48:03,327]DEBUG 17490[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'transactionManager'
[2015-12-30 00:48:03,327]DEBUG 17490[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'transactionManager'
[2015-12-30 00:48:03,328]DEBUG 17491[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
[2015-12-30 00:48:03,328]DEBUG 17491[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:03,328]DEBUG 17491[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'sessionFactory'
[2015-12-30 00:48:03,329]DEBUG 17492[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
[2015-12-30 00:48:03,336]DEBUG 17499[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'sessionFactory'
[2015-12-30 00:48:03,336]DEBUG 17499[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@3de930b8
[2015-12-30 00:48:03,336]DEBUG 17499[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@3de930b8
[2015-12-30 00:48:03,336]DEBUG 17499[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3de930b8
[2015-12-30 00:48:03,336]DEBUG 17499[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@11475cbd
[2015-12-30 00:48:03,337]DEBUG 17500[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@33aa03b7
[2015-12-30 00:48:03,337]DEBUG 17500[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration yes_no -> org.hibernate.type.YesNoType@4483dae0
[2015-12-30 00:48:03,337]DEBUG 17500[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@74e12425
[2015-12-30 00:48:03,337]DEBUG 17500[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@74e12425
[2015-12-30 00:48:03,337]DEBUG 17500[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@74e12425
[2015-12-30 00:48:03,337]DEBUG 17500[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration character -> org.hibernate.type.CharacterType@a3d847c
[2015-12-30 00:48:03,342]DEBUG 17505[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char -> org.hibernate.type.CharacterType@a3d847c
[2015-12-30 00:48:03,343]DEBUG 17506[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@a3d847c
[2015-12-30 00:48:03,343]DEBUG 17506[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@1d4edc4a
[2015-12-30 00:48:03,344]DEBUG 17507[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@1d4edc4a
[2015-12-30 00:48:03,344]DEBUG 17507[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1d4edc4a
[2015-12-30 00:48:03,344]DEBUG 17507[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration integer -> org.hibernate.type.IntegerType@e6dd170
[2015-12-30 00:48:03,344]DEBUG 17507[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration int -> org.hibernate.type.IntegerType@e6dd170
[2015-12-30 00:48:03,344]DEBUG 17507[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e6dd170
[2015-12-30 00:48:03,344]DEBUG 17507[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@6a739da1
[2015-12-30 00:48:03,344]DEBUG 17507[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@6a739da1
[2015-12-30 00:48:03,345]DEBUG 17508[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6a739da1
[2015-12-30 00:48:03,345]DEBUG 17508[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@47e8d427
[2015-12-30 00:48:03,345]DEBUG 17508[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@47e8d427
[2015-12-30 00:48:03,345]DEBUG 17508[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@47e8d427
[2015-12-30 00:48:03,345]DEBUG 17508[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@56d84a93
[2015-12-30 00:48:03,345]DEBUG 17508[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@56d84a93
[2015-12-30 00:48:03,349]DEBUG 17512[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@56d84a93
[2015-12-30 00:48:03,350]DEBUG 17513[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@256c4642
[2015-12-30 00:48:03,350]DEBUG 17513[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@256c4642
[2015-12-30 00:48:03,350]DEBUG 17513[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e2b0942
[2015-12-30 00:48:03,350]DEBUG 17513[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e2b0942
[2015-12-30 00:48:03,350]DEBUG 17513[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration string -> org.hibernate.type.StringType@137f0ced
[2015-12-30 00:48:03,351]DEBUG 17514[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.String -> org.hibernate.type.StringType@137f0ced
[2015-12-30 00:48:03,351]DEBUG 17514[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration url -> org.hibernate.type.UrlType@35236fb0
[2015-12-30 00:48:03,351]DEBUG 17514[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@35236fb0
[2015-12-30 00:48:03,351]DEBUG 17514[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration date -> org.hibernate.type.DateType@73ba7069
[2015-12-30 00:48:03,351]DEBUG 17514[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73ba7069
[2015-12-30 00:48:03,351]DEBUG 17514[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration time -> org.hibernate.type.TimeType@5de5bb3c
[2015-12-30 00:48:03,351]DEBUG 17514[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5de5bb3c
[2015-12-30 00:48:03,356]DEBUG 17519[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timestamp -> org.hibernate.type.TimestampType@50193bcf
[2015-12-30 00:48:03,356]DEBUG 17519[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50193bcf
[2015-12-30 00:48:03,356]DEBUG 17519[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50193bcf
[2015-12-30 00:48:03,356]DEBUG 17519[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@723699e6
[2015-12-30 00:48:03,356]DEBUG 17519[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar -> org.hibernate.type.CalendarType@53728f89
[2015-12-30 00:48:03,356]DEBUG 17519[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@53728f89
[2015-12-30 00:48:03,357]DEBUG 17520[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@53728f89
[2015-12-30 00:48:03,357]DEBUG 17520[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7be117eb
[2015-12-30 00:48:03,357]DEBUG 17520[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration locale -> org.hibernate.type.LocaleType@22763b4
[2015-12-30 00:48:03,357]DEBUG 17520[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@22763b4
[2015-12-30 00:48:03,357]DEBUG 17520[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration currency -> org.hibernate.type.CurrencyType@2384b82e
[2015-12-30 00:48:03,357]DEBUG 17520[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2384b82e
[2015-12-30 00:48:03,357]DEBUG 17520[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4af4ba53
[2015-12-30 00:48:03,362]DEBUG 17525[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4af4ba53
[2015-12-30 00:48:03,362]DEBUG 17525[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration class -> org.hibernate.type.ClassType@7d72a6c
[2015-12-30 00:48:03,362]DEBUG 17525[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7d72a6c
[2015-12-30 00:48:03,362]DEBUG 17525[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@376ea355
[2015-12-30 00:48:03,362]DEBUG 17525[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@376ea355
[2015-12-30 00:48:03,362]DEBUG 17525[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f48007e
[2015-12-30 00:48:03,363]DEBUG 17526[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@43ab7840
[2015-12-30 00:48:03,363]DEBUG 17526[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration binary -> org.hibernate.type.BinaryType@52bd157
[2015-12-30 00:48:03,363]DEBUG 17526[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte[] -> org.hibernate.type.BinaryType@52bd157
[2015-12-30 00:48:03,363]DEBUG 17526[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [B -> org.hibernate.type.BinaryType@52bd157
[2015-12-30 00:48:03,363]DEBUG 17526[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@68cf9105
[2015-12-30 00:48:03,363]DEBUG 17526[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@68cf9105
[2015-12-30 00:48:03,363]DEBUG 17526[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@68cf9105
[2015-12-30 00:48:03,368]DEBUG 17531[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration image -> org.hibernate.type.ImageType@1c08001b
[2015-12-30 00:48:03,371]DEBUG 17534[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters -> org.hibernate.type.CharArrayType@7f5a1aca
[2015-12-30 00:48:03,371]DEBUG 17534[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char[] -> org.hibernate.type.CharArrayType@7f5a1aca
[2015-12-30 00:48:03,371]DEBUG 17534[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [C -> org.hibernate.type.CharArrayType@7f5a1aca
[2015-12-30 00:48:03,371]DEBUG 17534[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@44456946
[2015-12-30 00:48:03,371]DEBUG 17534[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@44456946
[2015-12-30 00:48:03,371]DEBUG 17534[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@44456946
[2015-12-30 00:48:03,372]DEBUG 17535[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration text -> org.hibernate.type.TextType@2a859dc9
[2015-12-30 00:48:03,372]DEBUG 17535[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@79d34ca
[2015-12-30 00:48:03,372]DEBUG 17535[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@79d34ca
[2015-12-30 00:48:03,372]DEBUG 17535[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7da1f182
[2015-12-30 00:48:03,372]DEBUG 17535[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@6c313657
[2015-12-30 00:48:03,372]DEBUG 17535[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@50881d59
[2015-12-30 00:48:03,376]DEBUG 17539[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@50881d59
[2015-12-30 00:48:03,377]DEBUG 17540[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@50aff428
[2015-12-30 00:48:03,377]DEBUG 17540[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@54a7c257
[2015-12-30 00:48:03,377]DEBUG 17540[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@60ac6214
[2015-12-30 00:48:03,377]DEBUG 17540[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration serializable -> org.hibernate.type.SerializableType@7e212ab1
[2015-12-30 00:48:03,377]DEBUG 17540[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration object -> org.hibernate.type.ObjectType@359ce161
[2015-12-30 00:48:03,377]DEBUG 17540[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@359ce161
[2015-12-30 00:48:03,378]DEBUG 17541[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@29661259
[2015-12-30 00:48:03,378]DEBUG 17541[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5177bcb
[2015-12-30 00:48:03,378]DEBUG 17541[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4984fd2f
[2015-12-30 00:48:03,378]DEBUG 17541[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7684ab16
[2015-12-30 00:48:03,378]DEBUG 17541[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@15a2fd7a
[2015-12-30 00:48:03,378]DEBUG 17541[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@52b2d9ff
[2015-12-30 00:48:03,383]DEBUG 17546[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@15cdc368
[2015-12-30 00:48:03,383]DEBUG 17546[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@c8bb62
[2015-12-30 00:48:03,383]DEBUG 17546[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
[2015-12-30 00:48:03,383]DEBUG 17546[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
[2015-12-30 00:48:03,383]DEBUG 17546[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
[2015-12-30 00:48:03,384]DEBUG 17547[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
[2015-12-30 00:48:03,384]DEBUG 17547[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
[2015-12-30 00:48:03,387]DEBUG 17550[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
[2015-12-30 00:48:03,387]DEBUG 17550[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
[2015-12-30 00:48:03,387]DEBUG 17550[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
[2015-12-30 00:48:03,387]DEBUG 17550[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
[2015-12-30 00:48:03,387]DEBUG 17550[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
[2015-12-30 00:48:03,387]DEBUG 17550[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
[2015-12-30 00:48:03,387]DEBUG 17550[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
[2015-12-30 00:48:03,388]DEBUG 17551[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
[2015-12-30 00:48:03,388]DEBUG 17551[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
[2015-12-30 00:48:03,388]DEBUG 17551[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
[2015-12-30 00:48:03,388] INFO 17551[main] - org.hibernate.cfg.Configuration.configure(Configuration.java:2192) - configuring from url: file:/opt/jenkins-slv/fs/workspace/OMS/target/test-classes/hibernate_test.cfg.xml
[2015-12-30 00:48:03,391]DEBUG 17554[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
[2015-12-30 00:48:03,392] WARN 17555[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
[2015-12-30 00:48:03,392]DEBUG 17555[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) - attempting to resolve on classpath under org/hibernate/
[2015-12-30 00:48:03,392]DEBUG 17555[main] - org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) - located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
[2015-12-30 00:48:03,398]DEBUG 17561[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.driver_class=org.postgresql.Driver
[2015-12-30 00:48:03,398]DEBUG 17561[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - dialect=org.hibernate.dialect.PostgreSQLDialect
[2015-12-30 00:48:03,404]DEBUG 17567[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.url=jdbc:postgresql://192.168.103.164:5432/_055_DB
[2015-12-30 00:48:03,404]DEBUG 17567[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.username=055db
[2015-12-30 00:48:03,404]DEBUG 17567[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.password=055db
[2015-12-30 00:48:03,408]DEBUG 17571[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.hbm2ddl.auto=create-drop
[2015-12-30 00:48:03,408]DEBUG 17571[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Role] for mapping
[2015-12-30 00:48:03,408]DEBUG 17571[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Region] for mapping
[2015-12-30 00:48:03,408]DEBUG 17571[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.CustomerType] for mapping
[2015-12-30 00:48:03,408]DEBUG 17571[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.User] for mapping
[2015-12-30 00:48:03,409]DEBUG 17572[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.OrderStatus] for mapping
[2015-12-30 00:48:03,409]DEBUG 17572[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Order] for mapping
[2015-12-30 00:48:03,409]DEBUG 17572[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Product] for mapping
[2015-12-30 00:48:03,409]DEBUG 17572[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Dimension] for mapping
[2015-12-30 00:48:03,409]DEBUG 17572[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.OrderItem] for mapping
[2015-12-30 00:48:03,409]DEBUG 17572[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.CreditCardType] for mapping
[2015-12-30 00:48:03,412] INFO 17575[main] - org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) - Configured SessionFactory: null
[2015-12-30 00:48:03,412]DEBUG 17575[main] - org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) - properties: {hibernate.connection.password=055db, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/usr/java/jdk1.7.0_79/jre/lib/amd64, java.vm.version=24.79-b02, hibernate.connection.username=055db, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/opt/jenkins-slv/fs/workspace/OMS, java.runtime.version=1.7.0_79-b15, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/opt/jenkins-slv/fs/workspace/OMS, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=/usr/java/jdk1.7.0_79/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/opt/jenkins-slv/fs/workspace/OMS/target/surefire/surefirebooter8804629680306269853.jar, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/opt/jenkins-slv/fs/workspace/OMS/target/test-classes:/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes:/root/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/root/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/root/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/root/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/root/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/root/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/root/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/root/.m2/repository/junit/junit/4.7/junit-4.7.jar:/root/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/root/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/root/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/root/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/root/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/root/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/root/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/root/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/root/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/root/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/root/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/root/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/root/.m2/repository/org/postgresql/postgresql/9.4-1200-jdbc41/postgresql-9.4-1200-jdbc41.jar:/root/.m2/repository/com/github/dblock/waffle/waffle-jna/1.7/waffle-jna-1.7.jar:/root/.m2/repository/net/java/dev/jna/jna/4.1.0/jna-4.1.0.jar:/root/.m2/repository/net/java/dev/jna/jna-platform/4.1.0/jna-platform-4.1.0.jar:/root/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar:/root/.m2/repository/org/slf4j/slf4j-simple/1.7.7/slf4j-simple-1.7.7.jar:/root/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/root/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/root/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/root/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/root/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/root/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/root/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/root/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/root/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/root/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/root/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/root/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/root/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/root/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/root/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/root/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/root/.m2/repository/emma/emma/2.0.5312/emma-2.0.5312.jar:, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=2.6.32-573.12.1.el6.x86_64, user.home=/root, user.timezone=Europe/Kiev, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.7, hibernate.connection.driver_class=org.postgresql.Driver, java.class.path=/opt/jenkins-slv/fs/workspace/OMS/target/test-classes:/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes:/root/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/root/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/root/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/root/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/root/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/root/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/root/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/root/.m2/repository/junit/junit/4.7/junit-4.7.jar:/root/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/root/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/root/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/root/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/root/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/root/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/root/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/root/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/root/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/root/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/root/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/root/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/root/.m2/repository/org/postgresql/postgresql/9.4-1200-jdbc41/postgresql-9.4-1200-jdbc41.jar:/root/.m2/repository/com/github/dblock/waffle/waffle-jna/1.7/waffle-jna-1.7.jar:/root/.m2/repository/net/java/dev/jna/jna/4.1.0/jna-4.1.0.jar:/root/.m2/repository/net/java/dev/jna/jna-platform/4.1.0/jna-platform-4.1.0.jar:/root/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar:/root/.m2/repository/org/slf4j/slf4j-simple/1.7.7/slf4j-simple-1.7.7.jar:/root/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/root/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/root/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/root/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/root/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/root/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/root/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/root/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/root/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/root/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/root/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/root/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/root/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/root/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/root/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/root/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/root/.m2/repository/emma/emma/2.0.5312/emma-2.0.5312.jar:, user.name=root, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.7, sun.java.command=/opt/jenkins-slv/fs/workspace/OMS/target/surefire/surefirebooter8804629680306269853.jar /opt/jenkins-slv/fs/workspace/OMS/target/surefire/surefire1518745297208331085tmp /opt/jenkins-slv/fs/workspace/OMS/target/surefire/surefire_05903587996156909078tmp, java.home=/usr/java/jdk1.7.0_79/jre, sun.arch.data.model=64, hibernate.connection.url=jdbc:postgresql://192.168.103.164:5432/_055_DB, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.7.0_79, java.ext.dirs=/usr/java/jdk1.7.0_79/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.7.0_79/jre/lib/resources.jar:/usr/java/jdk1.7.0_79/jre/lib/rt.jar:/usr/java/jdk1.7.0_79/jre/lib/sunrsasign.jar:/usr/java/jdk1.7.0_79/jre/lib/jsse.jar:/usr/java/jdk1.7.0_79/jre/lib/jce.jar:/usr/java/jdk1.7.0_79/jre/lib/charsets.jar:/usr/java/jdk1.7.0_79/jre/lib/jfr.jar:/usr/java/jdk1.7.0_79/jre/classes, java.vendor=Oracle Corporation, localRepository=/root/.m2/repository, file.separator=/, hibernate.hbm2ddl.auto=create-drop, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.PostgreSQLDialect, sun.cpu.isalist=}
[2015-12-30 00:48:03,412]DEBUG 17575[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2015-12-30 00:48:03,412]DEBUG 17575[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2015-12-30 00:48:03,413] INFO 17576[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 00:48:03,413]DEBUG 17576[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 00:48:03,413]DEBUG 17576[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 00:48:03,419]DEBUG 17582[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Role
[2015-12-30 00:48:03,419] INFO 17582[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Role on table Roles
[2015-12-30 00:48:03,420]DEBUG 17583[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Roles), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,420]DEBUG 17583[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 00:48:03,420]DEBUG 17583[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 00:48:03,420]DEBUG 17583[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 00:48:03,420]DEBUG 17583[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Roles), mappingColumn=RoleName, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,424]DEBUG 17587[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property roleName with lazy=false
[2015-12-30 00:48:03,424]DEBUG 17587[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for roleName
[2015-12-30 00:48:03,424]DEBUG 17587[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property roleName
[2015-12-30 00:48:03,424] INFO 17587[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 00:48:03,424]DEBUG 17587[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 00:48:03,425]DEBUG 17588[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 00:48:03,425]DEBUG 17588[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Region
[2015-12-30 00:48:03,425] INFO 17588[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Region on table Regions
[2015-12-30 00:48:03,426]DEBUG 17589[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Regions), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,426]DEBUG 17589[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 00:48:03,426]DEBUG 17589[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 00:48:03,426]DEBUG 17589[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 00:48:03,426]DEBUG 17589[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Regions), mappingColumn=RegionName, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,427]DEBUG 17590[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property regionName with lazy=false
[2015-12-30 00:48:03,427]DEBUG 17590[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for regionName
[2015-12-30 00:48:03,427]DEBUG 17590[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property regionName
[2015-12-30 00:48:03,431] INFO 17594[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 00:48:03,431]DEBUG 17594[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 00:48:03,431]DEBUG 17594[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 00:48:03,431]DEBUG 17594[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name CustomerType
[2015-12-30 00:48:03,431] INFO 17594[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.CustomerType on table CustomerTypes
[2015-12-30 00:48:03,432]DEBUG 17595[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,433]DEBUG 17596[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 00:48:03,433]DEBUG 17596[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 00:48:03,433]DEBUG 17596[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 00:48:03,433]DEBUG 17596[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=Discount, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,435]DEBUG 17598[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property discount with lazy=false
[2015-12-30 00:48:03,435]DEBUG 17598[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for discount
[2015-12-30 00:48:03,436]DEBUG 17599[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property discount
[2015-12-30 00:48:03,436]DEBUG 17599[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=MaxRange, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,436]DEBUG 17599[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property maxRange with lazy=false
[2015-12-30 00:48:03,436]DEBUG 17599[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for maxRange
[2015-12-30 00:48:03,436]DEBUG 17599[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property maxRange
[2015-12-30 00:48:03,437]DEBUG 17600[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=MinRange, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,437]DEBUG 17600[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property minRange with lazy=false
[2015-12-30 00:48:03,437]DEBUG 17600[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for minRange
[2015-12-30 00:48:03,437]DEBUG 17600[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property minRange
[2015-12-30 00:48:03,437]DEBUG 17600[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=TypeName, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,437]DEBUG 17600[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property typeName with lazy=false
[2015-12-30 00:48:03,438]DEBUG 17601[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for typeName
[2015-12-30 00:48:03,438]DEBUG 17601[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property typeName
[2015-12-30 00:48:03,438] INFO 17601[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 00:48:03,438]DEBUG 17601[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 00:48:03,438]DEBUG 17601[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 00:48:03,438]DEBUG 17601[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name User
[2015-12-30 00:48:03,444] INFO 17607[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.User on table Users
[2015-12-30 00:48:03,446]DEBUG 17609[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,446]DEBUG 17609[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 00:48:03,446]DEBUG 17609[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 00:48:03,446]DEBUG 17609[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 00:48:03,446]DEBUG 17609[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=IsUserActive, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,450]DEBUG 17613[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property active with lazy=false
[2015-12-30 00:48:03,450]DEBUG 17613[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for active
[2015-12-30 00:48:03,450]DEBUG 17613[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property active
[2015-12-30 00:48:03,450]DEBUG 17613[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Balance, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,450]DEBUG 17613[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property balance with lazy=false
[2015-12-30 00:48:03,451]DEBUG 17614[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for balance
[2015-12-30 00:48:03,451]DEBUG 17614[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property balance
[2015-12-30 00:48:03,451]DEBUG 17614[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='CustomerTypeRef', referencedColumn='', mappedBy=''}
[2015-12-30 00:48:03,451]DEBUG 17614[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=customerType, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,451]DEBUG 17614[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property customerType
[2015-12-30 00:48:03,452]DEBUG 17615[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Email, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,452]DEBUG 17615[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property email with lazy=false
[2015-12-30 00:48:03,452]DEBUG 17615[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for email
[2015-12-30 00:48:03,452]DEBUG 17615[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property email
[2015-12-30 00:48:03,452]DEBUG 17615[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=FirstName, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,453]DEBUG 17616[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property firstName with lazy=false
[2015-12-30 00:48:03,453]DEBUG 17616[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for firstName
[2015-12-30 00:48:03,453]DEBUG 17616[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property firstName
[2015-12-30 00:48:03,453]DEBUG 17616[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=LastName, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,453]DEBUG 17616[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property lastName with lazy=false
[2015-12-30 00:48:03,453]DEBUG 17616[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for lastName
[2015-12-30 00:48:03,454]DEBUG 17617[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property lastName
[2015-12-30 00:48:03,454]DEBUG 17617[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Login, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,454]DEBUG 17617[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property login with lazy=false
[2015-12-30 00:48:03,454]DEBUG 17617[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for login
[2015-12-30 00:48:03,454]DEBUG 17617[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property login
[2015-12-30 00:48:03,454]DEBUG 17617[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Password, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,458]DEBUG 17621[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property password with lazy=false
[2015-12-30 00:48:03,458]DEBUG 17621[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for password
[2015-12-30 00:48:03,463]DEBUG 17626[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property password
[2015-12-30 00:48:03,463]DEBUG 17626[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='RegionRef', referencedColumn='', mappedBy=''}
[2015-12-30 00:48:03,463]DEBUG 17626[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=region, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,464]DEBUG 17627[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property region
[2015-12-30 00:48:03,464]DEBUG 17627[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='RoleRef', referencedColumn='', mappedBy=''}
[2015-12-30 00:48:03,465]DEBUG 17628[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=role, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,465]DEBUG 17628[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property role
[2015-12-30 00:48:03,465] INFO 17628[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 00:48:03,465]DEBUG 17628[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 00:48:03,465]DEBUG 17628[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 00:48:03,465]DEBUG 17628[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderStatus
[2015-12-30 00:48:03,466] INFO 17629[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.OrderStatus on table OrderStatuses
[2015-12-30 00:48:03,466]DEBUG 17629[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderStatuses), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,466]DEBUG 17629[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 00:48:03,467]DEBUG 17630[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 00:48:03,467]DEBUG 17630[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 00:48:03,467]DEBUG 17630[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderStatuses), mappingColumn=OrederStatusName, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,467]DEBUG 17630[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderStatusName with lazy=false
[2015-12-30 00:48:03,467]DEBUG 17630[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderStatusName
[2015-12-30 00:48:03,471]DEBUG 17634[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderStatusName
[2015-12-30 00:48:03,471] INFO 17634[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 00:48:03,471]DEBUG 17634[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 00:48:03,471]DEBUG 17634[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 00:48:03,471]DEBUG 17634[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Order
[2015-12-30 00:48:03,472] INFO 17635[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Order on table Orders
[2015-12-30 00:48:03,473]DEBUG 17636[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,475]DEBUG 17638[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 00:48:03,475]DEBUG 17638[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 00:48:03,475]DEBUG 17638[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 00:48:03,475]DEBUG 17638[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='Assigne', referencedColumn='', mappedBy=''}
[2015-12-30 00:48:03,476]DEBUG 17639[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=assigne, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,476]DEBUG 17639[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property assigne
[2015-12-30 00:48:03,476]DEBUG 17639[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='Customer', referencedColumn='', mappedBy=''}
[2015-12-30 00:48:03,476]DEBUG 17639[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,476]DEBUG 17639[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property customer
[2015-12-30 00:48:03,477]DEBUG 17640[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=DeliveryDate, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,480]DEBUG 17643[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property deliveryDate with lazy=false
[2015-12-30 00:48:03,480]DEBUG 17643[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for deliveryDate
[2015-12-30 00:48:03,480]DEBUG 17643[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property deliveryDate
[2015-12-30 00:48:03,480]DEBUG 17643[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=IsGift, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,480]DEBUG 17643[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property isGift with lazy=false
[2015-12-30 00:48:03,481]DEBUG 17644[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for isGift
[2015-12-30 00:48:03,481]DEBUG 17644[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property isGift
[2015-12-30 00:48:03,481]DEBUG 17644[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=MaxDiscount, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,481]DEBUG 17644[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property maxDiscount with lazy=false
[2015-12-30 00:48:03,481]DEBUG 17644[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for maxDiscount
[2015-12-30 00:48:03,481]DEBUG 17644[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property maxDiscount
[2015-12-30 00:48:03,482]DEBUG 17645[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderDate, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,482]DEBUG 17645[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderDate with lazy=false
[2015-12-30 00:48:03,482]DEBUG 17645[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderDate
[2015-12-30 00:48:03,482]DEBUG 17645[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderDate
[2015-12-30 00:48:03,482]DEBUG 17645[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderName, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,485]DEBUG 17648[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderName with lazy=false
[2015-12-30 00:48:03,487]DEBUG 17650[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderName
[2015-12-30 00:48:03,487]DEBUG 17650[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderName
[2015-12-30 00:48:03,487]DEBUG 17650[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderNumber, insertable=true, updatable=true, unique=true}
[2015-12-30 00:48:03,487]DEBUG 17650[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderNumber with lazy=false
[2015-12-30 00:48:03,487]DEBUG 17650[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderNumber
[2015-12-30 00:48:03,487]DEBUG 17650[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderNumber
[2015-12-30 00:48:03,488]DEBUG 17651[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='OrderStatusRef', referencedColumn='', mappedBy=''}
[2015-12-30 00:48:03,488]DEBUG 17651[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=orderStatus, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,488]DEBUG 17651[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderStatus
[2015-12-30 00:48:03,488]DEBUG 17651[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=PreferableDeliveryDate, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,489]DEBUG 17652[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property preferableDeliveryDate with lazy=false
[2015-12-30 00:48:03,489]DEBUG 17652[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for preferableDeliveryDate
[2015-12-30 00:48:03,489]DEBUG 17652[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property preferableDeliveryDate
[2015-12-30 00:48:03,489]DEBUG 17652[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=TotalPrice, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,489]DEBUG 17652[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property totalPrice with lazy=false
[2015-12-30 00:48:03,489]DEBUG 17652[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for totalPrice
[2015-12-30 00:48:03,490]DEBUG 17653[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property totalPrice
[2015-12-30 00:48:03,490] INFO 17653[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 00:48:03,490]DEBUG 17653[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 00:48:03,490]DEBUG 17653[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 00:48:03,490]DEBUG 17653[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Product
[2015-12-30 00:48:03,490] INFO 17653[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Product on table Products
[2015-12-30 00:48:03,491]DEBUG 17654[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,492]DEBUG 17655[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 00:48:03,492]DEBUG 17655[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 00:48:03,492]DEBUG 17655[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 00:48:03,492]DEBUG 17655[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=IsProductActive, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,492]DEBUG 17655[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property active with lazy=false
[2015-12-30 00:48:03,492]DEBUG 17655[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for active
[2015-12-30 00:48:03,493]DEBUG 17656[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property active
[2015-12-30 00:48:03,493]DEBUG 17656[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductDescription, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,493]DEBUG 17656[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productDescription with lazy=false
[2015-12-30 00:48:03,493]DEBUG 17656[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productDescription
[2015-12-30 00:48:03,493]DEBUG 17656[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productDescription
[2015-12-30 00:48:03,494]DEBUG 17657[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductName, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,494]DEBUG 17657[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productName with lazy=false
[2015-12-30 00:48:03,494]DEBUG 17657[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productName
[2015-12-30 00:48:03,494]DEBUG 17657[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productName
[2015-12-30 00:48:03,494]DEBUG 17657[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductPrice, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,494]DEBUG 17657[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productPrice with lazy=false
[2015-12-30 00:48:03,495]DEBUG 17658[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productPrice
[2015-12-30 00:48:03,495]DEBUG 17658[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productPrice
[2015-12-30 00:48:03,495] INFO 17658[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 00:48:03,495]DEBUG 17658[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 00:48:03,495]DEBUG 17658[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 00:48:03,495]DEBUG 17658[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Dimension
[2015-12-30 00:48:03,496] INFO 17659[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Dimension on table Dimensions
[2015-12-30 00:48:03,496]DEBUG 17659[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,496]DEBUG 17659[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 00:48:03,497]DEBUG 17660[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 00:48:03,497]DEBUG 17660[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 00:48:03,497]DEBUG 17660[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=DimensionName, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,497]DEBUG 17660[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property dimensionName with lazy=false
[2015-12-30 00:48:03,497]DEBUG 17660[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for dimensionName
[2015-12-30 00:48:03,499]DEBUG 17662[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property dimensionName
[2015-12-30 00:48:03,499]DEBUG 17662[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=NumberOfProducts, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,499]DEBUG 17662[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property numberOfProduct with lazy=false
[2015-12-30 00:48:03,499]DEBUG 17662[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for numberOfProduct
[2015-12-30 00:48:03,500]DEBUG 17663[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property numberOfProduct
[2015-12-30 00:48:03,500] INFO 17663[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.OrderItem
[2015-12-30 00:48:03,500]DEBUG 17663[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 00:48:03,500]DEBUG 17663[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 00:48:03,500]DEBUG 17663[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderItem
[2015-12-30 00:48:03,500] INFO 17663[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.OrderItem on table OrderItems
[2015-12-30 00:48:03,502]DEBUG 17665[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,502]DEBUG 17665[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 00:48:03,502]DEBUG 17665[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 00:48:03,502]DEBUG 17665[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 00:48:03,503]DEBUG 17666[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=Cost, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,503]DEBUG 17666[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cost with lazy=false
[2015-12-30 00:48:03,503]DEBUG 17666[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cost
[2015-12-30 00:48:03,503]DEBUG 17666[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cost
[2015-12-30 00:48:03,503]DEBUG 17666[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='DimensionRef', referencedColumn='', mappedBy=''}
[2015-12-30 00:48:03,503]DEBUG 17666[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=dimension, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,504]DEBUG 17667[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property dimension
[2015-12-30 00:48:03,504]DEBUG 17667[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=ItemPrice, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,504]DEBUG 17667[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property itemPrice with lazy=false
[2015-12-30 00:48:03,504]DEBUG 17667[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for itemPrice
[2015-12-30 00:48:03,504]DEBUG 17667[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property itemPrice
[2015-12-30 00:48:03,505]DEBUG 17668[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='OrderRef', referencedColumn='', mappedBy=''}
[2015-12-30 00:48:03,505]DEBUG 17668[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=order, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,505]DEBUG 17668[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property order
[2015-12-30 00:48:03,505]DEBUG 17668[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='ProductRef', referencedColumn='', mappedBy=''}
[2015-12-30 00:48:03,505]DEBUG 17668[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=product, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,506]DEBUG 17669[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property product
[2015-12-30 00:48:03,506]DEBUG 17669[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=Quantity, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,506]DEBUG 17669[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property quantity with lazy=false
[2015-12-30 00:48:03,506]DEBUG 17669[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for quantity
[2015-12-30 00:48:03,506]DEBUG 17669[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property quantity
[2015-12-30 00:48:03,506] INFO 17669[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.CreditCardType
[2015-12-30 00:48:03,507]DEBUG 17670[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 00:48:03,507]DEBUG 17670[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 00:48:03,507]DEBUG 17670[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name CreditCardType
[2015-12-30 00:48:03,507] INFO 17670[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.CreditCardType on table CardType
[2015-12-30 00:48:03,508]DEBUG 17671[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,508]DEBUG 17671[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 00:48:03,509]DEBUG 17672[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 00:48:03,509]DEBUG 17672[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 00:48:03,509]DEBUG 17672[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardType, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,509]DEBUG 17672[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cardType with lazy=false
[2015-12-30 00:48:03,509]DEBUG 17672[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cardType
[2015-12-30 00:48:03,509]DEBUG 17672[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cardType
[2015-12-30 00:48:03,510]DEBUG 17673[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardNumber, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,510]DEBUG 17673[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property creditCardNumber with lazy=false
[2015-12-30 00:48:03,510]DEBUG 17673[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for creditCardNumber
[2015-12-30 00:48:03,510]DEBUG 17673[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property creditCardNumber
[2015-12-30 00:48:03,510]DEBUG 17673[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardCvv2, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,510]DEBUG 17673[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cvv2 with lazy=false
[2015-12-30 00:48:03,512]DEBUG 17675[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cvv2
[2015-12-30 00:48:03,512]DEBUG 17675[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cvv2
[2015-12-30 00:48:03,512]DEBUG 17675[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=Expiration_Date, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,513]DEBUG 17676[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property expDate with lazy=false
[2015-12-30 00:48:03,513]DEBUG 17676[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for expDate
[2015-12-30 00:48:03,513]DEBUG 17676[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property expDate
[2015-12-30 00:48:03,513]DEBUG 17676[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=IssueDate, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,513]DEBUG 17676[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property issueDate with lazy=false
[2015-12-30 00:48:03,514]DEBUG 17677[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for issueDate
[2015-12-30 00:48:03,514]DEBUG 17677[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property issueDate
[2015-12-30 00:48:03,514]DEBUG 17677[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=IssueNumber, insertable=true, updatable=true, unique=false}
[2015-12-30 00:48:03,514]DEBUG 17677[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property issueNumber with lazy=false
[2015-12-30 00:48:03,514]DEBUG 17677[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for issueNumber
[2015-12-30 00:48:03,514]DEBUG 17677[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property issueNumber
[2015-12-30 00:48:03,515]DEBUG 17678[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 00:48:03,515]DEBUG 17678[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for roleName
[2015-12-30 00:48:03,515]DEBUG 17678[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 00:48:03,515]DEBUG 17678[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for regionName
[2015-12-30 00:48:03,515]DEBUG 17678[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 00:48:03,515]DEBUG 17678[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for discount
[2015-12-30 00:48:03,515]DEBUG 17678[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for maxRange
[2015-12-30 00:48:03,516]DEBUG 17679[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for minRange
[2015-12-30 00:48:03,516]DEBUG 17679[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for typeName
[2015-12-30 00:48:03,516]DEBUG 17679[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 00:48:03,516]DEBUG 17679[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for active
[2015-12-30 00:48:03,516]DEBUG 17679[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for balance
[2015-12-30 00:48:03,516]DEBUG 17679[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for email
[2015-12-30 00:48:03,516]DEBUG 17679[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for firstName
[2015-12-30 00:48:03,517]DEBUG 17680[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for lastName
[2015-12-30 00:48:03,517]DEBUG 17680[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for login
[2015-12-30 00:48:03,517]DEBUG 17680[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for password
[2015-12-30 00:48:03,517]DEBUG 17680[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 00:48:03,517]DEBUG 17680[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderStatusName
[2015-12-30 00:48:03,517]DEBUG 17680[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 00:48:03,517]DEBUG 17680[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for deliveryDate
[2015-12-30 00:48:03,517]DEBUG 17680[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for isGift
[2015-12-30 00:48:03,518]DEBUG 17681[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for maxDiscount
[2015-12-30 00:48:03,518]DEBUG 17681[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderDate
[2015-12-30 00:48:03,518]DEBUG 17681[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderName
[2015-12-30 00:48:03,518]DEBUG 17681[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderNumber
[2015-12-30 00:48:03,518]DEBUG 17681[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for preferableDeliveryDate
[2015-12-30 00:48:03,518]DEBUG 17681[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for totalPrice
[2015-12-30 00:48:03,518]DEBUG 17681[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 00:48:03,519]DEBUG 17682[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for active
[2015-12-30 00:48:03,519]DEBUG 17682[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productDescription
[2015-12-30 00:48:03,519]DEBUG 17682[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productName
[2015-12-30 00:48:03,519]DEBUG 17682[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productPrice
[2015-12-30 00:48:03,519]DEBUG 17682[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 00:48:03,519]DEBUG 17682[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for dimensionName
[2015-12-30 00:48:03,519]DEBUG 17682[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for numberOfProduct
[2015-12-30 00:48:03,519]DEBUG 17682[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 00:48:03,520]DEBUG 17683[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cost
[2015-12-30 00:48:03,520]DEBUG 17683[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for itemPrice
[2015-12-30 00:48:03,520]DEBUG 17683[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for quantity
[2015-12-30 00:48:03,520]DEBUG 17683[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 00:48:03,520]DEBUG 17683[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cardType
[2015-12-30 00:48:03,520]DEBUG 17683[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for creditCardNumber
[2015-12-30 00:48:03,522]DEBUG 17685[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cvv2
[2015-12-30 00:48:03,522]DEBUG 17685[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for expDate
[2015-12-30 00:48:03,522]DEBUG 17685[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for issueDate
[2015-12-30 00:48:03,522]DEBUG 17685[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for issueNumber
[2015-12-30 00:48:03,522]DEBUG 17685[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2015-12-30 00:48:03,523]DEBUG 17686[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2015-12-30 00:48:03,523]DEBUG 17686[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2015-12-30 00:48:03,523]DEBUG 17686[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2015-12-30 00:48:03,523]DEBUG 17686[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2015-12-30 00:48:03,523]DEBUG 17686[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2015-12-30 00:48:03,523]DEBUG 17686[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2015-12-30 00:48:03,524]DEBUG 17687[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 00:48:03,524]DEBUG 17687[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 00:48:03,524]DEBUG 17687[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 00:48:03,524]DEBUG 17687[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 00:48:03,524]DEBUG 17687[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 00:48:03,524]DEBUG 17687[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 00:48:03,524]DEBUG 17687[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 00:48:03,525]DEBUG 17688[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 00:48:03,525]DEBUG 17688[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 00:48:03,525] INFO 17688[main] - org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) - Hibernate Validator not found: ignoring
[2015-12-30 00:48:03,525]DEBUG 17688[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2015-12-30 00:48:03,526]DEBUG 17689[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2015-12-30 00:48:03,526]DEBUG 17689[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2015-12-30 00:48:03,526]DEBUG 17689[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2015-12-30 00:48:03,542] INFO 17705[main] - org.springframework.orm.hibernate3.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:777) - Building new Hibernate SessionFactory
[2015-12-30 00:48:03,542]DEBUG 17705[main] - org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) - Preparing to build session factory with filters : {}
[2015-12-30 00:48:03,542]DEBUG 17705[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2015-12-30 00:48:03,542]DEBUG 17705[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2015-12-30 00:48:03,542]DEBUG 17705[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2015-12-30 00:48:03,542]DEBUG 17705[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2015-12-30 00:48:03,543]DEBUG 17706[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2015-12-30 00:48:03,543]DEBUG 17706[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2015-12-30 00:48:03,543]DEBUG 17706[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2015-12-30 00:48:03,543]DEBUG 17706[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2015-12-30 00:48:03,543]DEBUG 17706[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2015-12-30 00:48:03,543]DEBUG 17706[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 00:48:03,543]DEBUG 17706[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 00:48:03,543]DEBUG 17706[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 00:48:03,544]DEBUG 17707[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 00:48:03,544]DEBUG 17707[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 00:48:03,544]DEBUG 17707[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 00:48:03,544]DEBUG 17707[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 00:48:03,544]DEBUG 17707[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 00:48:03,544]DEBUG 17707[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 00:48:03,545]DEBUG 17708[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2015-12-30 00:48:03,545]DEBUG 17708[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2015-12-30 00:48:03,545]DEBUG 17708[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2015-12-30 00:48:03,548]DEBUG 17711[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2015-12-30 00:48:03,562]DEBUG 17725[main] - org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) - Legacy Validator not present in classpath, ignoring event listener registration
[2015-12-30 00:48:03,562]DEBUG 17725[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2015-12-30 00:48:03,562]DEBUG 17725[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2015-12-30 00:48:03,562]DEBUG 17725[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2015-12-30 00:48:03,563]DEBUG 17726[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2015-12-30 00:48:03,564]DEBUG 17727[main] - org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) - Search not present in classpath, ignoring event listener registration.
[2015-12-30 00:48:03,564] INFO 17727[main] - org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
[2015-12-30 00:48:03,565] INFO 17728[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) - Using Hibernate built-in connection pool (not for production use!)
[2015-12-30 00:48:03,565] INFO 17728[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) - Hibernate connection pool size: 20
[2015-12-30 00:48:03,565] INFO 17728[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) - autocommit mode: false
[2015-12-30 00:48:03,565] INFO 17728[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) - using driver: org.postgresql.Driver at URL: jdbc:postgresql://192.168.103.164:5432/_055_DB
[2015-12-30 00:48:03,566] INFO 17729[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) - connection properties: {user=055db, password=055db}
[2015-12-30 00:48:03,566]DEBUG 17729[main] - org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) - opening new JDBC connection
[2015-12-30 00:48:03,591]DEBUG 17754[main] - org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) - created connection to: jdbc:postgresql://192.168.103.164:5432/_055_DB, Isolation Level: 2
[2015-12-30 00:48:03,591] INFO 17754[main] - org.hibernate.dialect.Dialect.<init>(Dialect.java:135) - Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2015-12-30 00:48:03,592] INFO 17755[main] - org.hibernate.engine.jdbc.JdbcSupportLoader.useContextualLobCreation(JdbcSupportLoader.java:108) - Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
[2015-12-30 00:48:03,593] INFO 17756[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) - Database ->
       name : PostgreSQL
    version : 9.4.5
      major : 9
      minor : 4
[2015-12-30 00:48:03,593] INFO 17756[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.4 JDBC4.1 (build 1200)
      major : 9
      minor : 4
[2015-12-30 00:48:03,594] INFO 17757[main] - org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:65) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[2015-12-30 00:48:03,594] INFO 17757[main] - org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[2015-12-30 00:48:03,594] INFO 17757[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) - Automatic flush during beforeCompletion(): disabled
[2015-12-30 00:48:03,594] INFO 17757[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) - Automatic session close at end of transaction: disabled
[2015-12-30 00:48:03,595] INFO 17758[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) - JDBC batch size: 15
[2015-12-30 00:48:03,595] INFO 17758[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) - JDBC batch updates for versioned data: disabled
[2015-12-30 00:48:03,595] INFO 17758[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) - Scrollable result sets: enabled
[2015-12-30 00:48:03,596]DEBUG 17759[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) - Wrap result sets: disabled
[2015-12-30 00:48:03,596] INFO 17759[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - JDBC3 getGeneratedKeys(): enabled
[2015-12-30 00:48:03,596] INFO 17759[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) - Connection release mode: auto
[2015-12-30 00:48:03,596] INFO 17759[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) - Default batch fetch size: 1
[2015-12-30 00:48:03,597] INFO 17760[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) - Generate SQL with comments: disabled
[2015-12-30 00:48:03,597] INFO 17760[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) - Order SQL updates by primary key: disabled
[2015-12-30 00:48:03,597] INFO 17760[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) - Order SQL inserts for batching: disabled
[2015-12-30 00:48:03,597] INFO 17760[main] - org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[2015-12-30 00:48:03,598] INFO 17761[main] - org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) - Using ASTQueryTranslatorFactory
[2015-12-30 00:48:03,598] INFO 17761[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) - Query language substitutions: {}
[2015-12-30 00:48:03,598] INFO 17761[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) - JPA-QL strict compliance: disabled
[2015-12-30 00:48:03,599] INFO 17762[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) - Second-level cache: enabled
[2015-12-30 00:48:03,599] INFO 17762[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) - Query cache: disabled
[2015-12-30 00:48:03,599] INFO 17762[main] - org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
[2015-12-30 00:48:03,599] INFO 17762[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) - Optimize cache for minimal puts: disabled
[2015-12-30 00:48:03,600] INFO 17763[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) - Structured second-level cache entries: disabled
[2015-12-30 00:48:03,600] INFO 17763[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Statistics: disabled
[2015-12-30 00:48:03,603] INFO 17766[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) - Deleted entity synthetic identifier rollback: disabled
[2015-12-30 00:48:03,604] INFO 17767[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) - Default entity-mode: pojo
[2015-12-30 00:48:03,604] INFO 17767[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) - Named query checking : enabled
[2015-12-30 00:48:03,604] INFO 17767[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) - Check Nullability in Core (should be disabled when Bean Validation is on): disabled
[2015-12-30 00:48:03,612] INFO 17775[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) - building session factory
[2015-12-30 00:48:03,612]DEBUG 17775[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) - Statistics initialized [enabled=false]}
[2015-12-30 00:48:03,612]DEBUG 17775[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@3de930b8
[2015-12-30 00:48:03,612]DEBUG 17775[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@3de930b8
[2015-12-30 00:48:03,612]DEBUG 17775[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3de930b8
[2015-12-30 00:48:03,612]DEBUG 17775[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@11475cbd
[2015-12-30 00:48:03,613]DEBUG 17776[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@33aa03b7
[2015-12-30 00:48:03,613]DEBUG 17776[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration yes_no -> org.hibernate.type.YesNoType@4483dae0
[2015-12-30 00:48:03,613]DEBUG 17776[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@74e12425
[2015-12-30 00:48:03,613]DEBUG 17776[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@74e12425
[2015-12-30 00:48:03,613]DEBUG 17776[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@74e12425
[2015-12-30 00:48:03,613]DEBUG 17776[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration character -> org.hibernate.type.CharacterType@a3d847c
[2015-12-30 00:48:03,613]DEBUG 17776[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char -> org.hibernate.type.CharacterType@a3d847c
[2015-12-30 00:48:03,614]DEBUG 17777[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@a3d847c
[2015-12-30 00:48:03,614]DEBUG 17777[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@1d4edc4a
[2015-12-30 00:48:03,614]DEBUG 17777[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@1d4edc4a
[2015-12-30 00:48:03,614]DEBUG 17777[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1d4edc4a
[2015-12-30 00:48:03,614]DEBUG 17777[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration integer -> org.hibernate.type.IntegerType@e6dd170
[2015-12-30 00:48:03,614]DEBUG 17777[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration int -> org.hibernate.type.IntegerType@e6dd170
[2015-12-30 00:48:03,614]DEBUG 17777[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e6dd170
[2015-12-30 00:48:03,614]DEBUG 17777[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@6a739da1
[2015-12-30 00:48:03,615]DEBUG 17778[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@6a739da1
[2015-12-30 00:48:03,615]DEBUG 17778[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6a739da1
[2015-12-30 00:48:03,615]DEBUG 17778[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@47e8d427
[2015-12-30 00:48:03,615]DEBUG 17778[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@47e8d427
[2015-12-30 00:48:03,615]DEBUG 17778[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@47e8d427
[2015-12-30 00:48:03,615]DEBUG 17778[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@56d84a93
[2015-12-30 00:48:03,615]DEBUG 17778[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@56d84a93
[2015-12-30 00:48:03,616]DEBUG 17779[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@56d84a93
[2015-12-30 00:48:03,616]DEBUG 17779[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@256c4642
[2015-12-30 00:48:03,616]DEBUG 17779[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@256c4642
[2015-12-30 00:48:03,616]DEBUG 17779[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e2b0942
[2015-12-30 00:48:03,616]DEBUG 17779[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e2b0942
[2015-12-30 00:48:03,616]DEBUG 17779[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration string -> org.hibernate.type.StringType@137f0ced
[2015-12-30 00:48:03,616]DEBUG 17779[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.String -> org.hibernate.type.StringType@137f0ced
[2015-12-30 00:48:03,617]DEBUG 17780[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration url -> org.hibernate.type.UrlType@35236fb0
[2015-12-30 00:48:03,617]DEBUG 17780[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@35236fb0
[2015-12-30 00:48:03,617]DEBUG 17780[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration date -> org.hibernate.type.DateType@73ba7069
[2015-12-30 00:48:03,617]DEBUG 17780[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@73ba7069
[2015-12-30 00:48:03,617]DEBUG 17780[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration time -> org.hibernate.type.TimeType@5de5bb3c
[2015-12-30 00:48:03,617]DEBUG 17780[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5de5bb3c
[2015-12-30 00:48:03,617]DEBUG 17780[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timestamp -> org.hibernate.type.TimestampType@50193bcf
[2015-12-30 00:48:03,617]DEBUG 17780[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50193bcf
[2015-12-30 00:48:03,618]DEBUG 17781[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50193bcf
[2015-12-30 00:48:03,618]DEBUG 17781[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@723699e6
[2015-12-30 00:48:03,618]DEBUG 17781[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar -> org.hibernate.type.CalendarType@53728f89
[2015-12-30 00:48:03,618]DEBUG 17781[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@53728f89
[2015-12-30 00:48:03,620]DEBUG 17783[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@53728f89
[2015-12-30 00:48:03,620]DEBUG 17783[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7be117eb
[2015-12-30 00:48:03,620]DEBUG 17783[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration locale -> org.hibernate.type.LocaleType@22763b4
[2015-12-30 00:48:03,620]DEBUG 17783[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@22763b4
[2015-12-30 00:48:03,620]DEBUG 17783[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration currency -> org.hibernate.type.CurrencyType@2384b82e
[2015-12-30 00:48:03,620]DEBUG 17783[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2384b82e
[2015-12-30 00:48:03,621]DEBUG 17784[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4af4ba53
[2015-12-30 00:48:03,621]DEBUG 17784[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4af4ba53
[2015-12-30 00:48:03,621]DEBUG 17784[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration class -> org.hibernate.type.ClassType@7d72a6c
[2015-12-30 00:48:03,621]DEBUG 17784[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7d72a6c
[2015-12-30 00:48:03,621]DEBUG 17784[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@376ea355
[2015-12-30 00:48:03,621]DEBUG 17784[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@376ea355
[2015-12-30 00:48:03,621]DEBUG 17784[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f48007e
[2015-12-30 00:48:03,621]DEBUG 17784[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@43ab7840
[2015-12-30 00:48:03,622]DEBUG 17785[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration binary -> org.hibernate.type.BinaryType@52bd157
[2015-12-30 00:48:03,622]DEBUG 17785[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte[] -> org.hibernate.type.BinaryType@52bd157
[2015-12-30 00:48:03,622]DEBUG 17785[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [B -> org.hibernate.type.BinaryType@52bd157
[2015-12-30 00:48:03,622]DEBUG 17785[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@68cf9105
[2015-12-30 00:48:03,622]DEBUG 17785[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@68cf9105
[2015-12-30 00:48:03,622]DEBUG 17785[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@68cf9105
[2015-12-30 00:48:03,622]DEBUG 17785[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration image -> org.hibernate.type.ImageType@1c08001b
[2015-12-30 00:48:03,623]DEBUG 17786[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters -> org.hibernate.type.CharArrayType@7f5a1aca
[2015-12-30 00:48:03,623]DEBUG 17786[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char[] -> org.hibernate.type.CharArrayType@7f5a1aca
[2015-12-30 00:48:03,623]DEBUG 17786[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [C -> org.hibernate.type.CharArrayType@7f5a1aca
[2015-12-30 00:48:03,623]DEBUG 17786[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@44456946
[2015-12-30 00:48:03,623]DEBUG 17786[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@44456946
[2015-12-30 00:48:03,623]DEBUG 17786[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@44456946
[2015-12-30 00:48:03,623]DEBUG 17786[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration text -> org.hibernate.type.TextType@2a859dc9
[2015-12-30 00:48:03,624]DEBUG 17787[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@79d34ca
[2015-12-30 00:48:03,624]DEBUG 17787[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@79d34ca
[2015-12-30 00:48:03,624]DEBUG 17787[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7da1f182
[2015-12-30 00:48:03,624]DEBUG 17787[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@6c313657
[2015-12-30 00:48:03,624]DEBUG 17787[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@50881d59
[2015-12-30 00:48:03,624]DEBUG 17787[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@50881d59
[2015-12-30 00:48:03,624]DEBUG 17787[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@50aff428
[2015-12-30 00:48:03,625]DEBUG 17788[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@54a7c257
[2015-12-30 00:48:03,625]DEBUG 17788[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@60ac6214
[2015-12-30 00:48:03,625]DEBUG 17788[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration serializable -> org.hibernate.type.SerializableType@7e212ab1
[2015-12-30 00:48:03,625]DEBUG 17788[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration object -> org.hibernate.type.ObjectType@359ce161
[2015-12-30 00:48:03,625]DEBUG 17788[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@359ce161
[2015-12-30 00:48:03,625]DEBUG 17788[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@781f9364
[2015-12-30 00:48:03,625]DEBUG 17788[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@428367ab
[2015-12-30 00:48:03,626]DEBUG 17789[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@44e31542
[2015-12-30 00:48:03,626]DEBUG 17789[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ad3a52a
[2015-12-30 00:48:03,626]DEBUG 17789[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@d82ea1e
[2015-12-30 00:48:03,626]DEBUG 17789[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@78242c99
[2015-12-30 00:48:03,626]DEBUG 17789[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@33dc3f69
[2015-12-30 00:48:03,626]DEBUG 17789[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@514dcfe1
[2015-12-30 00:48:03,626]DEBUG 17789[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@417d2bf0
[2015-12-30 00:48:03,627] INFO 17790[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@7da1f182
[2015-12-30 00:48:03,627]DEBUG 17790[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) - Session factory constructed with filter configurations : {}
[2015-12-30 00:48:03,627]DEBUG 17790[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=055db, sun.boot.library.path=/usr/java/jdk1.7.0_79/jre/lib/amd64, java.vm.version=24.79-b02, hibernate.connection.username=055db, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/opt/jenkins-slv/fs/workspace/OMS, java.runtime.version=1.7.0_79-b15, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/opt/jenkins-slv/fs/workspace/OMS, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=/usr/java/jdk1.7.0_79/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/opt/jenkins-slv/fs/workspace/OMS/target/surefire/surefirebooter8804629680306269853.jar, hibernate.check_nullability=false, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/opt/jenkins-slv/fs/workspace/OMS/target/test-classes:/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes:/root/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/root/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/root/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/root/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/root/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/root/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/root/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/root/.m2/repository/junit/junit/4.7/junit-4.7.jar:/root/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/root/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/root/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/root/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/root/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/root/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/root/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/root/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/root/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/root/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/root/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/root/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/root/.m2/repository/org/postgresql/postgresql/9.4-1200-jdbc41/postgresql-9.4-1200-jdbc41.jar:/root/.m2/repository/com/github/dblock/waffle/waffle-jna/1.7/waffle-jna-1.7.jar:/root/.m2/repository/net/java/dev/jna/jna/4.1.0/jna-4.1.0.jar:/root/.m2/repository/net/java/dev/jna/jna-platform/4.1.0/jna-platform-4.1.0.jar:/root/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar:/root/.m2/repository/org/slf4j/slf4j-simple/1.7.7/slf4j-simple-1.7.7.jar:/root/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/root/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/root/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/root/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/root/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/root/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/root/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/root/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/root/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/root/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/root/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/root/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/root/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/root/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/root/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/root/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/root/.m2/repository/emma/emma/2.0.5312/emma-2.0.5312.jar:, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=2.6.32-573.12.1.el6.x86_64, user.home=/root, user.timezone=Europe/Kiev, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.7, file.encoding=UTF-8, hibernate.connection.driver_class=org.postgresql.Driver, user.name=root, java.class.path=/opt/jenkins-slv/fs/workspace/OMS/target/test-classes:/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes:/root/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/root/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/root/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/root/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/root/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/root/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/root/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/root/.m2/repository/junit/junit/4.7/junit-4.7.jar:/root/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/root/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/root/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/root/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/root/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/root/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/root/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/root/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/root/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/root/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/root/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/root/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/root/.m2/repository/org/postgresql/postgresql/9.4-1200-jdbc41/postgresql-9.4-1200-jdbc41.jar:/root/.m2/repository/com/github/dblock/waffle/waffle-jna/1.7/waffle-jna-1.7.jar:/root/.m2/repository/net/java/dev/jna/jna/4.1.0/jna-4.1.0.jar:/root/.m2/repository/net/java/dev/jna/jna-platform/4.1.0/jna-platform-4.1.0.jar:/root/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar:/root/.m2/repository/org/slf4j/slf4j-simple/1.7.7/slf4j-simple-1.7.7.jar:/root/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/root/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/root/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/root/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/root/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/root/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/root/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/root/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/root/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/root/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/root/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/root/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/root/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/root/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/root/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/root/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/root/.m2/repository/emma/emma/2.0.5312/emma-2.0.5312.jar:, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=/usr/java/jdk1.7.0_79/jre, sun.java.command=/opt/jenkins-slv/fs/workspace/OMS/target/surefire/surefirebooter8804629680306269853.jar /opt/jenkins-slv/fs/workspace/OMS/target/surefire/surefire1518745297208331085tmp /opt/jenkins-slv/fs/workspace/OMS/target/surefire/surefire_05903587996156909078tmp, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, hibernate.connection.url=jdbc:postgresql://192.168.103.164:5432/_055_DB, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.7.0_79, java.ext.dirs=/usr/java/jdk1.7.0_79/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.7.0_79/jre/lib/resources.jar:/usr/java/jdk1.7.0_79/jre/lib/rt.jar:/usr/java/jdk1.7.0_79/jre/lib/sunrsasign.jar:/usr/java/jdk1.7.0_79/jre/lib/jsse.jar:/usr/java/jdk1.7.0_79/jre/lib/jce.jar:/usr/java/jdk1.7.0_79/jre/lib/charsets.jar:/usr/java/jdk1.7.0_79/jre/lib/jfr.jar:/usr/java/jdk1.7.0_79/jre/classes, java.vendor=Oracle Corporation, localRepository=/root/.m2/repository, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create-drop, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.isalist=, dialect=org.hibernate.dialect.PostgreSQLDialect}
[2015-12-30 00:48:03,627]DEBUG 17790[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,630]DEBUG 17793[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,630]DEBUG 17793[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,630]DEBUG 17793[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,630]DEBUG 17793[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,630]DEBUG 17793[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,630]DEBUG 17793[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,631]DEBUG 17794[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,631]DEBUG 17794[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,631]DEBUG 17794[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,632]DEBUG 17795[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 00:48:03,632]DEBUG 17795[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Roles where ID =?
[2015-12-30 00:48:03,632]DEBUG 17795[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select role_.ID, role_.RoleName as RoleName20_ from Roles role_ where role_.ID=?
[2015-12-30 00:48:03,632]DEBUG 17795[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 00:48:03,632]DEBUG 17795[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Roles set RoleName=? where ID=?
[2015-12-30 00:48:03,633]DEBUG 17796[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Roles where ID=?
[2015-12-30 00:48:03,636]DEBUG 17799[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.CreditCardType
[2015-12-30 00:48:03,636]DEBUG 17799[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from CardType where ID =?
[2015-12-30 00:48:03,636]DEBUG 17799[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select creditcard_.ID, creditcard_.CardType as CardType29_, creditcard_.CardNumber as CardNumber29_, creditcard_.CardCvv2 as CardCvv4_29_, creditcard_.Expiration_Date as Expiration5_29_, creditcard_.IssueDate as IssueDate29_, creditcard_.IssueNumber as IssueNum7_29_ from CardType creditcard_ where creditcard_.ID=?
[2015-12-30 00:48:03,636]DEBUG 17799[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into CardType (CardType, CardNumber, CardCvv2, Expiration_Date, IssueDate, IssueNumber, ID) values (?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:03,637]DEBUG 17800[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update CardType set CardType=?, CardNumber=?, CardCvv2=?, Expiration_Date=?, IssueDate=?, IssueNumber=? where ID=?
[2015-12-30 00:48:03,637]DEBUG 17800[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from CardType where ID=?
[2015-12-30 00:48:03,638]DEBUG 17801[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.OrderItem
[2015-12-30 00:48:03,638]DEBUG 17801[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from OrderItems where ID =?
[2015-12-30 00:48:03,639]DEBUG 17802[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select orderitem_.ID, orderitem_.Cost as Cost28_, orderitem_.DimensionRef as Dimensio5_28_, orderitem_.ItemPrice as ItemPrice28_, orderitem_.OrderRef as OrderRef28_, orderitem_.ProductRef as ProductRef28_, orderitem_.Quantity as Quantity28_ from OrderItems orderitem_ where orderitem_.ID=?
[2015-12-30 00:48:03,639]DEBUG 17802[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:03,639]DEBUG 17802[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update OrderItems set Cost=?, DimensionRef=?, ItemPrice=?, OrderRef=?, ProductRef=?, Quantity=? where ID=?
[2015-12-30 00:48:03,639]DEBUG 17802[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from OrderItems where ID=?
[2015-12-30 00:48:03,640]DEBUG 17803[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 00:48:03,640]DEBUG 17803[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Dimensions where ID =?
[2015-12-30 00:48:03,640]DEBUG 17803[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select dimension_.ID, dimension_.DimensionName as Dimensio2_27_, dimension_.NumberOfProducts as NumberOf3_27_ from Dimensions dimension_ where dimension_.ID=?
[2015-12-30 00:48:03,640]DEBUG 17803[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Dimensions (DimensionName, NumberOfProducts, ID) values (?, ?, ?)
[2015-12-30 00:48:03,640]DEBUG 17803[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Dimensions set DimensionName=?, NumberOfProducts=? where ID=?
[2015-12-30 00:48:03,641]DEBUG 17804[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Dimensions where ID=?
[2015-12-30 00:48:03,643]DEBUG 17806[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 00:48:03,643]DEBUG 17806[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Orders where ID =?
[2015-12-30 00:48:03,643]DEBUG 17806[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select order_.ID, order_.Assigne as Assigne25_, order_.Customer as Customer25_, order_.DeliveryDate as Delivery2_25_, order_.IsGift as IsGift25_, order_.MaxDiscount as MaxDisco4_25_, order_.OrderDate as OrderDate25_, order_.OrderName as OrderName25_, order_.OrderNumber as OrderNum7_25_, order_.OrderStatusRef as OrderSt12_25_, order_.PreferableDeliveryDate as Preferab8_25_, order_.TotalPrice as TotalPrice25_ from Orders order_ where order_.ID=?
[2015-12-30 00:48:03,644]DEBUG 17807[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:03,644]DEBUG 17807[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Orders set Assigne=?, Customer=?, DeliveryDate=?, IsGift=?, MaxDiscount=?, OrderDate=?, OrderName=?, OrderNumber=?, OrderStatusRef=?, PreferableDeliveryDate=?, TotalPrice=? where ID=?
[2015-12-30 00:48:03,644]DEBUG 17807[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Orders where ID=?
[2015-12-30 00:48:03,645]DEBUG 17808[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 00:48:03,645]DEBUG 17808[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from OrderStatuses where ID =?
[2015-12-30 00:48:03,646]DEBUG 17809[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select orderstatu_.ID, orderstatu_.OrederStatusName as OrederSt2_24_ from OrderStatuses orderstatu_ where orderstatu_.ID=?
[2015-12-30 00:48:03,646]DEBUG 17809[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:03,646]DEBUG 17809[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update OrderStatuses set OrederStatusName=? where ID=?
[2015-12-30 00:48:03,646]DEBUG 17809[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from OrderStatuses where ID=?
[2015-12-30 00:48:03,647]DEBUG 17810[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 00:48:03,647]DEBUG 17810[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Regions where ID =?
[2015-12-30 00:48:03,649]DEBUG 17812[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select region_.ID, region_.RegionName as RegionName21_ from Regions region_ where region_.ID=?
[2015-12-30 00:48:03,649]DEBUG 17812[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 00:48:03,649]DEBUG 17812[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Regions set RegionName=? where ID=?
[2015-12-30 00:48:03,649]DEBUG 17812[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Regions where ID=?
[2015-12-30 00:48:03,652]DEBUG 17815[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 00:48:03,652]DEBUG 17815[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Users where ID =?
[2015-12-30 00:48:03,652]DEBUG 17815[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select user_.ID, user_.IsUserActive as IsUserAc2_23_, user_.Balance as Balance23_, user_.CustomerTypeRef as Customer9_23_, user_.Email as Email23_, user_.FirstName as FirstName23_, user_.LastName as LastName23_, user_.Login as Login23_, user_.Password as Password23_, user_.RegionRef as RegionRef23_, user_.RoleRef as RoleRef23_ from Users user_ where user_.ID=?
[2015-12-30 00:48:03,652]DEBUG 17815[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 00:48:03,652]DEBUG 17815[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Users set IsUserActive=?, Balance=?, CustomerTypeRef=?, Email=?, FirstName=?, LastName=?, Login=?, Password=?, RegionRef=?, RoleRef=? where ID=?
[2015-12-30 00:48:03,652]DEBUG 17815[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Users where ID=?
[2015-12-30 00:48:03,654]DEBUG 17817[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 00:48:03,654]DEBUG 17817[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Products where ID =?
[2015-12-30 00:48:03,654]DEBUG 17817[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select product_.ID, product_.IsProductActive as IsProduc2_26_, product_.ProductDescription as ProductD3_26_, product_.ProductName as ProductN4_26_, product_.ProductPrice as ProductP5_26_ from Products product_ where product_.ID=?
[2015-12-30 00:48:03,654]DEBUG 17817[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:03,654]DEBUG 17817[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:03,654]DEBUG 17817[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Products where ID=?
[2015-12-30 00:48:03,655]DEBUG 17818[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 00:48:03,656]DEBUG 17819[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from CustomerTypes where ID =?
[2015-12-30 00:48:03,656]DEBUG 17819[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select customerty_.ID, customerty_.Discount as Discount22_, customerty_.MaxRange as MaxRange22_, customerty_.MinRange as MinRange22_, customerty_.TypeName as TypeName22_ from CustomerTypes customerty_ where customerty_.ID=?
[2015-12-30 00:48:03,656]DEBUG 17819[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:03,656]DEBUG 17819[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update CustomerTypes set Discount=?, MaxRange=?, MinRange=?, TypeName=? where ID=?
[2015-12-30 00:48:03,656]DEBUG 17819[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from CustomerTypes where ID=?
[2015-12-30 00:48:03,656]DEBUG 17819[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [NONE]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2015-12-30 00:48:03,657]DEBUG 17820[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [READ]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2015-12-30 00:48:03,657]DEBUG 17820[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [UPGRADE]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2015-12-30 00:48:03,657]DEBUG 17820[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [UPGRADE_NOWAIT]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2015-12-30 00:48:03,657]DEBUG 17820[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [FORCE]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2015-12-30 00:48:03,657]DEBUG 17820[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_READ]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for share
[2015-12-30 00:48:03,658]DEBUG 17821[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_WRITE]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2015-12-30 00:48:03,658]DEBUG 17821[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2015-12-30 00:48:03,658]DEBUG 17821[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [OPTIMISTIC]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2015-12-30 00:48:03,658]DEBUG 17821[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2015-12-30 00:48:03,659]DEBUG 17822[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Role: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2015-12-30 00:48:03,659]DEBUG 17822[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Role: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2015-12-30 00:48:03,660]DEBUG 17823[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [NONE]: select orderitem0_.ID as ID28_9_, orderitem0_.Cost as Cost28_9_, orderitem0_.DimensionRef as Dimensio5_28_9_, orderitem0_.ItemPrice as ItemPrice28_9_, orderitem0_.OrderRef as OrderRef28_9_, orderitem0_.ProductRef as ProductRef28_9_, orderitem0_.Quantity as Quantity28_9_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, customerty4_.ID as ID22_3_, customerty4_.Discount as Discount22_3_, customerty4_.MaxRange as MaxRange22_3_, customerty4_.MinRange as MinRange22_3_, customerty4_.TypeName as TypeName22_3_, region5_.ID as ID21_4_, region5_.RegionName as RegionName21_4_, role6_.ID as ID20_5_, role6_.RoleName as RoleName20_5_, user7_.ID as ID23_6_, user7_.IsUserActive as IsUserAc2_23_6_, user7_.Balance as Balance23_6_, user7_.CustomerTypeRef as Customer9_23_6_, user7_.Email as Email23_6_, user7_.FirstName as FirstName23_6_, user7_.LastName as LastName23_6_, user7_.Login as Login23_6_, user7_.Password as Password23_6_, user7_.RegionRef as RegionRef23_6_, user7_.RoleRef as RoleRef23_6_, orderstatu8_.ID as ID24_7_, orderstatu8_.OrederStatusName as OrederSt2_24_7_, product9_.ID as ID26_8_, product9_.IsProductActive as IsProduc2_26_8_, product9_.ProductDescription as ProductD3_26_8_, product9_.ProductName as ProductN4_26_8_, product9_.ProductPrice as ProductP5_26_8_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join CustomerTypes customerty4_ on user3_.CustomerTypeRef=customerty4_.ID left outer join Regions region5_ on user3_.RegionRef=region5_.ID left outer join Roles role6_ on user3_.RoleRef=role6_.ID left outer join Users user7_ on order2_.Customer=user7_.ID left outer join OrderStatuses orderstatu8_ on order2_.OrderStatusRef=orderstatu8_.ID left outer join Products product9_ on orderitem0_.ProductRef=product9_.ID where orderitem0_.ID=?
[2015-12-30 00:48:03,661]DEBUG 17824[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [READ]: select orderitem0_.ID as ID28_9_, orderitem0_.Cost as Cost28_9_, orderitem0_.DimensionRef as Dimensio5_28_9_, orderitem0_.ItemPrice as ItemPrice28_9_, orderitem0_.OrderRef as OrderRef28_9_, orderitem0_.ProductRef as ProductRef28_9_, orderitem0_.Quantity as Quantity28_9_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, customerty4_.ID as ID22_3_, customerty4_.Discount as Discount22_3_, customerty4_.MaxRange as MaxRange22_3_, customerty4_.MinRange as MinRange22_3_, customerty4_.TypeName as TypeName22_3_, region5_.ID as ID21_4_, region5_.RegionName as RegionName21_4_, role6_.ID as ID20_5_, role6_.RoleName as RoleName20_5_, user7_.ID as ID23_6_, user7_.IsUserActive as IsUserAc2_23_6_, user7_.Balance as Balance23_6_, user7_.CustomerTypeRef as Customer9_23_6_, user7_.Email as Email23_6_, user7_.FirstName as FirstName23_6_, user7_.LastName as LastName23_6_, user7_.Login as Login23_6_, user7_.Password as Password23_6_, user7_.RegionRef as RegionRef23_6_, user7_.RoleRef as RoleRef23_6_, orderstatu8_.ID as ID24_7_, orderstatu8_.OrederStatusName as OrederSt2_24_7_, product9_.ID as ID26_8_, product9_.IsProductActive as IsProduc2_26_8_, product9_.ProductDescription as ProductD3_26_8_, product9_.ProductName as ProductN4_26_8_, product9_.ProductPrice as ProductP5_26_8_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join CustomerTypes customerty4_ on user3_.CustomerTypeRef=customerty4_.ID left outer join Regions region5_ on user3_.RegionRef=region5_.ID left outer join Roles role6_ on user3_.RoleRef=role6_.ID left outer join Users user7_ on order2_.Customer=user7_.ID left outer join OrderStatuses orderstatu8_ on order2_.OrderStatusRef=orderstatu8_.ID left outer join Products product9_ on orderitem0_.ProductRef=product9_.ID where orderitem0_.ID=?
[2015-12-30 00:48:03,661]DEBUG 17824[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [UPGRADE]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2015-12-30 00:48:03,661]DEBUG 17824[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [UPGRADE_NOWAIT]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2015-12-30 00:48:03,661]DEBUG 17824[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [FORCE]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2015-12-30 00:48:03,662]DEBUG 17825[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_READ]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for share
[2015-12-30 00:48:03,662]DEBUG 17825[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_WRITE]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2015-12-30 00:48:03,662]DEBUG 17825[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_FORCE_INCREMENT]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2015-12-30 00:48:03,666]DEBUG 17829[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [OPTIMISTIC]: select orderitem0_.ID as ID28_9_, orderitem0_.Cost as Cost28_9_, orderitem0_.DimensionRef as Dimensio5_28_9_, orderitem0_.ItemPrice as ItemPrice28_9_, orderitem0_.OrderRef as OrderRef28_9_, orderitem0_.ProductRef as ProductRef28_9_, orderitem0_.Quantity as Quantity28_9_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, customerty4_.ID as ID22_3_, customerty4_.Discount as Discount22_3_, customerty4_.MaxRange as MaxRange22_3_, customerty4_.MinRange as MinRange22_3_, customerty4_.TypeName as TypeName22_3_, region5_.ID as ID21_4_, region5_.RegionName as RegionName21_4_, role6_.ID as ID20_5_, role6_.RoleName as RoleName20_5_, user7_.ID as ID23_6_, user7_.IsUserActive as IsUserAc2_23_6_, user7_.Balance as Balance23_6_, user7_.CustomerTypeRef as Customer9_23_6_, user7_.Email as Email23_6_, user7_.FirstName as FirstName23_6_, user7_.LastName as LastName23_6_, user7_.Login as Login23_6_, user7_.Password as Password23_6_, user7_.RegionRef as RegionRef23_6_, user7_.RoleRef as RoleRef23_6_, orderstatu8_.ID as ID24_7_, orderstatu8_.OrederStatusName as OrederSt2_24_7_, product9_.ID as ID26_8_, product9_.IsProductActive as IsProduc2_26_8_, product9_.ProductDescription as ProductD3_26_8_, product9_.ProductName as ProductN4_26_8_, product9_.ProductPrice as ProductP5_26_8_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join CustomerTypes customerty4_ on user3_.CustomerTypeRef=customerty4_.ID left outer join Regions region5_ on user3_.RegionRef=region5_.ID left outer join Roles role6_ on user3_.RoleRef=role6_.ID left outer join Users user7_ on order2_.Customer=user7_.ID left outer join OrderStatuses orderstatu8_ on order2_.OrderStatusRef=orderstatu8_.ID left outer join Products product9_ on orderitem0_.ProductRef=product9_.ID where orderitem0_.ID=?
[2015-12-30 00:48:03,668]DEBUG 17831[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [OPTIMISTIC_FORCE_INCREMENT]: select orderitem0_.ID as ID28_9_, orderitem0_.Cost as Cost28_9_, orderitem0_.DimensionRef as Dimensio5_28_9_, orderitem0_.ItemPrice as ItemPrice28_9_, orderitem0_.OrderRef as OrderRef28_9_, orderitem0_.ProductRef as ProductRef28_9_, orderitem0_.Quantity as Quantity28_9_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, customerty4_.ID as ID22_3_, customerty4_.Discount as Discount22_3_, customerty4_.MaxRange as MaxRange22_3_, customerty4_.MinRange as MinRange22_3_, customerty4_.TypeName as TypeName22_3_, region5_.ID as ID21_4_, region5_.RegionName as RegionName21_4_, role6_.ID as ID20_5_, role6_.RoleName as RoleName20_5_, user7_.ID as ID23_6_, user7_.IsUserActive as IsUserAc2_23_6_, user7_.Balance as Balance23_6_, user7_.CustomerTypeRef as Customer9_23_6_, user7_.Email as Email23_6_, user7_.FirstName as FirstName23_6_, user7_.LastName as LastName23_6_, user7_.Login as Login23_6_, user7_.Password as Password23_6_, user7_.RegionRef as RegionRef23_6_, user7_.RoleRef as RoleRef23_6_, orderstatu8_.ID as ID24_7_, orderstatu8_.OrederStatusName as OrederSt2_24_7_, product9_.ID as ID26_8_, product9_.IsProductActive as IsProduc2_26_8_, product9_.ProductDescription as ProductD3_26_8_, product9_.ProductName as ProductN4_26_8_, product9_.ProductPrice as ProductP5_26_8_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join CustomerTypes customerty4_ on user3_.CustomerTypeRef=customerty4_.ID left outer join Regions region5_ on user3_.RegionRef=region5_.ID left outer join Roles role6_ on user3_.RoleRef=role6_.ID left outer join Users user7_ on order2_.Customer=user7_.ID left outer join OrderStatuses orderstatu8_ on order2_.OrderStatusRef=orderstatu8_.ID left outer join Products product9_ on orderitem0_.ProductRef=product9_.ID where orderitem0_.ID=?
[2015-12-30 00:48:03,669]DEBUG 17832[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.OrderItem: select orderitem0_.ID as ID28_9_, orderitem0_.Cost as Cost28_9_, orderitem0_.DimensionRef as Dimensio5_28_9_, orderitem0_.ItemPrice as ItemPrice28_9_, orderitem0_.OrderRef as OrderRef28_9_, orderitem0_.ProductRef as ProductRef28_9_, orderitem0_.Quantity as Quantity28_9_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, customerty4_.ID as ID22_3_, customerty4_.Discount as Discount22_3_, customerty4_.MaxRange as MaxRange22_3_, customerty4_.MinRange as MinRange22_3_, customerty4_.TypeName as TypeName22_3_, region5_.ID as ID21_4_, region5_.RegionName as RegionName21_4_, role6_.ID as ID20_5_, role6_.RoleName as RoleName20_5_, user7_.ID as ID23_6_, user7_.IsUserActive as IsUserAc2_23_6_, user7_.Balance as Balance23_6_, user7_.CustomerTypeRef as Customer9_23_6_, user7_.Email as Email23_6_, user7_.FirstName as FirstName23_6_, user7_.LastName as LastName23_6_, user7_.Login as Login23_6_, user7_.Password as Password23_6_, user7_.RegionRef as RegionRef23_6_, user7_.RoleRef as RoleRef23_6_, orderstatu8_.ID as ID24_7_, orderstatu8_.OrederStatusName as OrederSt2_24_7_, product9_.ID as ID26_8_, product9_.IsProductActive as IsProduc2_26_8_, product9_.ProductDescription as ProductD3_26_8_, product9_.ProductName as ProductN4_26_8_, product9_.ProductPrice as ProductP5_26_8_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join CustomerTypes customerty4_ on user3_.CustomerTypeRef=customerty4_.ID left outer join Regions region5_ on user3_.RegionRef=region5_.ID left outer join Roles role6_ on user3_.RoleRef=role6_.ID left outer join Users user7_ on order2_.Customer=user7_.ID left outer join OrderStatuses orderstatu8_ on order2_.OrderStatusRef=orderstatu8_.ID left outer join Products product9_ on orderitem0_.ProductRef=product9_.ID where orderitem0_.ID=?
[2015-12-30 00:48:03,670]DEBUG 17833[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.OrderItem: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=?
[2015-12-30 00:48:03,670]DEBUG 17833[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [NONE]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2015-12-30 00:48:03,670]DEBUG 17833[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [READ]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2015-12-30 00:48:03,671]DEBUG 17834[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [UPGRADE]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2015-12-30 00:48:03,671]DEBUG 17834[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [UPGRADE_NOWAIT]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2015-12-30 00:48:03,671]DEBUG 17834[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [FORCE]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2015-12-30 00:48:03,672]DEBUG 17835[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_READ]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for share
[2015-12-30 00:48:03,673]DEBUG 17836[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_WRITE]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2015-12-30 00:48:03,673]DEBUG 17836[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_FORCE_INCREMENT]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2015-12-30 00:48:03,673]DEBUG 17836[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [OPTIMISTIC]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2015-12-30 00:48:03,674]DEBUG 17837[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [OPTIMISTIC_FORCE_INCREMENT]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2015-12-30 00:48:03,674]DEBUG 17837[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.CreditCardType: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2015-12-30 00:48:03,674]DEBUG 17837[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.CreditCardType: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2015-12-30 00:48:03,676]DEBUG 17839[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [NONE]: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2015-12-30 00:48:03,677]DEBUG 17840[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [READ]: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2015-12-30 00:48:03,677]DEBUG 17840[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [UPGRADE]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2015-12-30 00:48:03,677]DEBUG 17840[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [UPGRADE_NOWAIT]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2015-12-30 00:48:03,678]DEBUG 17841[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [FORCE]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2015-12-30 00:48:03,678]DEBUG 17841[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_READ]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for share
[2015-12-30 00:48:03,678]DEBUG 17841[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_WRITE]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2015-12-30 00:48:03,679]DEBUG 17842[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2015-12-30 00:48:03,679]DEBUG 17842[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [OPTIMISTIC]: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2015-12-30 00:48:03,680]DEBUG 17843[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2015-12-30 00:48:03,681]DEBUG 17844[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Order: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2015-12-30 00:48:03,681]DEBUG 17844[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Order: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=?
[2015-12-30 00:48:03,681]DEBUG 17844[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [NONE]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2015-12-30 00:48:03,682]DEBUG 17845[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [READ]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2015-12-30 00:48:03,682]DEBUG 17845[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [UPGRADE]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2015-12-30 00:48:03,682]DEBUG 17845[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [UPGRADE_NOWAIT]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2015-12-30 00:48:03,682]DEBUG 17845[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [FORCE]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2015-12-30 00:48:03,682]DEBUG 17845[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_READ]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for share
[2015-12-30 00:48:03,683]DEBUG 17846[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_WRITE]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2015-12-30 00:48:03,683]DEBUG 17846[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_FORCE_INCREMENT]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2015-12-30 00:48:03,683]DEBUG 17846[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [OPTIMISTIC]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2015-12-30 00:48:03,683]DEBUG 17846[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [OPTIMISTIC_FORCE_INCREMENT]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2015-12-30 00:48:03,685]DEBUG 17848[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Dimension: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2015-12-30 00:48:03,686]DEBUG 17849[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Dimension: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2015-12-30 00:48:03,686]DEBUG 17849[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [NONE]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2015-12-30 00:48:03,686]DEBUG 17849[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [READ]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2015-12-30 00:48:03,686]DEBUG 17849[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [UPGRADE]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2015-12-30 00:48:03,687]DEBUG 17850[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [UPGRADE_NOWAIT]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2015-12-30 00:48:03,687]DEBUG 17850[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [FORCE]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2015-12-30 00:48:03,687]DEBUG 17850[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_READ]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for share
[2015-12-30 00:48:03,687]DEBUG 17850[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_WRITE]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2015-12-30 00:48:03,687]DEBUG 17850[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_FORCE_INCREMENT]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2015-12-30 00:48:03,688]DEBUG 17851[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [OPTIMISTIC]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2015-12-30 00:48:03,688]DEBUG 17851[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [OPTIMISTIC_FORCE_INCREMENT]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2015-12-30 00:48:03,688]DEBUG 17851[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.OrderStatus: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2015-12-30 00:48:03,688]DEBUG 17851[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.OrderStatus: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2015-12-30 00:48:03,689]DEBUG 17852[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [NONE]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2015-12-30 00:48:03,689]DEBUG 17852[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [READ]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2015-12-30 00:48:03,689]DEBUG 17852[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [UPGRADE]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2015-12-30 00:48:03,689]DEBUG 17852[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [UPGRADE_NOWAIT]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2015-12-30 00:48:03,689]DEBUG 17852[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [FORCE]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2015-12-30 00:48:03,690]DEBUG 17853[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_READ]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for share
[2015-12-30 00:48:03,690]DEBUG 17853[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_WRITE]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2015-12-30 00:48:03,690]DEBUG 17853[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_FORCE_INCREMENT]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2015-12-30 00:48:03,690]DEBUG 17853[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [OPTIMISTIC]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2015-12-30 00:48:03,691]DEBUG 17854[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [OPTIMISTIC_FORCE_INCREMENT]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2015-12-30 00:48:03,691]DEBUG 17854[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Region: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2015-12-30 00:48:03,691]DEBUG 17854[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Region: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2015-12-30 00:48:03,691]DEBUG 17854[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [NONE]: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2015-12-30 00:48:03,692]DEBUG 17855[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [READ]: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2015-12-30 00:48:03,692]DEBUG 17855[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [UPGRADE]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2015-12-30 00:48:03,692]DEBUG 17855[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [UPGRADE_NOWAIT]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2015-12-30 00:48:03,693]DEBUG 17856[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [FORCE]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2015-12-30 00:48:03,693]DEBUG 17856[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_READ]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for share
[2015-12-30 00:48:03,693]DEBUG 17856[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_WRITE]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2015-12-30 00:48:03,694]DEBUG 17857[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2015-12-30 00:48:03,694]DEBUG 17857[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [OPTIMISTIC]: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2015-12-30 00:48:03,695]DEBUG 17858[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2015-12-30 00:48:03,695]DEBUG 17858[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.User: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2015-12-30 00:48:03,695]DEBUG 17858[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.User: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=?
[2015-12-30 00:48:03,696]DEBUG 17859[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [NONE]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2015-12-30 00:48:03,696]DEBUG 17859[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [READ]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2015-12-30 00:48:03,696]DEBUG 17859[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [UPGRADE]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2015-12-30 00:48:03,696]DEBUG 17859[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [UPGRADE_NOWAIT]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2015-12-30 00:48:03,697]DEBUG 17860[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [FORCE]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2015-12-30 00:48:03,697]DEBUG 17860[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_READ]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for share
[2015-12-30 00:48:03,697]DEBUG 17860[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_WRITE]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2015-12-30 00:48:03,699]DEBUG 17862[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_FORCE_INCREMENT]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2015-12-30 00:48:03,699]DEBUG 17862[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [OPTIMISTIC]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2015-12-30 00:48:03,699]DEBUG 17862[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [OPTIMISTIC_FORCE_INCREMENT]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2015-12-30 00:48:03,700]DEBUG 17863[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.CustomerType: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2015-12-30 00:48:03,700]DEBUG 17863[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.CustomerType: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2015-12-30 00:48:03,700]DEBUG 17863[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [NONE]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2015-12-30 00:48:03,700]DEBUG 17863[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [READ]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2015-12-30 00:48:03,701]DEBUG 17864[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [UPGRADE]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2015-12-30 00:48:03,701]DEBUG 17864[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [UPGRADE_NOWAIT]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2015-12-30 00:48:03,701]DEBUG 17864[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [FORCE]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2015-12-30 00:48:03,701]DEBUG 17864[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_READ]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for share
[2015-12-30 00:48:03,701]DEBUG 17864[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_WRITE]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2015-12-30 00:48:03,702]DEBUG 17865[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2015-12-30 00:48:03,702]DEBUG 17865[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [OPTIMISTIC]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2015-12-30 00:48:03,702]DEBUG 17865[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2015-12-30 00:48:03,702]DEBUG 17865[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Product: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2015-12-30 00:48:03,703]DEBUG 17866[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Product: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2015-12-30 00:48:03,703]DEBUG 17866[main] - org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) - registered: 92ede50c-4a7b-4351-ae76-86f683100a34 (unnamed)
[2015-12-30 00:48:03,703] INFO 17866[main] - org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) - Not binding factory to JNDI, no JNDI name configured
[2015-12-30 00:48:03,703]DEBUG 17866[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) - instantiated session factory
[2015-12-30 00:48:03,703]DEBUG 17866[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2015-12-30 00:48:03,704]DEBUG 17867[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2015-12-30 00:48:03,704]DEBUG 17867[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2015-12-30 00:48:03,704]DEBUG 17867[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2015-12-30 00:48:03,704]DEBUG 17867[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2015-12-30 00:48:03,704]DEBUG 17867[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2015-12-30 00:48:03,704]DEBUG 17867[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2015-12-30 00:48:03,704]DEBUG 17867[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2015-12-30 00:48:03,704]DEBUG 17867[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2015-12-30 00:48:03,705]DEBUG 17868[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 00:48:03,705]DEBUG 17868[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 00:48:03,705]DEBUG 17868[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 00:48:03,705]DEBUG 17868[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 00:48:03,705]DEBUG 17868[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 00:48:03,705]DEBUG 17868[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 00:48:03,705]DEBUG 17868[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 00:48:03,706]DEBUG 17869[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 00:48:03,706]DEBUG 17869[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 00:48:03,706]DEBUG 17869[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2015-12-30 00:48:03,706]DEBUG 17869[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2015-12-30 00:48:03,707]DEBUG 17870[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2015-12-30 00:48:03,707]DEBUG 17870[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2015-12-30 00:48:03,717]DEBUG 17880[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,717]DEBUG 17880[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,719]DEBUG 17882[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,719]DEBUG 17882[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,719]DEBUG 17882[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,719]DEBUG 17882[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,720]DEBUG 17883[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,720]DEBUG 17883[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,720]DEBUG 17883[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,720]DEBUG 17883[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,720]DEBUG 17883[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2015-12-30 00:48:03,720]DEBUG 17883[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2015-12-30 00:48:03,721]DEBUG 17884[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2015-12-30 00:48:03,721]DEBUG 17884[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2015-12-30 00:48:03,721]DEBUG 17884[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2015-12-30 00:48:03,721]DEBUG 17884[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2015-12-30 00:48:03,721]DEBUG 17884[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2015-12-30 00:48:03,721]DEBUG 17884[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2015-12-30 00:48:03,721]DEBUG 17884[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2015-12-30 00:48:03,721]DEBUG 17884[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 00:48:03,722]DEBUG 17885[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 00:48:03,722]DEBUG 17885[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 00:48:03,722]DEBUG 17885[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 00:48:03,722]DEBUG 17885[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 00:48:03,722]DEBUG 17885[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 00:48:03,722]DEBUG 17885[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 00:48:03,722]DEBUG 17885[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 00:48:03,723]DEBUG 17886[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 00:48:03,723]DEBUG 17886[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2015-12-30 00:48:03,723]DEBUG 17886[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2015-12-30 00:48:03,724]DEBUG 17887[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2015-12-30 00:48:03,724]DEBUG 17887[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2015-12-30 00:48:03,734]DEBUG 17897[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,734]DEBUG 17897[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,734]DEBUG 17897[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,734]DEBUG 17897[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,735]DEBUG 17898[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,735]DEBUG 17898[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,735]DEBUG 17898[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,735]DEBUG 17898[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,735]DEBUG 17898[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,736]DEBUG 17899[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,736]DEBUG 17899[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,736]DEBUG 17899[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,736]DEBUG 17899[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,736]DEBUG 17899[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,737]DEBUG 17900[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,737]DEBUG 17900[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,738]DEBUG 17901[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,738]DEBUG 17901[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,739]DEBUG 17902[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,739]DEBUG 17902[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:03,739] INFO 17902[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2015-12-30 00:48:03,739]DEBUG 17902[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2015-12-30 00:48:03,739] INFO 17902[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2015-12-30 00:48:03,740]DEBUG 17903[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD3262E1ABF7
[2015-12-30 00:48:03,975]DEBUG 18138[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32A6376397
[2015-12-30 00:48:04,043]DEBUG 18206[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32BCDB3C97
[2015-12-30 00:48:04,108]DEBUG 18271[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05990DB877
[2015-12-30 00:48:04,172]DEBUG 18335[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05C0F431DD
[2015-12-30 00:48:04,250]DEBUG 18413[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05F161465
[2015-12-30 00:48:04,322]DEBUG 18485[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE83D05058F
[2015-12-30 00:48:04,394]DEBUG 18557[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE89AEF426F
[2015-12-30 00:48:04,478]DEBUG 18641[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE8FEAD4DCF
[2015-12-30 00:48:04,537]DEBUG 18700[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CardType cascade
[2015-12-30 00:48:04,598]DEBUG 18761[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CustomerTypes cascade
[2015-12-30 00:48:04,671]DEBUG 18834[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Dimensions cascade
[2015-12-30 00:48:04,739]DEBUG 18902[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderItems cascade
[2015-12-30 00:48:04,771]DEBUG 18934[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderStatuses cascade
[2015-12-30 00:48:04,805]DEBUG 18968[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Orders cascade
[2015-12-30 00:48:04,838]DEBUG 19001[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Products cascade
[2015-12-30 00:48:04,872]DEBUG 19035[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Regions cascade
[2015-12-30 00:48:04,905]DEBUG 19068[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Roles cascade
[2015-12-30 00:48:04,939]DEBUG 19102[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Users cascade
[2015-12-30 00:48:04,972]DEBUG 19135[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop sequence hibernate_sequence
[2015-12-30 00:48:05,005]DEBUG 19168[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table CardType (ID int4 not null, CardType varchar(255), CardNumber varchar(255), CardCvv2 int4, Expiration_Date varchar(255), IssueDate varchar(255), IssueNumber varchar(255), primary key (ID))
[2015-12-30 00:48:05,181]DEBUG 19344[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table CustomerTypes (ID int4 not null, Discount float8, MaxRange float8, MinRange float8, TypeName varchar(255), primary key (ID))
[2015-12-30 00:48:05,348]DEBUG 19511[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Dimensions (ID int4 not null, DimensionName varchar(255), NumberOfProducts int4, primary key (ID))
[2015-12-30 00:48:05,566]DEBUG 19729[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table OrderItems (ID int4 not null, Cost float8, ItemPrice float8, Quantity int4, DimensionRef int4, OrderRef int4, ProductRef int4, primary key (ID))
[2015-12-30 00:48:05,926]DEBUG 20089[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table OrderStatuses (ID int4 not null, OrederStatusName varchar(255), primary key (ID))
[2015-12-30 00:48:06,234]DEBUG 20397[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Orders (ID int4 not null, DeliveryDate timestamp, IsGift bool, MaxDiscount int4, OrderDate timestamp, OrderName varchar(100), OrderNumber int4 unique, PreferableDeliveryDate timestamp, TotalPrice float8, Assigne int4, Customer int4, OrderStatusRef int4, primary key (ID))
[2015-12-30 00:48:06,715]DEBUG 20878[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Products (ID int4 not null, IsProductActive bool, ProductDescription varchar(255), ProductName varchar(255), ProductPrice float8, primary key (ID))
[2015-12-30 00:48:07,082]DEBUG 21245[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Regions (ID int4 not null, RegionName varchar(255), primary key (ID))
[2015-12-30 00:48:07,574]DEBUG 21737[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Roles (ID int4 not null, RoleName varchar(255), primary key (ID))
[2015-12-30 00:48:07,760]DEBUG 21923[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Users (ID int4 not null, IsUserActive bool, Balance float8, Email varchar(255) not null, FirstName varchar(255) not null, LastName varchar(255) not null, Login varchar(255) not null, Password varchar(255) not null, CustomerTypeRef int4, RegionRef int4, RoleRef int4 not null, primary key (ID))
[2015-12-30 00:48:08,113]DEBUG 22276[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add constraint FKA2B1AD3262E1ABF7 foreign key (ProductRef) references Products
[2015-12-30 00:48:08,196]DEBUG 22359[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add constraint FKA2B1AD32A6376397 foreign key (DimensionRef) references Dimensions
[2015-12-30 00:48:08,247]DEBUG 22410[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add constraint FKA2B1AD32BCDB3C97 foreign key (OrderRef) references Orders
[2015-12-30 00:48:08,323]DEBUG 22486[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add constraint FK8D444F05990DB877 foreign key (OrderStatusRef) references OrderStatuses
[2015-12-30 00:48:08,397]DEBUG 22560[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add constraint FK8D444F05C0F431DD foreign key (Assigne) references Users
[2015-12-30 00:48:08,485]DEBUG 22648[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add constraint FK8D444F05F161465 foreign key (Customer) references Users
[2015-12-30 00:48:08,567]DEBUG 22730[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add constraint FK4E39DE83D05058F foreign key (RoleRef) references Roles
[2015-12-30 00:48:08,640]DEBUG 22803[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add constraint FK4E39DE89AEF426F foreign key (CustomerTypeRef) references CustomerTypes
[2015-12-30 00:48:08,718]DEBUG 22881[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add constraint FK4E39DE8FEAD4DCF foreign key (RegionRef) references Regions
[2015-12-30 00:48:08,791]DEBUG 22954[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create sequence hibernate_sequence
[2015-12-30 00:48:08,868] INFO 23031[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2015-12-30 00:48:08,869]DEBUG 23032[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2015-12-30 00:48:08,869]DEBUG 23032[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2015-12-30 00:48:08,869]DEBUG 23032[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2015-12-30 00:48:08,870]DEBUG 23033[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2015-12-30 00:48:08,870]DEBUG 23033[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2015-12-30 00:48:08,870]DEBUG 23033[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2015-12-30 00:48:08,870]DEBUG 23033[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2015-12-30 00:48:08,871]DEBUG 23034[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2015-12-30 00:48:08,871]DEBUG 23034[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2015-12-30 00:48:08,874]DEBUG 23037[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 00:48:08,874]DEBUG 23037[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 00:48:08,874]DEBUG 23037[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 00:48:08,875]DEBUG 23038[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 00:48:08,875]DEBUG 23038[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 00:48:08,875]DEBUG 23038[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 00:48:08,875]DEBUG 23038[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 00:48:08,876]DEBUG 23039[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 00:48:08,876]DEBUG 23039[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 00:48:08,877]DEBUG 23040[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2015-12-30 00:48:08,878]DEBUG 23041[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2015-12-30 00:48:08,878]DEBUG 23041[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2015-12-30 00:48:08,879]DEBUG 23042[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2015-12-30 00:48:08,900]DEBUG 23063[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,900]DEBUG 23063[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,900]DEBUG 23063[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,900]DEBUG 23063[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,901]DEBUG 23064[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,901]DEBUG 23064[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,901]DEBUG 23064[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,901]DEBUG 23064[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,901]DEBUG 23064[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,901]DEBUG 23064[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,902]DEBUG 23065[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2015-12-30 00:48:08,902]DEBUG 23065[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2015-12-30 00:48:08,902]DEBUG 23065[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2015-12-30 00:48:08,902]DEBUG 23065[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2015-12-30 00:48:08,902]DEBUG 23065[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2015-12-30 00:48:08,902]DEBUG 23065[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2015-12-30 00:48:08,902]DEBUG 23065[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2015-12-30 00:48:08,903]DEBUG 23066[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2015-12-30 00:48:08,903]DEBUG 23066[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2015-12-30 00:48:08,903]DEBUG 23066[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 00:48:08,903]DEBUG 23066[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 00:48:08,903]DEBUG 23066[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 00:48:08,903]DEBUG 23066[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 00:48:08,903]DEBUG 23066[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 00:48:08,904]DEBUG 23067[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 00:48:08,904]DEBUG 23067[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 00:48:08,904]DEBUG 23067[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 00:48:08,904]DEBUG 23067[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 00:48:08,905]DEBUG 23068[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2015-12-30 00:48:08,905]DEBUG 23068[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2015-12-30 00:48:08,905]DEBUG 23068[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2015-12-30 00:48:08,905]DEBUG 23068[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2015-12-30 00:48:08,923]DEBUG 23086[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,923]DEBUG 23086[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,923]DEBUG 23086[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,924]DEBUG 23087[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,924]DEBUG 23087[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,924]DEBUG 23087[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,924]DEBUG 23087[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,924]DEBUG 23087[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,925]DEBUG 23088[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,925]DEBUG 23088[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,925]DEBUG 23088[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,925]DEBUG 23088[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,925]DEBUG 23088[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,926]DEBUG 23089[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,926]DEBUG 23089[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,926]DEBUG 23089[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,926]DEBUG 23089[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,926]DEBUG 23089[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,926]DEBUG 23089[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,927]DEBUG 23090[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 00:48:08,927]DEBUG 23090[main] - org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) - Checking 0 named HQL queries
[2015-12-30 00:48:08,927]DEBUG 23090[main] - org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) - Checking 0 named SQL queries
[2015-12-30 00:48:08,928]DEBUG 23091[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:08,928]DEBUG 23091[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:08,928]DEBUG 23091[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
[2015-12-30 00:48:08,929]DEBUG 23092[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-12-30 00:48:08,929]DEBUG 23092[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-12-30 00:48:08,929]DEBUG 23092[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
[2015-12-30 00:48:08,929]DEBUG 23092[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-12-30 00:48:08,930]DEBUG 23093[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:08,931]DEBUG 23094[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'sessionFactory'
[2015-12-30 00:48:08,931]DEBUG 23094[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:08,939]DEBUG 23102[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'transactionManager'
[2015-12-30 00:48:08,939]DEBUG 23102[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:08,940]DEBUG 23103[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'transactionManager'
[2015-12-30 00:48:08,940]DEBUG 23103[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2015-12-30 00:48:08,940]DEBUG 23103[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-12-30 00:48:08,940]DEBUG 23103[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-12-30 00:48:08,940]DEBUG 23103[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-12-30 00:48:08,950]DEBUG 23113[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
[2015-12-30 00:48:08,950]DEBUG 23113[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-12-30 00:48:08,950]DEBUG 23113[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-12-30 00:48:08,950]DEBUG 23113[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-12-30 00:48:08,950]DEBUG 23113[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:08,951]DEBUG 23114[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2015-12-30 00:48:08,951]DEBUG 23114[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2015-12-30 00:48:08,951]DEBUG 23114[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2015-12-30 00:48:08,951]DEBUG 23114[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2015-12-30 00:48:08,951]DEBUG 23114[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2015-12-30 00:48:08,951]DEBUG 23114[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderDao'
[2015-12-30 00:48:08,951]DEBUG 23114[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderDao'
[2015-12-30 00:48:08,956]DEBUG 23119[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:08,956]DEBUG 23119[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.orderStatusDao
[2015-12-30 00:48:08,956]DEBUG 23119[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.roleDao
[2015-12-30 00:48:08,956]DEBUG 23119[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderDao' to allow for resolving potential circular references
[2015-12-30 00:48:08,957]DEBUG 23120[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:08,957]DEBUG 23120[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:08,957]DEBUG 23120[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'sessionFactory'
[2015-12-30 00:48:08,957]DEBUG 23120[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.orderStatusDao
[2015-12-30 00:48:08,958]DEBUG 23121[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:08,958]DEBUG 23121[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderStatusDao'
[2015-12-30 00:48:08,958]DEBUG 23121[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:08,958]DEBUG 23121[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderStatusDao' to allow for resolving potential circular references
[2015-12-30 00:48:08,961]DEBUG 23124[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderStatusDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:08,961]DEBUG 23124[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:08,961]DEBUG 23124[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderStatusDao' to bean named 'sessionFactory'
[2015-12-30 00:48:08,962]DEBUG 23125[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:08,962]DEBUG 23125[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderStatusDao'
[2015-12-30 00:48:08,963]DEBUG 23126[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'orderStatusDao'
[2015-12-30 00:48:08,963]DEBUG 23126[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.roleDao
[2015-12-30 00:48:08,963]DEBUG 23126[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'roleDao'
[2015-12-30 00:48:08,963]DEBUG 23126[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'roleDao'
[2015-12-30 00:48:08,964]DEBUG 23127[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:08,964]DEBUG 23127[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'roleDao' to allow for resolving potential circular references
[2015-12-30 00:48:08,964]DEBUG 23127[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'roleDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:08,964]DEBUG 23127[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:08,964]DEBUG 23127[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'roleDao' to bean named 'sessionFactory'
[2015-12-30 00:48:08,965]DEBUG 23128[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:08,965]DEBUG 23128[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'roleDao'
[2015-12-30 00:48:08,966]DEBUG 23129[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'roleDao'
[2015-12-30 00:48:08,966]DEBUG 23129[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:08,968]DEBUG 23131[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderDao'
[2015-12-30 00:48:08,968]DEBUG 23131[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:08,968]DEBUG 23131[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'userDao'
[2015-12-30 00:48:08,969]DEBUG 23132[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'userDao'
[2015-12-30 00:48:08,969]DEBUG 23132[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.UserDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:08,969]DEBUG 23132[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'userDao' to allow for resolving potential circular references
[2015-12-30 00:48:08,969]DEBUG 23132[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'userDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:08,970]DEBUG 23133[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:08,970]DEBUG 23133[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'userDao' to bean named 'sessionFactory'
[2015-12-30 00:48:08,970]DEBUG 23133[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:08,971]DEBUG 23134[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'userDao'
[2015-12-30 00:48:08,971]DEBUG 23134[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'regionDao'
[2015-12-30 00:48:08,971]DEBUG 23134[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'regionDao'
[2015-12-30 00:48:08,972]DEBUG 23135[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:08,972]DEBUG 23135[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'regionDao' to allow for resolving potential circular references
[2015-12-30 00:48:08,972]DEBUG 23135[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'regionDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:08,972]DEBUG 23135[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:08,974]DEBUG 23137[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'regionDao' to bean named 'sessionFactory'
[2015-12-30 00:48:08,974]DEBUG 23137[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:08,975]DEBUG 23138[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'regionDao'
[2015-12-30 00:48:08,975]DEBUG 23138[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:08,975]DEBUG 23138[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'productDao'
[2015-12-30 00:48:08,975]DEBUG 23138[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'productDao'
[2015-12-30 00:48:08,977]DEBUG 23140[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:08,977]DEBUG 23140[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'productDao' to allow for resolving potential circular references
[2015-12-30 00:48:08,978]DEBUG 23141[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'productDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:08,978]DEBUG 23141[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:08,978]DEBUG 23141[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'productDao' to bean named 'sessionFactory'
[2015-12-30 00:48:08,978]DEBUG 23141[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:08,980]DEBUG 23143[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'productDao'
[2015-12-30 00:48:08,980]DEBUG 23143[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:08,980]DEBUG 23143[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'dimensionDao'
[2015-12-30 00:48:08,980]DEBUG 23143[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:08,980]DEBUG 23143[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'dimensionDao' to allow for resolving potential circular references
[2015-12-30 00:48:08,981]DEBUG 23144[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'dimensionDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:08,981]DEBUG 23144[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:08,981]DEBUG 23144[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'dimensionDao' to bean named 'sessionFactory'
[2015-12-30 00:48:08,981]DEBUG 23144[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:08,982]DEBUG 23145[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'dimensionDao'
[2015-12-30 00:48:08,982]DEBUG 23145[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:08,982]DEBUG 23145[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'customerTypeDao'
[2015-12-30 00:48:08,983]DEBUG 23146[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:08,983]DEBUG 23146[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'customerTypeDao' to allow for resolving potential circular references
[2015-12-30 00:48:08,983]DEBUG 23146[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'customerTypeDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:08,983]DEBUG 23146[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:08,983]DEBUG 23146[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'customerTypeDao' to bean named 'sessionFactory'
[2015-12-30 00:48:08,984]DEBUG 23147[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:08,992]DEBUG 23155[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'customerTypeDao'
[2015-12-30 00:48:08,992]DEBUG 23155[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:08,992]DEBUG 23155[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderItemDao'
[2015-12-30 00:48:08,993]DEBUG 23156[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:08,993]DEBUG 23156[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderItemDao' to allow for resolving potential circular references
[2015-12-30 00:48:08,993]DEBUG 23156[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderItemDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:08,993]DEBUG 23156[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:08,993]DEBUG 23156[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderItemDao' to bean named 'sessionFactory'
[2015-12-30 00:48:08,996]DEBUG 23159[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:09,000]DEBUG 23163[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderItemDao'
[2015-12-30 00:48:09,001]DEBUG 23164[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'creditCardTypeDao'
[2015-12-30 00:48:09,001]DEBUG 23164[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'creditCardTypeDao'
[2015-12-30 00:48:09,001]DEBUG 23164[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.CreditCardTypeDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:09,001]DEBUG 23164[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'creditCardTypeDao' to allow for resolving potential circular references
[2015-12-30 00:48:09,002]DEBUG 23165[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'creditCardTypeDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 00:48:09,002]DEBUG 23165[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:09,002]DEBUG 23165[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'creditCardTypeDao' to bean named 'sessionFactory'
[2015-12-30 00:48:09,002]DEBUG 23165[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:09,007]DEBUG 23170[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'creditCardTypeDao'
[2015-12-30 00:48:09,007]DEBUG 23170[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:09,007]DEBUG 23170[main] - org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:827) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@33b1603e]
[2015-12-30 00:48:09,007]DEBUG 23170[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2015-12-30 00:48:09,012]DEBUG 23175[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:09,012]DEBUG 23175[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:09,012]DEBUG 23175[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:09,012]DEBUG 23175[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:09,014]DEBUG 23177[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:09,014]DEBUG 23177[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:09,014]DEBUG 23177[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:09,014]DEBUG 23177[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:09,015]DEBUG 23178[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:09,015]DEBUG 23178[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:09,015]DEBUG 23178[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:09,015]DEBUG 23178[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:09,015]DEBUG 23178[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'customerTypeDao'
[2015-12-30 00:48:09,015]DEBUG 23178[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:09,015]DEBUG 23178[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:09,016]DEBUG 23179[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'dimensionDao'
[2015-12-30 00:48:09,016]DEBUG 23179[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:09,016]DEBUG 23179[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:09,016]DEBUG 23179[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'orderDao'
[2015-12-30 00:48:09,016]DEBUG 23179[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:09,016]DEBUG 23179[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:09,017]DEBUG 23180[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'orderItemDao'
[2015-12-30 00:48:09,017]DEBUG 23180[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:09,017]DEBUG 23180[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:09,017]DEBUG 23180[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'orderStatusDao'
[2015-12-30 00:48:09,017]DEBUG 23180[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:09,017]DEBUG 23180[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:09,017]DEBUG 23180[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'productDao'
[2015-12-30 00:48:09,018]DEBUG 23181[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:09,018]DEBUG 23181[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:09,018]DEBUG 23181[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'regionDao'
[2015-12-30 00:48:09,018]DEBUG 23181[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:09,018]DEBUG 23181[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:09,018]DEBUG 23181[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'roleDao'
[2015-12-30 00:48:09,018]DEBUG 23181[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:09,019]DEBUG 23182[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:09,019]DEBUG 23182[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'userDao'
[2015-12-30 00:48:09,019]DEBUG 23182[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:09,019]DEBUG 23182[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:09,019]DEBUG 23182[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'sessionFactory'
[2015-12-30 00:48:09,020]DEBUG 23183[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:09,020]DEBUG 23183[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,020]DEBUG 23183[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:09,020]DEBUG 23183[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4d72f5d6]
[2015-12-30 00:48:09,020]DEBUG 23183[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-12-30 00:48:09,021]DEBUG 23184[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.setUp()
[2015-12-30 00:48:09,021]DEBUG 23184[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,021]DEBUG 23184[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.tearDown()
[2015-12-30 00:48:09,022]DEBUG 23185[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,022]DEBUG 23185[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testFindAll()
[2015-12-30 00:48:09,022]DEBUG 23185[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,022]DEBUG 23185[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testInsertOrUpdate()
[2015-12-30 00:48:09,022]DEBUG 23185[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,022]DEBUG 23185[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testDelete()
[2015-12-30 00:48:09,023]DEBUG 23186[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,023]DEBUG 23186[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testFindByID()
[2015-12-30 00:48:09,023]DEBUG 23186[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindOrderStatusByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,023]DEBUG 23186[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testFindOrderStatusByName()
[2015-12-30 00:48:09,023]DEBUG 23186[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2015-12-30 00:48:09,023]DEBUG 23186[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2015-12-30 00:48:09,023]DEBUG 23186[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2015-12-30 00:48:09,023]DEBUG 23186[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2015-12-30 00:48:09,024]DEBUG 23187[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2015-12-30 00:48:09,024]DEBUG 23187[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2015-12-30 00:48:09,024]DEBUG 23187[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2015-12-30 00:48:09,024]DEBUG 23187[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2015-12-30 00:48:09,024]DEBUG 23187[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2015-12-30 00:48:09,024]DEBUG 23187[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2015-12-30 00:48:09,024]DEBUG 23187[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,025]DEBUG 23188[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2015-12-30 00:48:09,025]DEBUG 23188[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2015-12-30 00:48:09,025]DEBUG 23188[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2015-12-30 00:48:09,025]DEBUG 23188[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2015-12-30 00:48:09,025]DEBUG 23188[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2015-12-30 00:48:09,025]DEBUG 23188[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2015-12-30 00:48:09,025]DEBUG 23188[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2015-12-30 00:48:09,025]DEBUG 23188[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:09,025]DEBUG 23188[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:09,026]DEBUG 23189[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2015-12-30 00:48:09,026]DEBUG 23189[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2015-12-30 00:48:09,026]DEBUG 23189[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2015-12-30 00:48:09,028]DEBUG 23191[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2015-12-30 00:48:09,028]DEBUG 23191[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2015-12-30 00:48:09,028]DEBUG 23191[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2015-12-30 00:48:09,028]DEBUG 23191[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2015-12-30 00:48:09,028]DEBUG 23191[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2015-12-30 00:48:09,028]DEBUG 23191[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2015-12-30 00:48:09,028]DEBUG 23191[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:09,028]DEBUG 23191[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:09,029]DEBUG 23192[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2015-12-30 00:48:09,029]DEBUG 23192[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:09,029]DEBUG 23192[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:09,029]DEBUG 23192[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2015-12-30 00:48:09,029]DEBUG 23192[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2015-12-30 00:48:09,029]DEBUG 23192[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2015-12-30 00:48:09,029]DEBUG 23192[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2015-12-30 00:48:09,029]DEBUG 23192[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2015-12-30 00:48:09,029]DEBUG 23192[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2015-12-30 00:48:09,039]DEBUG 23202[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,039]DEBUG 23202[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4d72f5d6, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,039]DEBUG 23202[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:09,039]DEBUG 23202[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@3f8c44a7 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:09,039]DEBUG 23202[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:09,039]DEBUG 23202[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,040]DEBUG 23203[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292890
[2015-12-30 00:48:09,040]DEBUG 23203[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2c207114] for Hibernate transaction
[2015-12-30 00:48:09,040]DEBUG 23203[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2c207114]
[2015-12-30 00:48:09,040]DEBUG 23203[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:09,040]DEBUG 23203[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:09,040]DEBUG 23203[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:09,040]DEBUG 23203[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4d72f5d6, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,040] INFO 23203[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@698ff0af]; rollback [true]
[2015-12-30 00:48:09,040]DEBUG 23203[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,041]DEBUG 23204[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,042]DEBUG 23205[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[1]]
[2015-12-30 00:48:09,043]DEBUG 23206[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,043]DEBUG 23206[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 1, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,045]DEBUG 23208[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,045]DEBUG 23208[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,046]DEBUG 23209[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[2]]
[2015-12-30 00:48:09,046]DEBUG 23209[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,047]DEBUG 23210[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 2, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,047]DEBUG 23210[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,047]DEBUG 23210[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,048]DEBUG 23211[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[3]]
[2015-12-30 00:48:09,048]DEBUG 23211[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,048]DEBUG 23211[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 3, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,048]DEBUG 23211[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,049]DEBUG 23212[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,049]DEBUG 23212[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,049]DEBUG 23212[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,049]DEBUG 23212[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,049]DEBUG 23212[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 00:48:09,049]DEBUG 23212[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 00:48:09,049]DEBUG 23212[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 00:48:09,049]DEBUG 23212[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 00:48:09,050]DEBUG 23213[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,051]DEBUG 23214[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,051]DEBUG 23214[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,051]DEBUG 23214[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,051]DEBUG 23214[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,051]DEBUG 23214[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,051]DEBUG 23214[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:09,054]DEBUG 23217[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,054]DEBUG 23217[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,054]DEBUG 23217[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID24_0_, this_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses this_
[2015-12-30 00:48:09,056]DEBUG 23219[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:09,056]DEBUG 23219[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#1]
[2015-12-30 00:48:09,056]DEBUG 23219[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#2]
[2015-12-30 00:48:09,057]DEBUG 23220[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3]
[2015-12-30 00:48:09,057]DEBUG 23220[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:09,061]DEBUG 23224[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,061]DEBUG 23224[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:09,063]DEBUG 23226[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.OrderItem
[2015-12-30 00:48:09,066]DEBUG 23229[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'OrderItem'

[2015-12-30 00:48:09,066]DEBUG 23229[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,067]DEBUG 23230[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 00:48:09,068]DEBUG 23231[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.OrderItem (no alias) -> orderitem0_
[2015-12-30 00:48:09,068]DEBUG 23231[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 00:48:09,068]DEBUG 23231[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 00:48:09,071]DEBUG 23234[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (OrderItems)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[orderitem0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'OrderItems' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OrderItems,tableAlias=orderitem0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.OrderItem}}

[2015-12-30 00:48:09,071]DEBUG 23234[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,072]DEBUG 23235[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,072]DEBUG 23235[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,072]DEBUG 23235[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,073]DEBUG 23236[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,073]DEBUG 23236[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,073]DEBUG 23236[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,073]DEBUG 23236[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 00:48:09,073]DEBUG 23236[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 00:48:09,074]DEBUG 23237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 00:48:09,074]DEBUG 23237[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,074]DEBUG 23237[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:09,076]DEBUG 23239[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,077]DEBUG 23240[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 00:48:09,080]DEBUG 23243[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Dimension'

[2015-12-30 00:48:09,080]DEBUG 23243[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,081]DEBUG 23244[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 00:48:09,081]DEBUG 23244[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Dimension (no alias) -> dimension0_
[2015-12-30 00:48:09,082]DEBUG 23245[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 00:48:09,082]DEBUG 23245[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 00:48:09,083]DEBUG 23246[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Dimensions)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[dimension0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Dimensions' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Dimensions,tableAlias=dimension0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Dimension}}

[2015-12-30 00:48:09,083]DEBUG 23246[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,083]DEBUG 23246[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,084]DEBUG 23247[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,084]DEBUG 23247[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,084]DEBUG 23247[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,084]DEBUG 23247[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,085]DEBUG 23248[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,085]DEBUG 23248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 00:48:09,085]DEBUG 23248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 00:48:09,085]DEBUG 23248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 00:48:09,085]DEBUG 23248[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,085]DEBUG 23248[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:09,086]DEBUG 23249[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,088]DEBUG 23251[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 00:48:09,091]DEBUG 23254[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Product'

[2015-12-30 00:48:09,091]DEBUG 23254[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,091]DEBUG 23254[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 00:48:09,092]DEBUG 23255[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Product (no alias) -> product0_
[2015-12-30 00:48:09,092]DEBUG 23255[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 00:48:09,092]DEBUG 23255[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 00:48:09,093]DEBUG 23256[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Products)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Products' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Products,tableAlias=product0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Product}}

[2015-12-30 00:48:09,093]DEBUG 23256[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,094]DEBUG 23257[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,094]DEBUG 23257[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,094]DEBUG 23257[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,095]DEBUG 23258[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,095]DEBUG 23258[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,095]DEBUG 23258[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,095]DEBUG 23258[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 00:48:09,095]DEBUG 23258[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 00:48:09,095]DEBUG 23258[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 00:48:09,096]DEBUG 23259[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,096]DEBUG 23259[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:09,097]DEBUG 23260[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,099]DEBUG 23262[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 00:48:09,100]DEBUG 23263[main] - org.hibernate.hql.ast.HqlParser.weakKeywords(HqlParser.java:340) - weakKeywords() : new LT(1) token - ["Order",<126> previously: <41>,line=1,col=54,possibleID=true]
[2015-12-30 00:48:09,101]DEBUG 23264[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Order'

[2015-12-30 00:48:09,103]DEBUG 23266[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,103]DEBUG 23266[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 00:48:09,104]DEBUG 23267[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Order (no alias) -> order0_
[2015-12-30 00:48:09,104]DEBUG 23267[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 00:48:09,104]DEBUG 23267[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 00:48:09,104]DEBUG 23267[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Orders)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Orders' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Orders,tableAlias=order0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Order}}

[2015-12-30 00:48:09,105]DEBUG 23268[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,105]DEBUG 23268[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,105]DEBUG 23268[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,105]DEBUG 23268[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,105]DEBUG 23268[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,106]DEBUG 23269[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,106]DEBUG 23269[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,106]DEBUG 23269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 00:48:09,106]DEBUG 23269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 00:48:09,106]DEBUG 23269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 00:48:09,106]DEBUG 23269[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,106]DEBUG 23269[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:09,108]DEBUG 23271[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,109]DEBUG 23272[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 00:48:09,112]DEBUG 23275[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'OrderStatus'

[2015-12-30 00:48:09,112]DEBUG 23275[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,113]DEBUG 23276[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 00:48:09,113]DEBUG 23276[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.OrderStatus (no alias) -> orderstatu0_
[2015-12-30 00:48:09,114]DEBUG 23277[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 00:48:09,114]DEBUG 23277[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 00:48:09,115]DEBUG 23278[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (OrderStatuses)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[orderstatu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'OrderStatuses' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OrderStatuses,tableAlias=orderstatu0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.OrderStatus}}

[2015-12-30 00:48:09,115]DEBUG 23278[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,117]DEBUG 23280[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,117]DEBUG 23280[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,118]DEBUG 23281[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,119]DEBUG 23282[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,119]DEBUG 23282[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,119]DEBUG 23282[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,119]DEBUG 23282[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 00:48:09,120]DEBUG 23283[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 00:48:09,120]DEBUG 23283[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 00:48:09,120]DEBUG 23283[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,120]DEBUG 23283[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:09,122]DEBUG 23285[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,127]DEBUG 23290[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 00:48:09,129]DEBUG 23292[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'User'

[2015-12-30 00:48:09,129]DEBUG 23292[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,129]DEBUG 23292[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 00:48:09,129]DEBUG 23292[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.User (no alias) -> user0_
[2015-12-30 00:48:09,129]DEBUG 23292[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 00:48:09,129]DEBUG 23292[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 00:48:09,130]DEBUG 23293[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Users)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.User}}

[2015-12-30 00:48:09,130]DEBUG 23293[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,130]DEBUG 23293[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,130]DEBUG 23293[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,130]DEBUG 23293[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,130]DEBUG 23293[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,132]DEBUG 23295[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,132]DEBUG 23295[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,132]DEBUG 23295[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 00:48:09,133]DEBUG 23296[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 00:48:09,133]DEBUG 23296[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 00:48:09,133]DEBUG 23296[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,133]DEBUG 23296[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:09,135]DEBUG 23298[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,135]DEBUG 23298[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 00:48:09,137]DEBUG 23300[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'CustomerType'

[2015-12-30 00:48:09,137]DEBUG 23300[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,137]DEBUG 23300[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 00:48:09,138]DEBUG 23301[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (no alias) -> customerty0_
[2015-12-30 00:48:09,138]DEBUG 23301[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 00:48:09,138]DEBUG 23301[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 00:48:09,139]DEBUG 23302[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (CustomerTypes)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerTypes' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}

[2015-12-30 00:48:09,141]DEBUG 23304[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,141]DEBUG 23304[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,141]DEBUG 23304[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,141]DEBUG 23304[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,141]DEBUG 23304[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,141]DEBUG 23304[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,141]DEBUG 23304[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,142]DEBUG 23305[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 00:48:09,142]DEBUG 23305[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 00:48:09,142]DEBUG 23305[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 00:48:09,142]DEBUG 23305[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,142]DEBUG 23305[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:09,143]DEBUG 23306[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,144]DEBUG 23307[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 00:48:09,145]DEBUG 23308[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Region'

[2015-12-30 00:48:09,145]DEBUG 23308[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,145]DEBUG 23308[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 00:48:09,146]DEBUG 23309[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Region (no alias) -> region0_
[2015-12-30 00:48:09,146]DEBUG 23309[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 00:48:09,146]DEBUG 23309[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 00:48:09,146]DEBUG 23309[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Regions)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[region0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Regions' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Regions,tableAlias=region0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Region}}

[2015-12-30 00:48:09,146]DEBUG 23309[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,146]DEBUG 23309[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,147]DEBUG 23310[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,147]DEBUG 23310[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,147]DEBUG 23310[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,147]DEBUG 23310[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,147]DEBUG 23310[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,147]DEBUG 23310[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 00:48:09,147]DEBUG 23310[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 00:48:09,147]DEBUG 23310[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 00:48:09,148]DEBUG 23311[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,148]DEBUG 23311[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:09,149]DEBUG 23312[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,150]DEBUG 23313[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 00:48:09,151]DEBUG 23314[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Role'

[2015-12-30 00:48:09,152]DEBUG 23315[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,152]DEBUG 23315[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 00:48:09,152]DEBUG 23315[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Role (no alias) -> role0_
[2015-12-30 00:48:09,152]DEBUG 23315[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 00:48:09,152]DEBUG 23315[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 00:48:09,152]DEBUG 23315[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Roles)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Roles' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Roles,tableAlias=role0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Role}}

[2015-12-30 00:48:09,153]DEBUG 23316[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,153]DEBUG 23316[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,153]DEBUG 23316[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,153]DEBUG 23316[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,153]DEBUG 23316[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,153]DEBUG 23316[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,153]DEBUG 23316[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,153]DEBUG 23316[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 00:48:09,154]DEBUG 23317[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 00:48:09,154]DEBUG 23317[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 00:48:09,154]DEBUG 23317[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,154]DEBUG 23317[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:09,156]DEBUG 23319[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,156]DEBUG 23319[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4d72f5d6, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,156]DEBUG 23319[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:09,157]DEBUG 23320[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2c207114]
[2015-12-30 00:48:09,157]DEBUG 23320[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:09,159]DEBUG 23322[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:09,159]DEBUG 23322[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,159]DEBUG 23322[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2c207114] after transaction
[2015-12-30 00:48:09,159]DEBUG 23322[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:09,159]DEBUG 23322[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:09,159]DEBUG 23322[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,159] INFO 23322[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4d72f5d6, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,160]DEBUG 23323[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4d72f5d6, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:09,160]DEBUG 23323[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:09,160]DEBUG 23323[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:09,160]DEBUG 23323[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@21caf0b6, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:09,161]DEBUG 23324[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:09,161]DEBUG 23324[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:09,161]DEBUG 23324[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:09,161]DEBUG 23324[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:09,161]DEBUG 23324[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:09,161]DEBUG 23324[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:09,161]DEBUG 23324[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:09,163]DEBUG 23326[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:09,164]DEBUG 23327[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:09,164]DEBUG 23327[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:09,164]DEBUG 23327[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:09,164]DEBUG 23327[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:09,164]DEBUG 23327[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:09,164]DEBUG 23327[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:09,164]DEBUG 23327[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:09,164]DEBUG 23327[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:09,164]DEBUG 23327[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:09,165]DEBUG 23328[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:09,165]DEBUG 23328[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:09,165]DEBUG 23328[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:09,165]DEBUG 23328[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:09,165]DEBUG 23328[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:09,165]DEBUG 23328[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@21caf0b6]
[2015-12-30 00:48:09,165]DEBUG 23328[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,166]DEBUG 23329[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@21caf0b6, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,166]DEBUG 23329[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:09,166]DEBUG 23329[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,166]DEBUG 23329[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292891
[2015-12-30 00:48:09,166]DEBUG 23329[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7c68fa9a] for Hibernate transaction
[2015-12-30 00:48:09,166]DEBUG 23329[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7c68fa9a]
[2015-12-30 00:48:09,167]DEBUG 23330[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:09,167]DEBUG 23330[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:09,167]DEBUG 23330[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:09,167]DEBUG 23330[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@21caf0b6, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,167] INFO 23330[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@698ff0af]; rollback [true]
[2015-12-30 00:48:09,167]DEBUG 23330[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,167]DEBUG 23330[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,168]DEBUG 23331[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[4]]
[2015-12-30 00:48:09,169]DEBUG 23332[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,169]DEBUG 23332[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 4, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,169]DEBUG 23332[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,169]DEBUG 23332[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,170]DEBUG 23333[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[5]]
[2015-12-30 00:48:09,171]DEBUG 23334[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,171]DEBUG 23334[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 5, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,171]DEBUG 23334[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,171]DEBUG 23334[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,173]DEBUG 23336[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[6]]
[2015-12-30 00:48:09,173]DEBUG 23336[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,173]DEBUG 23336[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 6, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,174]DEBUG 23337[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,174]DEBUG 23337[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,175]DEBUG 23338[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,175]DEBUG 23338[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,175]DEBUG 23338[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,175]DEBUG 23338[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 00:48:09,176]DEBUG 23339[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 00:48:09,176]DEBUG 23339[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 00:48:09,176]DEBUG 23339[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 00:48:09,176]DEBUG 23339[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,177]DEBUG 23340[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,177]DEBUG 23340[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,177]DEBUG 23340[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,178]DEBUG 23341[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,178]DEBUG 23341[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,178]DEBUG 23341[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:09,180]DEBUG 23343[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,181]DEBUG 23344[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,181]DEBUG 23344[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID24_0_, this_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses this_
[2015-12-30 00:48:09,182]DEBUG 23345[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:09,183]DEBUG 23346[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#4]
[2015-12-30 00:48:09,183]DEBUG 23346[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#5]
[2015-12-30 00:48:09,183]DEBUG 23346[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#6]
[2015-12-30 00:48:09,183]DEBUG 23346[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:09,184]DEBUG 23347[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,184]DEBUG 23347[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:09,184]DEBUG 23347[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,185]DEBUG 23348[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,185]DEBUG 23348[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,185]DEBUG 23348[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,185]DEBUG 23348[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,186]DEBUG 23349[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 00:48:09,186]DEBUG 23349[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 00:48:09,186]DEBUG 23349[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 00:48:09,186]DEBUG 23349[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,186]DEBUG 23349[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:09,188]DEBUG 23351[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,188]DEBUG 23351[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,188]DEBUG 23351[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,191]DEBUG 23354[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,191]DEBUG 23354[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,192]DEBUG 23355[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,192]DEBUG 23355[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 00:48:09,192]DEBUG 23355[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 00:48:09,192]DEBUG 23355[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 00:48:09,193]DEBUG 23356[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,193]DEBUG 23356[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:09,194]DEBUG 23357[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,195]DEBUG 23358[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,195]DEBUG 23358[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,195]DEBUG 23358[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,196]DEBUG 23359[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,196]DEBUG 23359[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,196]DEBUG 23359[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 00:48:09,196]DEBUG 23359[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 00:48:09,196]DEBUG 23359[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 00:48:09,197]DEBUG 23360[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,197]DEBUG 23360[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:09,198]DEBUG 23361[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,199]DEBUG 23362[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,199]DEBUG 23362[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,200]DEBUG 23363[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,200]DEBUG 23363[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,200]DEBUG 23363[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,200]DEBUG 23363[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 00:48:09,201]DEBUG 23364[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 00:48:09,201]DEBUG 23364[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 00:48:09,201]DEBUG 23364[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,201]DEBUG 23364[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:09,203]DEBUG 23366[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,203]DEBUG 23366[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,203]DEBUG 23366[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,204]DEBUG 23367[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,205]DEBUG 23368[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,205]DEBUG 23368[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,205]DEBUG 23368[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 00:48:09,205]DEBUG 23368[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 00:48:09,205]DEBUG 23368[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 00:48:09,206]DEBUG 23369[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,206]DEBUG 23369[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:09,208]DEBUG 23371[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,208]DEBUG 23371[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,208]DEBUG 23371[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,209]DEBUG 23372[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,209]DEBUG 23372[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,209]DEBUG 23372[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,209]DEBUG 23372[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 00:48:09,210]DEBUG 23373[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 00:48:09,210]DEBUG 23373[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 00:48:09,210]DEBUG 23373[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,210]DEBUG 23373[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:09,212]DEBUG 23375[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,212]DEBUG 23375[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,212]DEBUG 23375[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,213]DEBUG 23376[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,213]DEBUG 23376[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,213]DEBUG 23376[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,213]DEBUG 23376[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 00:48:09,213]DEBUG 23376[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 00:48:09,214]DEBUG 23377[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 00:48:09,214]DEBUG 23377[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,214]DEBUG 23377[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:09,216]DEBUG 23379[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,216]DEBUG 23379[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,216]DEBUG 23379[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,217]DEBUG 23380[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,217]DEBUG 23380[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,217]DEBUG 23380[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,217]DEBUG 23380[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 00:48:09,218]DEBUG 23381[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 00:48:09,218]DEBUG 23381[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 00:48:09,218]DEBUG 23381[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,218]DEBUG 23381[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:09,220]DEBUG 23383[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,220]DEBUG 23383[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,220]DEBUG 23383[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,221]DEBUG 23384[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,221]DEBUG 23384[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,221]DEBUG 23384[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,221]DEBUG 23384[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 00:48:09,222]DEBUG 23385[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 00:48:09,222]DEBUG 23385[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 00:48:09,222]DEBUG 23385[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,222]DEBUG 23385[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:09,224]DEBUG 23387[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,224]DEBUG 23387[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@21caf0b6, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,224]DEBUG 23387[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:09,224]DEBUG 23387[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7c68fa9a]
[2015-12-30 00:48:09,227]DEBUG 23390[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:09,228]DEBUG 23391[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:09,228]DEBUG 23391[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,229]DEBUG 23392[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7c68fa9a] after transaction
[2015-12-30 00:48:09,229]DEBUG 23392[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:09,229]DEBUG 23392[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:09,229]DEBUG 23392[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,230] INFO 23393[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@21caf0b6, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,230]DEBUG 23393[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@21caf0b6, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:09,231]DEBUG 23394[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:09,231]DEBUG 23394[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:09,232]DEBUG 23395[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4575f798, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:09,232]DEBUG 23395[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:09,232]DEBUG 23395[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:09,232]DEBUG 23395[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:09,233]DEBUG 23396[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:09,233]DEBUG 23396[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:09,233]DEBUG 23396[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:09,233]DEBUG 23396[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:09,233]DEBUG 23396[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:09,234]DEBUG 23397[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:09,234]DEBUG 23397[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:09,234]DEBUG 23397[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:09,234]DEBUG 23397[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:09,235]DEBUG 23398[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:09,235]DEBUG 23398[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:09,235]DEBUG 23398[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:09,235]DEBUG 23398[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:09,235]DEBUG 23398[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:09,236]DEBUG 23399[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:09,236]DEBUG 23399[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:09,236]DEBUG 23399[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:09,236]DEBUG 23399[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:09,237]DEBUG 23400[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:09,237]DEBUG 23400[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4575f798]
[2015-12-30 00:48:09,237]DEBUG 23400[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,238]DEBUG 23401[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4575f798, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,238]DEBUG 23401[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:09,239]DEBUG 23402[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,239]DEBUG 23402[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292892
[2015-12-30 00:48:09,239]DEBUG 23402[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@596ba564] for Hibernate transaction
[2015-12-30 00:48:09,239]DEBUG 23402[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@596ba564]
[2015-12-30 00:48:09,240]DEBUG 23403[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:09,240]DEBUG 23403[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:09,240]DEBUG 23403[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:09,240]DEBUG 23403[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4575f798, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,241] INFO 23404[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@698ff0af]; rollback [true]
[2015-12-30 00:48:09,241]DEBUG 23404[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,241]DEBUG 23404[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,243]DEBUG 23406[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[7]]
[2015-12-30 00:48:09,243]DEBUG 23406[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,243]DEBUG 23406[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 7, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,244]DEBUG 23407[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,244]DEBUG 23407[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,245]DEBUG 23408[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[8]]
[2015-12-30 00:48:09,246]DEBUG 23409[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,246]DEBUG 23409[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 8, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,246]DEBUG 23409[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,246]DEBUG 23409[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,248]DEBUG 23411[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[9]]
[2015-12-30 00:48:09,248]DEBUG 23411[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,249]DEBUG 23412[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 9, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,249]DEBUG 23412[main] - org.hibernate.event.def.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:442) - load request found matching entity in context, but it is scheduled for removal; returning null
[2015-12-30 00:48:09,249]DEBUG 23412[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,250]DEBUG 23413[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,250]DEBUG 23413[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 1 deletions to 3 objects
[2015-12-30 00:48:09,250]DEBUG 23413[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,250]DEBUG 23413[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,251]DEBUG 23414[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 00:48:09,251]DEBUG 23414[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 00:48:09,251]DEBUG 23414[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2015-12-30 00:48:09,251]DEBUG 23414[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,252]DEBUG 23415[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:09,253]DEBUG 23416[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,253]DEBUG 23416[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,254]DEBUG 23417[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,254]DEBUG 23417[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 1 deletions to 3 objects
[2015-12-30 00:48:09,254]DEBUG 23417[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,254]DEBUG 23417[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,255]DEBUG 23418[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 00:48:09,255]DEBUG 23418[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 00:48:09,255]DEBUG 23418[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2015-12-30 00:48:09,255]DEBUG 23418[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,255]DEBUG 23418[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:09,257]DEBUG 23420[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,257]DEBUG 23420[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,257]DEBUG 23420[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,260]DEBUG 23423[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 1 deletions to 3 objects
[2015-12-30 00:48:09,260]DEBUG 23423[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,261]DEBUG 23424[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,261]DEBUG 23424[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 00:48:09,261]DEBUG 23424[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 00:48:09,261]DEBUG 23424[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2015-12-30 00:48:09,262]DEBUG 23425[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,262]DEBUG 23425[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:09,263]DEBUG 23426[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,264]DEBUG 23427[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,264]DEBUG 23427[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,264]DEBUG 23427[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 1 deletions to 3 objects
[2015-12-30 00:48:09,264]DEBUG 23427[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,265]DEBUG 23428[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,265]DEBUG 23428[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 00:48:09,265]DEBUG 23428[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 00:48:09,265]DEBUG 23428[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2015-12-30 00:48:09,266]DEBUG 23429[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,266]DEBUG 23429[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:09,267]DEBUG 23430[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,268]DEBUG 23431[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,268]DEBUG 23431[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,268]DEBUG 23431[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 1 deletions to 3 objects
[2015-12-30 00:48:09,268]DEBUG 23431[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,269]DEBUG 23432[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,269]DEBUG 23432[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 00:48:09,269]DEBUG 23432[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 00:48:09,269]DEBUG 23432[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2015-12-30 00:48:09,269]DEBUG 23432[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 00:48:09,270]DEBUG 23433[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,270]DEBUG 23433[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,270]DEBUG 23433[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,271]DEBUG 23434[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,271]DEBUG 23434[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,271]DEBUG 23434[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,271]DEBUG 23434[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:09,274]DEBUG 23437[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,274]DEBUG 23437[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,274]DEBUG 23437[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses where ID=?
[2015-12-30 00:48:09,274]DEBUG 23437[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:09,276]DEBUG 23439[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,276]DEBUG 23439[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,277]DEBUG 23440[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:09,278]DEBUG 23441[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,278]DEBUG 23441[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,279]DEBUG 23442[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,279]DEBUG 23442[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2015-12-30 00:48:09,279]DEBUG 23442[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,279]DEBUG 23442[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,280]DEBUG 23443[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 00:48:09,280]DEBUG 23443[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 00:48:09,280]DEBUG 23443[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,280]DEBUG 23443[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:09,282]DEBUG 23445[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,282]DEBUG 23445[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,282]DEBUG 23445[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,282]DEBUG 23445[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2015-12-30 00:48:09,283]DEBUG 23446[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,283]DEBUG 23446[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,283]DEBUG 23446[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 00:48:09,283]DEBUG 23446[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 00:48:09,283]DEBUG 23446[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,284]DEBUG 23447[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:09,285]DEBUG 23448[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,285]DEBUG 23448[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,285]DEBUG 23448[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,286]DEBUG 23449[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2015-12-30 00:48:09,286]DEBUG 23449[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,286]DEBUG 23449[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,286]DEBUG 23449[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 00:48:09,287]DEBUG 23450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 00:48:09,287]DEBUG 23450[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,287]DEBUG 23450[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:09,288]DEBUG 23451[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,289]DEBUG 23452[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,289]DEBUG 23452[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,289]DEBUG 23452[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2015-12-30 00:48:09,289]DEBUG 23452[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,290]DEBUG 23453[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,290]DEBUG 23453[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 00:48:09,290]DEBUG 23453[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 00:48:09,290]DEBUG 23453[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,291]DEBUG 23454[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:09,292]DEBUG 23455[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,292]DEBUG 23455[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4575f798, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,293]DEBUG 23456[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:09,293]DEBUG 23456[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@596ba564]
[2015-12-30 00:48:09,295]DEBUG 23458[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:09,296]DEBUG 23459[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:09,297]DEBUG 23460[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,297]DEBUG 23460[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@596ba564] after transaction
[2015-12-30 00:48:09,297]DEBUG 23460[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:09,298]DEBUG 23461[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:09,298]DEBUG 23461[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,298] INFO 23461[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4575f798, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,299]DEBUG 23462[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4575f798, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:09,299]DEBUG 23462[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:09,300]DEBUG 23463[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:09,300]DEBUG 23463[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@77f52c80, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:09,300]DEBUG 23463[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:09,301]DEBUG 23464[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:09,301]DEBUG 23464[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:09,301]DEBUG 23464[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:09,301]DEBUG 23464[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:09,301]DEBUG 23464[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:09,302]DEBUG 23465[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:09,302]DEBUG 23465[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:09,302]DEBUG 23465[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:09,302]DEBUG 23465[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:09,303]DEBUG 23466[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:09,303]DEBUG 23466[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:09,303]DEBUG 23466[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:09,303]DEBUG 23466[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:09,303]DEBUG 23466[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:09,307]DEBUG 23470[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:09,307]DEBUG 23470[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:09,307]DEBUG 23470[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:09,307]DEBUG 23470[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:09,307]DEBUG 23470[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:09,307]DEBUG 23470[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:09,308]DEBUG 23471[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:09,308]DEBUG 23471[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@77f52c80]
[2015-12-30 00:48:09,308]DEBUG 23471[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,308]DEBUG 23471[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@77f52c80, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,308]DEBUG 23471[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:09,309]DEBUG 23472[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,309]DEBUG 23472[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292893
[2015-12-30 00:48:09,309]DEBUG 23472[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@29ccbdc] for Hibernate transaction
[2015-12-30 00:48:09,309]DEBUG 23472[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@29ccbdc]
[2015-12-30 00:48:09,309]DEBUG 23472[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:09,309]DEBUG 23472[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:09,309]DEBUG 23472[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:09,309]DEBUG 23472[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@77f52c80, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,309] INFO 23472[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@698ff0af]; rollback [true]
[2015-12-30 00:48:09,310]DEBUG 23473[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,310]DEBUG 23473[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,311]DEBUG 23474[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[10]]
[2015-12-30 00:48:09,311]DEBUG 23474[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,311]DEBUG 23474[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 10, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,312]DEBUG 23475[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,312]DEBUG 23475[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,313]DEBUG 23476[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[11]]
[2015-12-30 00:48:09,313]DEBUG 23476[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,313]DEBUG 23476[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 11, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,313]DEBUG 23476[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,313]DEBUG 23476[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,315]DEBUG 23478[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[12]]
[2015-12-30 00:48:09,315]DEBUG 23478[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,315]DEBUG 23478[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 12, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,315]DEBUG 23478[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,315]DEBUG 23478[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,316]DEBUG 23479[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,316]DEBUG 23479[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,316]DEBUG 23479[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,316]DEBUG 23479[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 00:48:09,316]DEBUG 23479[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 00:48:09,316]DEBUG 23479[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 00:48:09,316]DEBUG 23479[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,316]DEBUG 23479[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:09,318]DEBUG 23481[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,318]DEBUG 23481[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,318]DEBUG 23481[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,319]DEBUG 23482[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,319]DEBUG 23482[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,319]DEBUG 23482[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,319]DEBUG 23482[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 00:48:09,319]DEBUG 23482[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 00:48:09,319]DEBUG 23482[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 00:48:09,319]DEBUG 23482[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,320]DEBUG 23483[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:09,321]DEBUG 23484[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,321]DEBUG 23484[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,321]DEBUG 23484[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,321]DEBUG 23484[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,323]DEBUG 23486[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,323]DEBUG 23486[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,323]DEBUG 23486[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 00:48:09,323]DEBUG 23486[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 00:48:09,323]DEBUG 23486[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 00:48:09,323]DEBUG 23486[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,323]DEBUG 23486[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:09,325]DEBUG 23488[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,325]DEBUG 23488[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,325]DEBUG 23488[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,325]DEBUG 23488[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,325]DEBUG 23488[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,325]DEBUG 23488[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,325]DEBUG 23488[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 00:48:09,325]DEBUG 23488[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 00:48:09,326]DEBUG 23489[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 00:48:09,326]DEBUG 23489[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,326]DEBUG 23489[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:09,327]DEBUG 23490[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,327]DEBUG 23490[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,328]DEBUG 23491[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,328]DEBUG 23491[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,328]DEBUG 23491[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,329]DEBUG 23492[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,329]DEBUG 23492[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 00:48:09,329]DEBUG 23492[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 00:48:09,329]DEBUG 23492[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 00:48:09,329]DEBUG 23492[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 00:48:09,330]DEBUG 23493[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,330]DEBUG 23493[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,330]DEBUG 23493[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,331]DEBUG 23494[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,331]DEBUG 23494[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,331]DEBUG 23494[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,331]DEBUG 23494[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:09,333]DEBUG 23496[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,334]DEBUG 23497[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,334]DEBUG 23497[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:09,335]DEBUG 23498[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,336]DEBUG 23499[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,336]DEBUG 23499[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,336]DEBUG 23499[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,336]DEBUG 23499[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,336]DEBUG 23499[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,337]DEBUG 23500[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 00:48:09,337]DEBUG 23500[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 00:48:09,337]DEBUG 23500[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 00:48:09,337]DEBUG 23500[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,337]DEBUG 23500[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:09,339]DEBUG 23502[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,339]DEBUG 23502[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,339]DEBUG 23502[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,340]DEBUG 23503[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,340]DEBUG 23503[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,340]DEBUG 23503[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,340]DEBUG 23503[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 00:48:09,340]DEBUG 23503[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 00:48:09,341]DEBUG 23504[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 00:48:09,341]DEBUG 23504[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,341]DEBUG 23504[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:09,343]DEBUG 23506[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,343]DEBUG 23506[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,343]DEBUG 23506[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,343]DEBUG 23506[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,344]DEBUG 23507[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,344]DEBUG 23507[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,344]DEBUG 23507[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 00:48:09,344]DEBUG 23507[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 00:48:09,344]DEBUG 23507[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 00:48:09,345]DEBUG 23508[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,345]DEBUG 23508[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:09,346]DEBUG 23509[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,347]DEBUG 23510[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,347]DEBUG 23510[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,347]DEBUG 23510[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,348]DEBUG 23511[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,348]DEBUG 23511[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,348]DEBUG 23511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 00:48:09,348]DEBUG 23511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 00:48:09,348]DEBUG 23511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 00:48:09,349]DEBUG 23512[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,349]DEBUG 23512[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:09,350]DEBUG 23513[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,351]DEBUG 23514[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@77f52c80, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,351]DEBUG 23514[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:09,351]DEBUG 23514[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@29ccbdc]
[2015-12-30 00:48:09,351]DEBUG 23514[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:09,352]DEBUG 23515[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:09,355]DEBUG 23518[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,355]DEBUG 23518[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@29ccbdc] after transaction
[2015-12-30 00:48:09,355]DEBUG 23518[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:09,356]DEBUG 23519[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:09,356]DEBUG 23519[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,356] INFO 23519[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@77f52c80, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,357]DEBUG 23520[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@77f52c80, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:09,357]DEBUG 23520[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:09,358]DEBUG 23521[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:09,358]DEBUG 23521[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@7e42a983, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:09,358]DEBUG 23521[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:09,359]DEBUG 23522[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:09,359]DEBUG 23522[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:09,359]DEBUG 23522[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:09,359]DEBUG 23522[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:09,360]DEBUG 23523[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:09,360]DEBUG 23523[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:09,360]DEBUG 23523[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:09,360]DEBUG 23523[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:09,360]DEBUG 23523[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:09,361]DEBUG 23524[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:09,361]DEBUG 23524[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:09,362]DEBUG 23525[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:09,362]DEBUG 23525[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:09,362]DEBUG 23525[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:09,362]DEBUG 23525[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:09,363]DEBUG 23526[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:09,363]DEBUG 23526[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:09,363]DEBUG 23526[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:09,363]DEBUG 23526[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:09,364]DEBUG 23527[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:09,364]DEBUG 23527[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:09,364]DEBUG 23527[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@7e42a983]
[2015-12-30 00:48:09,365]DEBUG 23528[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindOrderStatusByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,365]DEBUG 23528[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@7e42a983, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,365]DEBUG 23528[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:09,365]DEBUG 23528[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindOrderStatusByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,365]DEBUG 23528[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292893
[2015-12-30 00:48:09,365]DEBUG 23528[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@600d7969] for Hibernate transaction
[2015-12-30 00:48:09,366]DEBUG 23529[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@600d7969]
[2015-12-30 00:48:09,366]DEBUG 23529[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:09,366]DEBUG 23529[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:09,366]DEBUG 23529[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:09,366]DEBUG 23529[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@7e42a983, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,366] INFO 23529[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@698ff0af]; rollback [true]
[2015-12-30 00:48:09,367]DEBUG 23530[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,367]DEBUG 23530[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,368]DEBUG 23531[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[13]]
[2015-12-30 00:48:09,369]DEBUG 23532[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,369]DEBUG 23532[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 13, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,369]DEBUG 23532[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,370]DEBUG 23533[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,376]DEBUG 23539[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[14]]
[2015-12-30 00:48:09,376]DEBUG 23539[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,376]DEBUG 23539[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 14, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,377]DEBUG 23540[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,377]DEBUG 23540[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,378]DEBUG 23541[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[15]]
[2015-12-30 00:48:09,378]DEBUG 23541[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,379]DEBUG 23542[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 15, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,379]DEBUG 23542[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,379]DEBUG 23542[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,381]DEBUG 23544[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[16]]
[2015-12-30 00:48:09,381]DEBUG 23544[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,381]DEBUG 23544[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 16, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,382]DEBUG 23545[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,382]DEBUG 23545[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,383]DEBUG 23546[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,383]DEBUG 23546[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,383]DEBUG 23546[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,383]DEBUG 23546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2015-12-30 00:48:09,385]DEBUG 23548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 00:48:09,385]DEBUG 23548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 00:48:09,385]DEBUG 23548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 00:48:09,385]DEBUG 23548[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 00:48:09,386]DEBUG 23549[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,386]DEBUG 23549[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,386]DEBUG 23549[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,386]DEBUG 23549[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,386]DEBUG 23549[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,386]DEBUG 23549[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,387]DEBUG 23550[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,387]DEBUG 23550[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,388]DEBUG 23551[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:09,390]DEBUG 23553[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,390]DEBUG 23553[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,391]DEBUG 23554[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID24_0_, this_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses this_ where this_.OrederStatusName=?
[2015-12-30 00:48:09,393]DEBUG 23556[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:09,393]DEBUG 23556[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#16]
[2015-12-30 00:48:09,393]DEBUG 23556[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:09,394]DEBUG 23557[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,394]DEBUG 23557[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:09,394]DEBUG 23557[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,394]DEBUG 23557[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,394]DEBUG 23557[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 00:48:09,394]DEBUG 23557[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,394]DEBUG 23557[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,394]DEBUG 23557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2015-12-30 00:48:09,395]DEBUG 23558[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 00:48:09,395]DEBUG 23558[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 00:48:09,395]DEBUG 23558[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 00:48:09,395]DEBUG 23558[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,395]DEBUG 23558[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:09,396]DEBUG 23559[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,396]DEBUG 23559[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,396]DEBUG 23559[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,396]DEBUG 23559[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 00:48:09,397]DEBUG 23560[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,397]DEBUG 23560[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,397]DEBUG 23560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2015-12-30 00:48:09,397]DEBUG 23560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 00:48:09,397]DEBUG 23560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 00:48:09,397]DEBUG 23560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 00:48:09,397]DEBUG 23560[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,397]DEBUG 23560[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:09,398]DEBUG 23561[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,399]DEBUG 23562[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,399]DEBUG 23562[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,399]DEBUG 23562[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 00:48:09,400]DEBUG 23563[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,400]DEBUG 23563[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,400]DEBUG 23563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2015-12-30 00:48:09,400]DEBUG 23563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 00:48:09,401]DEBUG 23564[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 00:48:09,401]DEBUG 23564[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 00:48:09,401]DEBUG 23564[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,401]DEBUG 23564[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:09,403]DEBUG 23566[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,403]DEBUG 23566[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,403]DEBUG 23566[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,404]DEBUG 23567[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 00:48:09,404]DEBUG 23567[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,404]DEBUG 23567[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,404]DEBUG 23567[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2015-12-30 00:48:09,404]DEBUG 23567[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 00:48:09,404]DEBUG 23567[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 00:48:09,405]DEBUG 23568[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 00:48:09,405]DEBUG 23568[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,405]DEBUG 23568[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:09,406]DEBUG 23569[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,407]DEBUG 23570[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,407]DEBUG 23570[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,407]DEBUG 23570[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 00:48:09,407]DEBUG 23570[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,408]DEBUG 23571[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,408]DEBUG 23571[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2015-12-30 00:48:09,408]DEBUG 23571[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 00:48:09,408]DEBUG 23571[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 00:48:09,408]DEBUG 23571[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 00:48:09,408]DEBUG 23571[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 00:48:09,409]DEBUG 23572[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,409]DEBUG 23572[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses where ID=?
[2015-12-30 00:48:09,409]DEBUG 23572[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:09,411]DEBUG 23574[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,411]DEBUG 23574[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,411]DEBUG 23574[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:09,412]DEBUG 23575[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,413]DEBUG 23576[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,413]DEBUG 23576[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,413]DEBUG 23576[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,413]DEBUG 23576[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,413]DEBUG 23576[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,414]DEBUG 23577[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 00:48:09,414]DEBUG 23577[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 00:48:09,414]DEBUG 23577[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 00:48:09,414]DEBUG 23577[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,414]DEBUG 23577[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:09,415]DEBUG 23578[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,416]DEBUG 23579[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,416]DEBUG 23579[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,418]DEBUG 23581[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,419]DEBUG 23582[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,419]DEBUG 23582[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,419]DEBUG 23582[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 00:48:09,419]DEBUG 23582[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 00:48:09,420]DEBUG 23583[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 00:48:09,420]DEBUG 23583[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,420]DEBUG 23583[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:09,421]DEBUG 23584[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,422]DEBUG 23585[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,422]DEBUG 23585[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,422]DEBUG 23585[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,423]DEBUG 23586[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,423]DEBUG 23586[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,423]DEBUG 23586[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 00:48:09,423]DEBUG 23586[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 00:48:09,423]DEBUG 23586[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 00:48:09,424]DEBUG 23587[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,424]DEBUG 23587[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:09,425]DEBUG 23588[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,426]DEBUG 23589[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,426]DEBUG 23589[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,426]DEBUG 23589[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,426]DEBUG 23589[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,427]DEBUG 23590[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,427]DEBUG 23590[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 00:48:09,427]DEBUG 23590[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 00:48:09,427]DEBUG 23590[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 00:48:09,428]DEBUG 23591[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,428]DEBUG 23591[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:09,429]DEBUG 23592[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,429]DEBUG 23592[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@7e42a983, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,430]DEBUG 23593[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:09,430]DEBUG 23593[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@600d7969]
[2015-12-30 00:48:09,430]DEBUG 23593[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:09,431]DEBUG 23594[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:09,431]DEBUG 23594[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,432]DEBUG 23595[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@600d7969] after transaction
[2015-12-30 00:48:09,432]DEBUG 23595[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:09,432]DEBUG 23595[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:09,432]DEBUG 23595[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,433] INFO 23596[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@7e42a983, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 00:48:09,433]DEBUG 23596[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@7e42a983, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:09,434]DEBUG 23597[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:09,434]DEBUG 23597[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:09,435]DEBUG 23598[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6f65b863, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:09,435]DEBUG 23598[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:09,435]DEBUG 23598[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:09,435]DEBUG 23598[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:09,436]DEBUG 23599[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:09,436]DEBUG 23599[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:09,436]DEBUG 23599[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:09,436]DEBUG 23599[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:09,436]DEBUG 23599[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:09,437]DEBUG 23600[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:09,437]DEBUG 23600[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:09,437]DEBUG 23600[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:09,437]DEBUG 23600[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:09,438]DEBUG 23601[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:09,438]DEBUG 23601[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:09,438]DEBUG 23601[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:09,438]DEBUG 23601[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:09,438]DEBUG 23601[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:09,439]DEBUG 23602[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:09,439]DEBUG 23602[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:09,439]DEBUG 23602[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:09,439]DEBUG 23602[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:09,440]DEBUG 23603[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:09,440]DEBUG 23603[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6f65b863]
[2015-12-30 00:48:09,441]DEBUG 23604[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,441]DEBUG 23604[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6f65b863, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:09,441]DEBUG 23604[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:09,442]DEBUG 23605[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,442]DEBUG 23605[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292894
[2015-12-30 00:48:09,442]DEBUG 23605[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5ca92583] for Hibernate transaction
[2015-12-30 00:48:09,443]DEBUG 23606[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5ca92583]
[2015-12-30 00:48:09,443]DEBUG 23606[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:09,443]DEBUG 23606[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:09,443]DEBUG 23606[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:09,443]DEBUG 23606[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6f65b863, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:09,444] INFO 23607[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@698ff0af]; rollback [true]
[2015-12-30 00:48:09,444]DEBUG 23607[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,445]DEBUG 23608[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,446]DEBUG 23609[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[17]]
[2015-12-30 00:48:09,447]DEBUG 23610[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,447]DEBUG 23610[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 17, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,447]DEBUG 23610[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,448]DEBUG 23611[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,451]DEBUG 23614[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[18]]
[2015-12-30 00:48:09,452]DEBUG 23615[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,452]DEBUG 23615[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 18, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,456]DEBUG 23619[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,456]DEBUG 23619[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,458]DEBUG 23621[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[19]]
[2015-12-30 00:48:09,458]DEBUG 23621[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,458]DEBUG 23621[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 19, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,459]DEBUG 23622[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,459]DEBUG 23622[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,459]DEBUG 23622[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,460]DEBUG 23623[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,460]DEBUG 23623[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,460]DEBUG 23623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 00:48:09,460]DEBUG 23623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 00:48:09,460]DEBUG 23623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 00:48:09,461]DEBUG 23624[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,461]DEBUG 23624[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:09,462]DEBUG 23625[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,463]DEBUG 23626[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,463]DEBUG 23626[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,468]DEBUG 23631[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,468]DEBUG 23631[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,469]DEBUG 23632[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,469]DEBUG 23632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 00:48:09,469]DEBUG 23632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 00:48:09,469]DEBUG 23632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 00:48:09,470]DEBUG 23633[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,470]DEBUG 23633[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:09,471]DEBUG 23634[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,472]DEBUG 23635[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,472]DEBUG 23635[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,472]DEBUG 23635[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,473]DEBUG 23636[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,473]DEBUG 23636[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,473]DEBUG 23636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 00:48:09,473]DEBUG 23636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 00:48:09,474]DEBUG 23637[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 00:48:09,474]DEBUG 23637[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,474]DEBUG 23637[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:09,475]DEBUG 23638[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,476]DEBUG 23639[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,476]DEBUG 23639[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,476]DEBUG 23639[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,477]DEBUG 23640[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,477]DEBUG 23640[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,477]DEBUG 23640[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 00:48:09,477]DEBUG 23640[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 00:48:09,478]DEBUG 23641[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 00:48:09,478]DEBUG 23641[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,478]DEBUG 23641[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:09,480]DEBUG 23643[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,480]DEBUG 23643[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,480]DEBUG 23643[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,480]DEBUG 23643[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,481]DEBUG 23644[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,481]DEBUG 23644[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,481]DEBUG 23644[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 00:48:09,481]DEBUG 23644[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 00:48:09,482]DEBUG 23645[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 00:48:09,482]DEBUG 23645[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 00:48:09,482]DEBUG 23645[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,482]DEBUG 23645[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,483]DEBUG 23646[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,483]DEBUG 23646[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,483]DEBUG 23646[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,484]DEBUG 23647[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 00:48:09,484]DEBUG 23647[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:09,486]DEBUG 23649[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,486]DEBUG 23649[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,487]DEBUG 23650[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:09,488]DEBUG 23651[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,488]DEBUG 23651[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,489]DEBUG 23652[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,489]DEBUG 23652[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,489]DEBUG 23652[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,489]DEBUG 23652[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,490]DEBUG 23653[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 00:48:09,490]DEBUG 23653[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 00:48:09,490]DEBUG 23653[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 00:48:09,490]DEBUG 23653[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,491]DEBUG 23654[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:09,492]DEBUG 23655[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,492]DEBUG 23655[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,493]DEBUG 23656[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,493]DEBUG 23656[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,495]DEBUG 23658[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,496]DEBUG 23659[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,496]DEBUG 23659[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 00:48:09,496]DEBUG 23659[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 00:48:09,496]DEBUG 23659[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 00:48:09,497]DEBUG 23660[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,497]DEBUG 23660[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:09,498]DEBUG 23661[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,499]DEBUG 23662[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,499]DEBUG 23662[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,499]DEBUG 23662[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,500]DEBUG 23663[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,500]DEBUG 23663[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,500]DEBUG 23663[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 00:48:09,500]DEBUG 23663[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 00:48:09,500]DEBUG 23663[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 00:48:09,501]DEBUG 23664[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,501]DEBUG 23664[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:09,502]DEBUG 23665[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,503]DEBUG 23666[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,503]DEBUG 23666[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,503]DEBUG 23666[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:09,503]DEBUG 23666[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,504]DEBUG 23667[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,504]DEBUG 23667[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 00:48:09,504]DEBUG 23667[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 00:48:09,504]DEBUG 23667[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 00:48:09,505]DEBUG 23668[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,505]DEBUG 23668[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:09,506]DEBUG 23669[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,507]DEBUG 23670[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6f65b863, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:09,507]DEBUG 23670[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:09,507]DEBUG 23670[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5ca92583]
[2015-12-30 00:48:09,507]DEBUG 23670[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:09,508]DEBUG 23671[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:09,509]DEBUG 23672[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,509]DEBUG 23672[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5ca92583] after transaction
[2015-12-30 00:48:09,509]DEBUG 23672[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:09,509]DEBUG 23672[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:09,510]DEBUG 23673[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,510] INFO 23673[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6f65b863, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:09,511]DEBUG 23674[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6f65b863, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:09,511]DEBUG 23674[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@62ad0636 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2015-12-30 00:48:09,518]DEBUG 23681[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest].
[2015-12-30 00:48:09,518] INFO 23681[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: using defaults.
[2015-12-30 00:48:09,519]DEBUG 23682[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:09,519]DEBUG 23682[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:09,521]DEBUG 23684[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:09,522]DEBUG 23685[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:09,522]DEBUG 23685[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:09,522]DEBUG 23685[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:09,525]DEBUG 23688[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:09,525]DEBUG 23688[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:09,526]DEBUG 23689[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6929c1c6, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:09,530]DEBUG 23693[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:09,530]DEBUG 23693[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:09,530]DEBUG 23693[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:09,531]DEBUG 23694[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:09,531]DEBUG 23694[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:09,531]DEBUG 23694[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:09,531]DEBUG 23694[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:09,531]DEBUG 23694[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:09,531]DEBUG 23694[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:09,531]DEBUG 23694[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:09,532]DEBUG 23695[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:09,532]DEBUG 23695[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:09,532]DEBUG 23695[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'customerTypeDao'
[2015-12-30 00:48:09,532]DEBUG 23695[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:09,533]DEBUG 23696[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:09,533]DEBUG 23696[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'dimensionDao'
[2015-12-30 00:48:09,533]DEBUG 23696[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:09,533]DEBUG 23696[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:09,533]DEBUG 23696[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'orderDao'
[2015-12-30 00:48:09,533]DEBUG 23696[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:09,534]DEBUG 23697[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:09,535]DEBUG 23698[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'orderItemDao'
[2015-12-30 00:48:09,536]DEBUG 23699[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:09,536]DEBUG 23699[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:09,536]DEBUG 23699[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'orderStatusDao'
[2015-12-30 00:48:09,536]DEBUG 23699[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:09,536]DEBUG 23699[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:09,537]DEBUG 23700[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'productDao'
[2015-12-30 00:48:09,537]DEBUG 23700[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:09,537]DEBUG 23700[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:09,537]DEBUG 23700[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'regionDao'
[2015-12-30 00:48:09,537]DEBUG 23700[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:09,538]DEBUG 23701[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:09,538]DEBUG 23701[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'roleDao'
[2015-12-30 00:48:09,538]DEBUG 23701[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:09,538]DEBUG 23701[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:09,538]DEBUG 23701[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'userDao'
[2015-12-30 00:48:09,539]DEBUG 23702[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:09,539]DEBUG 23702[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:09,539]DEBUG 23702[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'sessionFactory'
[2015-12-30 00:48:09,540]DEBUG 23703[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:09,540]DEBUG 23703[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,540]DEBUG 23703[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:09,540]DEBUG 23703[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6929c1c6]
[2015-12-30 00:48:09,541]DEBUG 23704[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.setUp() throws java.lang.Exception
[2015-12-30 00:48:09,541]DEBUG 23704[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,541]DEBUG 23704[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.tearDown()
[2015-12-30 00:48:09,542]DEBUG 23705[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,542]DEBUG 23705[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindAll()
[2015-12-30 00:48:09,542]DEBUG 23705[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,542]DEBUG 23705[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testInsertOrUpdate()
[2015-12-30 00:48:09,542]DEBUG 23705[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,543]DEBUG 23706[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testDelete()
[2015-12-30 00:48:09,543]DEBUG 23706[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,543]DEBUG 23706[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindByCriterions()
[2015-12-30 00:48:09,543]DEBUG 23706[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,543]DEBUG 23706[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindByOneOfCriterions()
[2015-12-30 00:48:09,544]DEBUG 23707[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,544]DEBUG 23707[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindByID()
[2015-12-30 00:48:09,544]DEBUG 23707[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetStandartTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,544]DEBUG 23707[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetStandartTypeDiscount()
[2015-12-30 00:48:09,544]DEBUG 23707[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSilverTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,545]DEBUG 23708[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetSilverTypeDiscount()
[2015-12-30 00:48:09,545]DEBUG 23708[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetGoldTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,545]DEBUG 23708[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetGoldTypeDiscount()
[2015-12-30 00:48:09,545]DEBUG 23708[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetPlatinumTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,545]DEBUG 23708[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetPlatinumTypeDiscount()
[2015-12-30 00:48:09,546]DEBUG 23709[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2015-12-30 00:48:09,546]DEBUG 23709[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2015-12-30 00:48:09,546]DEBUG 23709[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2015-12-30 00:48:09,546]DEBUG 23709[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2015-12-30 00:48:09,552]DEBUG 23715[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2015-12-30 00:48:09,552]DEBUG 23715[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2015-12-30 00:48:09,552]DEBUG 23715[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2015-12-30 00:48:09,552]DEBUG 23715[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2015-12-30 00:48:09,552]DEBUG 23715[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2015-12-30 00:48:09,553]DEBUG 23716[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2015-12-30 00:48:09,553]DEBUG 23716[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,553]DEBUG 23716[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2015-12-30 00:48:09,553]DEBUG 23716[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2015-12-30 00:48:09,553]DEBUG 23716[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2015-12-30 00:48:09,554]DEBUG 23717[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2015-12-30 00:48:09,554]DEBUG 23717[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2015-12-30 00:48:09,554]DEBUG 23717[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2015-12-30 00:48:09,554]DEBUG 23717[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2015-12-30 00:48:09,554]DEBUG 23717[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:09,559]DEBUG 23722[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:09,559]DEBUG 23722[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2015-12-30 00:48:09,559]DEBUG 23722[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2015-12-30 00:48:09,560]DEBUG 23723[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2015-12-30 00:48:09,560]DEBUG 23723[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2015-12-30 00:48:09,560]DEBUG 23723[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2015-12-30 00:48:09,560]DEBUG 23723[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2015-12-30 00:48:09,560]DEBUG 23723[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2015-12-30 00:48:09,560]DEBUG 23723[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2015-12-30 00:48:09,560]DEBUG 23723[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2015-12-30 00:48:09,561]DEBUG 23724[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:09,561]DEBUG 23724[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:09,561]DEBUG 23724[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2015-12-30 00:48:09,561]DEBUG 23724[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:09,561]DEBUG 23724[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:09,561]DEBUG 23724[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2015-12-30 00:48:09,562]DEBUG 23725[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2015-12-30 00:48:09,562]DEBUG 23725[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2015-12-30 00:48:09,562]DEBUG 23725[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2015-12-30 00:48:09,562]DEBUG 23725[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2015-12-30 00:48:09,562]DEBUG 23725[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2015-12-30 00:48:09,585]DEBUG 23748[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,585]DEBUG 23748[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6929c1c6, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:09,585]DEBUG 23748[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:09,585]DEBUG 23748[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@1e228fde transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:09,585]DEBUG 23748[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:09,586]DEBUG 23749[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,586]DEBUG 23749[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292895
[2015-12-30 00:48:09,586]DEBUG 23749[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@13f0d199] for Hibernate transaction
[2015-12-30 00:48:09,586]DEBUG 23749[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@13f0d199]
[2015-12-30 00:48:09,586]DEBUG 23749[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:09,589]DEBUG 23752[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:09,589]DEBUG 23752[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:09,589]DEBUG 23752[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6929c1c6, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:09,589] INFO 23752[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:09,589]DEBUG 23752[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,589]DEBUG 23752[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,592]DEBUG 23755[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[20]]
[2015-12-30 00:48:09,592]DEBUG 23755[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,592]DEBUG 23755[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 20, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,592]DEBUG 23755[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,592]DEBUG 23755[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,596]DEBUG 23759[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[21]]
[2015-12-30 00:48:09,596]DEBUG 23759[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,596]DEBUG 23759[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 21, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,596]DEBUG 23759[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,596]DEBUG 23759[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,598]DEBUG 23761[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[22]]
[2015-12-30 00:48:09,598]DEBUG 23761[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,598]DEBUG 23761[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 22, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,598]DEBUG 23761[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,599]DEBUG 23762[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,600]DEBUG 23763[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[23]]
[2015-12-30 00:48:09,600]DEBUG 23763[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,600]DEBUG 23763[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 23, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,600]DEBUG 23763[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,601]DEBUG 23764[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,601]DEBUG 23764[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,601]DEBUG 23764[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,601]DEBUG 23764[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,601]DEBUG 23764[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,603]DEBUG 23766[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,604]DEBUG 23767[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,604]DEBUG 23767[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,604]DEBUG 23767[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 00:48:09,605]DEBUG 23768[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,605]DEBUG 23768[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:09,605]DEBUG 23768[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,606]DEBUG 23769[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:09,606]DEBUG 23769[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,606]DEBUG 23769[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:09,606]DEBUG 23769[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,606]DEBUG 23769[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:09,610]DEBUG 23773[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:09,612]DEBUG 23775[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,613]DEBUG 23776[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,613]DEBUG 23776[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_
[2015-12-30 00:48:09,614]DEBUG 23777[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:09,614]DEBUG 23777[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#20]
[2015-12-30 00:48:09,615]DEBUG 23778[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#21]
[2015-12-30 00:48:09,615]DEBUG 23778[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#22]
[2015-12-30 00:48:09,615]DEBUG 23778[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#23]
[2015-12-30 00:48:09,615]DEBUG 23778[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:09,615]DEBUG 23778[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,616]DEBUG 23779[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:09,617]DEBUG 23780[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,617]DEBUG 23780[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,620]DEBUG 23783[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,625]DEBUG 23788[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,625]DEBUG 23788[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,625]DEBUG 23788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,625]DEBUG 23788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,626]DEBUG 23789[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,626]DEBUG 23789[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,626]DEBUG 23789[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,630]DEBUG 23793[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:09,631]DEBUG 23794[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,631]DEBUG 23794[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,631]DEBUG 23794[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,632]DEBUG 23795[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,632]DEBUG 23795[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,632]DEBUG 23795[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,632]DEBUG 23795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,632]DEBUG 23795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,632]DEBUG 23795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,633]DEBUG 23796[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,633]DEBUG 23796[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,633]DEBUG 23796[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:09,638]DEBUG 23801[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,638]DEBUG 23801[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,638]DEBUG 23801[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,638]DEBUG 23801[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,638]DEBUG 23801[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,638]DEBUG 23801[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,639]DEBUG 23802[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,639]DEBUG 23802[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,639]DEBUG 23802[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,639]DEBUG 23802[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,640]DEBUG 23803[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,640]DEBUG 23803[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:09,645]DEBUG 23808[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,645]DEBUG 23808[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,645]DEBUG 23808[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,645]DEBUG 23808[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,645]DEBUG 23808[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,645]DEBUG 23808[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,646]DEBUG 23809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,646]DEBUG 23809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,646]DEBUG 23809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,646]DEBUG 23809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,646]DEBUG 23809[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,646]DEBUG 23809[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:09,652]DEBUG 23815[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,652]DEBUG 23815[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,652]DEBUG 23815[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,653]DEBUG 23816[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,653]DEBUG 23816[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,653]DEBUG 23816[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,653]DEBUG 23816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,653]DEBUG 23816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,653]DEBUG 23816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,653]DEBUG 23816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,654]DEBUG 23817[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,654]DEBUG 23817[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:09,659]DEBUG 23822[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,659]DEBUG 23822[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,659]DEBUG 23822[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,659]DEBUG 23822[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,659]DEBUG 23822[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,660]DEBUG 23823[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,660]DEBUG 23823[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,660]DEBUG 23823[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,660]DEBUG 23823[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,660]DEBUG 23823[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,660]DEBUG 23823[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,660]DEBUG 23823[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:09,666]DEBUG 23829[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,666]DEBUG 23829[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,666]DEBUG 23829[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,667]DEBUG 23830[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,667]DEBUG 23830[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,667]DEBUG 23830[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,667]DEBUG 23830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,667]DEBUG 23830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,667]DEBUG 23830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,668]DEBUG 23831[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,668]DEBUG 23831[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,668]DEBUG 23831[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:09,673]DEBUG 23836[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,673]DEBUG 23836[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,673]DEBUG 23836[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,674]DEBUG 23837[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,674]DEBUG 23837[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,674]DEBUG 23837[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,674]DEBUG 23837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,674]DEBUG 23837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,674]DEBUG 23837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,674]DEBUG 23837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,675]DEBUG 23838[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,675]DEBUG 23838[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:09,678]DEBUG 23841[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,678]DEBUG 23841[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,678]DEBUG 23841[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,678]DEBUG 23841[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,678]DEBUG 23841[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,678]DEBUG 23841[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,678]DEBUG 23841[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,679]DEBUG 23842[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,679]DEBUG 23842[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,679]DEBUG 23842[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,679]DEBUG 23842[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,679]DEBUG 23842[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:09,680]DEBUG 23843[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,681]DEBUG 23844[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6929c1c6, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:09,681]DEBUG 23844[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:09,681]DEBUG 23844[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@13f0d199]
[2015-12-30 00:48:09,681]DEBUG 23844[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:09,682]DEBUG 23845[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:09,683]DEBUG 23846[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,683]DEBUG 23846[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@13f0d199] after transaction
[2015-12-30 00:48:09,683]DEBUG 23846[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:09,683]DEBUG 23846[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:09,683]DEBUG 23846[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,683] INFO 23846[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6929c1c6, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:09,684]DEBUG 23847[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6929c1c6, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:09,684]DEBUG 23847[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:09,684]DEBUG 23847[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:09,684]DEBUG 23847[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@44fffa9a, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:09,685]DEBUG 23848[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:09,685]DEBUG 23848[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:09,685]DEBUG 23848[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:09,685]DEBUG 23848[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:09,685]DEBUG 23848[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:09,685]DEBUG 23848[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:09,685]DEBUG 23848[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:09,690]DEBUG 23853[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:09,690]DEBUG 23853[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:09,690]DEBUG 23853[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:09,690]DEBUG 23853[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:09,690]DEBUG 23853[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:09,691]DEBUG 23854[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:09,691]DEBUG 23854[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:09,691]DEBUG 23854[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:09,691]DEBUG 23854[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:09,691]DEBUG 23854[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:09,691]DEBUG 23854[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:09,691]DEBUG 23854[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:09,691]DEBUG 23854[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:09,692]DEBUG 23855[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:09,692]DEBUG 23855[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:09,692]DEBUG 23855[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@44fffa9a]
[2015-12-30 00:48:09,692]DEBUG 23855[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,692]DEBUG 23855[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@44fffa9a, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:09,692]DEBUG 23855[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:09,693]DEBUG 23856[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,693]DEBUG 23856[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292896
[2015-12-30 00:48:09,693]DEBUG 23856[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@60cea70d] for Hibernate transaction
[2015-12-30 00:48:09,693]DEBUG 23856[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@60cea70d]
[2015-12-30 00:48:09,693]DEBUG 23856[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:09,694]DEBUG 23857[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:09,694]DEBUG 23857[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:09,694]DEBUG 23857[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@44fffa9a, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:09,694] INFO 23857[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:09,694]DEBUG 23857[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,694]DEBUG 23857[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,699]DEBUG 23862[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[24]]
[2015-12-30 00:48:09,699]DEBUG 23862[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,699]DEBUG 23862[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 24, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,699]DEBUG 23862[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,700]DEBUG 23863[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,701]DEBUG 23864[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[25]]
[2015-12-30 00:48:09,701]DEBUG 23864[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,701]DEBUG 23864[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 25, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,701]DEBUG 23864[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,701]DEBUG 23864[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,702]DEBUG 23865[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[26]]
[2015-12-30 00:48:09,703]DEBUG 23866[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,703]DEBUG 23866[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 26, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,703]DEBUG 23866[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,703]DEBUG 23866[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,707]DEBUG 23870[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[27]]
[2015-12-30 00:48:09,707]DEBUG 23870[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,707]DEBUG 23870[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 27, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,707]DEBUG 23870[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,707]DEBUG 23870[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,707]DEBUG 23870[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,708]DEBUG 23871[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,708]DEBUG 23871[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,708]DEBUG 23871[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,708]DEBUG 23871[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,708]DEBUG 23871[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,708]DEBUG 23871[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,708]DEBUG 23871[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 00:48:09,713]DEBUG 23876[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,713]DEBUG 23876[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:09,713]DEBUG 23876[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,713]DEBUG 23876[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:09,713]DEBUG 23876[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,713]DEBUG 23876[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:09,714]DEBUG 23877[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,714]DEBUG 23877[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:09,714]DEBUG 23877[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:09,719]DEBUG 23882[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,719]DEBUG 23882[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,719]DEBUG 23882[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:09,721]DEBUG 23884[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,721]DEBUG 23884[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,721]DEBUG 23884[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,722]DEBUG 23885[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[28]]
[2015-12-30 00:48:09,722]DEBUG 23885[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,723]DEBUG 23886[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 28, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,723]DEBUG 23886[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Standard
[2015-12-30 00:48:09,730]DEBUG 23893[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Standard'

[2015-12-30 00:48:09,734]DEBUG 23897[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,735]DEBUG 23898[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2015-12-30 00:48:09,735]DEBUG 23898[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2015-12-30 00:48:09,740]DEBUG 23903[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2015-12-30 00:48:09,741]DEBUG 23904[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@137f0ced
[2015-12-30 00:48:09,742]DEBUG 23905[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2015-12-30 00:48:09,751]DEBUG 23914[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2015-12-30 00:48:09,751]DEBUG 23914[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2015-12-30 00:48:09,758]DEBUG 23921[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2015-12-30 00:48:09,768]DEBUG 23931[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2015-12-30 00:48:09,768]DEBUG 23931[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2015-12-30 00:48:09,769]DEBUG 23932[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Standard, expectedType=org.hibernate.type.StringType@137f0ced}

[2015-12-30 00:48:09,769]DEBUG 23932[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,769]DEBUG 23932[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Standard
[2015-12-30 00:48:09,769]DEBUG 23932[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 00:48:09,773]DEBUG 23936[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:09,778]DEBUG 23941[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,778]DEBUG 23941[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,778]DEBUG 23941[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 00:48:09,778]DEBUG 23941[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,779]DEBUG 23942[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,779]DEBUG 23942[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,779]DEBUG 23942[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,779]DEBUG 23942[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,779]DEBUG 23942[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,779]DEBUG 23942[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,779]DEBUG 23942[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 00:48:09,780]DEBUG 23943[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,780]DEBUG 23943[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:09,780]DEBUG 23943[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 00:48:09,784]DEBUG 23947[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,784]DEBUG 23947[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,784]DEBUG 23947[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 00:48:09,786]DEBUG 23949[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:09,786]DEBUG 23949[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#28]
[2015-12-30 00:48:09,786]DEBUG 23949[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:09,786]DEBUG 23949[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,786]DEBUG 23949[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:09,787]DEBUG 23950[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,787]DEBUG 23950[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,788]DEBUG 23951[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 00:48:09,788]DEBUG 23951[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,788]DEBUG 23951[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,788]DEBUG 23951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,788]DEBUG 23951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,788]DEBUG 23951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,788]DEBUG 23951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,788]DEBUG 23951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,788]DEBUG 23951[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,789]DEBUG 23952[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:09,790]DEBUG 23953[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,790]DEBUG 23953[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,790]DEBUG 23953[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,790]DEBUG 23953[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 00:48:09,790]DEBUG 23953[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,790]DEBUG 23953[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,790]DEBUG 23953[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,791]DEBUG 23954[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,791]DEBUG 23954[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,791]DEBUG 23954[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,791]DEBUG 23954[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,791]DEBUG 23954[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,791]DEBUG 23954[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:09,792]DEBUG 23955[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,792]DEBUG 23955[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,793]DEBUG 23956[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,795]DEBUG 23958[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 00:48:09,795]DEBUG 23958[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,795]DEBUG 23958[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,795]DEBUG 23958[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,795]DEBUG 23958[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,795]DEBUG 23958[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,795]DEBUG 23958[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,796]DEBUG 23959[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,796]DEBUG 23959[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,796]DEBUG 23959[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:09,797]DEBUG 23960[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,797]DEBUG 23960[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,797]DEBUG 23960[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,798]DEBUG 23961[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 00:48:09,798]DEBUG 23961[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,798]DEBUG 23961[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,798]DEBUG 23961[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,798]DEBUG 23961[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,798]DEBUG 23961[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,798]DEBUG 23961[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,798]DEBUG 23961[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,798]DEBUG 23961[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,799]DEBUG 23962[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:09,800]DEBUG 23963[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,800]DEBUG 23963[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,800]DEBUG 23963[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,801]DEBUG 23964[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 00:48:09,801]DEBUG 23964[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,801]DEBUG 23964[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,801]DEBUG 23964[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,802]DEBUG 23965[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,802]DEBUG 23965[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,802]DEBUG 23965[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,803]DEBUG 23966[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,803]DEBUG 23966[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,803]DEBUG 23966[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:09,804]DEBUG 23967[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,805]DEBUG 23968[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,805]DEBUG 23968[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,805]DEBUG 23968[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 00:48:09,806]DEBUG 23969[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,806]DEBUG 23969[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,806]DEBUG 23969[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,806]DEBUG 23969[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,807]DEBUG 23970[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,807]DEBUG 23970[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,807]DEBUG 23970[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,807]DEBUG 23970[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,807]DEBUG 23970[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:09,809]DEBUG 23972[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,809]DEBUG 23972[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,809]DEBUG 23972[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,810]DEBUG 23973[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 00:48:09,810]DEBUG 23973[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,810]DEBUG 23973[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,811]DEBUG 23974[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,811]DEBUG 23974[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,811]DEBUG 23974[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,811]DEBUG 23974[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,812]DEBUG 23975[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,812]DEBUG 23975[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,812]DEBUG 23975[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:09,814]DEBUG 23977[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,814]DEBUG 23977[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,814]DEBUG 23977[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,814]DEBUG 23977[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 00:48:09,815]DEBUG 23978[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,815]DEBUG 23978[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,815]DEBUG 23978[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,815]DEBUG 23978[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,816]DEBUG 23979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,816]DEBUG 23979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,816]DEBUG 23979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,816]DEBUG 23979[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,817]DEBUG 23980[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:09,818]DEBUG 23981[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,818]DEBUG 23981[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,818]DEBUG 23981[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,819]DEBUG 23982[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 00:48:09,819]DEBUG 23982[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,819]DEBUG 23982[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,820]DEBUG 23983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,820]DEBUG 23983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,820]DEBUG 23983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,820]DEBUG 23983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,821]DEBUG 23984[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,821]DEBUG 23984[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,821]DEBUG 23984[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:09,825]DEBUG 23988[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,826]DEBUG 23989[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@44fffa9a, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:09,826]DEBUG 23989[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:09,826]DEBUG 23989[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@60cea70d]
[2015-12-30 00:48:09,826]DEBUG 23989[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:09,827]DEBUG 23990[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:09,827]DEBUG 23990[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,827]DEBUG 23990[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@60cea70d] after transaction
[2015-12-30 00:48:09,827]DEBUG 23990[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:09,828]DEBUG 23991[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:09,828]DEBUG 23991[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,828] INFO 23991[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@44fffa9a, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:09,828]DEBUG 23991[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@44fffa9a, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:09,829]DEBUG 23992[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:09,829]DEBUG 23992[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:09,829]DEBUG 23992[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5cce6594, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:09,829]DEBUG 23992[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:09,829]DEBUG 23992[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:09,829]DEBUG 23992[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:09,829]DEBUG 23992[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:09,829]DEBUG 23992[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:09,830]DEBUG 23993[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:09,830]DEBUG 23993[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:09,830]DEBUG 23993[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:09,830]DEBUG 23993[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:09,830]DEBUG 23993[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:09,830]DEBUG 23993[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:09,830]DEBUG 23993[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:09,830]DEBUG 23993[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:09,830]DEBUG 23993[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:09,830]DEBUG 23993[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:09,831]DEBUG 23994[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:09,831]DEBUG 23994[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:09,831]DEBUG 23994[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:09,831]DEBUG 23994[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:09,832]DEBUG 23995[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:09,832]DEBUG 23995[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:09,832]DEBUG 23995[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:09,832]DEBUG 23995[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5cce6594]
[2015-12-30 00:48:09,832]DEBUG 23995[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,832]DEBUG 23995[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5cce6594, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:09,833]DEBUG 23996[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:09,833]DEBUG 23996[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,833]DEBUG 23996[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292898
[2015-12-30 00:48:09,833]DEBUG 23996[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@416848e8] for Hibernate transaction
[2015-12-30 00:48:09,833]DEBUG 23996[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@416848e8]
[2015-12-30 00:48:09,834]DEBUG 23997[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:09,834]DEBUG 23997[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:09,834]DEBUG 23997[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:09,834]DEBUG 23997[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5cce6594, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:09,834] INFO 23997[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:09,834]DEBUG 23997[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,834]DEBUG 23997[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,836]DEBUG 23999[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[29]]
[2015-12-30 00:48:09,836]DEBUG 23999[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,836]DEBUG 23999[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 29, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,836]DEBUG 23999[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,836]DEBUG 23999[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,838]DEBUG 24001[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[30]]
[2015-12-30 00:48:09,838]DEBUG 24001[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,838]DEBUG 24001[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 30, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,839]DEBUG 24002[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,839]DEBUG 24002[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,840]DEBUG 24003[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[31]]
[2015-12-30 00:48:09,841]DEBUG 24004[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,841]DEBUG 24004[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 31, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,841]DEBUG 24004[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,841]DEBUG 24004[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,842]DEBUG 24005[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[32]]
[2015-12-30 00:48:09,842]DEBUG 24005[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,842]DEBUG 24005[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 32, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,843] INFO 24006[main] - org.hibernate.event.def.DefaultDeleteEventListener.deleteTransientEntity(DefaultDeleteEventListener.java:203) - handling transient entity in delete processing
[2015-12-30 00:48:09,843]DEBUG 24006[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,843]DEBUG 24006[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,843]DEBUG 24006[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,843]DEBUG 24006[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,843]DEBUG 24006[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,844]DEBUG 24007[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,844]DEBUG 24007[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,844]DEBUG 24007[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,844]DEBUG 24007[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,844]DEBUG 24007[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 00:48:09,844]DEBUG 24007[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,844]DEBUG 24007[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:09,845]DEBUG 24008[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,846]DEBUG 24009[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:09,846]DEBUG 24009[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,846]DEBUG 24009[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:09,847]DEBUG 24010[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,847]DEBUG 24010[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:09,847]DEBUG 24010[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:09,849]DEBUG 24012[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,849]DEBUG 24012[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,849]DEBUG 24012[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 00:48:09,851]DEBUG 24014[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:09,851]DEBUG 24014[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#29]
[2015-12-30 00:48:09,851]DEBUG 24014[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:09,851]DEBUG 24014[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,851]DEBUG 24014[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:09,852]DEBUG 24015[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,852]DEBUG 24015[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,852]DEBUG 24015[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,852]DEBUG 24015[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,852]DEBUG 24015[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,852]DEBUG 24015[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,852]DEBUG 24015[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,853]DEBUG 24016[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,853]DEBUG 24016[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,853]DEBUG 24016[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,853]DEBUG 24016[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:09,854]DEBUG 24017[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,854]DEBUG 24017[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,855]DEBUG 24018[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,855]DEBUG 24018[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,855]DEBUG 24018[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,856]DEBUG 24019[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,856]DEBUG 24019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,856]DEBUG 24019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,856]DEBUG 24019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,857]DEBUG 24020[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,857]DEBUG 24020[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,857]DEBUG 24020[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:09,858]DEBUG 24021[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,859]DEBUG 24022[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,859]DEBUG 24022[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,859]DEBUG 24022[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,859]DEBUG 24022[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,860]DEBUG 24023[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,860]DEBUG 24023[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,860]DEBUG 24023[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,860]DEBUG 24023[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,861]DEBUG 24024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,861]DEBUG 24024[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,861]DEBUG 24024[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:09,862]DEBUG 24025[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,863]DEBUG 24026[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,863]DEBUG 24026[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,863]DEBUG 24026[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,863]DEBUG 24026[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,864]DEBUG 24027[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,864]DEBUG 24027[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,864]DEBUG 24027[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,864]DEBUG 24027[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,865]DEBUG 24028[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,865]DEBUG 24028[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,865]DEBUG 24028[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:09,866]DEBUG 24029[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,867]DEBUG 24030[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,867]DEBUG 24030[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,867]DEBUG 24030[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,868]DEBUG 24031[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,868]DEBUG 24031[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,868]DEBUG 24031[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,868]DEBUG 24031[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,868]DEBUG 24031[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,869]DEBUG 24032[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,869]DEBUG 24032[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,869]DEBUG 24032[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:09,871]DEBUG 24034[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,871]DEBUG 24034[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,871]DEBUG 24034[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,872]DEBUG 24035[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,872]DEBUG 24035[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,872]DEBUG 24035[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,872]DEBUG 24035[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,874]DEBUG 24037[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,875]DEBUG 24038[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,875]DEBUG 24038[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,875]DEBUG 24038[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,875]DEBUG 24038[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:09,878]DEBUG 24041[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,883]DEBUG 24046[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,884]DEBUG 24047[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,884]DEBUG 24047[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,884]DEBUG 24047[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,884]DEBUG 24047[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,885]DEBUG 24048[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,885]DEBUG 24048[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,885]DEBUG 24048[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,888]DEBUG 24051[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,888]DEBUG 24051[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,888]DEBUG 24051[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:09,890]DEBUG 24053[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,891]DEBUG 24054[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,891]DEBUG 24054[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,892]DEBUG 24055[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,892]DEBUG 24055[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,892]DEBUG 24055[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,892]DEBUG 24055[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,893]DEBUG 24056[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,893]DEBUG 24056[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,893]DEBUG 24056[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,893]DEBUG 24056[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,894]DEBUG 24057[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:09,895]DEBUG 24058[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,895]DEBUG 24058[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,896]DEBUG 24059[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,896]DEBUG 24059[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,896]DEBUG 24059[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,896]DEBUG 24059[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,897]DEBUG 24060[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,897]DEBUG 24060[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,897]DEBUG 24060[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,897]DEBUG 24060[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,898]DEBUG 24061[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,898]DEBUG 24061[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:09,899]DEBUG 24062[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,899]DEBUG 24062[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5cce6594, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:09,900]DEBUG 24063[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:09,900]DEBUG 24063[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@416848e8]
[2015-12-30 00:48:09,900]DEBUG 24063[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:09,901]DEBUG 24064[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:09,901]DEBUG 24064[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,902]DEBUG 24065[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@416848e8] after transaction
[2015-12-30 00:48:09,902]DEBUG 24065[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:09,902]DEBUG 24065[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:09,902]DEBUG 24065[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,903] INFO 24066[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5cce6594, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:09,904]DEBUG 24067[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5cce6594, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:09,904]DEBUG 24067[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:09,904]DEBUG 24067[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:09,905]DEBUG 24068[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@65edd283, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:09,905]DEBUG 24068[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:09,905]DEBUG 24068[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:09,906]DEBUG 24069[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:09,906]DEBUG 24069[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:09,906]DEBUG 24069[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:09,906]DEBUG 24069[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:09,906]DEBUG 24069[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:09,907]DEBUG 24070[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:09,907]DEBUG 24070[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:09,907]DEBUG 24070[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:09,907]DEBUG 24070[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:09,907]DEBUG 24070[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:09,908]DEBUG 24071[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:09,908]DEBUG 24071[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:09,908]DEBUG 24071[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:09,908]DEBUG 24071[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:09,908]DEBUG 24071[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:09,909]DEBUG 24072[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:09,909]DEBUG 24072[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:09,909]DEBUG 24072[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:09,909]DEBUG 24072[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:09,910]DEBUG 24073[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:09,910]DEBUG 24073[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@65edd283]
[2015-12-30 00:48:09,913]DEBUG 24076[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,914]DEBUG 24077[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@65edd283, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:09,914]DEBUG 24077[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:09,915]DEBUG 24078[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,915]DEBUG 24078[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292899
[2015-12-30 00:48:09,915]DEBUG 24078[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6836bc4a] for Hibernate transaction
[2015-12-30 00:48:09,915]DEBUG 24078[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6836bc4a]
[2015-12-30 00:48:09,916]DEBUG 24079[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:09,916]DEBUG 24079[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:09,916]DEBUG 24079[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:09,916]DEBUG 24079[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@65edd283, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:09,916] INFO 24079[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:09,917]DEBUG 24080[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,917]DEBUG 24080[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,919]DEBUG 24082[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[33]]
[2015-12-30 00:48:09,921]DEBUG 24084[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,921]DEBUG 24084[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 33, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,922]DEBUG 24085[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,922]DEBUG 24085[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,923]DEBUG 24086[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[34]]
[2015-12-30 00:48:09,924]DEBUG 24087[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,924]DEBUG 24087[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 34, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,924]DEBUG 24087[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,924]DEBUG 24087[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,926]DEBUG 24089[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[35]]
[2015-12-30 00:48:09,926]DEBUG 24089[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,926]DEBUG 24089[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 35, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,927]DEBUG 24090[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,928]DEBUG 24091[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:09,929]DEBUG 24092[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[36]]
[2015-12-30 00:48:09,929]DEBUG 24092[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,929]DEBUG 24092[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 36, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:09,930]DEBUG 24093[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,931]DEBUG 24094[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,931]DEBUG 24094[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,931]DEBUG 24094[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,931]DEBUG 24094[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,932]DEBUG 24095[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,932]DEBUG 24095[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,932]DEBUG 24095[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,932]DEBUG 24095[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,933]DEBUG 24096[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 00:48:09,933]DEBUG 24096[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,933]DEBUG 24096[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:09,933]DEBUG 24096[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,934]DEBUG 24097[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:09,934]DEBUG 24097[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,934]DEBUG 24097[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:09,934]DEBUG 24097[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:09,935]DEBUG 24098[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:09,935]DEBUG 24098[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:09,937]DEBUG 24100[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,938]DEBUG 24101[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,938]DEBUG 24101[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_ where this_.TypeName=? and this_.ID<=?
[2015-12-30 00:48:09,939]DEBUG 24102[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:09,940]DEBUG 24103[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#33]
[2015-12-30 00:48:09,940]DEBUG 24103[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:09,940]DEBUG 24103[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,941]DEBUG 24104[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:09,941]DEBUG 24104[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,941]DEBUG 24104[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,942]DEBUG 24105[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,942]DEBUG 24105[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,942]DEBUG 24105[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,942]DEBUG 24105[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,943]DEBUG 24106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,943]DEBUG 24106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,943]DEBUG 24106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,943]DEBUG 24106[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,944]DEBUG 24107[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:09,945]DEBUG 24108[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,946]DEBUG 24109[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,946]DEBUG 24109[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,946]DEBUG 24109[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,947]DEBUG 24110[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,947]DEBUG 24110[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,947]DEBUG 24110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,947]DEBUG 24110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,948]DEBUG 24111[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,948]DEBUG 24111[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,948]DEBUG 24111[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,948]DEBUG 24111[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:09,950]DEBUG 24113[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,950]DEBUG 24113[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,950]DEBUG 24113[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,951]DEBUG 24114[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,951]DEBUG 24114[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,951]DEBUG 24114[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,951]DEBUG 24114[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,952]DEBUG 24115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,952]DEBUG 24115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,952]DEBUG 24115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,952]DEBUG 24115[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,953]DEBUG 24116[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:09,954]DEBUG 24117[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,954]DEBUG 24117[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,957]DEBUG 24120[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,957]DEBUG 24120[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,957]DEBUG 24120[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,958]DEBUG 24121[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,958]DEBUG 24121[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,958]DEBUG 24121[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,958]DEBUG 24121[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,959]DEBUG 24122[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,959]DEBUG 24122[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,959]DEBUG 24122[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:09,960]DEBUG 24123[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,961]DEBUG 24124[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,961]DEBUG 24124[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,962]DEBUG 24125[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,962]DEBUG 24125[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,962]DEBUG 24125[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,962]DEBUG 24125[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,962]DEBUG 24125[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,963]DEBUG 24126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,963]DEBUG 24126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,963]DEBUG 24126[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,963]DEBUG 24126[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:09,965]DEBUG 24128[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,965]DEBUG 24128[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,965]DEBUG 24128[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,966]DEBUG 24129[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,966]DEBUG 24129[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,966]DEBUG 24129[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,966]DEBUG 24129[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,967]DEBUG 24130[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,967]DEBUG 24130[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,967]DEBUG 24130[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,967]DEBUG 24130[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,968]DEBUG 24131[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:09,969]DEBUG 24132[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,969]DEBUG 24132[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,970]DEBUG 24133[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,970]DEBUG 24133[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,970]DEBUG 24133[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,970]DEBUG 24133[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,971]DEBUG 24134[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,971]DEBUG 24134[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,971]DEBUG 24134[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,971]DEBUG 24134[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,972]DEBUG 24135[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,972]DEBUG 24135[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:09,974]DEBUG 24137[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,974]DEBUG 24137[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,974]DEBUG 24137[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,975]DEBUG 24138[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,975]DEBUG 24138[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,975]DEBUG 24138[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,975]DEBUG 24138[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,975]DEBUG 24138[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,976]DEBUG 24139[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,976]DEBUG 24139[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,976]DEBUG 24139[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,976]DEBUG 24139[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:09,978]DEBUG 24141[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,978]DEBUG 24141[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:09,978]DEBUG 24141[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:09,980]DEBUG 24143[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:09,980]DEBUG 24143[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:09,980]DEBUG 24143[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:09,980]DEBUG 24143[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,980]DEBUG 24143[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,981]DEBUG 24144[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,981]DEBUG 24144[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:09,981]DEBUG 24144[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:09,981]DEBUG 24144[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:09,983]DEBUG 24146[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:09,983]DEBUG 24146[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@65edd283, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:09,983]DEBUG 24146[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:09,984]DEBUG 24147[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6836bc4a]
[2015-12-30 00:48:09,984]DEBUG 24147[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:09,985]DEBUG 24148[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:09,985]DEBUG 24148[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,985]DEBUG 24148[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6836bc4a] after transaction
[2015-12-30 00:48:09,985]DEBUG 24148[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:09,986]DEBUG 24149[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:09,986]DEBUG 24149[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:09,986] INFO 24149[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@65edd283, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:09,987]DEBUG 24150[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@65edd283, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:09,988]DEBUG 24151[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:09,988]DEBUG 24151[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:09,988]DEBUG 24151[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@272bee28, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:09,989]DEBUG 24152[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:09,989]DEBUG 24152[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:09,989]DEBUG 24152[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:09,989]DEBUG 24152[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:09,992]DEBUG 24155[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:09,992]DEBUG 24155[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:09,992]DEBUG 24155[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:09,992]DEBUG 24155[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:09,993]DEBUG 24156[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:09,993]DEBUG 24156[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:09,993]DEBUG 24156[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:09,993]DEBUG 24156[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:09,993]DEBUG 24156[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:09,994]DEBUG 24157[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:09,994]DEBUG 24157[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:09,994]DEBUG 24157[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:09,994]DEBUG 24157[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:09,994]DEBUG 24157[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:09,995]DEBUG 24158[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:09,995]DEBUG 24158[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:09,995]DEBUG 24158[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:09,995]DEBUG 24158[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:09,996]DEBUG 24159[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@272bee28]
[2015-12-30 00:48:09,996]DEBUG 24159[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,997]DEBUG 24160[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@272bee28, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:09,997]DEBUG 24160[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:09,998]DEBUG 24161[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:09,998]DEBUG 24161[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292899
[2015-12-30 00:48:09,998]DEBUG 24161[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@8b537a1] for Hibernate transaction
[2015-12-30 00:48:09,998]DEBUG 24161[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@8b537a1]
[2015-12-30 00:48:09,999]DEBUG 24162[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:09,999]DEBUG 24162[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:09,999]DEBUG 24162[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:09,999]DEBUG 24162[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@272bee28, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:09,999] INFO 24162[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:10,000]DEBUG 24163[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,000]DEBUG 24163[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,002]DEBUG 24165[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[37]]
[2015-12-30 00:48:10,002]DEBUG 24165[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,002]DEBUG 24165[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 37, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,002]DEBUG 24165[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,003]DEBUG 24166[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,004]DEBUG 24167[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[38]]
[2015-12-30 00:48:10,004]DEBUG 24167[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,004]DEBUG 24167[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 38, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,005]DEBUG 24168[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,005]DEBUG 24168[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,006]DEBUG 24169[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[39]]
[2015-12-30 00:48:10,006]DEBUG 24169[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,006]DEBUG 24169[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 39, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,007]DEBUG 24170[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,007]DEBUG 24170[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,008]DEBUG 24171[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[40]]
[2015-12-30 00:48:10,008]DEBUG 24171[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,009]DEBUG 24172[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 40, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,009]DEBUG 24172[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,009]DEBUG 24172[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,009]DEBUG 24172[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,009]DEBUG 24172[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,010]DEBUG 24173[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,010]DEBUG 24173[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,010]DEBUG 24173[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,010]DEBUG 24173[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,010]DEBUG 24173[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,010]DEBUG 24173[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 00:48:10,010]DEBUG 24173[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,010]DEBUG 24173[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,011]DEBUG 24174[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,011]DEBUG 24174[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,011]DEBUG 24174[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,011]DEBUG 24174[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,012]DEBUG 24175[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,012]DEBUG 24175[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,012]DEBUG 24175[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:10,014]DEBUG 24177[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,014]DEBUG 24177[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,015]DEBUG 24178[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_ where this_.TypeName=? and this_.ID<=?
[2015-12-30 00:48:10,016]DEBUG 24179[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,016]DEBUG 24179[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#37]
[2015-12-30 00:48:10,016]DEBUG 24179[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,016]DEBUG 24179[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,017]DEBUG 24180[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,017]DEBUG 24180[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,017]DEBUG 24180[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,017]DEBUG 24180[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,018]DEBUG 24181[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,018]DEBUG 24181[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,019]DEBUG 24182[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,019]DEBUG 24182[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,019]DEBUG 24182[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,019]DEBUG 24182[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,019]DEBUG 24182[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,019]DEBUG 24182[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:10,021]DEBUG 24184[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,021]DEBUG 24184[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,021]DEBUG 24184[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,021]DEBUG 24184[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,021]DEBUG 24184[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,022]DEBUG 24185[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,022]DEBUG 24185[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,022]DEBUG 24185[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,022]DEBUG 24185[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,023]DEBUG 24186[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,023]DEBUG 24186[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,023]DEBUG 24186[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:10,024]DEBUG 24187[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,025]DEBUG 24188[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,025]DEBUG 24188[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,025]DEBUG 24188[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,025]DEBUG 24188[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,025]DEBUG 24188[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,025]DEBUG 24188[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,025]DEBUG 24188[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,025]DEBUG 24188[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,025]DEBUG 24188[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,026]DEBUG 24189[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,026]DEBUG 24189[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:10,027]DEBUG 24190[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,027]DEBUG 24190[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,028]DEBUG 24191[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,028]DEBUG 24191[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,028]DEBUG 24191[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,029]DEBUG 24192[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,029]DEBUG 24192[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,029]DEBUG 24192[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,029]DEBUG 24192[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,030]DEBUG 24193[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,030]DEBUG 24193[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,030]DEBUG 24193[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:10,031]DEBUG 24194[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,032]DEBUG 24195[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,032]DEBUG 24195[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,032]DEBUG 24195[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,032]DEBUG 24195[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,033]DEBUG 24196[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,033]DEBUG 24196[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,033]DEBUG 24196[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,033]DEBUG 24196[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,034]DEBUG 24197[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,034]DEBUG 24197[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,034]DEBUG 24197[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:10,035]DEBUG 24198[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,036]DEBUG 24199[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,036]DEBUG 24199[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,036]DEBUG 24199[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,036]DEBUG 24199[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,037]DEBUG 24200[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,037]DEBUG 24200[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,037]DEBUG 24200[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,037]DEBUG 24200[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,038]DEBUG 24201[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,038]DEBUG 24201[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,038]DEBUG 24201[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:10,039]DEBUG 24202[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,040]DEBUG 24203[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,040]DEBUG 24203[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,040]DEBUG 24203[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,041]DEBUG 24204[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,041]DEBUG 24204[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,041]DEBUG 24204[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,041]DEBUG 24204[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,042]DEBUG 24205[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,042]DEBUG 24205[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,042]DEBUG 24205[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,042]DEBUG 24205[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:10,044]DEBUG 24207[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,044]DEBUG 24207[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,044]DEBUG 24207[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,045]DEBUG 24208[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,045]DEBUG 24208[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,045]DEBUG 24208[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,046]DEBUG 24209[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,046]DEBUG 24209[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,048]DEBUG 24211[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,048]DEBUG 24211[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,049]DEBUG 24212[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,049]DEBUG 24212[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:10,050]DEBUG 24213[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,051]DEBUG 24214[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,051]DEBUG 24214[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,051]DEBUG 24214[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,052]DEBUG 24215[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,052]DEBUG 24215[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,052]DEBUG 24215[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,052]DEBUG 24215[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,052]DEBUG 24215[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,053]DEBUG 24216[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,053]DEBUG 24216[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,053]DEBUG 24216[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:10,054]DEBUG 24217[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,055]DEBUG 24218[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@272bee28, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,055]DEBUG 24218[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:10,055]DEBUG 24218[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@8b537a1]
[2015-12-30 00:48:10,055]DEBUG 24218[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:10,057]DEBUG 24220[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:10,057]DEBUG 24220[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,057]DEBUG 24220[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@8b537a1] after transaction
[2015-12-30 00:48:10,057]DEBUG 24220[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:10,057]DEBUG 24220[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:10,058]DEBUG 24221[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,058] INFO 24221[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@272bee28, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,059]DEBUG 24222[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@272bee28, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:10,060]DEBUG 24223[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:10,060]DEBUG 24223[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:10,060]DEBUG 24223[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1a3af1cf, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:10,060]DEBUG 24223[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:10,061]DEBUG 24224[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:10,061]DEBUG 24224[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:10,061]DEBUG 24224[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:10,061]DEBUG 24224[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:10,062]DEBUG 24225[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:10,062]DEBUG 24225[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:10,062]DEBUG 24225[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:10,062]DEBUG 24225[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:10,062]DEBUG 24225[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:10,063]DEBUG 24226[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:10,063]DEBUG 24226[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:10,063]DEBUG 24226[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:10,063]DEBUG 24226[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:10,063]DEBUG 24226[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:10,064]DEBUG 24227[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:10,064]DEBUG 24227[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:10,064]DEBUG 24227[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:10,064]DEBUG 24227[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:10,064]DEBUG 24227[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:10,065]DEBUG 24228[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:10,065]DEBUG 24228[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:10,065]DEBUG 24228[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1a3af1cf]
[2015-12-30 00:48:10,065]DEBUG 24228[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,065]DEBUG 24228[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1a3af1cf, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,065]DEBUG 24228[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:10,066]DEBUG 24229[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,066]DEBUG 24229[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292900
[2015-12-30 00:48:10,066]DEBUG 24229[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@381b21b7] for Hibernate transaction
[2015-12-30 00:48:10,066]DEBUG 24229[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@381b21b7]
[2015-12-30 00:48:10,066]DEBUG 24229[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:10,066]DEBUG 24229[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:10,067]DEBUG 24230[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:10,067]DEBUG 24230[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1a3af1cf, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,067] INFO 24230[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:10,067]DEBUG 24230[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,067]DEBUG 24230[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,068]DEBUG 24231[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[41]]
[2015-12-30 00:48:10,068]DEBUG 24231[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,069]DEBUG 24232[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 41, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,069]DEBUG 24232[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,069]DEBUG 24232[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,070]DEBUG 24233[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[42]]
[2015-12-30 00:48:10,070]DEBUG 24233[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,071]DEBUG 24234[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 42, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,071]DEBUG 24234[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,071]DEBUG 24234[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,072]DEBUG 24235[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[43]]
[2015-12-30 00:48:10,073]DEBUG 24236[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,073]DEBUG 24236[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 43, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,073]DEBUG 24236[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,078]DEBUG 24241[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,079]DEBUG 24242[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[44]]
[2015-12-30 00:48:10,079]DEBUG 24242[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,082]DEBUG 24245[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 44, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,082]DEBUG 24245[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,083]DEBUG 24246[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,083]DEBUG 24246[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,083]DEBUG 24246[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,083]DEBUG 24246[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,084]DEBUG 24247[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,084]DEBUG 24247[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,084]DEBUG 24247[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,084]DEBUG 24247[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,084]DEBUG 24247[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 00:48:10,085]DEBUG 24248[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,085]DEBUG 24248[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,085]DEBUG 24248[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,085]DEBUG 24248[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,085]DEBUG 24248[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,085]DEBUG 24248[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,086]DEBUG 24249[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,086]DEBUG 24249[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,086]DEBUG 24249[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:10,088]DEBUG 24251[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,088]DEBUG 24251[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,088]DEBUG 24251[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 00:48:10,090]DEBUG 24253[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,090]DEBUG 24253[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#41]
[2015-12-30 00:48:10,090]DEBUG 24253[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,090]DEBUG 24253[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,091]DEBUG 24254[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,091]DEBUG 24254[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,091]DEBUG 24254[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,091]DEBUG 24254[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,091]DEBUG 24254[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,092]DEBUG 24255[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,092]DEBUG 24255[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,092]DEBUG 24255[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,092]DEBUG 24255[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,093]DEBUG 24256[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,093]DEBUG 24256[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,093]DEBUG 24256[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:10,094]DEBUG 24257[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,095]DEBUG 24258[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,095]DEBUG 24258[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,095]DEBUG 24258[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,095]DEBUG 24258[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,096]DEBUG 24259[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,096]DEBUG 24259[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,096]DEBUG 24259[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,096]DEBUG 24259[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,097]DEBUG 24260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,097]DEBUG 24260[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,097]DEBUG 24260[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:10,098]DEBUG 24261[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,099]DEBUG 24262[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,099]DEBUG 24262[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,099]DEBUG 24262[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,099]DEBUG 24262[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,099]DEBUG 24262[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,100]DEBUG 24263[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,100]DEBUG 24263[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,100]DEBUG 24263[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,100]DEBUG 24263[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,100]DEBUG 24263[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,100]DEBUG 24263[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:10,101]DEBUG 24264[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,102]DEBUG 24265[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,102]DEBUG 24265[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,102]DEBUG 24265[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,102]DEBUG 24265[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,102]DEBUG 24265[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,102]DEBUG 24265[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,102]DEBUG 24265[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,103]DEBUG 24266[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,103]DEBUG 24266[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,103]DEBUG 24266[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,103]DEBUG 24266[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:10,104]DEBUG 24267[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,104]DEBUG 24267[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,104]DEBUG 24267[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,104]DEBUG 24267[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,105]DEBUG 24268[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,105]DEBUG 24268[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,105]DEBUG 24268[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,105]DEBUG 24268[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,105]DEBUG 24268[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,106]DEBUG 24269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,108]DEBUG 24271[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,108]DEBUG 24271[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:10,110]DEBUG 24273[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,110]DEBUG 24273[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,110]DEBUG 24273[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,111]DEBUG 24274[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,111]DEBUG 24274[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,111]DEBUG 24274[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,111]DEBUG 24274[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,112]DEBUG 24275[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,112]DEBUG 24275[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,112]DEBUG 24275[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,112]DEBUG 24275[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,113]DEBUG 24276[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:10,114]DEBUG 24277[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,114]DEBUG 24277[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,114]DEBUG 24277[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,115]DEBUG 24278[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,115]DEBUG 24278[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,115]DEBUG 24278[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,115]DEBUG 24278[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,116]DEBUG 24279[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,116]DEBUG 24279[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,116]DEBUG 24279[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,116]DEBUG 24279[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,117]DEBUG 24280[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:10,118]DEBUG 24281[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,118]DEBUG 24281[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,119]DEBUG 24282[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,119]DEBUG 24282[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,119]DEBUG 24282[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,119]DEBUG 24282[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,120]DEBUG 24283[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,120]DEBUG 24283[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,120]DEBUG 24283[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,120]DEBUG 24283[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,121]DEBUG 24284[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,121]DEBUG 24284[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:10,122]DEBUG 24285[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,123]DEBUG 24286[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,123]DEBUG 24286[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,123]DEBUG 24286[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,123]DEBUG 24286[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,124]DEBUG 24287[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,124]DEBUG 24287[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,124]DEBUG 24287[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,124]DEBUG 24287[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,125]DEBUG 24288[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,125]DEBUG 24288[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,125]DEBUG 24288[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:10,126]DEBUG 24289[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,127]DEBUG 24290[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1a3af1cf, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,127]DEBUG 24290[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:10,127]DEBUG 24290[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@381b21b7]
[2015-12-30 00:48:10,127]DEBUG 24290[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:10,128]DEBUG 24291[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:10,129]DEBUG 24292[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,129]DEBUG 24292[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@381b21b7] after transaction
[2015-12-30 00:48:10,129]DEBUG 24292[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:10,129]DEBUG 24292[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:10,129]DEBUG 24292[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,130] INFO 24293[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1a3af1cf, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,131]DEBUG 24294[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1a3af1cf, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:10,131]DEBUG 24294[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:10,132]DEBUG 24295[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:10,132]DEBUG 24295[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@539a1a11, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:10,132]DEBUG 24295[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:10,133]DEBUG 24296[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:10,133]DEBUG 24296[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:10,133]DEBUG 24296[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:10,133]DEBUG 24296[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:10,133]DEBUG 24296[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:10,134]DEBUG 24297[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:10,134]DEBUG 24297[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:10,134]DEBUG 24297[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:10,134]DEBUG 24297[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:10,134]DEBUG 24297[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:10,135]DEBUG 24298[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:10,135]DEBUG 24298[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:10,135]DEBUG 24298[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:10,135]DEBUG 24298[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:10,135]DEBUG 24298[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:10,136]DEBUG 24299[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:10,136]DEBUG 24299[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:10,136]DEBUG 24299[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:10,136]DEBUG 24299[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:10,136]DEBUG 24299[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:10,137]DEBUG 24300[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:10,137]DEBUG 24300[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@539a1a11]
[2015-12-30 00:48:10,140]DEBUG 24303[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetStandartTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,140]DEBUG 24303[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@539a1a11, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,140]DEBUG 24303[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:10,141]DEBUG 24304[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetStandartTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,142]DEBUG 24305[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292901
[2015-12-30 00:48:10,142]DEBUG 24305[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@486e758c] for Hibernate transaction
[2015-12-30 00:48:10,142]DEBUG 24305[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@486e758c]
[2015-12-30 00:48:10,142]DEBUG 24305[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:10,142]DEBUG 24305[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:10,143]DEBUG 24306[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:10,143]DEBUG 24306[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@539a1a11, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,143] INFO 24306[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:10,143]DEBUG 24306[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,144]DEBUG 24307[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,145]DEBUG 24308[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[45]]
[2015-12-30 00:48:10,145]DEBUG 24308[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,146]DEBUG 24309[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 45, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,146]DEBUG 24309[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,146]DEBUG 24309[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,148]DEBUG 24311[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[46]]
[2015-12-30 00:48:10,148]DEBUG 24311[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,148]DEBUG 24311[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 46, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,148]DEBUG 24311[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,149]DEBUG 24312[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,150]DEBUG 24313[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[47]]
[2015-12-30 00:48:10,150]DEBUG 24313[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,150]DEBUG 24313[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 47, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,150]DEBUG 24313[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,150]DEBUG 24313[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,152]DEBUG 24315[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[48]]
[2015-12-30 00:48:10,152]DEBUG 24315[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,152]DEBUG 24315[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 48, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,152]DEBUG 24315[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,152]DEBUG 24315[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,152]DEBUG 24315[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,152]DEBUG 24315[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,153]DEBUG 24316[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,153]DEBUG 24316[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,153]DEBUG 24316[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,153]DEBUG 24316[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,153]DEBUG 24316[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,153]DEBUG 24316[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 00:48:10,153]DEBUG 24316[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,153]DEBUG 24316[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,154]DEBUG 24317[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,154]DEBUG 24317[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,154]DEBUG 24317[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,154]DEBUG 24317[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,154]DEBUG 24317[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,154]DEBUG 24317[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,154]DEBUG 24317[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:10,157]DEBUG 24320[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,157]DEBUG 24320[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,157]DEBUG 24320[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 00:48:10,159]DEBUG 24322[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,159]DEBUG 24322[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#45]
[2015-12-30 00:48:10,159]DEBUG 24322[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,160]DEBUG 24323[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,160]DEBUG 24323[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,160]DEBUG 24323[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,161]DEBUG 24324[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,161]DEBUG 24324[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,161]DEBUG 24324[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,161]DEBUG 24324[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,162]DEBUG 24325[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,162]DEBUG 24325[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,162]DEBUG 24325[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,162]DEBUG 24325[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,163]DEBUG 24326[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,163]DEBUG 24326[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:10,164]DEBUG 24327[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,164]DEBUG 24327[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,165]DEBUG 24328[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,165]DEBUG 24328[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,165]DEBUG 24328[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,165]DEBUG 24328[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,166]DEBUG 24329[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,169]DEBUG 24332[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,169]DEBUG 24332[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,169]DEBUG 24332[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,169]DEBUG 24332[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,170]DEBUG 24333[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:10,177]DEBUG 24340[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,177]DEBUG 24340[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,177]DEBUG 24340[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,178]DEBUG 24341[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,178]DEBUG 24341[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,178]DEBUG 24341[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,178]DEBUG 24341[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,179]DEBUG 24342[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,179]DEBUG 24342[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,179]DEBUG 24342[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,179]DEBUG 24342[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,180]DEBUG 24343[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:10,181]DEBUG 24344[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,181]DEBUG 24344[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,181]DEBUG 24344[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,182]DEBUG 24345[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,182]DEBUG 24345[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,182]DEBUG 24345[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,182]DEBUG 24345[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,183]DEBUG 24346[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,183]DEBUG 24346[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,183]DEBUG 24346[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,183]DEBUG 24346[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,184]DEBUG 24347[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:10,186]DEBUG 24349[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,186]DEBUG 24349[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,187]DEBUG 24350[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,187]DEBUG 24350[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,187]DEBUG 24350[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,188]DEBUG 24351[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,189]DEBUG 24352[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,189]DEBUG 24352[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,189]DEBUG 24352[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,189]DEBUG 24352[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,191]DEBUG 24354[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,191]DEBUG 24354[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:10,192]DEBUG 24355[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,193]DEBUG 24356[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,193]DEBUG 24356[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,193]DEBUG 24356[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,193]DEBUG 24356[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,193]DEBUG 24356[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,193]DEBUG 24356[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,193]DEBUG 24356[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,194]DEBUG 24357[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,194]DEBUG 24357[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,194]DEBUG 24357[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,194]DEBUG 24357[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:10,195]DEBUG 24358[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,195]DEBUG 24358[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,196]DEBUG 24359[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,196]DEBUG 24359[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,196]DEBUG 24359[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,196]DEBUG 24359[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,196]DEBUG 24359[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,196]DEBUG 24359[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,196]DEBUG 24359[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,196]DEBUG 24359[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,196]DEBUG 24359[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,197]DEBUG 24360[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:10,198]DEBUG 24361[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,198]DEBUG 24361[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,198]DEBUG 24361[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,198]DEBUG 24361[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,198]DEBUG 24361[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,198]DEBUG 24361[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,199]DEBUG 24362[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,199]DEBUG 24362[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,199]DEBUG 24362[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,199]DEBUG 24362[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,199]DEBUG 24362[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,199]DEBUG 24362[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:10,200]DEBUG 24363[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,200]DEBUG 24363[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,201]DEBUG 24364[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,201]DEBUG 24364[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,201]DEBUG 24364[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,201]DEBUG 24364[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,201]DEBUG 24364[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,201]DEBUG 24364[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,201]DEBUG 24364[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,201]DEBUG 24364[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,201]DEBUG 24364[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,202]DEBUG 24365[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:10,203]DEBUG 24366[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,203]DEBUG 24366[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@539a1a11, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,203]DEBUG 24366[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:10,203]DEBUG 24366[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@486e758c]
[2015-12-30 00:48:10,204]DEBUG 24367[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:10,206]DEBUG 24369[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:10,206]DEBUG 24369[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,206]DEBUG 24369[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@486e758c] after transaction
[2015-12-30 00:48:10,206]DEBUG 24369[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:10,206]DEBUG 24369[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:10,206]DEBUG 24369[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,207] INFO 24370[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@539a1a11, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,207]DEBUG 24370[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@539a1a11, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:10,208]DEBUG 24371[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:10,208]DEBUG 24371[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:10,208]DEBUG 24371[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3dc78904, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:10,208]DEBUG 24371[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:10,208]DEBUG 24371[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:10,209]DEBUG 24372[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:10,209]DEBUG 24372[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:10,209]DEBUG 24372[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:10,209]DEBUG 24372[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:10,209]DEBUG 24372[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:10,209]DEBUG 24372[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:10,209]DEBUG 24372[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:10,209]DEBUG 24372[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:10,209]DEBUG 24372[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:10,210]DEBUG 24373[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:10,210]DEBUG 24373[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:10,210]DEBUG 24373[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:10,210]DEBUG 24373[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:10,210]DEBUG 24373[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:10,210]DEBUG 24373[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:10,210]DEBUG 24373[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:10,210]DEBUG 24373[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:10,211]DEBUG 24374[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:10,211]DEBUG 24374[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:10,211]DEBUG 24374[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:10,211]DEBUG 24374[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3dc78904]
[2015-12-30 00:48:10,212]DEBUG 24375[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSilverTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,212]DEBUG 24375[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3dc78904, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,212]DEBUG 24375[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:10,213]DEBUG 24376[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetSilverTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,213]DEBUG 24376[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292902
[2015-12-30 00:48:10,213]DEBUG 24376[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7fbc9ac5] for Hibernate transaction
[2015-12-30 00:48:10,213]DEBUG 24376[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7fbc9ac5]
[2015-12-30 00:48:10,213]DEBUG 24376[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:10,213]DEBUG 24376[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:10,213]DEBUG 24376[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:10,213]DEBUG 24376[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3dc78904, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,214] INFO 24377[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:10,214]DEBUG 24377[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,214]DEBUG 24377[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,215]DEBUG 24378[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[49]]
[2015-12-30 00:48:10,215]DEBUG 24378[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,216]DEBUG 24379[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 49, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,216]DEBUG 24379[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,216]DEBUG 24379[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,217]DEBUG 24380[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[50]]
[2015-12-30 00:48:10,217]DEBUG 24380[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,218]DEBUG 24381[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 50, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,218]DEBUG 24381[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,218]DEBUG 24381[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,220]DEBUG 24383[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[51]]
[2015-12-30 00:48:10,220]DEBUG 24383[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,220]DEBUG 24383[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 51, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,220]DEBUG 24383[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,221]DEBUG 24384[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,222]DEBUG 24385[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[52]]
[2015-12-30 00:48:10,222]DEBUG 24385[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,223]DEBUG 24386[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 52, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,223]DEBUG 24386[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Silver
[2015-12-30 00:48:10,231]DEBUG 24394[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Silver'

[2015-12-30 00:48:10,231]DEBUG 24394[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:10,231]DEBUG 24394[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2015-12-30 00:48:10,232]DEBUG 24395[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2015-12-30 00:48:10,232]DEBUG 24395[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2015-12-30 00:48:10,233]DEBUG 24396[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@137f0ced
[2015-12-30 00:48:10,233]DEBUG 24396[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2015-12-30 00:48:10,233]DEBUG 24396[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2015-12-30 00:48:10,233]DEBUG 24396[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2015-12-30 00:48:10,234]DEBUG 24397[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2015-12-30 00:48:10,234]DEBUG 24397[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2015-12-30 00:48:10,234]DEBUG 24397[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2015-12-30 00:48:10,237]DEBUG 24400[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Silver, expectedType=org.hibernate.type.StringType@137f0ced}

[2015-12-30 00:48:10,237]DEBUG 24400[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:10,237]DEBUG 24400[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Silver
[2015-12-30 00:48:10,237]DEBUG 24400[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 00:48:10,238]DEBUG 24401[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:10,238]DEBUG 24401[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,238]DEBUG 24401[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,239]DEBUG 24402[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,239]DEBUG 24402[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,239]DEBUG 24402[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,239]DEBUG 24402[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,239]DEBUG 24402[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,239]DEBUG 24402[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,240]DEBUG 24403[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,240]DEBUG 24403[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 00:48:10,240]DEBUG 24403[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,240]DEBUG 24403[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,241]DEBUG 24404[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,241]DEBUG 24404[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,242]DEBUG 24405[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,242]DEBUG 24405[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,242]DEBUG 24405[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,242]DEBUG 24405[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,243]DEBUG 24406[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:10,245]DEBUG 24408[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,245]DEBUG 24408[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,246]DEBUG 24409[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 00:48:10,247]DEBUG 24410[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,247]DEBUG 24410[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#50]
[2015-12-30 00:48:10,247]DEBUG 24410[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,247]DEBUG 24410[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,247]DEBUG 24410[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,248]DEBUG 24411[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,248]DEBUG 24411[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,248]DEBUG 24411[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,248]DEBUG 24411[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,248]DEBUG 24411[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,248]DEBUG 24411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,248]DEBUG 24411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,248]DEBUG 24411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,249]DEBUG 24412[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,249]DEBUG 24412[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,249]DEBUG 24412[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:10,250]DEBUG 24413[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,250]DEBUG 24413[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,250]DEBUG 24413[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,250]DEBUG 24413[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,250]DEBUG 24413[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,251]DEBUG 24414[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,251]DEBUG 24414[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,251]DEBUG 24414[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,251]DEBUG 24414[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,251]DEBUG 24414[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,251]DEBUG 24414[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,251]DEBUG 24414[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:10,252]DEBUG 24415[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,253]DEBUG 24416[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,253]DEBUG 24416[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,253]DEBUG 24416[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,253]DEBUG 24416[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,253]DEBUG 24416[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,253]DEBUG 24416[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,253]DEBUG 24416[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,253]DEBUG 24416[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,253]DEBUG 24416[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,254]DEBUG 24417[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,254]DEBUG 24417[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:10,255]DEBUG 24418[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,255]DEBUG 24418[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,255]DEBUG 24418[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,256]DEBUG 24419[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,256]DEBUG 24419[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,256]DEBUG 24419[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,256]DEBUG 24419[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,257]DEBUG 24420[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,257]DEBUG 24420[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,257]DEBUG 24420[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,257]DEBUG 24420[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,258]DEBUG 24421[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:10,259]DEBUG 24422[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,259]DEBUG 24422[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,260]DEBUG 24423[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,262]DEBUG 24425[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,262]DEBUG 24425[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,263]DEBUG 24426[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,263]DEBUG 24426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,263]DEBUG 24426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,263]DEBUG 24426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,264]DEBUG 24427[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,264]DEBUG 24427[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,264]DEBUG 24427[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:10,265]DEBUG 24428[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,266]DEBUG 24429[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,266]DEBUG 24429[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,266]DEBUG 24429[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,266]DEBUG 24429[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,267]DEBUG 24430[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,267]DEBUG 24430[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,267]DEBUG 24430[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,267]DEBUG 24430[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,268]DEBUG 24431[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,268]DEBUG 24431[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,268]DEBUG 24431[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:10,270]DEBUG 24433[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,270]DEBUG 24433[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,270]DEBUG 24433[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,271]DEBUG 24434[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,271]DEBUG 24434[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,271]DEBUG 24434[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,271]DEBUG 24434[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,271]DEBUG 24434[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,272]DEBUG 24435[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,272]DEBUG 24435[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,272]DEBUG 24435[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,272]DEBUG 24435[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:10,274]DEBUG 24437[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,274]DEBUG 24437[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,274]DEBUG 24437[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,275]DEBUG 24438[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,275]DEBUG 24438[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,275]DEBUG 24438[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,275]DEBUG 24438[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,276]DEBUG 24439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,276]DEBUG 24439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,276]DEBUG 24439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,276]DEBUG 24439[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,277]DEBUG 24440[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:10,278]DEBUG 24441[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,278]DEBUG 24441[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,278]DEBUG 24441[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,279]DEBUG 24442[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,279]DEBUG 24442[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,279]DEBUG 24442[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,279]DEBUG 24442[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,280]DEBUG 24443[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,280]DEBUG 24443[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,280]DEBUG 24443[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,280]DEBUG 24443[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,281]DEBUG 24444[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:10,282]DEBUG 24445[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,282]DEBUG 24445[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3dc78904, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,282]DEBUG 24445[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:10,283]DEBUG 24446[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7fbc9ac5]
[2015-12-30 00:48:10,283]DEBUG 24446[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:10,284]DEBUG 24447[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:10,284]DEBUG 24447[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,284]DEBUG 24447[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7fbc9ac5] after transaction
[2015-12-30 00:48:10,285]DEBUG 24448[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:10,285]DEBUG 24448[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:10,285]DEBUG 24448[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,285] INFO 24448[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3dc78904, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,286]DEBUG 24449[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3dc78904, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:10,287]DEBUG 24450[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:10,287]DEBUG 24450[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:10,288]DEBUG 24451[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@38b33d2b, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:10,288]DEBUG 24451[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:10,288]DEBUG 24451[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:10,288]DEBUG 24451[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:10,289]DEBUG 24452[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:10,289]DEBUG 24452[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:10,289]DEBUG 24452[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:10,289]DEBUG 24452[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:10,289]DEBUG 24452[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:10,290]DEBUG 24453[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:10,290]DEBUG 24453[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:10,290]DEBUG 24453[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:10,290]DEBUG 24453[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:10,290]DEBUG 24453[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:10,291]DEBUG 24454[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:10,291]DEBUG 24454[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:10,291]DEBUG 24454[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:10,293]DEBUG 24456[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:10,293]DEBUG 24456[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:10,294]DEBUG 24457[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:10,294]DEBUG 24457[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:10,294]DEBUG 24457[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:10,294]DEBUG 24457[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:10,295]DEBUG 24458[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@38b33d2b]
[2015-12-30 00:48:10,295]DEBUG 24458[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetGoldTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,296]DEBUG 24459[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@38b33d2b, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,296]DEBUG 24459[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:10,297]DEBUG 24460[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetGoldTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,297]DEBUG 24460[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292902
[2015-12-30 00:48:10,297]DEBUG 24460[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7e779b1b] for Hibernate transaction
[2015-12-30 00:48:10,297]DEBUG 24460[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7e779b1b]
[2015-12-30 00:48:10,298]DEBUG 24461[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:10,298]DEBUG 24461[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:10,298]DEBUG 24461[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:10,298]DEBUG 24461[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@38b33d2b, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,298] INFO 24461[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:10,299]DEBUG 24462[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,299]DEBUG 24462[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,301]DEBUG 24464[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[53]]
[2015-12-30 00:48:10,301]DEBUG 24464[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,301]DEBUG 24464[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 53, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,302]DEBUG 24465[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,302]DEBUG 24465[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,303]DEBUG 24466[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[54]]
[2015-12-30 00:48:10,303]DEBUG 24466[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,304]DEBUG 24467[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 54, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,304]DEBUG 24467[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,304]DEBUG 24467[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,306]DEBUG 24469[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[55]]
[2015-12-30 00:48:10,306]DEBUG 24469[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,306]DEBUG 24469[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 55, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,306]DEBUG 24469[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,306]DEBUG 24469[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,307]DEBUG 24470[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[56]]
[2015-12-30 00:48:10,308]DEBUG 24471[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,308]DEBUG 24471[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 56, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,308]DEBUG 24471[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Gold
[2015-12-30 00:48:10,310]DEBUG 24473[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Gold'

[2015-12-30 00:48:10,310]DEBUG 24473[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:10,310]DEBUG 24473[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2015-12-30 00:48:10,310]DEBUG 24473[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2015-12-30 00:48:10,310]DEBUG 24473[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2015-12-30 00:48:10,311]DEBUG 24474[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@137f0ced
[2015-12-30 00:48:10,311]DEBUG 24474[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2015-12-30 00:48:10,311]DEBUG 24474[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2015-12-30 00:48:10,311]DEBUG 24474[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2015-12-30 00:48:10,311]DEBUG 24474[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2015-12-30 00:48:10,311]DEBUG 24474[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2015-12-30 00:48:10,312]DEBUG 24475[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2015-12-30 00:48:10,312]DEBUG 24475[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Gold, expectedType=org.hibernate.type.StringType@137f0ced}

[2015-12-30 00:48:10,312]DEBUG 24475[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:10,313]DEBUG 24476[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Gold
[2015-12-30 00:48:10,313]DEBUG 24476[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 00:48:10,313]DEBUG 24476[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:10,314]DEBUG 24477[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,314]DEBUG 24477[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,314]DEBUG 24477[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,314]DEBUG 24477[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,315]DEBUG 24478[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,315]DEBUG 24478[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,315]DEBUG 24478[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,315]DEBUG 24478[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,316]DEBUG 24479[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,316]DEBUG 24479[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 00:48:10,316]DEBUG 24479[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,316]DEBUG 24479[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,317]DEBUG 24480[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,317]DEBUG 24480[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,317]DEBUG 24480[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,318]DEBUG 24481[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,318]DEBUG 24481[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,320]DEBUG 24483[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,321]DEBUG 24484[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:10,323]DEBUG 24486[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,324]DEBUG 24487[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,324]DEBUG 24487[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 00:48:10,326]DEBUG 24489[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,326]DEBUG 24489[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#55]
[2015-12-30 00:48:10,326]DEBUG 24489[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,326]DEBUG 24489[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,327]DEBUG 24490[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,327]DEBUG 24490[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,327]DEBUG 24490[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,328]DEBUG 24491[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,328]DEBUG 24491[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,328]DEBUG 24491[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,328]DEBUG 24491[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,329]DEBUG 24492[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,329]DEBUG 24492[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,329]DEBUG 24492[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,329]DEBUG 24492[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,330]DEBUG 24493[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:10,331]DEBUG 24494[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,331]DEBUG 24494[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,331]DEBUG 24494[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,331]DEBUG 24494[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,331]DEBUG 24494[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,331]DEBUG 24494[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,332]DEBUG 24495[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,332]DEBUG 24495[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,332]DEBUG 24495[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,332]DEBUG 24495[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,332]DEBUG 24495[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,332]DEBUG 24495[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:10,333]DEBUG 24496[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,333]DEBUG 24496[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,334]DEBUG 24497[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,334]DEBUG 24497[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,334]DEBUG 24497[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,334]DEBUG 24497[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,334]DEBUG 24497[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,334]DEBUG 24497[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,334]DEBUG 24497[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,334]DEBUG 24497[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,335]DEBUG 24498[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,335]DEBUG 24498[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:10,336]DEBUG 24499[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,336]DEBUG 24499[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,336]DEBUG 24499[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,337]DEBUG 24500[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,337]DEBUG 24500[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,337]DEBUG 24500[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,337]DEBUG 24500[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,337]DEBUG 24500[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,337]DEBUG 24500[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,337]DEBUG 24500[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,337]DEBUG 24500[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,338]DEBUG 24501[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:10,339]DEBUG 24502[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,339]DEBUG 24502[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,339]DEBUG 24502[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,339]DEBUG 24502[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,340]DEBUG 24503[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,340]DEBUG 24503[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,340]DEBUG 24503[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,340]DEBUG 24503[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,341]DEBUG 24504[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,341]DEBUG 24504[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,341]DEBUG 24504[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,341]DEBUG 24504[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:10,343]DEBUG 24506[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,343]DEBUG 24506[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,343]DEBUG 24506[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,344]DEBUG 24507[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,344]DEBUG 24507[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,344]DEBUG 24507[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,344]DEBUG 24507[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,344]DEBUG 24507[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,344]DEBUG 24507[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,345]DEBUG 24508[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,345]DEBUG 24508[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,345]DEBUG 24508[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:10,346]DEBUG 24509[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,346]DEBUG 24509[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,346]DEBUG 24509[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,346]DEBUG 24509[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,346]DEBUG 24509[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,347]DEBUG 24510[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,348]DEBUG 24511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,348]DEBUG 24511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,348]DEBUG 24511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,348]DEBUG 24511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,348]DEBUG 24511[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,348]DEBUG 24511[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:10,350]DEBUG 24513[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,350]DEBUG 24513[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,350]DEBUG 24513[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,350]DEBUG 24513[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,350]DEBUG 24513[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,350]DEBUG 24513[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,350]DEBUG 24513[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,351]DEBUG 24514[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,351]DEBUG 24514[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,351]DEBUG 24514[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,351]DEBUG 24514[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,351]DEBUG 24514[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:10,352]DEBUG 24515[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,352]DEBUG 24515[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,352]DEBUG 24515[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,353]DEBUG 24516[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,353]DEBUG 24516[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,353]DEBUG 24516[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,353]DEBUG 24516[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,353]DEBUG 24516[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,353]DEBUG 24516[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,353]DEBUG 24516[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,353]DEBUG 24516[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,353]DEBUG 24516[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:10,354]DEBUG 24517[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,355]DEBUG 24518[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@38b33d2b, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,355]DEBUG 24518[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:10,355]DEBUG 24518[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7e779b1b]
[2015-12-30 00:48:10,355]DEBUG 24518[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:10,356]DEBUG 24519[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:10,356]DEBUG 24519[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,356]DEBUG 24519[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7e779b1b] after transaction
[2015-12-30 00:48:10,356]DEBUG 24519[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:10,356]DEBUG 24519[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:10,356]DEBUG 24519[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,357] INFO 24520[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@38b33d2b, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,357]DEBUG 24520[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@38b33d2b, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:10,357]DEBUG 24520[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:10,357]DEBUG 24520[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:10,358]DEBUG 24521[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@50440fd3, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:10,358]DEBUG 24521[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:10,358]DEBUG 24521[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:10,358]DEBUG 24521[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:10,358]DEBUG 24521[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:10,358]DEBUG 24521[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:10,358]DEBUG 24521[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:10,358]DEBUG 24521[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:10,359]DEBUG 24522[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:10,359]DEBUG 24522[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:10,359]DEBUG 24522[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:10,359]DEBUG 24522[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:10,359]DEBUG 24522[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:10,359]DEBUG 24522[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:10,359]DEBUG 24522[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:10,359]DEBUG 24522[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:10,359]DEBUG 24522[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:10,359]DEBUG 24522[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:10,359]DEBUG 24522[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:10,360]DEBUG 24523[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:10,360]DEBUG 24523[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:10,360]DEBUG 24523[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:10,360]DEBUG 24523[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:10,360]DEBUG 24523[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@50440fd3]
[2015-12-30 00:48:10,360]DEBUG 24523[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetPlatinumTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,360]DEBUG 24523[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@50440fd3, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,361]DEBUG 24524[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:10,361]DEBUG 24524[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetPlatinumTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,361]DEBUG 24524[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292903
[2015-12-30 00:48:10,361]DEBUG 24524[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2c8c3540] for Hibernate transaction
[2015-12-30 00:48:10,361]DEBUG 24524[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2c8c3540]
[2015-12-30 00:48:10,361]DEBUG 24524[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:10,361]DEBUG 24524[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:10,362]DEBUG 24525[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:10,362]DEBUG 24525[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@50440fd3, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,362] INFO 24525[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:10,362]DEBUG 24525[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,362]DEBUG 24525[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,363]DEBUG 24526[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[57]]
[2015-12-30 00:48:10,363]DEBUG 24526[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,364]DEBUG 24527[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 57, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,364]DEBUG 24527[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,364]DEBUG 24527[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,366]DEBUG 24529[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[58]]
[2015-12-30 00:48:10,366]DEBUG 24529[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,367]DEBUG 24530[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 58, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,368]DEBUG 24531[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,369]DEBUG 24532[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,370]DEBUG 24533[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[59]]
[2015-12-30 00:48:10,370]DEBUG 24533[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,371]DEBUG 24534[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 59, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,371]DEBUG 24534[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,371]DEBUG 24534[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,373]DEBUG 24536[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[60]]
[2015-12-30 00:48:10,373]DEBUG 24536[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,373]DEBUG 24536[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 60, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,374]DEBUG 24537[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Platinum
[2015-12-30 00:48:10,378]DEBUG 24541[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Platinum'

[2015-12-30 00:48:10,378]DEBUG 24541[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:10,378]DEBUG 24541[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2015-12-30 00:48:10,379]DEBUG 24542[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2015-12-30 00:48:10,379]DEBUG 24542[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2015-12-30 00:48:10,379]DEBUG 24542[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@137f0ced
[2015-12-30 00:48:10,380]DEBUG 24543[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2015-12-30 00:48:10,380]DEBUG 24543[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2015-12-30 00:48:10,380]DEBUG 24543[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2015-12-30 00:48:10,381]DEBUG 24544[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2015-12-30 00:48:10,381]DEBUG 24544[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2015-12-30 00:48:10,381]DEBUG 24544[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2015-12-30 00:48:10,382]DEBUG 24545[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Platinum, expectedType=org.hibernate.type.StringType@137f0ced}

[2015-12-30 00:48:10,382]DEBUG 24545[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:10,383]DEBUG 24546[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Platinum
[2015-12-30 00:48:10,383]DEBUG 24546[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 00:48:10,383]DEBUG 24546[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 00:48:10,383]DEBUG 24546[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,384]DEBUG 24547[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,384]DEBUG 24547[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,384]DEBUG 24547[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,384]DEBUG 24547[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,385]DEBUG 24548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,385]DEBUG 24548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,385]DEBUG 24548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,385]DEBUG 24548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,386]DEBUG 24549[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 00:48:10,387]DEBUG 24550[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,387]DEBUG 24550[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,387]DEBUG 24550[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,387]DEBUG 24550[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,387]DEBUG 24550[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,387]DEBUG 24550[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,388]DEBUG 24551[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,388]DEBUG 24551[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,388]DEBUG 24551[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:10,390]DEBUG 24553[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,390]DEBUG 24553[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,391]DEBUG 24554[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 00:48:10,392]DEBUG 24555[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,393]DEBUG 24556[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#60]
[2015-12-30 00:48:10,393]DEBUG 24556[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,393]DEBUG 24556[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,393]DEBUG 24556[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,393]DEBUG 24556[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,393]DEBUG 24556[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,393]DEBUG 24556[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,394]DEBUG 24557[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,394]DEBUG 24557[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,394]DEBUG 24557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,394]DEBUG 24557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,394]DEBUG 24557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,394]DEBUG 24557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,394]DEBUG 24557[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,394]DEBUG 24557[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:10,396]DEBUG 24559[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,396]DEBUG 24559[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,396]DEBUG 24559[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,397]DEBUG 24560[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,397]DEBUG 24560[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,399]DEBUG 24562[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,399]DEBUG 24562[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,399]DEBUG 24562[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,400]DEBUG 24563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,400]DEBUG 24563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,400]DEBUG 24563[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,400]DEBUG 24563[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:10,402]DEBUG 24565[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,402]DEBUG 24565[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,402]DEBUG 24565[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,402]DEBUG 24565[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,402]DEBUG 24565[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,402]DEBUG 24565[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,403]DEBUG 24566[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,403]DEBUG 24566[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,403]DEBUG 24566[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,403]DEBUG 24566[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,403]DEBUG 24566[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,403]DEBUG 24566[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:10,404]DEBUG 24567[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,405]DEBUG 24568[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,405]DEBUG 24568[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,405]DEBUG 24568[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,405]DEBUG 24568[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,405]DEBUG 24568[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,406]DEBUG 24569[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,406]DEBUG 24569[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,406]DEBUG 24569[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,406]DEBUG 24569[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,406]DEBUG 24569[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,406]DEBUG 24569[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:10,408]DEBUG 24571[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,408]DEBUG 24571[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,408]DEBUG 24571[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,408]DEBUG 24571[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,408]DEBUG 24571[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,409]DEBUG 24572[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,409]DEBUG 24572[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,409]DEBUG 24572[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,409]DEBUG 24572[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,409]DEBUG 24572[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,410]DEBUG 24573[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,410]DEBUG 24573[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:10,411]DEBUG 24574[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,411]DEBUG 24574[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,411]DEBUG 24574[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,412]DEBUG 24575[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,412]DEBUG 24575[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,412]DEBUG 24575[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,412]DEBUG 24575[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,412]DEBUG 24575[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,413]DEBUG 24576[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,413]DEBUG 24576[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,413]DEBUG 24576[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,413]DEBUG 24576[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:10,414]DEBUG 24577[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,415]DEBUG 24578[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,415]DEBUG 24578[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,415]DEBUG 24578[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,415]DEBUG 24578[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,415]DEBUG 24578[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,416]DEBUG 24579[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,416]DEBUG 24579[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,416]DEBUG 24579[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,416]DEBUG 24579[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,416]DEBUG 24579[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,416]DEBUG 24579[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:10,418]DEBUG 24581[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,418]DEBUG 24581[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,418]DEBUG 24581[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,419]DEBUG 24582[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,419]DEBUG 24582[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,419]DEBUG 24582[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,419]DEBUG 24582[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,420]DEBUG 24583[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,420]DEBUG 24583[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,420]DEBUG 24583[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,420]DEBUG 24583[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,421]DEBUG 24584[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:10,422]DEBUG 24585[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,422]DEBUG 24585[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,423]DEBUG 24586[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,423]DEBUG 24586[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,423]DEBUG 24586[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,423]DEBUG 24586[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,424]DEBUG 24587[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,424]DEBUG 24587[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,424]DEBUG 24587[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,425]DEBUG 24588[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,426]DEBUG 24589[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,426]DEBUG 24589[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:10,427]DEBUG 24590[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,427]DEBUG 24590[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@50440fd3, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,427]DEBUG 24590[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:10,427]DEBUG 24590[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2c8c3540]
[2015-12-30 00:48:10,427]DEBUG 24590[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:10,428]DEBUG 24591[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:10,429]DEBUG 24592[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,429]DEBUG 24592[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2c8c3540] after transaction
[2015-12-30 00:48:10,429]DEBUG 24592[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:10,429]DEBUG 24592[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:10,430]DEBUG 24593[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,430] INFO 24593[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@50440fd3, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 00:48:10,431]DEBUG 24594[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@50440fd3, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:10,432]DEBUG 24595[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:10,432]DEBUG 24595[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 00:48:10,432]DEBUG 24595[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1785ed6e, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:10,432]DEBUG 24595[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:10,433]DEBUG 24596[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:10,433]DEBUG 24596[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:10,433]DEBUG 24596[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:10,433]DEBUG 24596[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:10,434]DEBUG 24597[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:10,434]DEBUG 24597[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:10,434]DEBUG 24597[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:10,434]DEBUG 24597[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:10,434]DEBUG 24597[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:10,434]DEBUG 24597[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:10,435]DEBUG 24598[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:10,435]DEBUG 24598[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:10,435]DEBUG 24598[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:10,435]DEBUG 24598[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:10,435]DEBUG 24598[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:10,436]DEBUG 24599[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:10,436]DEBUG 24599[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:10,436]DEBUG 24599[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:10,436]DEBUG 24599[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:10,436]DEBUG 24599[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:10,437]DEBUG 24600[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:10,437]DEBUG 24600[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1785ed6e]
[2015-12-30 00:48:10,438]DEBUG 24601[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,438]DEBUG 24601[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1785ed6e, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:10,438]DEBUG 24601[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:10,439]DEBUG 24602[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,439]DEBUG 24602[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292904
[2015-12-30 00:48:10,440]DEBUG 24603[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2759c18f] for Hibernate transaction
[2015-12-30 00:48:10,440]DEBUG 24603[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2759c18f]
[2015-12-30 00:48:10,440]DEBUG 24603[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:10,440]DEBUG 24603[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:10,440]DEBUG 24603[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:10,441]DEBUG 24604[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1785ed6e, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:10,441] INFO 24604[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:10,441]DEBUG 24604[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,441]DEBUG 24604[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,443]DEBUG 24606[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[61]]
[2015-12-30 00:48:10,443]DEBUG 24606[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,443]DEBUG 24606[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 61, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,444]DEBUG 24607[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,444]DEBUG 24607[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,445]DEBUG 24608[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[62]]
[2015-12-30 00:48:10,446]DEBUG 24609[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,446]DEBUG 24609[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 62, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,446]DEBUG 24609[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,446]DEBUG 24609[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,448]DEBUG 24611[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[63]]
[2015-12-30 00:48:10,448]DEBUG 24611[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,448]DEBUG 24611[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 63, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,449]DEBUG 24612[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,449]DEBUG 24612[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,450]DEBUG 24613[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[64]]
[2015-12-30 00:48:10,451]DEBUG 24614[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,451]DEBUG 24614[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 64, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,451]DEBUG 24614[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,452]DEBUG 24615[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,452]DEBUG 24615[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,452]DEBUG 24615[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,452]DEBUG 24615[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,453]DEBUG 24616[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,453]DEBUG 24616[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,453]DEBUG 24616[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,453]DEBUG 24616[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,454]DEBUG 24617[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,454]DEBUG 24617[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 00:48:10,455]DEBUG 24618[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,457]DEBUG 24620[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,458]DEBUG 24621[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,458]DEBUG 24621[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,458]DEBUG 24621[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,458]DEBUG 24621[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,459]DEBUG 24622[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,459]DEBUG 24622[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,459]DEBUG 24622[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,459]DEBUG 24622[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,460]DEBUG 24623[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,460]DEBUG 24623[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 00:48:10,461]DEBUG 24624[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,461]DEBUG 24624[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,462]DEBUG 24625[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,462]DEBUG 24625[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,462]DEBUG 24625[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,462]DEBUG 24625[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,463]DEBUG 24626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,463]DEBUG 24626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,463]DEBUG 24626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,463]DEBUG 24626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,464]DEBUG 24627[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,464]DEBUG 24627[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:10,465]DEBUG 24628[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,465]DEBUG 24628[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,466]DEBUG 24629[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,468]DEBUG 24631[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,469]DEBUG 24632[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,469]DEBUG 24632[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,469]DEBUG 24632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,469]DEBUG 24632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,470]DEBUG 24633[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,470]DEBUG 24633[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,470]DEBUG 24633[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,470]DEBUG 24633[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 00:48:10,473]DEBUG 24636[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,473]DEBUG 24636[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,474]DEBUG 24637[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,474]DEBUG 24637[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,474]DEBUG 24637[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,474]DEBUG 24637[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,475]DEBUG 24638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,475]DEBUG 24638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,475]DEBUG 24638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,475]DEBUG 24638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,476]DEBUG 24639[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,476]DEBUG 24639[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 00:48:10,477]DEBUG 24640[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,478]DEBUG 24641[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,478]DEBUG 24641[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,478]DEBUG 24641[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,479]DEBUG 24642[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,479]DEBUG 24642[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,479]DEBUG 24642[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,479]DEBUG 24642[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,480]DEBUG 24643[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,480]DEBUG 24643[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,480]DEBUG 24643[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,480]DEBUG 24643[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 00:48:10,482]DEBUG 24645[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,482]DEBUG 24645[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,482]DEBUG 24645[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,483]DEBUG 24646[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,483]DEBUG 24646[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,483]DEBUG 24646[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,483]DEBUG 24646[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,483]DEBUG 24646[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,484]DEBUG 24647[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,484]DEBUG 24647[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,484]DEBUG 24647[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 00:48:10,484]DEBUG 24647[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,485]DEBUG 24648[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,485]DEBUG 24648[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,485]DEBUG 24648[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,485]DEBUG 24648[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,485]DEBUG 24648[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,485]DEBUG 24648[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,485]DEBUG 24648[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,486]DEBUG 24649[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 00:48:10,488]DEBUG 24651[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,488]DEBUG 24651[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,488]DEBUG 24651[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 00:48:10,489]DEBUG 24652[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,490]DEBUG 24653[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,490]DEBUG 24653[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,490]DEBUG 24653[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,490]DEBUG 24653[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,491]DEBUG 24654[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,491]DEBUG 24654[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,491]DEBUG 24654[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,492]DEBUG 24655[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,492]DEBUG 24655[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,492]DEBUG 24655[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,492]DEBUG 24655[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 00:48:10,493]DEBUG 24656[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,493]DEBUG 24656[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,493]DEBUG 24656[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,493]DEBUG 24656[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 00:48:10,494]DEBUG 24657[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,494]DEBUG 24657[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,494]DEBUG 24657[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,494]DEBUG 24657[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,494]DEBUG 24657[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,494]DEBUG 24657[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 00:48:10,494]DEBUG 24657[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,494]DEBUG 24657[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 00:48:10,495]DEBUG 24658[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,496]DEBUG 24659[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1785ed6e, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:10,496]DEBUG 24659[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:10,496]DEBUG 24659[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2759c18f]
[2015-12-30 00:48:10,496]DEBUG 24659[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:10,497]DEBUG 24660[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:10,497]DEBUG 24660[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,497]DEBUG 24660[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2759c18f] after transaction
[2015-12-30 00:48:10,497]DEBUG 24660[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:10,497]DEBUG 24660[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:10,497]DEBUG 24660[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,498] INFO 24661[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1785ed6e, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:10,498]DEBUG 24661[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1785ed6e, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:10,498]DEBUG 24661[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@7ca1e696 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2015-12-30 00:48:10,501]DEBUG 24664[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest].
[2015-12-30 00:48:10,502] INFO 24665[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: using defaults.
[2015-12-30 00:48:10,502]DEBUG 24665[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,502]DEBUG 24665[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,503]DEBUG 24666[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,504]DEBUG 24667[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,504]DEBUG 24667[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,504]DEBUG 24667[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,507]DEBUG 24670[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,507]DEBUG 24670[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,508]DEBUG 24671[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@77338e77, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:10,513]DEBUG 24676[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:10,513]DEBUG 24676[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:10,513]DEBUG 24676[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:10,513]DEBUG 24676[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:10,513]DEBUG 24676[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:10,513]DEBUG 24676[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:10,513]DEBUG 24676[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:10,513]DEBUG 24676[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:10,513]DEBUG 24676[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:10,514]DEBUG 24677[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:10,514]DEBUG 24677[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:10,514]DEBUG 24677[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:10,514]DEBUG 24677[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'customerTypeDao'
[2015-12-30 00:48:10,514]DEBUG 24677[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:10,514]DEBUG 24677[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:10,514]DEBUG 24677[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'dimensionDao'
[2015-12-30 00:48:10,515]DEBUG 24678[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:10,515]DEBUG 24678[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:10,515]DEBUG 24678[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'orderDao'
[2015-12-30 00:48:10,515]DEBUG 24678[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:10,515]DEBUG 24678[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:10,515]DEBUG 24678[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'orderItemDao'
[2015-12-30 00:48:10,515]DEBUG 24678[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:10,516]DEBUG 24679[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:10,516]DEBUG 24679[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'orderStatusDao'
[2015-12-30 00:48:10,516]DEBUG 24679[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:10,516]DEBUG 24679[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:10,516]DEBUG 24679[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'productDao'
[2015-12-30 00:48:10,516]DEBUG 24679[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:10,517]DEBUG 24680[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:10,517]DEBUG 24680[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'regionDao'
[2015-12-30 00:48:10,518]DEBUG 24681[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:10,518]DEBUG 24681[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:10,519]DEBUG 24682[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'roleDao'
[2015-12-30 00:48:10,519]DEBUG 24682[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:10,519]DEBUG 24682[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:10,519]DEBUG 24682[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'userDao'
[2015-12-30 00:48:10,519]DEBUG 24682[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:10,521]DEBUG 24684[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:10,521]DEBUG 24684[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'sessionFactory'
[2015-12-30 00:48:10,522]DEBUG 24685[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:10,522]DEBUG 24685[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,523]DEBUG 24686[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:10,523]DEBUG 24686[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@77338e77]
[2015-12-30 00:48:10,523]DEBUG 24686[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.setUp() throws java.lang.Exception
[2015-12-30 00:48:10,524]DEBUG 24687[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,524]DEBUG 24687[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.tearDown() throws java.lang.Exception
[2015-12-30 00:48:10,524]DEBUG 24687[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,524]DEBUG 24687[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testInsertOrUpdate()
[2015-12-30 00:48:10,524]DEBUG 24687[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,524]DEBUG 24687[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testDelete()
[2015-12-30 00:48:10,524]DEBUG 24687[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,525]DEBUG 24688[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testFindByCriterions()
[2015-12-30 00:48:10,525]DEBUG 24688[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,525]DEBUG 24688[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testFindByOneOfCriterions()
[2015-12-30 00:48:10,525]DEBUG 24688[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,525]DEBUG 24688[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByName()
[2015-12-30 00:48:10,525]DEBUG 24688[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,525]DEBUG 24688[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testcontainsProductByName()
[2015-12-30 00:48:10,526]DEBUG 24689[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,526]DEBUG 24689[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testnumberOfProductByName()
[2015-12-30 00:48:10,526]DEBUG 24689[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,526]DEBUG 24689[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByDescription()
[2015-12-30 00:48:10,526]DEBUG 24689[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,526]DEBUG 24689[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testcontainsProductByDescription()
[2015-12-30 00:48:10,527]DEBUG 24690[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,527]DEBUG 24690[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testnumberOfProductByDescription()
[2015-12-30 00:48:10,527]DEBUG 24690[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPrice' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,527]DEBUG 24690[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByPrice()
[2015-12-30 00:48:10,527]DEBUG 24690[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromTo' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,527]DEBUG 24690[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByPriceFromTo()
[2015-12-30 00:48:10,527]DEBUG 24690[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetRowCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,528]DEBUG 24691[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testGetRowCount()
[2015-12-30 00:48:10,528]DEBUG 24691[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,528]DEBUG 24691[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByID()
[2015-12-30 00:48:10,528]DEBUG 24691[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByNameSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,528]DEBUG 24691[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByNameSorting()
[2015-12-30 00:48:10,528]DEBUG 24691[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescriptionSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,529]DEBUG 24692[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByDescriptionSorting()
[2015-12-30 00:48:10,529]DEBUG 24692[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromToSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,529]DEBUG 24692[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByPriceFromToSorting()
[2015-12-30 00:48:10,529]DEBUG 24692[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2015-12-30 00:48:10,529]DEBUG 24692[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2015-12-30 00:48:10,529]DEBUG 24692[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2015-12-30 00:48:10,529]DEBUG 24692[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2015-12-30 00:48:10,529]DEBUG 24692[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2015-12-30 00:48:10,530]DEBUG 24693[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2015-12-30 00:48:10,530]DEBUG 24693[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2015-12-30 00:48:10,530]DEBUG 24693[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2015-12-30 00:48:10,530]DEBUG 24693[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2015-12-30 00:48:10,530]DEBUG 24693[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2015-12-30 00:48:10,530]DEBUG 24693[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,530]DEBUG 24693[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2015-12-30 00:48:10,530]DEBUG 24693[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2015-12-30 00:48:10,530]DEBUG 24693[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2015-12-30 00:48:10,531]DEBUG 24694[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2015-12-30 00:48:10,531]DEBUG 24694[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2015-12-30 00:48:10,531]DEBUG 24694[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2015-12-30 00:48:10,531]DEBUG 24694[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2015-12-30 00:48:10,531]DEBUG 24694[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:10,531]DEBUG 24694[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:10,531]DEBUG 24694[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2015-12-30 00:48:10,531]DEBUG 24694[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2015-12-30 00:48:10,531]DEBUG 24694[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2015-12-30 00:48:10,533]DEBUG 24696[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2015-12-30 00:48:10,533]DEBUG 24696[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2015-12-30 00:48:10,533]DEBUG 24696[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2015-12-30 00:48:10,533]DEBUG 24696[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2015-12-30 00:48:10,533]DEBUG 24696[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2015-12-30 00:48:10,533]DEBUG 24696[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2015-12-30 00:48:10,533]DEBUG 24696[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:10,534]DEBUG 24697[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:10,534]DEBUG 24697[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2015-12-30 00:48:10,534]DEBUG 24697[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:10,534]DEBUG 24697[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 00:48:10,534]DEBUG 24697[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2015-12-30 00:48:10,534]DEBUG 24697[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2015-12-30 00:48:10,534]DEBUG 24697[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2015-12-30 00:48:10,534]DEBUG 24697[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2015-12-30 00:48:10,534]DEBUG 24697[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2015-12-30 00:48:10,535]DEBUG 24698[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2015-12-30 00:48:10,547]DEBUG 24710[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,547]DEBUG 24710[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@77338e77, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,547]DEBUG 24710[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,547]DEBUG 24710[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@691996d4 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,547]DEBUG 24710[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:10,548]DEBUG 24711[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,548]DEBUG 24711[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292905
[2015-12-30 00:48:10,548]DEBUG 24711[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@10628e42] for Hibernate transaction
[2015-12-30 00:48:10,548]DEBUG 24711[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@10628e42]
[2015-12-30 00:48:10,548]DEBUG 24711[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:10,549]DEBUG 24712[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:10,549]DEBUG 24712[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:10,549]DEBUG 24712[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@77338e77, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,549] INFO 24712[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:10,549]DEBUG 24712[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,549]DEBUG 24712[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,551]DEBUG 24714[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[65]]
[2015-12-30 00:48:10,551]DEBUG 24714[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,551]DEBUG 24714[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 65, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,551]DEBUG 24714[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,551]DEBUG 24714[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,552]DEBUG 24715[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[66]]
[2015-12-30 00:48:10,552]DEBUG 24715[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,552]DEBUG 24715[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 66, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,553]DEBUG 24716[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,553]DEBUG 24716[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,554]DEBUG 24717[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[67]]
[2015-12-30 00:48:10,555]DEBUG 24718[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,555]DEBUG 24718[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 67, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,555]DEBUG 24718[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,555]DEBUG 24718[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,561]DEBUG 24724[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[68]]
[2015-12-30 00:48:10,562]DEBUG 24725[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,562]DEBUG 24725[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 68, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,562]DEBUG 24725[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,562]DEBUG 24725[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,565]DEBUG 24728[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[69]]
[2015-12-30 00:48:10,565]DEBUG 24728[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,565]DEBUG 24728[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 69, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,566]DEBUG 24729[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,566]DEBUG 24729[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,566]DEBUG 24729[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 5 insertions, 3 updates, 0 deletions to 5 objects
[2015-12-30 00:48:10,566]DEBUG 24729[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,566]DEBUG 24729[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,566]DEBUG 24729[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=65, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,566]DEBUG 24729[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=66, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,567]DEBUG 24730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=67, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,567]DEBUG 24730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=68, productDescription=productDescription, active=true, productPrice=400.0, productName=productName}
[2015-12-30 00:48:10,567]DEBUG 24730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=69, productDescription=productDescription2, active=true, productPrice=800.0, productName=productName2}
[2015-12-30 00:48:10,567]DEBUG 24730[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:48:10,567]DEBUG 24730[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,567]DEBUG 24730[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,574]DEBUG 24737[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,574]DEBUG 24737[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,574]DEBUG 24737[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,574]DEBUG 24737[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,574]DEBUG 24737[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,574]DEBUG 24737[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,575]DEBUG 24738[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,575]DEBUG 24738[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,575]DEBUG 24738[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 5
[2015-12-30 00:48:10,577]DEBUG 24740[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,578]DEBUG 24741[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,578]DEBUG 24741[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,578]DEBUG 24741[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,578]DEBUG 24741[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,578]DEBUG 24741[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,578]DEBUG 24741[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,579]DEBUG 24742[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:10,581]DEBUG 24744[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,581]DEBUG 24744[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,581]DEBUG 24744[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:10,583]DEBUG 24746[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,583]DEBUG 24746[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@77338e77, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,583]DEBUG 24746[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:10,583]DEBUG 24746[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@10628e42]
[2015-12-30 00:48:10,583]DEBUG 24746[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:10,584]DEBUG 24747[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:10,584]DEBUG 24747[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,584]DEBUG 24747[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@10628e42] after transaction
[2015-12-30 00:48:10,584]DEBUG 24747[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:10,585]DEBUG 24748[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:10,585]DEBUG 24748[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,585] INFO 24748[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@77338e77, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,586]DEBUG 24749[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@77338e77, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:10,587]DEBUG 24750[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,587]DEBUG 24750[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,588]DEBUG 24751[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@421912b9, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:10,588]DEBUG 24751[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:10,588]DEBUG 24751[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:10,588]DEBUG 24751[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:10,589]DEBUG 24752[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:10,589]DEBUG 24752[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:10,589]DEBUG 24752[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:10,589]DEBUG 24752[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:10,589]DEBUG 24752[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:10,589]DEBUG 24752[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:10,590]DEBUG 24753[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:10,590]DEBUG 24753[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:10,590]DEBUG 24753[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:10,590]DEBUG 24753[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:10,590]DEBUG 24753[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:10,591]DEBUG 24754[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:10,591]DEBUG 24754[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:10,591]DEBUG 24754[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:10,591]DEBUG 24754[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:10,591]DEBUG 24754[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:10,592]DEBUG 24755[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:10,592]DEBUG 24755[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:10,592]DEBUG 24755[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:10,592]DEBUG 24755[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@421912b9]
[2015-12-30 00:48:10,593]DEBUG 24756[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,593]DEBUG 24756[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@421912b9, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,593]DEBUG 24756[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:10,595]DEBUG 24758[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,595]DEBUG 24758[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292905
[2015-12-30 00:48:10,595]DEBUG 24758[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@16950f89] for Hibernate transaction
[2015-12-30 00:48:10,596]DEBUG 24759[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@16950f89]
[2015-12-30 00:48:10,596]DEBUG 24759[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:10,596]DEBUG 24759[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:10,596]DEBUG 24759[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:10,596]DEBUG 24759[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@421912b9, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,597] INFO 24760[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:10,597]DEBUG 24760[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,597]DEBUG 24760[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,599]DEBUG 24762[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[70]]
[2015-12-30 00:48:10,599]DEBUG 24762[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,599]DEBUG 24762[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 70, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,599]DEBUG 24762[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,600]DEBUG 24763[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,601]DEBUG 24764[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[71]]
[2015-12-30 00:48:10,601]DEBUG 24764[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,601]DEBUG 24764[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 71, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,601]DEBUG 24764[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,602]DEBUG 24765[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,603]DEBUG 24766[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[72]]
[2015-12-30 00:48:10,603]DEBUG 24766[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,605]DEBUG 24768[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 72, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,605] INFO 24768[main] - org.hibernate.event.def.DefaultDeleteEventListener.deleteTransientEntity(DefaultDeleteEventListener.java:203) - handling transient entity in delete processing
[2015-12-30 00:48:10,605]DEBUG 24768[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,605]DEBUG 24768[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,606]DEBUG 24769[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,606]DEBUG 24769[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,606]DEBUG 24769[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,606]DEBUG 24769[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=72, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,606]DEBUG 24769[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=70, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,607]DEBUG 24770[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=71, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,607]DEBUG 24770[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:48:10,607]DEBUG 24770[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,607]DEBUG 24770[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,608]DEBUG 24771[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,608]DEBUG 24771[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,608]DEBUG 24771[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,609]DEBUG 24772[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,609]DEBUG 24772[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:10,611]DEBUG 24774[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,612]DEBUG 24775[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,612]DEBUG 24775[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,612]DEBUG 24775[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,612]DEBUG 24775[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,613]DEBUG 24776[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,613]DEBUG 24776[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,613]DEBUG 24776[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:10,616]DEBUG 24779[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,616]DEBUG 24779[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,616]DEBUG 24779[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2015-12-30 00:48:10,617]DEBUG 24780[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,618]DEBUG 24781[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#70]
[2015-12-30 00:48:10,618]DEBUG 24781[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#71]
[2015-12-30 00:48:10,618]DEBUG 24781[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#72]
[2015-12-30 00:48:10,618]DEBUG 24781[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,618]DEBUG 24781[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,618]DEBUG 24781[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,618]DEBUG 24781[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,619]DEBUG 24782[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,619]DEBUG 24782[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,619]DEBUG 24782[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,619]DEBUG 24782[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,619]DEBUG 24782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=72, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,619]DEBUG 24782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=70, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,619]DEBUG 24782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=71, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,619]DEBUG 24782[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,619]DEBUG 24782[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:10,621]DEBUG 24784[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,621]DEBUG 24784[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@421912b9, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,621]DEBUG 24784[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:10,621]DEBUG 24784[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@16950f89]
[2015-12-30 00:48:10,621]DEBUG 24784[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:10,622]DEBUG 24785[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:10,622]DEBUG 24785[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,623]DEBUG 24786[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@16950f89] after transaction
[2015-12-30 00:48:10,623]DEBUG 24786[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:10,623]DEBUG 24786[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:10,623]DEBUG 24786[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,623] INFO 24786[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@421912b9, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,624]DEBUG 24787[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@421912b9, testMethod = testDelete@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:10,624]DEBUG 24787[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,624]DEBUG 24787[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,624]DEBUG 24787[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@25609eea, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:10,625]DEBUG 24788[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:10,625]DEBUG 24788[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:10,625]DEBUG 24788[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:10,625]DEBUG 24788[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:10,625]DEBUG 24788[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:10,626]DEBUG 24789[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:10,626]DEBUG 24789[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:10,626]DEBUG 24789[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:10,626]DEBUG 24789[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:10,626]DEBUG 24789[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:10,627]DEBUG 24790[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:10,627]DEBUG 24790[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:10,627]DEBUG 24790[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:10,627]DEBUG 24790[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:10,628]DEBUG 24791[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:10,628]DEBUG 24791[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:10,628]DEBUG 24791[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:10,628]DEBUG 24791[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:10,628]DEBUG 24791[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:10,628]DEBUG 24791[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:10,629]DEBUG 24792[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:10,631]DEBUG 24794[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:10,632]DEBUG 24795[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@25609eea]
[2015-12-30 00:48:10,632]DEBUG 24795[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,633]DEBUG 24796[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@25609eea, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,633]DEBUG 24796[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:10,634]DEBUG 24797[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,634]DEBUG 24797[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292906
[2015-12-30 00:48:10,635]DEBUG 24798[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4c0a588d] for Hibernate transaction
[2015-12-30 00:48:10,635]DEBUG 24798[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4c0a588d]
[2015-12-30 00:48:10,635]DEBUG 24798[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:10,635]DEBUG 24798[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:10,635]DEBUG 24798[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:10,636]DEBUG 24799[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@25609eea, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,636] INFO 24799[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:10,636]DEBUG 24799[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,636]DEBUG 24799[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,638]DEBUG 24801[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[73]]
[2015-12-30 00:48:10,638]DEBUG 24801[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,638]DEBUG 24801[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 73, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,639]DEBUG 24802[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,639]DEBUG 24802[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,641]DEBUG 24804[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[74]]
[2015-12-30 00:48:10,641]DEBUG 24804[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,641]DEBUG 24804[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 74, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,642]DEBUG 24805[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,642]DEBUG 24805[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,643]DEBUG 24806[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[75]]
[2015-12-30 00:48:10,643]DEBUG 24806[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,644]DEBUG 24807[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 75, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,644]DEBUG 24807[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,645]DEBUG 24808[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,645]DEBUG 24808[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,645]DEBUG 24808[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,645]DEBUG 24808[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,645]DEBUG 24808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=73, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,645]DEBUG 24808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=75, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,645]DEBUG 24808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=74, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,645]DEBUG 24808[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:48:10,646]DEBUG 24809[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,646]DEBUG 24809[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,646]DEBUG 24809[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,646]DEBUG 24809[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,646]DEBUG 24809[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,646]DEBUG 24809[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,646]DEBUG 24809[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:10,648]DEBUG 24811[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,649]DEBUG 24812[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,649]DEBUG 24812[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,649]DEBUG 24812[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,650]DEBUG 24813[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,650]DEBUG 24813[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,650]DEBUG 24813[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,651]DEBUG 24814[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:10,653]DEBUG 24816[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,653]DEBUG 24816[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,654]DEBUG 24817[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName=? and this_.ProductDescription=?
[2015-12-30 00:48:10,655]DEBUG 24818[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,655]DEBUG 24818[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#73]
[2015-12-30 00:48:10,656]DEBUG 24819[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,656]DEBUG 24819[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,656]DEBUG 24819[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,656]DEBUG 24819[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,656]DEBUG 24819[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,656]DEBUG 24819[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,656]DEBUG 24819[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,656]DEBUG 24819[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,657]DEBUG 24820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=73, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,657]DEBUG 24820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=75, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,657]DEBUG 24820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=74, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,657]DEBUG 24820[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,657]DEBUG 24820[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:10,658]DEBUG 24821[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,659]DEBUG 24822[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@25609eea, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,659]DEBUG 24822[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:10,659]DEBUG 24822[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4c0a588d]
[2015-12-30 00:48:10,659]DEBUG 24822[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:10,660]DEBUG 24823[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:10,660]DEBUG 24823[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,660]DEBUG 24823[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4c0a588d] after transaction
[2015-12-30 00:48:10,660]DEBUG 24823[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:10,661]DEBUG 24824[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:10,661]DEBUG 24824[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,662] INFO 24825[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@25609eea, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,663]DEBUG 24826[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@25609eea, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:10,663]DEBUG 24826[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,664]DEBUG 24827[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,664]DEBUG 24827[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6845113, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:10,664]DEBUG 24827[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:10,664]DEBUG 24827[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:10,664]DEBUG 24827[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:10,664]DEBUG 24827[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:10,664]DEBUG 24827[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:10,664]DEBUG 24827[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:10,665]DEBUG 24828[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:10,665]DEBUG 24828[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:10,665]DEBUG 24828[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:10,665]DEBUG 24828[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:10,665]DEBUG 24828[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:10,665]DEBUG 24828[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:10,666]DEBUG 24829[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:10,666]DEBUG 24829[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:10,666]DEBUG 24829[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:10,666]DEBUG 24829[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:10,666]DEBUG 24829[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:10,666]DEBUG 24829[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:10,666]DEBUG 24829[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:10,667]DEBUG 24830[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:10,667]DEBUG 24830[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:10,667]DEBUG 24830[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:10,667]DEBUG 24830[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6845113]
[2015-12-30 00:48:10,668]DEBUG 24831[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,668]DEBUG 24831[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6845113, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,668]DEBUG 24831[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:10,670]DEBUG 24833[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,670]DEBUG 24833[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292906
[2015-12-30 00:48:10,670]DEBUG 24833[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@558d946f] for Hibernate transaction
[2015-12-30 00:48:10,670]DEBUG 24833[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@558d946f]
[2015-12-30 00:48:10,671]DEBUG 24834[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:10,671]DEBUG 24834[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:10,671]DEBUG 24834[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:10,671]DEBUG 24834[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6845113, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,671] INFO 24834[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:10,672]DEBUG 24835[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,672]DEBUG 24835[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,674]DEBUG 24837[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[76]]
[2015-12-30 00:48:10,674]DEBUG 24837[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,674]DEBUG 24837[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 76, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,674]DEBUG 24837[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,675]DEBUG 24838[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,676]DEBUG 24839[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[77]]
[2015-12-30 00:48:10,676]DEBUG 24839[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,677]DEBUG 24840[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 77, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,677]DEBUG 24840[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,677]DEBUG 24840[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,679]DEBUG 24842[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[78]]
[2015-12-30 00:48:10,679]DEBUG 24842[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,679]DEBUG 24842[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 78, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,680]DEBUG 24843[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,680]DEBUG 24843[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,680]DEBUG 24843[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,681]DEBUG 24844[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,681]DEBUG 24844[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,681]DEBUG 24844[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=77, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,681]DEBUG 24844[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=76, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,682]DEBUG 24845[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=78, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,682]DEBUG 24845[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:48:10,682]DEBUG 24845[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,682]DEBUG 24845[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,683]DEBUG 24846[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,683]DEBUG 24846[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,683]DEBUG 24846[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,684]DEBUG 24847[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,684]DEBUG 24847[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:10,686]DEBUG 24849[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,687]DEBUG 24850[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,687]DEBUG 24850[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,687]DEBUG 24850[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,687]DEBUG 24850[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,688]DEBUG 24851[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,688]DEBUG 24851[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,688]DEBUG 24851[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:10,691]DEBUG 24854[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,691]DEBUG 24854[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,691]DEBUG 24854[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where (this_.ProductName=? or this_.ProductDescription=?)
[2015-12-30 00:48:10,696]DEBUG 24859[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,696]DEBUG 24859[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#76]
[2015-12-30 00:48:10,697]DEBUG 24860[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#78]
[2015-12-30 00:48:10,697]DEBUG 24860[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,697]DEBUG 24860[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,697]DEBUG 24860[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,698]DEBUG 24861[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,698]DEBUG 24861[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,698]DEBUG 24861[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,698]DEBUG 24861[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,699]DEBUG 24862[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,699]DEBUG 24862[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=77, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,699]DEBUG 24862[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=76, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,699]DEBUG 24862[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=78, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,699]DEBUG 24862[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,700]DEBUG 24863[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:10,701]DEBUG 24864[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,702]DEBUG 24865[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6845113, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,702]DEBUG 24865[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:10,702]DEBUG 24865[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@558d946f]
[2015-12-30 00:48:10,702]DEBUG 24865[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:10,703]DEBUG 24866[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:10,704]DEBUG 24867[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,704]DEBUG 24867[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@558d946f] after transaction
[2015-12-30 00:48:10,704]DEBUG 24867[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:10,704]DEBUG 24867[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:10,705]DEBUG 24868[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,705] INFO 24868[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6845113, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,707]DEBUG 24870[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6845113, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:10,708]DEBUG 24871[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,708]DEBUG 24871[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,708]DEBUG 24871[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@42bed211, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:10,709]DEBUG 24872[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:10,709]DEBUG 24872[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:10,709]DEBUG 24872[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:10,709]DEBUG 24872[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:10,709]DEBUG 24872[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:10,710]DEBUG 24873[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:10,710]DEBUG 24873[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:10,710]DEBUG 24873[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:10,710]DEBUG 24873[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:10,710]DEBUG 24873[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:10,711]DEBUG 24874[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:10,711]DEBUG 24874[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:10,711]DEBUG 24874[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:10,711]DEBUG 24874[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:10,711]DEBUG 24874[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:10,712]DEBUG 24875[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:10,712]DEBUG 24875[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:10,712]DEBUG 24875[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:10,712]DEBUG 24875[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:10,712]DEBUG 24875[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:10,713]DEBUG 24876[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:10,713]DEBUG 24876[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:10,713]DEBUG 24876[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@42bed211]
[2015-12-30 00:48:10,714]DEBUG 24877[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,714]DEBUG 24877[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@42bed211, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,714]DEBUG 24877[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:10,716]DEBUG 24879[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,716]DEBUG 24879[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292907
[2015-12-30 00:48:10,716]DEBUG 24879[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1b1ad44] for Hibernate transaction
[2015-12-30 00:48:10,716]DEBUG 24879[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1b1ad44]
[2015-12-30 00:48:10,717]DEBUG 24880[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:10,717]DEBUG 24880[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:10,717]DEBUG 24880[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:10,717]DEBUG 24880[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@42bed211, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,717] INFO 24880[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:10,718]DEBUG 24881[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,718]DEBUG 24881[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,719]DEBUG 24882[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[79]]
[2015-12-30 00:48:10,720]DEBUG 24883[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,720]DEBUG 24883[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 79, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,720]DEBUG 24883[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,720]DEBUG 24883[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,722]DEBUG 24885[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[80]]
[2015-12-30 00:48:10,722]DEBUG 24885[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,722]DEBUG 24885[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 80, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,723]DEBUG 24886[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,723]DEBUG 24886[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,724]DEBUG 24887[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[81]]
[2015-12-30 00:48:10,725]DEBUG 24888[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,725]DEBUG 24888[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 81, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,726]DEBUG 24889[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,726]DEBUG 24889[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,726]DEBUG 24889[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,729]DEBUG 24892[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,729]DEBUG 24892[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,730]DEBUG 24893[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=81, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,730]DEBUG 24893[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=80, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,730]DEBUG 24893[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=79, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,730]DEBUG 24893[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:48:10,731]DEBUG 24894[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,731]DEBUG 24894[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,731]DEBUG 24894[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,732]DEBUG 24895[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,732]DEBUG 24895[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,732]DEBUG 24895[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,733]DEBUG 24896[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:10,735]DEBUG 24898[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,735]DEBUG 24898[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,735]DEBUG 24898[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,736]DEBUG 24899[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,736]DEBUG 24899[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,737]DEBUG 24900[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,737]DEBUG 24900[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,737]DEBUG 24900[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:10,740]DEBUG 24903[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,740]DEBUG 24903[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,740]DEBUG 24903[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2015-12-30 00:48:10,742]DEBUG 24905[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,742]DEBUG 24905[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#79]
[2015-12-30 00:48:10,742]DEBUG 24905[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#80]
[2015-12-30 00:48:10,743]DEBUG 24906[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#81]
[2015-12-30 00:48:10,743]DEBUG 24906[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,743]DEBUG 24906[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,743]DEBUG 24906[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,744]DEBUG 24907[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,745]DEBUG 24908[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,745]DEBUG 24908[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,745]DEBUG 24908[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,745]DEBUG 24908[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,746]DEBUG 24909[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=81, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,746]DEBUG 24909[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=80, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,746]DEBUG 24909[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=79, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,746]DEBUG 24909[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,747]DEBUG 24910[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=?
[2015-12-30 00:48:10,748]DEBUG 24911[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,749]DEBUG 24912[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#79]
[2015-12-30 00:48:10,749]DEBUG 24912[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#80]
[2015-12-30 00:48:10,749]DEBUG 24912[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#81]
[2015-12-30 00:48:10,750]DEBUG 24913[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,750]DEBUG 24913[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,750]DEBUG 24913[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,751]DEBUG 24914[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,751]DEBUG 24914[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,751]DEBUG 24914[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,751]DEBUG 24914[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,752]DEBUG 24915[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,752]DEBUG 24915[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=81, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,752]DEBUG 24915[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=80, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,752]DEBUG 24915[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=79, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,753]DEBUG 24916[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,753]DEBUG 24916[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=?
[2015-12-30 00:48:10,755]DEBUG 24918[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,755]DEBUG 24918[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#79]
[2015-12-30 00:48:10,755]DEBUG 24918[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#80]
[2015-12-30 00:48:10,756]DEBUG 24919[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#81]
[2015-12-30 00:48:10,756]DEBUG 24919[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,756]DEBUG 24919[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,756]DEBUG 24919[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,757]DEBUG 24920[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,757]DEBUG 24920[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,757]DEBUG 24920[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,758]DEBUG 24921[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,758]DEBUG 24921[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,758]DEBUG 24921[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=81, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,758]DEBUG 24921[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=80, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,759]DEBUG 24922[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=79, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,759]DEBUG 24922[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,759]DEBUG 24922[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=?
[2015-12-30 00:48:10,761]DEBUG 24924[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,761]DEBUG 24924[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#79]
[2015-12-30 00:48:10,764]DEBUG 24927[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#80]
[2015-12-30 00:48:10,764]DEBUG 24927[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#81]
[2015-12-30 00:48:10,764]DEBUG 24927[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,765]DEBUG 24928[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,765]DEBUG 24928[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,765]DEBUG 24928[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,766]DEBUG 24929[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,766]DEBUG 24929[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,766]DEBUG 24929[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,766]DEBUG 24929[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,767]DEBUG 24930[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=81, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,767]DEBUG 24930[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=80, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,767]DEBUG 24930[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=79, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,767]DEBUG 24930[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,767]DEBUG 24930[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:10,769]DEBUG 24932[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,769]DEBUG 24932[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@42bed211, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,769]DEBUG 24932[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:10,770]DEBUG 24933[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1b1ad44]
[2015-12-30 00:48:10,770]DEBUG 24933[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:10,771]DEBUG 24934[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:10,772]DEBUG 24935[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,772]DEBUG 24935[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1b1ad44] after transaction
[2015-12-30 00:48:10,772]DEBUG 24935[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:10,772]DEBUG 24935[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:10,772]DEBUG 24935[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,773] INFO 24936[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@42bed211, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,774]DEBUG 24937[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@42bed211, testMethod = testfindByName@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:10,775]DEBUG 24938[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,775]DEBUG 24938[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,775]DEBUG 24938[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@74142938, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:10,776]DEBUG 24939[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:10,776]DEBUG 24939[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:10,776]DEBUG 24939[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:10,776]DEBUG 24939[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:10,777]DEBUG 24940[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:10,777]DEBUG 24940[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:10,777]DEBUG 24940[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:10,777]DEBUG 24940[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:10,777]DEBUG 24940[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:10,778]DEBUG 24941[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:10,778]DEBUG 24941[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:10,778]DEBUG 24941[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:10,778]DEBUG 24941[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:10,778]DEBUG 24941[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:10,779]DEBUG 24942[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:10,779]DEBUG 24942[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:10,779]DEBUG 24942[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:10,779]DEBUG 24942[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:10,779]DEBUG 24942[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:10,780]DEBUG 24943[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:10,780]DEBUG 24943[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:10,780]DEBUG 24943[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:10,780]DEBUG 24943[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@74142938]
[2015-12-30 00:48:10,781]DEBUG 24944[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,781]DEBUG 24944[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@74142938, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,781]DEBUG 24944[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:10,783]DEBUG 24946[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testcontainsProductByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,783]DEBUG 24946[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292907
[2015-12-30 00:48:10,783]DEBUG 24946[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@73e9c000] for Hibernate transaction
[2015-12-30 00:48:10,783]DEBUG 24946[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@73e9c000]
[2015-12-30 00:48:10,783]DEBUG 24946[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:10,784]DEBUG 24947[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:10,784]DEBUG 24947[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:10,784]DEBUG 24947[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@74142938, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,784] INFO 24947[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:10,784]DEBUG 24947[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,785]DEBUG 24948[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,786]DEBUG 24949[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[82]]
[2015-12-30 00:48:10,786]DEBUG 24949[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,786]DEBUG 24949[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 82, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,786]DEBUG 24949[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,787]DEBUG 24950[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,788]DEBUG 24951[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[83]]
[2015-12-30 00:48:10,788]DEBUG 24951[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,788]DEBUG 24951[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 83, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,788]DEBUG 24951[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,788]DEBUG 24951[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,789]DEBUG 24952[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[84]]
[2015-12-30 00:48:10,789]DEBUG 24952[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,789]DEBUG 24952[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 84, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,790]DEBUG 24953[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,790]DEBUG 24953[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,790]DEBUG 24953[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,790]DEBUG 24953[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,790]DEBUG 24953[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,792]DEBUG 24955[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=83, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,792]DEBUG 24955[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=82, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,792]DEBUG 24955[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=84, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,792]DEBUG 24955[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:48:10,792]DEBUG 24955[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,793]DEBUG 24956[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,793]DEBUG 24956[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,793]DEBUG 24956[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,793]DEBUG 24956[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,793]DEBUG 24956[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,793]DEBUG 24956[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:10,795]DEBUG 24958[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,796]DEBUG 24959[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,796]DEBUG 24959[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,797]DEBUG 24960[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,797]DEBUG 24960[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,797]DEBUG 24960[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,797]DEBUG 24960[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,797]DEBUG 24960[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:10,799]DEBUG 24962[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,800]DEBUG 24963[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,800]DEBUG 24963[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2015-12-30 00:48:10,802]DEBUG 24965[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,802]DEBUG 24965[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#82]
[2015-12-30 00:48:10,802]DEBUG 24965[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#83]
[2015-12-30 00:48:10,803]DEBUG 24966[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#84]
[2015-12-30 00:48:10,803]DEBUG 24966[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,803]DEBUG 24966[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,803]DEBUG 24966[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,804]DEBUG 24967[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,804]DEBUG 24967[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,805]DEBUG 24968[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,805]DEBUG 24968[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,805]DEBUG 24968[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,805]DEBUG 24968[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=83, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,806]DEBUG 24969[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=82, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,806]DEBUG 24969[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=84, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,806]DEBUG 24969[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,806]DEBUG 24969[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2015-12-30 00:48:10,808]DEBUG 24971[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,808]DEBUG 24971[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#82]
[2015-12-30 00:48:10,809]DEBUG 24972[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,809]DEBUG 24972[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,809]DEBUG 24972[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,810]DEBUG 24973[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,810]DEBUG 24973[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,810]DEBUG 24973[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,810]DEBUG 24973[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,811]DEBUG 24974[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,811]DEBUG 24974[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=83, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,811]DEBUG 24974[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=82, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,811]DEBUG 24974[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=84, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,812]DEBUG 24975[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,812]DEBUG 24975[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2015-12-30 00:48:10,813]DEBUG 24976[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,814]DEBUG 24977[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#83]
[2015-12-30 00:48:10,814]DEBUG 24977[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,814]DEBUG 24977[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,815]DEBUG 24978[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,815]DEBUG 24978[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,815]DEBUG 24978[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,816]DEBUG 24979[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,816]DEBUG 24979[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,816]DEBUG 24979[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,816]DEBUG 24979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=83, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,817]DEBUG 24980[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=82, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,817]DEBUG 24980[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=84, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,817]DEBUG 24980[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,817]DEBUG 24980[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2015-12-30 00:48:10,819]DEBUG 24982[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,819]DEBUG 24982[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#84]
[2015-12-30 00:48:10,819]DEBUG 24982[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,820]DEBUG 24983[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,820]DEBUG 24983[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,820]DEBUG 24983[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,821]DEBUG 24984[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,823]DEBUG 24986[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,824]DEBUG 24987[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,824]DEBUG 24987[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,824]DEBUG 24987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=83, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,824]DEBUG 24987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=82, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,825]DEBUG 24988[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=84, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,827]DEBUG 24990[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,827]DEBUG 24990[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2015-12-30 00:48:10,830]DEBUG 24993[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,830]DEBUG 24993[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,830]DEBUG 24993[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,830]DEBUG 24993[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,831]DEBUG 24994[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,832]DEBUG 24995[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,833]DEBUG 24996[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,833]DEBUG 24996[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,833]DEBUG 24996[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,833]DEBUG 24996[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=83, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,835]DEBUG 24998[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=82, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,835]DEBUG 24998[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=84, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,836]DEBUG 24999[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,836]DEBUG 24999[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:10,838]DEBUG 25001[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,838]DEBUG 25001[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@74142938, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,838]DEBUG 25001[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:10,838]DEBUG 25001[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@73e9c000]
[2015-12-30 00:48:10,838]DEBUG 25001[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:10,840]DEBUG 25003[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:10,840]DEBUG 25003[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,840]DEBUG 25003[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@73e9c000] after transaction
[2015-12-30 00:48:10,840]DEBUG 25003[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:10,840]DEBUG 25003[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:10,841]DEBUG 25004[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,841] INFO 25004[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@74142938, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,842]DEBUG 25005[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@74142938, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:10,843]DEBUG 25006[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,843]DEBUG 25006[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,844]DEBUG 25007[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6511a4f5, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:10,844]DEBUG 25007[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:10,844]DEBUG 25007[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:10,844]DEBUG 25007[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:10,844]DEBUG 25007[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:10,845]DEBUG 25008[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:10,845]DEBUG 25008[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:10,845]DEBUG 25008[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:10,845]DEBUG 25008[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:10,845]DEBUG 25008[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:10,845]DEBUG 25008[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:10,845]DEBUG 25008[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:10,845]DEBUG 25008[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:10,845]DEBUG 25008[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:10,845]DEBUG 25008[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:10,845]DEBUG 25008[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:10,846]DEBUG 25009[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:10,846]DEBUG 25009[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:10,846]DEBUG 25009[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:10,846]DEBUG 25009[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:10,846]DEBUG 25009[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:10,846]DEBUG 25009[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:10,846]DEBUG 25009[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:10,846]DEBUG 25009[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6511a4f5]
[2015-12-30 00:48:10,847]DEBUG 25010[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,847]DEBUG 25010[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6511a4f5, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,847]DEBUG 25010[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:10,847]DEBUG 25010[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testnumberOfProductByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,848]DEBUG 25011[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292908
[2015-12-30 00:48:10,848]DEBUG 25011[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5f459baf] for Hibernate transaction
[2015-12-30 00:48:10,848]DEBUG 25011[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5f459baf]
[2015-12-30 00:48:10,848]DEBUG 25011[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:10,848]DEBUG 25011[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:10,848]DEBUG 25011[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:10,848]DEBUG 25011[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6511a4f5, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,848] INFO 25011[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:10,848]DEBUG 25011[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,848]DEBUG 25011[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,850]DEBUG 25013[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[85]]
[2015-12-30 00:48:10,850]DEBUG 25013[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,850]DEBUG 25013[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 85, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,851]DEBUG 25014[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,851]DEBUG 25014[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,853]DEBUG 25016[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[86]]
[2015-12-30 00:48:10,853]DEBUG 25016[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,853]DEBUG 25016[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 86, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,853]DEBUG 25016[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,853]DEBUG 25016[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,854]DEBUG 25017[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[87]]
[2015-12-30 00:48:10,857]DEBUG 25020[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,857]DEBUG 25020[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 87, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,858]DEBUG 25021[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,858]DEBUG 25021[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,858]DEBUG 25021[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,859]DEBUG 25022[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,859]DEBUG 25022[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,859]DEBUG 25022[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=85, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,859]DEBUG 25022[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=87, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,860]DEBUG 25023[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=86, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,860]DEBUG 25023[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:48:10,860]DEBUG 25023[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,860]DEBUG 25023[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,860]DEBUG 25023[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,861]DEBUG 25024[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,861]DEBUG 25024[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,861]DEBUG 25024[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,861]DEBUG 25024[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:10,863]DEBUG 25026[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,864]DEBUG 25027[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,864]DEBUG 25027[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,864]DEBUG 25027[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,864]DEBUG 25027[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,864]DEBUG 25027[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,864]DEBUG 25027[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,865]DEBUG 25028[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:10,867]DEBUG 25030[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,867]DEBUG 25030[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,867]DEBUG 25030[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2015-12-30 00:48:10,869]DEBUG 25032[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,870]DEBUG 25033[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#85]
[2015-12-30 00:48:10,870]DEBUG 25033[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,870]DEBUG 25033[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,870]DEBUG 25033[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,871]DEBUG 25034[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,871]DEBUG 25034[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,871]DEBUG 25034[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,871]DEBUG 25034[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,871]DEBUG 25034[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,872]DEBUG 25035[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=85, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,872]DEBUG 25035[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=87, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,872]DEBUG 25035[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=86, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,872]DEBUG 25035[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,873]DEBUG 25036[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:10,874]DEBUG 25037[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,874]DEBUG 25037[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6511a4f5, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,875]DEBUG 25038[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:10,875]DEBUG 25038[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5f459baf]
[2015-12-30 00:48:10,875]DEBUG 25038[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:10,876]DEBUG 25039[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:10,876]DEBUG 25039[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,877]DEBUG 25040[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5f459baf] after transaction
[2015-12-30 00:48:10,877]DEBUG 25040[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:10,877]DEBUG 25040[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:10,877]DEBUG 25040[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,877] INFO 25040[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6511a4f5, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,879]DEBUG 25042[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6511a4f5, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:10,880]DEBUG 25043[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,880]DEBUG 25043[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,880]DEBUG 25043[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@26d0778e, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:10,880]DEBUG 25043[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:10,881]DEBUG 25044[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:10,881]DEBUG 25044[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:10,881]DEBUG 25044[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:10,881]DEBUG 25044[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:10,881]DEBUG 25044[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:10,882]DEBUG 25045[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:10,882]DEBUG 25045[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:10,882]DEBUG 25045[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:10,882]DEBUG 25045[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:10,883]DEBUG 25046[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:10,883]DEBUG 25046[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:10,883]DEBUG 25046[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:10,883]DEBUG 25046[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:10,883]DEBUG 25046[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:10,883]DEBUG 25046[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:10,884]DEBUG 25047[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:10,884]DEBUG 25047[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:10,884]DEBUG 25047[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:10,884]DEBUG 25047[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:10,885]DEBUG 25048[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:10,885]DEBUG 25048[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:10,885]DEBUG 25048[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@26d0778e]
[2015-12-30 00:48:10,889]DEBUG 25052[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,889]DEBUG 25052[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@26d0778e, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,889]DEBUG 25052[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:10,891]DEBUG 25054[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByDescription]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,891]DEBUG 25054[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292908
[2015-12-30 00:48:10,892]DEBUG 25055[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@66bd6075] for Hibernate transaction
[2015-12-30 00:48:10,892]DEBUG 25055[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@66bd6075]
[2015-12-30 00:48:10,892]DEBUG 25055[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:10,892]DEBUG 25055[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:10,892]DEBUG 25055[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:10,893]DEBUG 25056[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@26d0778e, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,893] INFO 25056[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:10,893]DEBUG 25056[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,893]DEBUG 25056[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,895]DEBUG 25058[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[88]]
[2015-12-30 00:48:10,895]DEBUG 25058[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,895]DEBUG 25058[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 88, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,896]DEBUG 25059[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,896]DEBUG 25059[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,905]DEBUG 25068[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[89]]
[2015-12-30 00:48:10,905]DEBUG 25068[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,905]DEBUG 25068[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 89, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,906]DEBUG 25069[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,906]DEBUG 25069[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,908]DEBUG 25071[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[90]]
[2015-12-30 00:48:10,908]DEBUG 25071[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,909]DEBUG 25072[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 90, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,909]DEBUG 25072[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,909]DEBUG 25072[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,909]DEBUG 25072[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,910]DEBUG 25073[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,910]DEBUG 25073[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,910]DEBUG 25073[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=90, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,910]DEBUG 25073[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=88, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,910]DEBUG 25073[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=89, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,910]DEBUG 25073[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:48:10,910]DEBUG 25073[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,910]DEBUG 25073[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,911]DEBUG 25074[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,911]DEBUG 25074[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,911]DEBUG 25074[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,911]DEBUG 25074[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,911]DEBUG 25074[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:10,913]DEBUG 25076[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,913]DEBUG 25076[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,913]DEBUG 25076[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,914]DEBUG 25077[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,914]DEBUG 25077[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,914]DEBUG 25077[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,914]DEBUG 25077[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,914]DEBUG 25077[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:10,916]DEBUG 25079[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,917]DEBUG 25080[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,917]DEBUG 25080[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2015-12-30 00:48:10,922]DEBUG 25085[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,923]DEBUG 25086[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#88]
[2015-12-30 00:48:10,923]DEBUG 25086[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#89]
[2015-12-30 00:48:10,923]DEBUG 25086[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#90]
[2015-12-30 00:48:10,924]DEBUG 25087[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,924]DEBUG 25087[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,924]DEBUG 25087[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,925]DEBUG 25088[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,925]DEBUG 25088[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,925]DEBUG 25088[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,925]DEBUG 25088[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,925]DEBUG 25088[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,925]DEBUG 25088[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=90, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,925]DEBUG 25088[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=88, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,925]DEBUG 25088[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=89, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,927]DEBUG 25090[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,927]DEBUG 25090[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=?
[2015-12-30 00:48:10,929]DEBUG 25092[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,929]DEBUG 25092[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#88]
[2015-12-30 00:48:10,929]DEBUG 25092[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#89]
[2015-12-30 00:48:10,929]DEBUG 25092[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#90]
[2015-12-30 00:48:10,929]DEBUG 25092[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,930]DEBUG 25093[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,930]DEBUG 25093[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,931]DEBUG 25094[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,932]DEBUG 25095[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,932]DEBUG 25095[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,932]DEBUG 25095[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,932]DEBUG 25095[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,932]DEBUG 25095[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=90, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,932]DEBUG 25095[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=88, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,932]DEBUG 25095[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=89, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,932]DEBUG 25095[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,933]DEBUG 25096[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=?
[2015-12-30 00:48:10,936]DEBUG 25099[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,936]DEBUG 25099[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#88]
[2015-12-30 00:48:10,936]DEBUG 25099[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#89]
[2015-12-30 00:48:10,936]DEBUG 25099[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#90]
[2015-12-30 00:48:10,936]DEBUG 25099[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,936]DEBUG 25099[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,936]DEBUG 25099[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,937]DEBUG 25100[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,937]DEBUG 25100[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,937]DEBUG 25100[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,937]DEBUG 25100[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,937]DEBUG 25100[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,937]DEBUG 25100[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=90, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,937]DEBUG 25100[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=88, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,938]DEBUG 25101[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=89, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,938]DEBUG 25101[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,938]DEBUG 25101[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=?
[2015-12-30 00:48:10,942]DEBUG 25105[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,942]DEBUG 25105[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#88]
[2015-12-30 00:48:10,942]DEBUG 25105[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#89]
[2015-12-30 00:48:10,942]DEBUG 25105[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#90]
[2015-12-30 00:48:10,942]DEBUG 25105[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,942]DEBUG 25105[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,942]DEBUG 25105[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,943]DEBUG 25106[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,943]DEBUG 25106[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,943]DEBUG 25106[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,943]DEBUG 25106[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,943]DEBUG 25106[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,943]DEBUG 25106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=90, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,943]DEBUG 25106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=88, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,943]DEBUG 25106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=89, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,943]DEBUG 25106[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,944]DEBUG 25107[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:10,948]DEBUG 25111[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,948]DEBUG 25111[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@26d0778e, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,948]DEBUG 25111[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:10,948]DEBUG 25111[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@66bd6075]
[2015-12-30 00:48:10,948]DEBUG 25111[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:10,949]DEBUG 25112[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:10,949]DEBUG 25112[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,949]DEBUG 25112[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@66bd6075] after transaction
[2015-12-30 00:48:10,949]DEBUG 25112[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:10,949]DEBUG 25112[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:10,950]DEBUG 25113[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:10,950] INFO 25113[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@26d0778e, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,950]DEBUG 25113[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@26d0778e, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:10,951]DEBUG 25114[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,951]DEBUG 25114[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:10,951]DEBUG 25114[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d533b8b, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:10,951]DEBUG 25114[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:10,951]DEBUG 25114[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:10,951]DEBUG 25114[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:10,952]DEBUG 25115[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:10,952]DEBUG 25115[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:10,952]DEBUG 25115[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:10,952]DEBUG 25115[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:10,952]DEBUG 25115[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:10,952]DEBUG 25115[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:10,952]DEBUG 25115[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:10,952]DEBUG 25115[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:10,952]DEBUG 25115[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:10,952]DEBUG 25115[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:10,952]DEBUG 25115[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:10,953]DEBUG 25116[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:10,956]DEBUG 25119[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:10,956]DEBUG 25119[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:10,956]DEBUG 25119[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:10,956]DEBUG 25119[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:10,956]DEBUG 25119[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:10,956]DEBUG 25119[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:10,956]DEBUG 25119[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:10,956]DEBUG 25119[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d533b8b]
[2015-12-30 00:48:10,957]DEBUG 25120[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,958]DEBUG 25121[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d533b8b, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,958]DEBUG 25121[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:10,959]DEBUG 25122[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testcontainsProductByDescription]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:10,959]DEBUG 25122[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292909
[2015-12-30 00:48:10,959]DEBUG 25122[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@47ea9477] for Hibernate transaction
[2015-12-30 00:48:10,959]DEBUG 25122[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@47ea9477]
[2015-12-30 00:48:10,959]DEBUG 25122[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:10,959]DEBUG 25122[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:10,960]DEBUG 25123[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:10,960]DEBUG 25123[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d533b8b, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:10,960] INFO 25123[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:10,960]DEBUG 25123[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,960]DEBUG 25123[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,964]DEBUG 25127[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[91]]
[2015-12-30 00:48:10,964]DEBUG 25127[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,964]DEBUG 25127[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 91, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,964]DEBUG 25127[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,964]DEBUG 25127[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,966]DEBUG 25129[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[92]]
[2015-12-30 00:48:10,966]DEBUG 25129[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,966]DEBUG 25129[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 92, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,966]DEBUG 25129[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,966]DEBUG 25129[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:10,967]DEBUG 25130[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[93]]
[2015-12-30 00:48:10,967]DEBUG 25130[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,968]DEBUG 25131[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 93, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:10,968]DEBUG 25131[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,968]DEBUG 25131[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,968]DEBUG 25131[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,968]DEBUG 25131[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,968]DEBUG 25131[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,969]DEBUG 25132[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=91, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,969]DEBUG 25132[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=92, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,969]DEBUG 25132[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=93, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,969]DEBUG 25132[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:48:10,969]DEBUG 25132[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,969]DEBUG 25132[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,969]DEBUG 25132[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,969]DEBUG 25132[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,970]DEBUG 25133[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,970]DEBUG 25133[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:10,970]DEBUG 25133[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:10,972]DEBUG 25135[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,973]DEBUG 25136[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,973]DEBUG 25136[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,973]DEBUG 25136[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,973]DEBUG 25136[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,973]DEBUG 25136[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:10,973]DEBUG 25136[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:10,974]DEBUG 25137[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:10,976]DEBUG 25139[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,977]DEBUG 25140[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,977]DEBUG 25140[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2015-12-30 00:48:10,978]DEBUG 25141[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,978]DEBUG 25141[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#91]
[2015-12-30 00:48:10,978]DEBUG 25141[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#92]
[2015-12-30 00:48:10,979]DEBUG 25142[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#93]
[2015-12-30 00:48:10,979]DEBUG 25142[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,979]DEBUG 25142[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,979]DEBUG 25142[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,979]DEBUG 25142[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,979]DEBUG 25142[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,980]DEBUG 25143[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,980]DEBUG 25143[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,980]DEBUG 25143[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,980]DEBUG 25143[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=91, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,980]DEBUG 25143[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=92, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,980]DEBUG 25143[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=93, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,980]DEBUG 25143[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,980]DEBUG 25143[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2015-12-30 00:48:10,983]DEBUG 25146[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,984]DEBUG 25147[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#91]
[2015-12-30 00:48:10,984]DEBUG 25147[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,984]DEBUG 25147[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,984]DEBUG 25147[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,984]DEBUG 25147[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,984]DEBUG 25147[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,985]DEBUG 25148[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,986]DEBUG 25149[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,986]DEBUG 25149[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,986]DEBUG 25149[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=91, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,986]DEBUG 25149[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=92, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,986]DEBUG 25149[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=93, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,987]DEBUG 25150[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,987]DEBUG 25150[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2015-12-30 00:48:10,988]DEBUG 25151[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,988]DEBUG 25151[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#92]
[2015-12-30 00:48:10,988]DEBUG 25151[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,988]DEBUG 25151[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,989]DEBUG 25152[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,989]DEBUG 25152[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,989]DEBUG 25152[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,989]DEBUG 25152[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,989]DEBUG 25152[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,989]DEBUG 25152[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,990]DEBUG 25153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=91, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,990]DEBUG 25153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=92, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,990]DEBUG 25153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=93, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,990]DEBUG 25153[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,990]DEBUG 25153[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2015-12-30 00:48:10,994]DEBUG 25157[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,994]DEBUG 25157[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#93]
[2015-12-30 00:48:10,994]DEBUG 25157[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,994]DEBUG 25157[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,994]DEBUG 25157[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,994]DEBUG 25157[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,995]DEBUG 25158[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,995]DEBUG 25158[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,995]DEBUG 25158[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,995]DEBUG 25158[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,995]DEBUG 25158[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=91, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,995]DEBUG 25158[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=92, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,995]DEBUG 25158[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=93, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,996]DEBUG 25159[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,996]DEBUG 25159[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2015-12-30 00:48:10,997]DEBUG 25160[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:10,997]DEBUG 25160[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:10,997]DEBUG 25160[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:10,997]DEBUG 25160[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:10,998]DEBUG 25161[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:10,998]DEBUG 25161[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:10,998]DEBUG 25161[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:10,998]DEBUG 25161[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:10,998]DEBUG 25161[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:10,998]DEBUG 25161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=91, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:10,998]DEBUG 25161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=92, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:10,998]DEBUG 25161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=93, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:10,999]DEBUG 25162[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:10,999]DEBUG 25162[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:11,001]DEBUG 25164[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,001]DEBUG 25164[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d533b8b, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,001]DEBUG 25164[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:11,001]DEBUG 25164[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@47ea9477]
[2015-12-30 00:48:11,002]DEBUG 25165[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:11,002]DEBUG 25165[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:11,003]DEBUG 25166[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,003]DEBUG 25166[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@47ea9477] after transaction
[2015-12-30 00:48:11,003]DEBUG 25166[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:11,003]DEBUG 25166[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:11,003]DEBUG 25166[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,003] INFO 25166[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d533b8b, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,004]DEBUG 25167[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d533b8b, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:11,004]DEBUG 25167[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,004]DEBUG 25167[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,004]DEBUG 25167[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6461b063, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:11,005]DEBUG 25168[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:11,005]DEBUG 25168[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:11,005]DEBUG 25168[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:11,005]DEBUG 25168[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:11,005]DEBUG 25168[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:11,005]DEBUG 25168[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:11,005]DEBUG 25168[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:11,005]DEBUG 25168[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:11,005]DEBUG 25168[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:11,005]DEBUG 25168[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:11,006]DEBUG 25169[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:11,006]DEBUG 25169[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:11,006]DEBUG 25169[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:11,006]DEBUG 25169[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:11,006]DEBUG 25169[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:11,006]DEBUG 25169[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:11,006]DEBUG 25169[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:11,011]DEBUG 25174[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:11,011]DEBUG 25174[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:11,011]DEBUG 25174[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:11,011]DEBUG 25174[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:11,011]DEBUG 25174[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:11,012]DEBUG 25175[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6461b063]
[2015-12-30 00:48:11,012]DEBUG 25175[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:11,012]DEBUG 25175[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6461b063, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,012]DEBUG 25175[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:11,013]DEBUG 25176[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testnumberOfProductByDescription]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:11,013]DEBUG 25176[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292910
[2015-12-30 00:48:11,013]DEBUG 25176[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@468beee0] for Hibernate transaction
[2015-12-30 00:48:11,013]DEBUG 25176[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@468beee0]
[2015-12-30 00:48:11,013]DEBUG 25176[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:11,013]DEBUG 25176[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:11,013]DEBUG 25176[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:11,017]DEBUG 25180[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6461b063, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,017] INFO 25180[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:11,017]DEBUG 25180[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,017]DEBUG 25180[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,018]DEBUG 25181[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[94]]
[2015-12-30 00:48:11,018]DEBUG 25181[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,019]DEBUG 25182[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 94, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,019]DEBUG 25182[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,019]DEBUG 25182[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,020]DEBUG 25183[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[95]]
[2015-12-30 00:48:11,020]DEBUG 25183[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,020]DEBUG 25183[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 95, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,020]DEBUG 25183[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,020]DEBUG 25183[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,022]DEBUG 25185[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[96]]
[2015-12-30 00:48:11,022]DEBUG 25185[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,022]DEBUG 25185[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 96, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,022]DEBUG 25185[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,022]DEBUG 25185[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,023]DEBUG 25186[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,023]DEBUG 25186[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,023]DEBUG 25186[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,023]DEBUG 25186[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=96, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,023]DEBUG 25186[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=94, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,023]DEBUG 25186[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=95, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,023]DEBUG 25186[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:48:11,023]DEBUG 25186[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,024]DEBUG 25187[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,024]DEBUG 25187[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,024]DEBUG 25187[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,024]DEBUG 25187[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,024]DEBUG 25187[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,024]DEBUG 25187[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:11,027]DEBUG 25190[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,027]DEBUG 25190[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,028]DEBUG 25191[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,028]DEBUG 25191[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,028]DEBUG 25191[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,028]DEBUG 25191[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,028]DEBUG 25191[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,028]DEBUG 25191[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:11,030]DEBUG 25193[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,031]DEBUG 25194[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,031]DEBUG 25194[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2015-12-30 00:48:11,032]DEBUG 25195[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:11,032]DEBUG 25195[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#94]
[2015-12-30 00:48:11,032]DEBUG 25195[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:11,033]DEBUG 25196[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,033]DEBUG 25196[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:11,033]DEBUG 25196[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,033]DEBUG 25196[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,033]DEBUG 25196[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,033]DEBUG 25196[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,033]DEBUG 25196[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,034]DEBUG 25197[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=96, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,034]DEBUG 25197[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=94, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,034]DEBUG 25197[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=95, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,034]DEBUG 25197[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,034]DEBUG 25197[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2015-12-30 00:48:11,038]DEBUG 25201[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:11,038]DEBUG 25201[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:11,038]DEBUG 25201[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,039]DEBUG 25202[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:11,040]DEBUG 25203[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,040]DEBUG 25203[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,040]DEBUG 25203[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,040]DEBUG 25203[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,040]DEBUG 25203[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,040]DEBUG 25203[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=96, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,040]DEBUG 25203[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=94, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,040]DEBUG 25203[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=95, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,040]DEBUG 25203[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,041]DEBUG 25204[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:11,042]DEBUG 25205[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,042]DEBUG 25205[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6461b063, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,042]DEBUG 25205[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:11,042]DEBUG 25205[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@468beee0]
[2015-12-30 00:48:11,042]DEBUG 25205[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:11,043]DEBUG 25206[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:11,043]DEBUG 25206[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,043]DEBUG 25206[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@468beee0] after transaction
[2015-12-30 00:48:11,044]DEBUG 25207[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:11,044]DEBUG 25207[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:11,044]DEBUG 25207[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,044] INFO 25207[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6461b063, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,045]DEBUG 25208[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6461b063, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:11,045]DEBUG 25208[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,045]DEBUG 25208[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,049]DEBUG 25212[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4811fb9e, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:11,049]DEBUG 25212[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:11,049]DEBUG 25212[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:11,049]DEBUG 25212[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:11,049]DEBUG 25212[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:11,049]DEBUG 25212[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:11,049]DEBUG 25212[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:11,049]DEBUG 25212[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:11,050]DEBUG 25213[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:11,050]DEBUG 25213[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:11,050]DEBUG 25213[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:11,050]DEBUG 25213[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:11,050]DEBUG 25213[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:11,050]DEBUG 25213[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:11,050]DEBUG 25213[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:11,050]DEBUG 25213[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:11,050]DEBUG 25213[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:11,050]DEBUG 25213[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:11,050]DEBUG 25213[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:11,051]DEBUG 25214[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:11,051]DEBUG 25214[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:11,051]DEBUG 25214[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:11,051]DEBUG 25214[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:11,051]DEBUG 25214[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4811fb9e]
[2015-12-30 00:48:11,051]DEBUG 25214[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPrice' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:11,052]DEBUG 25215[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4811fb9e, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,052]DEBUG 25215[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:11,052]DEBUG 25215[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByPrice]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:11,052]DEBUG 25215[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292910
[2015-12-30 00:48:11,052]DEBUG 25215[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2bba80c9] for Hibernate transaction
[2015-12-30 00:48:11,053]DEBUG 25216[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2bba80c9]
[2015-12-30 00:48:11,053]DEBUG 25216[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:11,053]DEBUG 25216[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:11,053]DEBUG 25216[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:11,053]DEBUG 25216[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4811fb9e, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,053] INFO 25216[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:11,053]DEBUG 25216[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,053]DEBUG 25216[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,057]DEBUG 25220[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[97]]
[2015-12-30 00:48:11,057]DEBUG 25220[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,057]DEBUG 25220[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 97, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,057]DEBUG 25220[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,057]DEBUG 25220[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,058]DEBUG 25221[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[98]]
[2015-12-30 00:48:11,059]DEBUG 25222[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,059]DEBUG 25222[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 98, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,059]DEBUG 25222[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,059]DEBUG 25222[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,060]DEBUG 25223[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[99]]
[2015-12-30 00:48:11,060]DEBUG 25223[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,060]DEBUG 25223[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 99, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,061]DEBUG 25224[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,061]DEBUG 25224[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,061]DEBUG 25224[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,061]DEBUG 25224[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,061]DEBUG 25224[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,061]DEBUG 25224[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=98, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,062]DEBUG 25225[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=99, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,062]DEBUG 25225[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=97, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,062]DEBUG 25225[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:48:11,066]DEBUG 25229[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,066]DEBUG 25229[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,066]DEBUG 25229[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,066]DEBUG 25229[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,066]DEBUG 25229[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,067]DEBUG 25230[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,067]DEBUG 25230[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:11,069]DEBUG 25232[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,069]DEBUG 25232[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,069]DEBUG 25232[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,069]DEBUG 25232[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,069]DEBUG 25232[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,069]DEBUG 25232[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,070]DEBUG 25233[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,070]DEBUG 25233[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:11,072]DEBUG 25235[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,072]DEBUG 25235[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,072]DEBUG 25235[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice=? and this_.IsProductActive=?
[2015-12-30 00:48:11,074]DEBUG 25237[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:11,074]DEBUG 25237[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#98]
[2015-12-30 00:48:11,074]DEBUG 25237[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:11,074]DEBUG 25237[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,074]DEBUG 25237[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:11,074]DEBUG 25237[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,075]DEBUG 25238[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,075]DEBUG 25238[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,075]DEBUG 25238[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,075]DEBUG 25238[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,075]DEBUG 25238[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=98, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,075]DEBUG 25238[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=99, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,075]DEBUG 25238[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=97, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,075]DEBUG 25238[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,075]DEBUG 25238[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:11,077]DEBUG 25240[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,077]DEBUG 25240[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4811fb9e, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,077]DEBUG 25240[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:11,077]DEBUG 25240[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2bba80c9]
[2015-12-30 00:48:11,077]DEBUG 25240[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:11,078]DEBUG 25241[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:11,078]DEBUG 25241[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,078]DEBUG 25241[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2bba80c9] after transaction
[2015-12-30 00:48:11,078]DEBUG 25241[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:11,079]DEBUG 25242[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:11,079]DEBUG 25242[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,079] INFO 25242[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4811fb9e, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,079]DEBUG 25242[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4811fb9e, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:11,080]DEBUG 25243[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,080]DEBUG 25243[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,084]DEBUG 25247[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5fddbf47, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:11,084]DEBUG 25247[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:11,084]DEBUG 25247[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:11,084]DEBUG 25247[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:11,084]DEBUG 25247[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:11,084]DEBUG 25247[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:11,084]DEBUG 25247[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:11,084]DEBUG 25247[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:11,085]DEBUG 25248[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:11,085]DEBUG 25248[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:11,085]DEBUG 25248[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:11,085]DEBUG 25248[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:11,085]DEBUG 25248[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:11,085]DEBUG 25248[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:11,085]DEBUG 25248[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:11,085]DEBUG 25248[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:11,085]DEBUG 25248[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:11,085]DEBUG 25248[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:11,085]DEBUG 25248[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:11,086]DEBUG 25249[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:11,086]DEBUG 25249[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:11,086]DEBUG 25249[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:11,086]DEBUG 25249[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:11,086]DEBUG 25249[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5fddbf47]
[2015-12-30 00:48:11,086]DEBUG 25249[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromTo' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:11,086]DEBUG 25249[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5fddbf47, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,087]DEBUG 25250[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:11,087]DEBUG 25250[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByPriceFromTo]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:11,087]DEBUG 25250[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292910
[2015-12-30 00:48:11,087]DEBUG 25250[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4d66ea88] for Hibernate transaction
[2015-12-30 00:48:11,088]DEBUG 25251[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4d66ea88]
[2015-12-30 00:48:11,088]DEBUG 25251[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:11,088]DEBUG 25251[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:11,088]DEBUG 25251[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:11,088]DEBUG 25251[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5fddbf47, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,088] INFO 25251[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (12): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:11,093]DEBUG 25256[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,093]DEBUG 25256[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,094]DEBUG 25257[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[100]]
[2015-12-30 00:48:11,094]DEBUG 25257[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,094]DEBUG 25257[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 100, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,094]DEBUG 25257[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,095]DEBUG 25258[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,096]DEBUG 25259[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[101]]
[2015-12-30 00:48:11,096]DEBUG 25259[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,096]DEBUG 25259[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 101, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,096]DEBUG 25259[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,096]DEBUG 25259[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,097]DEBUG 25260[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[102]]
[2015-12-30 00:48:11,097]DEBUG 25260[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,098]DEBUG 25261[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 102, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,099]DEBUG 25262[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,099]DEBUG 25262[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,099]DEBUG 25262[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,099]DEBUG 25262[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,099]DEBUG 25262[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,099]DEBUG 25262[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=102, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,099]DEBUG 25262[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=100, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,099]DEBUG 25262[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=101, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,100]DEBUG 25263[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:48:11,100]DEBUG 25263[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,100]DEBUG 25263[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,100]DEBUG 25263[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,100]DEBUG 25263[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,100]DEBUG 25263[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,100]DEBUG 25263[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,104]DEBUG 25267[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:11,106]DEBUG 25269[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,106]DEBUG 25269[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,106]DEBUG 25269[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,106]DEBUG 25269[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,106]DEBUG 25269[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,107]DEBUG 25270[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,107]DEBUG 25270[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,107]DEBUG 25270[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:11,109]DEBUG 25272[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,109]DEBUG 25272[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,109]DEBUG 25272[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice between ? and ? and this_.IsProductActive=?
[2015-12-30 00:48:11,111]DEBUG 25274[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:11,111]DEBUG 25274[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#100]
[2015-12-30 00:48:11,111]DEBUG 25274[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:11,111]DEBUG 25274[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,112]DEBUG 25275[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:11,112]DEBUG 25275[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,112]DEBUG 25275[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,112]DEBUG 25275[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,112]DEBUG 25275[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,112]DEBUG 25275[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,112]DEBUG 25275[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=102, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,112]DEBUG 25275[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=100, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,113]DEBUG 25276[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=101, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,113]DEBUG 25276[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,113]DEBUG 25276[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:11,116]DEBUG 25279[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,116]DEBUG 25279[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5fddbf47, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,116]DEBUG 25279[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:11,116]DEBUG 25279[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4d66ea88]
[2015-12-30 00:48:11,116]DEBUG 25279[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:11,117]DEBUG 25280[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:11,117]DEBUG 25280[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,117]DEBUG 25280[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4d66ea88] after transaction
[2015-12-30 00:48:11,117]DEBUG 25280[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:11,118]DEBUG 25281[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:11,118]DEBUG 25281[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,118] INFO 25281[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5fddbf47, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,118]DEBUG 25281[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5fddbf47, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:11,119]DEBUG 25282[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,119]DEBUG 25282[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,119]DEBUG 25282[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@26f4b64, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:11,119]DEBUG 25282[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:11,119]DEBUG 25282[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:11,120]DEBUG 25283[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:11,120]DEBUG 25283[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:11,120]DEBUG 25283[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:11,120]DEBUG 25283[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:11,120]DEBUG 25283[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:11,120]DEBUG 25283[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:11,124]DEBUG 25287[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:11,124]DEBUG 25287[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:11,124]DEBUG 25287[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:11,124]DEBUG 25287[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:11,124]DEBUG 25287[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:11,124]DEBUG 25287[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:11,124]DEBUG 25287[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:11,124]DEBUG 25287[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:11,124]DEBUG 25287[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:11,125]DEBUG 25288[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:11,125]DEBUG 25288[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:11,125]DEBUG 25288[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:11,125]DEBUG 25288[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:11,125]DEBUG 25288[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:11,125]DEBUG 25288[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@26f4b64]
[2015-12-30 00:48:11,126]DEBUG 25289[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetRowCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:11,126]DEBUG 25289[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@26f4b64, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,126]DEBUG 25289[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:11,126]DEBUG 25289[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetRowCount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:11,131]DEBUG 25294[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292911
[2015-12-30 00:48:11,131]DEBUG 25294[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@273261ef] for Hibernate transaction
[2015-12-30 00:48:11,131]DEBUG 25294[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@273261ef]
[2015-12-30 00:48:11,131]DEBUG 25294[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:11,131]DEBUG 25294[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:11,131]DEBUG 25294[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:11,131]DEBUG 25294[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@26f4b64, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,131] INFO 25294[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (13): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:11,132]DEBUG 25295[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,132]DEBUG 25295[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,133]DEBUG 25296[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[103]]
[2015-12-30 00:48:11,133]DEBUG 25296[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,133]DEBUG 25296[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 103, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,133]DEBUG 25296[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,134]DEBUG 25297[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,135]DEBUG 25298[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[104]]
[2015-12-30 00:48:11,135]DEBUG 25298[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,135]DEBUG 25298[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 104, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,135]DEBUG 25298[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,135]DEBUG 25298[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,136]DEBUG 25299[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[105]]
[2015-12-30 00:48:11,136]DEBUG 25299[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,136]DEBUG 25299[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 105, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,137]DEBUG 25300[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,137]DEBUG 25300[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,137]DEBUG 25300[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,137]DEBUG 25300[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,137]DEBUG 25300[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,137]DEBUG 25300[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=105, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,138]DEBUG 25301[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=104, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,138]DEBUG 25301[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=103, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,138]DEBUG 25301[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:48:11,138]DEBUG 25301[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,138]DEBUG 25301[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,138]DEBUG 25301[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,138]DEBUG 25301[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,139]DEBUG 25302[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,140]DEBUG 25303[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,140]DEBUG 25303[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:11,142]DEBUG 25305[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,142]DEBUG 25305[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,143]DEBUG 25306[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,145]DEBUG 25308[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,145]DEBUG 25308[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,145]DEBUG 25308[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,146]DEBUG 25309[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,146]DEBUG 25309[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:11,148]DEBUG 25311[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,148]DEBUG 25311[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,148]DEBUG 25311[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select count(*) as y0_ from Products this_ where this_.IsProductActive=?
[2015-12-30 00:48:11,153]DEBUG 25316[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:11,153]DEBUG 25316[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: 
[2015-12-30 00:48:11,153]DEBUG 25316[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:11,153]DEBUG 25316[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,153]DEBUG 25316[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:11,153]DEBUG 25316[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,154]DEBUG 25317[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,156]DEBUG 25319[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,156]DEBUG 25319[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,156]DEBUG 25319[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,156]DEBUG 25319[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=105, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,157]DEBUG 25320[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=104, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,157]DEBUG 25320[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=103, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,157]DEBUG 25320[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,158]DEBUG 25321[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:11,160]DEBUG 25323[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,160]DEBUG 25323[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@26f4b64, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,160]DEBUG 25323[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:11,160]DEBUG 25323[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@273261ef]
[2015-12-30 00:48:11,160]DEBUG 25323[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:11,162]DEBUG 25325[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:11,163]DEBUG 25326[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,163]DEBUG 25326[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@273261ef] after transaction
[2015-12-30 00:48:11,163]DEBUG 25326[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:11,163]DEBUG 25326[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:11,163]DEBUG 25326[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,163] INFO 25326[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@26f4b64, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,164]DEBUG 25327[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@26f4b64, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:11,167]DEBUG 25330[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,167]DEBUG 25330[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,170]DEBUG 25333[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@43e73c9a, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:11,170]DEBUG 25333[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:11,170]DEBUG 25333[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:11,170]DEBUG 25333[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:11,170]DEBUG 25333[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:11,170]DEBUG 25333[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:11,170]DEBUG 25333[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:11,170]DEBUG 25333[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:11,170]DEBUG 25333[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:11,171]DEBUG 25334[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:11,171]DEBUG 25334[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:11,171]DEBUG 25334[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:11,171]DEBUG 25334[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:11,171]DEBUG 25334[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:11,171]DEBUG 25334[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:11,171]DEBUG 25334[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:11,171]DEBUG 25334[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:11,171]DEBUG 25334[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:11,171]DEBUG 25334[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:11,175]DEBUG 25338[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:11,175]DEBUG 25338[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:11,175]DEBUG 25338[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:11,175]DEBUG 25338[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:11,175]DEBUG 25338[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@43e73c9a]
[2015-12-30 00:48:11,175]DEBUG 25338[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:11,176]DEBUG 25339[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@43e73c9a, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,176]DEBUG 25339[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:11,176]DEBUG 25339[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:11,176]DEBUG 25339[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292911
[2015-12-30 00:48:11,183]DEBUG 25346[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6ab1b298] for Hibernate transaction
[2015-12-30 00:48:11,183]DEBUG 25346[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6ab1b298]
[2015-12-30 00:48:11,183]DEBUG 25346[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:11,183]DEBUG 25346[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:11,183]DEBUG 25346[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:11,183]DEBUG 25346[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@43e73c9a, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,183] INFO 25346[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (14): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:11,183]DEBUG 25346[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,184]DEBUG 25347[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,185]DEBUG 25348[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[106]]
[2015-12-30 00:48:11,185]DEBUG 25348[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,185]DEBUG 25348[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 106, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,185]DEBUG 25348[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,185]DEBUG 25348[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,188]DEBUG 25351[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[107]]
[2015-12-30 00:48:11,188]DEBUG 25351[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,188]DEBUG 25351[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 107, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,188]DEBUG 25351[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,188]DEBUG 25351[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,191]DEBUG 25354[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[108]]
[2015-12-30 00:48:11,191]DEBUG 25354[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,191]DEBUG 25354[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 108, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,191]DEBUG 25354[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,191]DEBUG 25354[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,191]DEBUG 25354[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,192]DEBUG 25355[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,192]DEBUG 25355[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,192]DEBUG 25355[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=107, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,192]DEBUG 25355[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=106, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,192]DEBUG 25355[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=108, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,192]DEBUG 25355[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:48:11,192]DEBUG 25355[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,195]DEBUG 25358[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,195]DEBUG 25358[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,195]DEBUG 25358[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,196]DEBUG 25359[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,196]DEBUG 25359[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,199]DEBUG 25362[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:11,201]DEBUG 25364[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,201]DEBUG 25364[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,201]DEBUG 25364[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,201]DEBUG 25364[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,201]DEBUG 25364[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,204]DEBUG 25367[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,204]DEBUG 25367[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,204]DEBUG 25367[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:11,206]DEBUG 25369[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,206]DEBUG 25369[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,206]DEBUG 25369[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2015-12-30 00:48:11,208]DEBUG 25371[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:11,208]DEBUG 25371[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#106]
[2015-12-30 00:48:11,208]DEBUG 25371[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#107]
[2015-12-30 00:48:11,208]DEBUG 25371[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#108]
[2015-12-30 00:48:11,208]DEBUG 25371[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:11,208]DEBUG 25371[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,208]DEBUG 25371[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:11,209]DEBUG 25372[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,209]DEBUG 25372[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,209]DEBUG 25372[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,209]DEBUG 25372[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,209]DEBUG 25372[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,209]DEBUG 25372[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=107, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,209]DEBUG 25372[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=106, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,213]DEBUG 25376[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=108, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,214]DEBUG 25377[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,214]DEBUG 25377[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:11,215]DEBUG 25378[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,215]DEBUG 25378[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@43e73c9a, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,215]DEBUG 25378[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:11,216]DEBUG 25379[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6ab1b298]
[2015-12-30 00:48:11,216]DEBUG 25379[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:11,217]DEBUG 25380[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:11,217]DEBUG 25380[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,217]DEBUG 25380[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6ab1b298] after transaction
[2015-12-30 00:48:11,217]DEBUG 25380[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:11,217]DEBUG 25380[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:11,217]DEBUG 25380[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,217] INFO 25380[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@43e73c9a, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,218]DEBUG 25381[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@43e73c9a, testMethod = testfindByID@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:11,223]DEBUG 25386[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,223]DEBUG 25386[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,223]DEBUG 25386[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6ef8fff2, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:11,223]DEBUG 25386[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:11,223]DEBUG 25386[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:11,224]DEBUG 25387[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:11,224]DEBUG 25387[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:11,224]DEBUG 25387[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:11,224]DEBUG 25387[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:11,224]DEBUG 25387[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:11,224]DEBUG 25387[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:11,224]DEBUG 25387[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:11,224]DEBUG 25387[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:11,224]DEBUG 25387[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:11,224]DEBUG 25387[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:11,224]DEBUG 25387[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:11,225]DEBUG 25388[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:11,225]DEBUG 25388[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:11,225]DEBUG 25388[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:11,225]DEBUG 25388[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:11,225]DEBUG 25388[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:11,225]DEBUG 25388[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:11,225]DEBUG 25388[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:11,225]DEBUG 25388[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:11,225]DEBUG 25388[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:11,232]DEBUG 25395[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6ef8fff2]
[2015-12-30 00:48:11,232]DEBUG 25395[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByNameSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:11,232]DEBUG 25395[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6ef8fff2, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,232]DEBUG 25395[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:11,233]DEBUG 25396[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByNameSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:11,233]DEBUG 25396[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292912
[2015-12-30 00:48:11,233]DEBUG 25396[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1c8acd87] for Hibernate transaction
[2015-12-30 00:48:11,233]DEBUG 25396[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1c8acd87]
[2015-12-30 00:48:11,233]DEBUG 25396[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:11,233]DEBUG 25396[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:11,233]DEBUG 25396[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:11,238]DEBUG 25401[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6ef8fff2, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,238] INFO 25401[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (15): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:11,238]DEBUG 25401[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,238]DEBUG 25401[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,239]DEBUG 25402[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[109]]
[2015-12-30 00:48:11,240]DEBUG 25403[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,240]DEBUG 25403[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 109, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,241]DEBUG 25404[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,241]DEBUG 25404[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,242]DEBUG 25405[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[110]]
[2015-12-30 00:48:11,242]DEBUG 25405[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,243]DEBUG 25406[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 110, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,243]DEBUG 25406[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,243]DEBUG 25406[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,244]DEBUG 25407[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[111]]
[2015-12-30 00:48:11,244]DEBUG 25407[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,244]DEBUG 25407[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 111, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,245]DEBUG 25408[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,245]DEBUG 25408[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,245]DEBUG 25408[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,250]DEBUG 25413[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,250]DEBUG 25413[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,250]DEBUG 25413[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=111, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,250]DEBUG 25413[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=110, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,250]DEBUG 25413[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=109, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,250]DEBUG 25413[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:48:11,250]DEBUG 25413[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,251]DEBUG 25414[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,251]DEBUG 25414[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,251]DEBUG 25414[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,251]DEBUG 25414[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,251]DEBUG 25414[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,251]DEBUG 25414[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:11,256]DEBUG 25419[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,256]DEBUG 25419[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,256]DEBUG 25419[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,256]DEBUG 25419[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,256]DEBUG 25419[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,257]DEBUG 25420[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,257]DEBUG 25420[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,257]DEBUG 25420[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:11,259]DEBUG 25422[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,259]DEBUG 25422[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,259]DEBUG 25422[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=? order by this_.ProductName asc
[2015-12-30 00:48:11,262]DEBUG 25425[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:11,262]DEBUG 25425[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#109]
[2015-12-30 00:48:11,262]DEBUG 25425[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#110]
[2015-12-30 00:48:11,262]DEBUG 25425[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#111]
[2015-12-30 00:48:11,262]DEBUG 25425[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:11,262]DEBUG 25425[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,262]DEBUG 25425[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:11,263]DEBUG 25426[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,263]DEBUG 25426[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,263]DEBUG 25426[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,263]DEBUG 25426[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,263]DEBUG 25426[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,263]DEBUG 25426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=111, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,263]DEBUG 25426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=110, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,268]DEBUG 25431[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=109, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,268]DEBUG 25431[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,268]DEBUG 25431[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=? order by this_.ProductName desc
[2015-12-30 00:48:11,270]DEBUG 25433[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:11,270]DEBUG 25433[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#111]
[2015-12-30 00:48:11,270]DEBUG 25433[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#110]
[2015-12-30 00:48:11,270]DEBUG 25433[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#109]
[2015-12-30 00:48:11,270]DEBUG 25433[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:11,270]DEBUG 25433[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,270]DEBUG 25433[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:11,271]DEBUG 25434[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,271]DEBUG 25434[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,271]DEBUG 25434[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,271]DEBUG 25434[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,271]DEBUG 25434[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,271]DEBUG 25434[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=111, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,271]DEBUG 25434[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=110, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,271]DEBUG 25434[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=109, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,276]DEBUG 25439[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,277]DEBUG 25440[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:11,278]DEBUG 25441[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,278]DEBUG 25441[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6ef8fff2, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,278]DEBUG 25441[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:11,279]DEBUG 25442[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1c8acd87]
[2015-12-30 00:48:11,279]DEBUG 25442[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:11,280]DEBUG 25443[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:11,280]DEBUG 25443[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,280]DEBUG 25443[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1c8acd87] after transaction
[2015-12-30 00:48:11,280]DEBUG 25443[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:11,281]DEBUG 25444[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:11,281]DEBUG 25444[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,281] INFO 25444[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6ef8fff2, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,282]DEBUG 25445[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6ef8fff2, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:11,285]DEBUG 25448[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,285]DEBUG 25448[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,285]DEBUG 25448[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@337c66fb, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:11,285]DEBUG 25448[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:11,286]DEBUG 25449[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:11,286]DEBUG 25449[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:11,286]DEBUG 25449[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:11,286]DEBUG 25449[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:11,286]DEBUG 25449[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:11,286]DEBUG 25449[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:11,286]DEBUG 25449[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:11,286]DEBUG 25449[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:11,286]DEBUG 25449[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:11,286]DEBUG 25449[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:11,286]DEBUG 25449[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:11,287]DEBUG 25450[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:11,287]DEBUG 25450[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:11,287]DEBUG 25450[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:11,287]DEBUG 25450[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:11,287]DEBUG 25450[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:11,287]DEBUG 25450[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:11,287]DEBUG 25450[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:11,287]DEBUG 25450[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:11,287]DEBUG 25450[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:11,294]DEBUG 25457[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:11,294]DEBUG 25457[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@337c66fb]
[2015-12-30 00:48:11,294]DEBUG 25457[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescriptionSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:11,295]DEBUG 25458[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@337c66fb, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,295]DEBUG 25458[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:11,300]DEBUG 25463[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByDescriptionSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:11,300]DEBUG 25463[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292913
[2015-12-30 00:48:11,300]DEBUG 25463[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5290e804] for Hibernate transaction
[2015-12-30 00:48:11,300]DEBUG 25463[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5290e804]
[2015-12-30 00:48:11,300]DEBUG 25463[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:11,301]DEBUG 25464[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:11,301]DEBUG 25464[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:11,301]DEBUG 25464[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@337c66fb, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,301] INFO 25464[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (16): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:11,301]DEBUG 25464[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,301]DEBUG 25464[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,305]DEBUG 25468[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[112]]
[2015-12-30 00:48:11,306]DEBUG 25469[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,306]DEBUG 25469[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 112, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,306]DEBUG 25469[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,306]DEBUG 25469[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,307]DEBUG 25470[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[113]]
[2015-12-30 00:48:11,307]DEBUG 25470[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,307]DEBUG 25470[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 113, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,307]DEBUG 25470[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,308]DEBUG 25471[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,310]DEBUG 25473[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[114]]
[2015-12-30 00:48:11,310]DEBUG 25473[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,310]DEBUG 25473[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 114, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,310]DEBUG 25473[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,310]DEBUG 25473[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,311]DEBUG 25474[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,311]DEBUG 25474[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,311]DEBUG 25474[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,311]DEBUG 25474[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=114, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,311]DEBUG 25474[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=113, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,311]DEBUG 25474[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=112, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,311]DEBUG 25474[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:48:11,311]DEBUG 25474[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,316]DEBUG 25479[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,316]DEBUG 25479[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,316]DEBUG 25479[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,316]DEBUG 25479[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,316]DEBUG 25479[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,317]DEBUG 25480[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:11,320]DEBUG 25483[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,320]DEBUG 25483[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,320]DEBUG 25483[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,320]DEBUG 25483[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,320]DEBUG 25483[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,320]DEBUG 25483[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,321]DEBUG 25484[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,321]DEBUG 25484[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:11,326]DEBUG 25489[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,326]DEBUG 25489[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,326]DEBUG 25489[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=? order by this_.ProductDescription asc
[2015-12-30 00:48:11,330]DEBUG 25493[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:11,330]DEBUG 25493[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#112]
[2015-12-30 00:48:11,330]DEBUG 25493[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#113]
[2015-12-30 00:48:11,330]DEBUG 25493[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#114]
[2015-12-30 00:48:11,330]DEBUG 25493[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:11,330]DEBUG 25493[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,330]DEBUG 25493[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:11,331]DEBUG 25494[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,331]DEBUG 25494[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,331]DEBUG 25494[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,331]DEBUG 25494[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,331]DEBUG 25494[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,331]DEBUG 25494[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=114, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,331]DEBUG 25494[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=113, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,334]DEBUG 25497[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=112, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,334]DEBUG 25497[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,334]DEBUG 25497[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=? order by this_.ProductDescription desc
[2015-12-30 00:48:11,337]DEBUG 25500[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:11,337]DEBUG 25500[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#114]
[2015-12-30 00:48:11,337]DEBUG 25500[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#113]
[2015-12-30 00:48:11,337]DEBUG 25500[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#112]
[2015-12-30 00:48:11,337]DEBUG 25500[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:11,337]DEBUG 25500[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,337]DEBUG 25500[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:11,338]DEBUG 25501[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,338]DEBUG 25501[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,338]DEBUG 25501[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,338]DEBUG 25501[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,338]DEBUG 25501[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,343]DEBUG 25506[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=114, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,343]DEBUG 25506[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=113, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,343]DEBUG 25506[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=112, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,343]DEBUG 25506[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,343]DEBUG 25506[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:11,345]DEBUG 25508[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,345]DEBUG 25508[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@337c66fb, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,346]DEBUG 25509[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:11,346]DEBUG 25509[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5290e804]
[2015-12-30 00:48:11,346]DEBUG 25509[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:11,347]DEBUG 25510[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:11,347]DEBUG 25510[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,347]DEBUG 25510[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5290e804] after transaction
[2015-12-30 00:48:11,347]DEBUG 25510[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:11,347]DEBUG 25510[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:11,347]DEBUG 25510[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,347] INFO 25510[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@337c66fb, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,348]DEBUG 25511[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@337c66fb, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:11,352]DEBUG 25515[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,352]DEBUG 25515[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,352]DEBUG 25515[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@705181d8, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:11,352]DEBUG 25515[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:11,352]DEBUG 25515[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:11,353]DEBUG 25516[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:11,353]DEBUG 25516[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:11,353]DEBUG 25516[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:11,353]DEBUG 25516[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:11,353]DEBUG 25516[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:11,353]DEBUG 25516[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:11,353]DEBUG 25516[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:11,353]DEBUG 25516[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:11,353]DEBUG 25516[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:11,353]DEBUG 25516[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:11,354]DEBUG 25517[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:11,354]DEBUG 25517[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:11,354]DEBUG 25517[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:11,354]DEBUG 25517[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:11,354]DEBUG 25517[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:11,354]DEBUG 25517[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:11,359]DEBUG 25522[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:11,359]DEBUG 25522[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:11,359]DEBUG 25522[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:11,359]DEBUG 25522[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:11,359]DEBUG 25522[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@705181d8]
[2015-12-30 00:48:11,359]DEBUG 25522[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromToSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:11,360]DEBUG 25523[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@705181d8, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,360]DEBUG 25523[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:11,360]DEBUG 25523[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByPriceFromToSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:11,365]DEBUG 25528[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292913
[2015-12-30 00:48:11,365]DEBUG 25528[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@32e5e4bb] for Hibernate transaction
[2015-12-30 00:48:11,365]DEBUG 25528[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@32e5e4bb]
[2015-12-30 00:48:11,365]DEBUG 25528[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:11,365]DEBUG 25528[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:11,365]DEBUG 25528[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:11,369]DEBUG 25532[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@705181d8, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,369] INFO 25532[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (17): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:11,369]DEBUG 25532[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,369]DEBUG 25532[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,372]DEBUG 25535[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[115]]
[2015-12-30 00:48:11,372]DEBUG 25535[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,372]DEBUG 25535[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 115, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,372]DEBUG 25535[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,372]DEBUG 25535[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,374]DEBUG 25537[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[116]]
[2015-12-30 00:48:11,374]DEBUG 25537[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,374]DEBUG 25537[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 116, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,374]DEBUG 25537[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,374]DEBUG 25537[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,377]DEBUG 25540[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[117]]
[2015-12-30 00:48:11,377]DEBUG 25540[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,377]DEBUG 25540[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 117, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,377]DEBUG 25540[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,377]DEBUG 25540[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,378]DEBUG 25541[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,378]DEBUG 25541[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,378]DEBUG 25541[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,378]DEBUG 25541[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=115, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,381]DEBUG 25544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=117, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,381]DEBUG 25544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=116, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,381]DEBUG 25544[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:48:11,381]DEBUG 25544[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,381]DEBUG 25544[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,381]DEBUG 25544[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,382]DEBUG 25545[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,382]DEBUG 25545[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,382]DEBUG 25545[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,382]DEBUG 25545[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:11,387]DEBUG 25550[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,387]DEBUG 25550[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,387]DEBUG 25550[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,387]DEBUG 25550[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,387]DEBUG 25550[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,388]DEBUG 25551[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,388]DEBUG 25551[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,388]DEBUG 25551[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:11,393]DEBUG 25556[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,393]DEBUG 25556[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,393]DEBUG 25556[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice between ? and ? and this_.IsProductActive=? order by this_.ProductPrice asc
[2015-12-30 00:48:11,395]DEBUG 25558[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:11,395]DEBUG 25558[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#115]
[2015-12-30 00:48:11,395]DEBUG 25558[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#116]
[2015-12-30 00:48:11,395]DEBUG 25558[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#117]
[2015-12-30 00:48:11,395]DEBUG 25558[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:11,395]DEBUG 25558[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,395]DEBUG 25558[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:11,396]DEBUG 25559[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,396]DEBUG 25559[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,396]DEBUG 25559[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,396]DEBUG 25559[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,396]DEBUG 25559[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,396]DEBUG 25559[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=115, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,396]DEBUG 25559[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=117, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,397]DEBUG 25560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=116, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,397]DEBUG 25560[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,397]DEBUG 25560[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice between ? and ? and this_.IsProductActive=? order by this_.ProductPrice desc
[2015-12-30 00:48:11,402]DEBUG 25565[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:48:11,402]DEBUG 25565[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#117]
[2015-12-30 00:48:11,402]DEBUG 25565[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#116]
[2015-12-30 00:48:11,402]DEBUG 25565[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#115]
[2015-12-30 00:48:11,402]DEBUG 25565[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:48:11,402]DEBUG 25565[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,402]DEBUG 25565[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:48:11,403]DEBUG 25566[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,403]DEBUG 25566[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,403]DEBUG 25566[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,403]DEBUG 25566[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,403]DEBUG 25566[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,403]DEBUG 25566[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=115, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,403]DEBUG 25566[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=117, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,403]DEBUG 25566[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=116, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,409]DEBUG 25572[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,409]DEBUG 25572[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:11,410]DEBUG 25573[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,412]DEBUG 25575[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@705181d8, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,412]DEBUG 25575[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:11,412]DEBUG 25575[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@32e5e4bb]
[2015-12-30 00:48:11,412]DEBUG 25575[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:11,413]DEBUG 25576[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:11,413]DEBUG 25576[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,413]DEBUG 25576[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@32e5e4bb] after transaction
[2015-12-30 00:48:11,413]DEBUG 25576[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:11,413]DEBUG 25576[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:11,413]DEBUG 25576[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,414] INFO 25577[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@705181d8, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 00:48:11,414]DEBUG 25577[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@705181d8, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:11,415]DEBUG 25578[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,415]DEBUG 25578[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,418]DEBUG 25581[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@7b5d2501, testMethod = [null], testException = [null]]].
[2015-12-30 00:48:11,418]DEBUG 25581[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:48:11,419]DEBUG 25582[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:48:11,419]DEBUG 25582[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:48:11,419]DEBUG 25582[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:48:11,419]DEBUG 25582[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:48:11,419]DEBUG 25582[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:48:11,419]DEBUG 25582[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:48:11,419]DEBUG 25582[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:48:11,419]DEBUG 25582[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:48:11,419]DEBUG 25582[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:48:11,419]DEBUG 25582[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:48:11,420]DEBUG 25583[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:48:11,420]DEBUG 25583[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:48:11,420]DEBUG 25583[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:48:11,420]DEBUG 25583[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:48:11,420]DEBUG 25583[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:48:11,420]DEBUG 25583[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:48:11,420]DEBUG 25583[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:48:11,420]DEBUG 25583[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:48:11,420]DEBUG 25583[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:48:11,420]DEBUG 25583[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:48:11,423]DEBUG 25586[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:48:11,423]DEBUG 25586[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@7b5d2501]
[2015-12-30 00:48:11,424]DEBUG 25587[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:11,424]DEBUG 25587[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@7b5d2501, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:11,424]DEBUG 25587[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:48:11,425]DEBUG 25588[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:48:11,425]DEBUG 25588[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514292914
[2015-12-30 00:48:11,425]DEBUG 25588[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3af17adf] for Hibernate transaction
[2015-12-30 00:48:11,425]DEBUG 25588[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3af17adf]
[2015-12-30 00:48:11,425]DEBUG 25588[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:48:11,425]DEBUG 25588[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:48:11,425]DEBUG 25588[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:48:11,425]DEBUG 25588[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@7b5d2501, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:11,425] INFO 25588[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (18): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:48:11,431]DEBUG 25594[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,432]DEBUG 25595[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,435]DEBUG 25598[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[118]]
[2015-12-30 00:48:11,435]DEBUG 25598[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,435]DEBUG 25598[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 118, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,435]DEBUG 25598[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,435]DEBUG 25598[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,438]DEBUG 25601[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[119]]
[2015-12-30 00:48:11,438]DEBUG 25601[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,438]DEBUG 25601[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 119, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,438]DEBUG 25601[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,438]DEBUG 25601[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:48:11,439]DEBUG 25602[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[120]]
[2015-12-30 00:48:11,439]DEBUG 25602[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,440]DEBUG 25603[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 120, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:48:11,440]DEBUG 25603[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:48:11,440]DEBUG 25603[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:48:11,440]DEBUG 25603[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:48:11,440]DEBUG 25603[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:48:11,440]DEBUG 25603[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:48:11,440]DEBUG 25603[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=120, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:48:11,440]DEBUG 25603[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=119, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:48:11,441]DEBUG 25604[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=118, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:48:11,441]DEBUG 25604[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:48:11,441]DEBUG 25604[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,441]DEBUG 25604[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,441]DEBUG 25604[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,441]DEBUG 25604[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,441]DEBUG 25604[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,445]DEBUG 25608[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:48:11,446]DEBUG 25609[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:11,448]DEBUG 25611[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,448]DEBUG 25611[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,448]DEBUG 25611[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,449]DEBUG 25612[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,449]DEBUG 25612[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,456]DEBUG 25619[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:48:11,456]DEBUG 25619[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:48:11,456]DEBUG 25619[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:48:11,462]DEBUG 25625[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,462]DEBUG 25625[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:48:11,462]DEBUG 25625[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:48:11,464]DEBUG 25627[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:48:11,464]DEBUG 25627[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@7b5d2501, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:11,464]DEBUG 25627[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:48:11,464]DEBUG 25627[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3af17adf]
[2015-12-30 00:48:11,464]DEBUG 25627[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:48:11,466]DEBUG 25629[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:48:11,467]DEBUG 25630[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,467]DEBUG 25630[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3af17adf] after transaction
[2015-12-30 00:48:11,467]DEBUG 25630[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:48:11,467]DEBUG 25630[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:48:11,467]DEBUG 25630[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:48:11,467] INFO 25630[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@7b5d2501, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:48:11,468]DEBUG 25631[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@7b5d2501, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:48:11,473]DEBUG 25636[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@6c750751 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2015-12-30 00:48:11,484] INFO 25647[Thread-1] - org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1002) - Closing org.springframework.context.support.GenericApplicationContext@1a1d85b8: startup date [Wed Dec 30 00:48:03 EET 2015]; root of context hierarchy
[2015-12-30 00:48:11,490] INFO 25653[Thread-0] - org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1002) - Closing org.springframework.context.support.GenericApplicationContext@29f12030: startup date [Wed Dec 30 00:47:49 EET 2015]; root of context hierarchy
[2015-12-30 00:48:11,492]DEBUG 25655[Thread-0] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2015-12-30 00:48:11,492] INFO 25655[Thread-0] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:422) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@76a2348b: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderDao,roleDao,userDao,regionDao,orderStatusDao,productDao,dimensionDao,customerTypeDao,orderItemDao,creditCardTypeDao,sessionFactory]; root of factory hierarchy
[2015-12-30 00:48:11,492]DEBUG 25655[Thread-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2015-12-30 00:48:11,492] INFO 25655[Thread-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:422) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@349ef43d: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderDao,roleDao,userDao,regionDao,orderStatusDao,productDao,dimensionDao,customerTypeDao,orderItemDao,creditCardTypeDao,sessionFactory]; root of factory hierarchy
[2015-12-30 00:48:11,495]DEBUG 25658[Thread-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:477) - Retrieved dependent beans for bean 'orderItemDao': [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:48:11,496]DEBUG 25659[Thread-1] - org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:172) - Invoking destroy() on bean with name 'sessionFactory'
[2015-12-30 00:48:11,496] INFO 25659[Thread-1] - org.springframework.orm.hibernate3.AbstractSessionFactoryBean.destroy(AbstractSessionFactoryBean.java:246) - Closing Hibernate SessionFactory
[2015-12-30 00:48:11,496] INFO 25659[Thread-1] - org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) - closing
[2015-12-30 00:48:11,496] INFO 25659[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2015-12-30 00:48:11,496]DEBUG 25659[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2015-12-30 00:48:11,496] INFO 25659[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2015-12-30 00:48:11,497]DEBUG 25660[Thread-0] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:477) - Retrieved dependent beans for bean 'orderItemDao': [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest, com.softserveinc.edu.oms.persistence.dao.OrderDaoTest, com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase, com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest, com.softserveinc.edu.oms.persistence.dao.RoleDAOTest, com.softserveinc.edu.oms.persistence.dao.RegionDaoTest, com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest, com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:48:11,501]DEBUG 25664[Thread-0] - org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:172) - Invoking destroy() on bean with name 'sessionFactory'
[2015-12-30 00:48:11,501] INFO 25664[Thread-0] - org.springframework.orm.hibernate3.AbstractSessionFactoryBean.destroy(AbstractSessionFactoryBean.java:246) - Closing Hibernate SessionFactory
[2015-12-30 00:48:11,501] INFO 25664[Thread-0] - org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) - closing
[2015-12-30 00:48:11,501] INFO 25664[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2015-12-30 00:48:11,502]DEBUG 25665[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2015-12-30 00:48:11,502] INFO 25665[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2015-12-30 00:48:11,502]DEBUG 25665[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD3262E1ABF7
[2015-12-30 00:48:11,501]DEBUG 25664[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD3262E1ABF7
[2015-12-30 00:48:11,672]DEBUG 25835[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop constraint FKA2B1AD3262E1ABF7
[2015-12-30 00:48:11,673]DEBUG 25836[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fka2b1ad3262e1abf7" of relation "orderitems" does not exist
[2015-12-30 00:48:11,673]DEBUG 25836[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32A6376397
[2015-12-30 00:48:11,673]DEBUG 25836[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32A6376397
[2015-12-30 00:48:11,754]DEBUG 25917[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32BCDB3C97
[2015-12-30 00:48:11,754]DEBUG 25917[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop constraint FKA2B1AD32A6376397
[2015-12-30 00:48:11,754]DEBUG 25917[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fka2b1ad32a6376397" of relation "orderitems" does not exist
[2015-12-30 00:48:11,755]DEBUG 25918[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32BCDB3C97
[2015-12-30 00:48:11,837]DEBUG 26000[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05990DB877
[2015-12-30 00:48:11,838]DEBUG 26001[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop constraint FKA2B1AD32BCDB3C97
[2015-12-30 00:48:11,838]DEBUG 26001[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fka2b1ad32bcdb3c97" of relation "orderitems" does not exist
[2015-12-30 00:48:11,838]DEBUG 26001[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05990DB877
[2015-12-30 00:48:11,905]DEBUG 26068[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05C0F431DD
[2015-12-30 00:48:11,906]DEBUG 26069[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop constraint FK8D444F05990DB877
[2015-12-30 00:48:11,906]DEBUG 26069[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk8d444f05990db877" of relation "orders" does not exist
[2015-12-30 00:48:11,906]DEBUG 26069[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05C0F431DD
[2015-12-30 00:48:11,981]DEBUG 26144[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05F161465
[2015-12-30 00:48:11,981]DEBUG 26144[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop constraint FK8D444F05C0F431DD
[2015-12-30 00:48:11,981]DEBUG 26144[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk8d444f05c0f431dd" of relation "orders" does not exist
[2015-12-30 00:48:11,981]DEBUG 26144[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05F161465
[2015-12-30 00:48:12,074]DEBUG 26237[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE83D05058F
[2015-12-30 00:48:12,074]DEBUG 26237[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop constraint FK8D444F05F161465
[2015-12-30 00:48:12,075]DEBUG 26238[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk8d444f05f161465" of relation "orders" does not exist
[2015-12-30 00:48:12,075]DEBUG 26238[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE83D05058F
[2015-12-30 00:48:12,165]DEBUG 26328[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE89AEF426F
[2015-12-30 00:48:12,165]DEBUG 26328[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop constraint FK4E39DE83D05058F
[2015-12-30 00:48:12,165]DEBUG 26328[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk4e39de83d05058f" of relation "users" does not exist
[2015-12-30 00:48:12,165]DEBUG 26328[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE89AEF426F
[2015-12-30 00:48:12,232]DEBUG 26395[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE8FEAD4DCF
[2015-12-30 00:48:12,232]DEBUG 26395[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop constraint FK4E39DE89AEF426F
[2015-12-30 00:48:12,232]DEBUG 26395[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk4e39de89aef426f" of relation "users" does not exist
[2015-12-30 00:48:12,233]DEBUG 26396[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE8FEAD4DCF
[2015-12-30 00:48:12,299]DEBUG 26462[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CardType cascade
[2015-12-30 00:48:12,299]DEBUG 26462[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop constraint FK4E39DE8FEAD4DCF
[2015-12-30 00:48:12,300]DEBUG 26463[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk4e39de8fead4dcf" of relation "users" does not exist
[2015-12-30 00:48:12,300]DEBUG 26463[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CardType cascade
[2015-12-30 00:48:12,380]DEBUG 26543[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table CardType cascade
[2015-12-30 00:48:12,381]DEBUG 26544[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "cardtype" does not exist
[2015-12-30 00:48:12,381]DEBUG 26544[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CustomerTypes cascade
[2015-12-30 00:48:12,384]DEBUG 26547[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CustomerTypes cascade
[2015-12-30 00:48:12,469]DEBUG 26632[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Dimensions cascade
[2015-12-30 00:48:12,469]DEBUG 26632[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table CustomerTypes cascade
[2015-12-30 00:48:12,469]DEBUG 26632[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "customertypes" does not exist
[2015-12-30 00:48:12,470]DEBUG 26633[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Dimensions cascade
[2015-12-30 00:48:12,539]DEBUG 26702[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderItems cascade
[2015-12-30 00:48:12,540]DEBUG 26703[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Dimensions cascade
[2015-12-30 00:48:12,540]DEBUG 26703[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "dimensions" does not exist
[2015-12-30 00:48:12,540]DEBUG 26703[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderItems cascade
[2015-12-30 00:48:12,604]DEBUG 26767[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderStatuses cascade
[2015-12-30 00:48:12,605]DEBUG 26768[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table OrderItems cascade
[2015-12-30 00:48:12,605]DEBUG 26768[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "orderitems" does not exist
[2015-12-30 00:48:12,605]DEBUG 26768[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderStatuses cascade
[2015-12-30 00:48:12,666]DEBUG 26829[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Orders cascade
[2015-12-30 00:48:12,666]DEBUG 26829[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table OrderStatuses cascade
[2015-12-30 00:48:12,666]DEBUG 26829[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "orderstatuses" does not exist
[2015-12-30 00:48:12,666]DEBUG 26829[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Orders cascade
[2015-12-30 00:48:12,729]DEBUG 26892[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Orders cascade
[2015-12-30 00:48:12,729]DEBUG 26892[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "orders" does not exist
[2015-12-30 00:48:12,730]DEBUG 26893[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Products cascade
[2015-12-30 00:48:12,730]DEBUG 26893[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Products cascade
[2015-12-30 00:48:12,791]DEBUG 26954[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Regions cascade
[2015-12-30 00:48:12,792]DEBUG 26955[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Products cascade
[2015-12-30 00:48:12,792]DEBUG 26955[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "products" does not exist
[2015-12-30 00:48:12,792]DEBUG 26955[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Regions cascade
[2015-12-30 00:48:12,863]DEBUG 27026[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Roles cascade
[2015-12-30 00:48:12,863]DEBUG 27026[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Regions cascade
[2015-12-30 00:48:12,863]DEBUG 27026[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "regions" does not exist
[2015-12-30 00:48:12,863]DEBUG 27026[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Roles cascade
[2015-12-30 00:48:12,924]DEBUG 27087[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Roles cascade
[2015-12-30 00:48:12,924]DEBUG 27087[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "roles" does not exist
[2015-12-30 00:48:12,925]DEBUG 27088[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Users cascade
[2015-12-30 00:48:12,925]DEBUG 27088[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Users cascade
[2015-12-30 00:48:13,002]DEBUG 27165[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop sequence hibernate_sequence
[2015-12-30 00:48:13,003]DEBUG 27166[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Users cascade
[2015-12-30 00:48:13,003]DEBUG 27166[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "users" does not exist
[2015-12-30 00:48:13,003]DEBUG 27166[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop sequence hibernate_sequence
[2015-12-30 00:48:13,134] INFO 27297[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2015-12-30 00:48:13,135]DEBUG 27298[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop sequence hibernate_sequence
[2015-12-30 00:48:13,135]DEBUG 27298[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: sequence "hibernate_sequence" does not exist
[2015-12-30 00:48:13,135] INFO 27298[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2015-12-30 00:48:13,136] INFO 27299[Thread-0] - org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) - cleaning up connection pool: jdbc:postgresql://192.168.103.164:5432/_055_DB
[2015-12-30 00:48:13,138] INFO 27301[Thread-1] - org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) - cleaning up connection pool: jdbc:postgresql://192.168.103.164:5432/_055_DB
