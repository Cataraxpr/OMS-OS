[2015-12-30 01:08:00,008]DEBUG 21353[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:353) - Resolved location pattern [classpath*:com/softserveinc/edu/oms/persistence/dao/concrete/**/*.class] to resources [file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RoleDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RegionDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderStatusDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/ProductDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/DimensionDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao$1.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CustomerTypeDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderItemDao.class], file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CreditCardTypeDao.class]]
[2015-12-30 01:08:00,013]DEBUG 21358[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderDao.class]
[2015-12-30 01:08:00,013]DEBUG 21358[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RoleDao.class]
[2015-12-30 01:08:00,014]DEBUG 21359[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao.class]
[2015-12-30 01:08:00,014]DEBUG 21359[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RegionDao.class]
[2015-12-30 01:08:00,019]DEBUG 21364[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderStatusDao.class]
[2015-12-30 01:08:00,019]DEBUG 21364[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/ProductDao.class]
[2015-12-30 01:08:00,019]DEBUG 21364[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/DimensionDao.class]
[2015-12-30 01:08:00,024]DEBUG 21369[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CustomerTypeDao.class]
[2015-12-30 01:08:00,024]DEBUG 21369[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderItemDao.class]
[2015-12-30 01:08:00,024]DEBUG 21369[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CreditCardTypeDao.class]
[2015-12-30 01:08:00,025] INFO 21370[main] - org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:618) - Overriding bean definition for bean 'sessionFactory': replacing [Generic bean: class [org.springframework.orm.hibernate3.LocalSessionFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [testApplicationContex.xml]] with [Generic bean: class [org.springframework.orm.hibernate3.LocalSessionFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [testApplicationContex.xml]]
[2015-12-30 01:08:00,025]DEBUG 21370[main] - org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:185) - Loaded 0 bean definitions from location pattern [classpath:testApplicationContex.xml]
[2015-12-30 01:08:00,031] INFO 21376[main] - org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:456) - Refreshing org.springframework.context.support.GenericApplicationContext@722ee101: startup date [Wed Dec 30 01:08:00 EET 2015]; root of context hierarchy
[2015-12-30 01:08:00,031]DEBUG 21376[main] - org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:470) - Bean factory for org.springframework.context.support.GenericApplicationContext@722ee101: org.springframework.beans.factory.support.DefaultListableBeanFactory@6c16e441: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderDao,roleDao,userDao,regionDao,orderStatusDao,productDao,dimensionDao,customerTypeDao,orderItemDao,creditCardTypeDao,sessionFactory]; root of factory hierarchy
[2015-12-30 01:08:00,032]DEBUG 21377[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2015-12-30 01:08:00,032]DEBUG 21377[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2015-12-30 01:08:00,032]DEBUG 21377[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
[2015-12-30 01:08:00,036]DEBUG 21381[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2015-12-30 01:08:00,061]DEBUG 21406[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2015-12-30 01:08:00,061]DEBUG 21406[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2015-12-30 01:08:00,061] INFO 21406[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:137) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2015-12-30 01:08:00,061]DEBUG 21406[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
[2015-12-30 01:08:00,062]DEBUG 21407[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2015-12-30 01:08:00,063]DEBUG 21408[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2015-12-30 01:08:00,063]DEBUG 21408[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2015-12-30 01:08:00,064]DEBUG 21409[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
[2015-12-30 01:08:00,064]DEBUG 21409[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2015-12-30 01:08:00,064]DEBUG 21409[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2015-12-30 01:08:00,064]DEBUG 21409[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2015-12-30 01:08:00,064]DEBUG 21409[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
[2015-12-30 01:08:00,064]DEBUG 21409[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2015-12-30 01:08:00,064]DEBUG 21409[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2015-12-30 01:08:00,064]DEBUG 21409[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2015-12-30 01:08:00,065]DEBUG 21410[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
[2015-12-30 01:08:00,065]DEBUG 21410[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2015-12-30 01:08:00,065]DEBUG 21410[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2015-12-30 01:08:00,065]DEBUG 21410[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2015-12-30 01:08:00,069]DEBUG 21414[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
[2015-12-30 01:08:00,070]DEBUG 21415[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2015-12-30 01:08:00,070]DEBUG 21415[main] - org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:776) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7c739ebd]
[2015-12-30 01:08:00,070]DEBUG 21415[main] - org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:800) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6d2c0060]
[2015-12-30 01:08:00,071] INFO 21416[main] - org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:555) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6c16e441: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderDao,roleDao,userDao,regionDao,orderStatusDao,productDao,dimensionDao,customerTypeDao,orderItemDao,creditCardTypeDao,sessionFactory]; root of factory hierarchy
[2015-12-30 01:08:00,071]DEBUG 21416[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'transactionManager'
[2015-12-30 01:08:00,071]DEBUG 21416[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'transactionManager'
[2015-12-30 01:08:00,075]DEBUG 21420[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
[2015-12-30 01:08:00,076]DEBUG 21421[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:00,076]DEBUG 21421[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'sessionFactory'
[2015-12-30 01:08:00,077]DEBUG 21422[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
[2015-12-30 01:08:00,077]DEBUG 21422[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'sessionFactory'
[2015-12-30 01:08:00,078]DEBUG 21423[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@7e4cb74
[2015-12-30 01:08:00,078]DEBUG 21423[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@7e4cb74
[2015-12-30 01:08:00,078]DEBUG 21423[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7e4cb74
[2015-12-30 01:08:00,078]DEBUG 21423[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@243cc381
[2015-12-30 01:08:00,078]DEBUG 21423[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@e7732d4
[2015-12-30 01:08:00,078]DEBUG 21423[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration yes_no -> org.hibernate.type.YesNoType@4996b20e
[2015-12-30 01:08:00,078]DEBUG 21423[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@a6af882
[2015-12-30 01:08:00,079]DEBUG 21424[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@a6af882
[2015-12-30 01:08:00,079]DEBUG 21424[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@a6af882
[2015-12-30 01:08:00,079]DEBUG 21424[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration character -> org.hibernate.type.CharacterType@ce6e2f2
[2015-12-30 01:08:00,079]DEBUG 21424[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char -> org.hibernate.type.CharacterType@ce6e2f2
[2015-12-30 01:08:00,079]DEBUG 21424[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@ce6e2f2
[2015-12-30 01:08:00,079]DEBUG 21424[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@34430a24
[2015-12-30 01:08:00,083]DEBUG 21428[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@34430a24
[2015-12-30 01:08:00,083]DEBUG 21428[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@34430a24
[2015-12-30 01:08:00,083]DEBUG 21428[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration integer -> org.hibernate.type.IntegerType@4bac1460
[2015-12-30 01:08:00,083]DEBUG 21428[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration int -> org.hibernate.type.IntegerType@4bac1460
[2015-12-30 01:08:00,083]DEBUG 21428[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4bac1460
[2015-12-30 01:08:00,083]DEBUG 21428[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@21c47b30
[2015-12-30 01:08:00,084]DEBUG 21429[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@21c47b30
[2015-12-30 01:08:00,084]DEBUG 21429[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@21c47b30
[2015-12-30 01:08:00,084]DEBUG 21429[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@2b4908ec
[2015-12-30 01:08:00,084]DEBUG 21429[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@2b4908ec
[2015-12-30 01:08:00,084]DEBUG 21429[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2b4908ec
[2015-12-30 01:08:00,084]DEBUG 21429[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@6a9cb793
[2015-12-30 01:08:00,084]DEBUG 21429[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@6a9cb793
[2015-12-30 01:08:00,085]DEBUG 21430[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6a9cb793
[2015-12-30 01:08:00,085]DEBUG 21430[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@21d306ef
[2015-12-30 01:08:00,085]DEBUG 21430[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@21d306ef
[2015-12-30 01:08:00,085]DEBUG 21430[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7a8e732a
[2015-12-30 01:08:00,085]DEBUG 21430[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7a8e732a
[2015-12-30 01:08:00,085]DEBUG 21430[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration string -> org.hibernate.type.StringType@1d1fcfbb
[2015-12-30 01:08:00,090]DEBUG 21435[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1d1fcfbb
[2015-12-30 01:08:00,090]DEBUG 21435[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration url -> org.hibernate.type.UrlType@3458d951
[2015-12-30 01:08:00,090]DEBUG 21435[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3458d951
[2015-12-30 01:08:00,090]DEBUG 21435[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration date -> org.hibernate.type.DateType@58198636
[2015-12-30 01:08:00,090]DEBUG 21435[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@58198636
[2015-12-30 01:08:00,091]DEBUG 21436[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration time -> org.hibernate.type.TimeType@5aae20b6
[2015-12-30 01:08:00,091]DEBUG 21436[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5aae20b6
[2015-12-30 01:08:00,091]DEBUG 21436[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timestamp -> org.hibernate.type.TimestampType@50193bcf
[2015-12-30 01:08:00,091]DEBUG 21436[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50193bcf
[2015-12-30 01:08:00,091]DEBUG 21436[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50193bcf
[2015-12-30 01:08:00,098]DEBUG 21443[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4ba0fe
[2015-12-30 01:08:00,099]DEBUG 21444[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar -> org.hibernate.type.CalendarType@22758cdb
[2015-12-30 01:08:00,099]DEBUG 21444[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@22758cdb
[2015-12-30 01:08:00,099]DEBUG 21444[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@22758cdb
[2015-12-30 01:08:00,099]DEBUG 21444[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2b36546e
[2015-12-30 01:08:00,099]DEBUG 21444[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration locale -> org.hibernate.type.LocaleType@7a4fa248
[2015-12-30 01:08:00,099]DEBUG 21444[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7a4fa248
[2015-12-30 01:08:00,100]DEBUG 21445[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration currency -> org.hibernate.type.CurrencyType@4a229198
[2015-12-30 01:08:00,100]DEBUG 21445[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4a229198
[2015-12-30 01:08:00,100]DEBUG 21445[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4ad496be
[2015-12-30 01:08:00,100]DEBUG 21445[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4ad496be
[2015-12-30 01:08:00,100]DEBUG 21445[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration class -> org.hibernate.type.ClassType@55ffb930
[2015-12-30 01:08:00,100]DEBUG 21445[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@55ffb930
[2015-12-30 01:08:00,102]DEBUG 21447[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@70e2c2f9
[2015-12-30 01:08:00,102]DEBUG 21447[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@70e2c2f9
[2015-12-30 01:08:00,102]DEBUG 21447[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@322e9157
[2015-12-30 01:08:00,102]DEBUG 21447[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@51e1ddd7
[2015-12-30 01:08:00,102]DEBUG 21447[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration binary -> org.hibernate.type.BinaryType@157061e8
[2015-12-30 01:08:00,103]DEBUG 21448[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte[] -> org.hibernate.type.BinaryType@157061e8
[2015-12-30 01:08:00,103]DEBUG 21448[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [B -> org.hibernate.type.BinaryType@157061e8
[2015-12-30 01:08:00,103]DEBUG 21448[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@282c1f9d
[2015-12-30 01:08:00,103]DEBUG 21448[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@282c1f9d
[2015-12-30 01:08:00,103]DEBUG 21448[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@282c1f9d
[2015-12-30 01:08:00,103]DEBUG 21448[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration image -> org.hibernate.type.ImageType@5e08ed20
[2015-12-30 01:08:00,103]DEBUG 21448[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters -> org.hibernate.type.CharArrayType@6f06307f
[2015-12-30 01:08:00,103]DEBUG 21448[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char[] -> org.hibernate.type.CharArrayType@6f06307f
[2015-12-30 01:08:00,104]DEBUG 21449[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [C -> org.hibernate.type.CharArrayType@6f06307f
[2015-12-30 01:08:00,104]DEBUG 21449[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@79513c2b
[2015-12-30 01:08:00,104]DEBUG 21449[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@79513c2b
[2015-12-30 01:08:00,104]DEBUG 21449[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@79513c2b
[2015-12-30 01:08:00,104]DEBUG 21449[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration text -> org.hibernate.type.TextType@1d1669f2
[2015-12-30 01:08:00,104]DEBUG 21449[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@4afc818c
[2015-12-30 01:08:00,110]DEBUG 21455[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4afc818c
[2015-12-30 01:08:00,110]DEBUG 21455[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57bffd97
[2015-12-30 01:08:00,110]DEBUG 21455[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@5c76911d
[2015-12-30 01:08:00,110]DEBUG 21455[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@4e72c39b
[2015-12-30 01:08:00,110]DEBUG 21455[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4e72c39b
[2015-12-30 01:08:00,110]DEBUG 21455[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9327927
[2015-12-30 01:08:00,110]DEBUG 21455[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4cb840d2
[2015-12-30 01:08:00,111]DEBUG 21456[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@2f9312a2
[2015-12-30 01:08:00,111]DEBUG 21456[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration serializable -> org.hibernate.type.SerializableType@79bb65ee
[2015-12-30 01:08:00,111]DEBUG 21456[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration object -> org.hibernate.type.ObjectType@65284069
[2015-12-30 01:08:00,112]DEBUG 21457[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@65284069
[2015-12-30 01:08:00,112]DEBUG 21457[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@52b2d9ff
[2015-12-30 01:08:00,112]DEBUG 21457[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@15cdc368
[2015-12-30 01:08:00,113]DEBUG 21458[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c8bb62
[2015-12-30 01:08:00,115]DEBUG 21460[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7b7302a3
[2015-12-30 01:08:00,115]DEBUG 21460[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a5d66e8
[2015-12-30 01:08:00,116]DEBUG 21461[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@28dbcc4d
[2015-12-30 01:08:00,118]DEBUG 21463[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@60f2a250
[2015-12-30 01:08:00,118]DEBUG 21463[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@78d183e5
[2015-12-30 01:08:00,118]DEBUG 21463[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
[2015-12-30 01:08:00,118]DEBUG 21463[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
[2015-12-30 01:08:00,118]DEBUG 21463[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
[2015-12-30 01:08:00,119]DEBUG 21464[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
[2015-12-30 01:08:00,119]DEBUG 21464[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
[2015-12-30 01:08:00,119]DEBUG 21464[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
[2015-12-30 01:08:00,119]DEBUG 21464[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
[2015-12-30 01:08:00,119]DEBUG 21464[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
[2015-12-30 01:08:00,119]DEBUG 21464[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
[2015-12-30 01:08:00,119]DEBUG 21464[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
[2015-12-30 01:08:00,120]DEBUG 21465[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
[2015-12-30 01:08:00,120]DEBUG 21465[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
[2015-12-30 01:08:00,123]DEBUG 21468[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
[2015-12-30 01:08:00,123]DEBUG 21468[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
[2015-12-30 01:08:00,123]DEBUG 21468[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
[2015-12-30 01:08:00,123] INFO 21468[main] - org.hibernate.cfg.Configuration.configure(Configuration.java:2192) - configuring from url: file:/opt/jenkins-slv/fs/workspace/OMS/target/test-classes/hibernate_test.cfg.xml
[2015-12-30 01:08:00,125]DEBUG 21470[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
[2015-12-30 01:08:00,125] WARN 21470[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
[2015-12-30 01:08:00,125]DEBUG 21470[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) - attempting to resolve on classpath under org/hibernate/
[2015-12-30 01:08:00,125]DEBUG 21470[main] - org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) - located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
[2015-12-30 01:08:00,131]DEBUG 21476[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.driver_class=org.postgresql.Driver
[2015-12-30 01:08:00,131]DEBUG 21476[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - dialect=org.hibernate.dialect.PostgreSQLDialect
[2015-12-30 01:08:00,132]DEBUG 21477[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.url=jdbc:postgresql://192.168.103.164:5432/_055_DB
[2015-12-30 01:08:00,132]DEBUG 21477[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.username=055db
[2015-12-30 01:08:00,132]DEBUG 21477[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.password=055db
[2015-12-30 01:08:00,132]DEBUG 21477[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.hbm2ddl.auto=create-drop
[2015-12-30 01:08:00,132]DEBUG 21477[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Role] for mapping
[2015-12-30 01:08:00,132]DEBUG 21477[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Region] for mapping
[2015-12-30 01:08:00,132]DEBUG 21477[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.CustomerType] for mapping
[2015-12-30 01:08:00,136]DEBUG 21481[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.User] for mapping
[2015-12-30 01:08:00,136]DEBUG 21481[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.OrderStatus] for mapping
[2015-12-30 01:08:00,136]DEBUG 21481[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Order] for mapping
[2015-12-30 01:08:00,136]DEBUG 21481[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Product] for mapping
[2015-12-30 01:08:00,136]DEBUG 21481[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Dimension] for mapping
[2015-12-30 01:08:00,136]DEBUG 21481[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.OrderItem] for mapping
[2015-12-30 01:08:00,137]DEBUG 21482[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.CreditCardType] for mapping
[2015-12-30 01:08:00,137] INFO 21482[main] - org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) - Configured SessionFactory: null
[2015-12-30 01:08:00,137]DEBUG 21482[main] - org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) - properties: {hibernate.connection.password=055db, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/usr/java/jdk1.7.0_79/jre/lib/amd64, java.vm.version=24.79-b02, hibernate.connection.username=055db, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/opt/jenkins-slv/fs/workspace/OMS, java.runtime.version=1.7.0_79-b15, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/opt/jenkins-slv/fs/workspace/OMS, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=/usr/java/jdk1.7.0_79/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/opt/jenkins-slv/fs/workspace/OMS/target/surefire/surefirebooter3268777018065329848.jar, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/opt/jenkins-slv/fs/workspace/OMS/target/test-classes:/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes:/root/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/root/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/root/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/root/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/root/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/root/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/root/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/root/.m2/repository/junit/junit/4.7/junit-4.7.jar:/root/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/root/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/root/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/root/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/root/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/root/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/root/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/root/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/root/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/root/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/root/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/root/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/root/.m2/repository/org/postgresql/postgresql/9.4-1200-jdbc41/postgresql-9.4-1200-jdbc41.jar:/root/.m2/repository/com/github/dblock/waffle/waffle-jna/1.7/waffle-jna-1.7.jar:/root/.m2/repository/net/java/dev/jna/jna/4.1.0/jna-4.1.0.jar:/root/.m2/repository/net/java/dev/jna/jna-platform/4.1.0/jna-platform-4.1.0.jar:/root/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar:/root/.m2/repository/org/slf4j/slf4j-simple/1.7.7/slf4j-simple-1.7.7.jar:/root/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/root/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/root/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/root/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/root/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/root/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/root/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/root/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/root/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/root/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/root/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/root/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/root/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/root/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/root/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/root/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/root/.m2/repository/emma/emma/2.0.5312/emma-2.0.5312.jar:, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=2.6.32-573.12.1.el6.x86_64, user.home=/root, user.timezone=Europe/Kiev, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.7, hibernate.connection.driver_class=org.postgresql.Driver, java.class.path=/opt/jenkins-slv/fs/workspace/OMS/target/test-classes:/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes:/root/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/root/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/root/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/root/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/root/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/root/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/root/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/root/.m2/repository/junit/junit/4.7/junit-4.7.jar:/root/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/root/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/root/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/root/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/root/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/root/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/root/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/root/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/root/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/root/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/root/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/root/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/root/.m2/repository/org/postgresql/postgresql/9.4-1200-jdbc41/postgresql-9.4-1200-jdbc41.jar:/root/.m2/repository/com/github/dblock/waffle/waffle-jna/1.7/waffle-jna-1.7.jar:/root/.m2/repository/net/java/dev/jna/jna/4.1.0/jna-4.1.0.jar:/root/.m2/repository/net/java/dev/jna/jna-platform/4.1.0/jna-platform-4.1.0.jar:/root/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar:/root/.m2/repository/org/slf4j/slf4j-simple/1.7.7/slf4j-simple-1.7.7.jar:/root/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/root/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/root/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/root/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/root/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/root/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/root/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/root/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/root/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/root/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/root/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/root/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/root/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/root/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/root/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/root/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/root/.m2/repository/emma/emma/2.0.5312/emma-2.0.5312.jar:, user.name=root, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.7, sun.java.command=/opt/jenkins-slv/fs/workspace/OMS/target/surefire/surefirebooter3268777018065329848.jar /opt/jenkins-slv/fs/workspace/OMS/target/surefire/surefire6985874297874726400tmp /opt/jenkins-slv/fs/workspace/OMS/target/surefire/surefire_07852949817005021616tmp, java.home=/usr/java/jdk1.7.0_79/jre, sun.arch.data.model=64, hibernate.connection.url=jdbc:postgresql://192.168.103.164:5432/_055_DB, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.7.0_79, java.ext.dirs=/usr/java/jdk1.7.0_79/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.7.0_79/jre/lib/resources.jar:/usr/java/jdk1.7.0_79/jre/lib/rt.jar:/usr/java/jdk1.7.0_79/jre/lib/sunrsasign.jar:/usr/java/jdk1.7.0_79/jre/lib/jsse.jar:/usr/java/jdk1.7.0_79/jre/lib/jce.jar:/usr/java/jdk1.7.0_79/jre/lib/charsets.jar:/usr/java/jdk1.7.0_79/jre/lib/jfr.jar:/usr/java/jdk1.7.0_79/jre/classes, java.vendor=Oracle Corporation, localRepository=/root/.m2/repository, file.separator=/, hibernate.hbm2ddl.auto=create-drop, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.PostgreSQLDialect, sun.cpu.isalist=}
[2015-12-30 01:08:00,142]DEBUG 21487[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2015-12-30 01:08:00,142]DEBUG 21487[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2015-12-30 01:08:00,143] INFO 21488[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 01:08:00,143]DEBUG 21488[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 01:08:00,143]DEBUG 21488[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 01:08:00,143]DEBUG 21488[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Role
[2015-12-30 01:08:00,144] INFO 21489[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Role on table Roles
[2015-12-30 01:08:00,144]DEBUG 21489[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Roles), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,144]DEBUG 21489[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 01:08:00,145]DEBUG 21490[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 01:08:00,145]DEBUG 21490[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 01:08:00,145]DEBUG 21490[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Roles), mappingColumn=RoleName, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,145]DEBUG 21490[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property roleName with lazy=false
[2015-12-30 01:08:00,145]DEBUG 21490[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for roleName
[2015-12-30 01:08:00,145]DEBUG 21490[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property roleName
[2015-12-30 01:08:00,146] INFO 21491[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 01:08:00,146]DEBUG 21491[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 01:08:00,146]DEBUG 21491[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 01:08:00,146]DEBUG 21491[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Region
[2015-12-30 01:08:00,146] INFO 21491[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Region on table Regions
[2015-12-30 01:08:00,147]DEBUG 21492[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Regions), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,147]DEBUG 21492[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 01:08:00,147]DEBUG 21492[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 01:08:00,147]DEBUG 21492[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 01:08:00,151]DEBUG 21496[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Regions), mappingColumn=RegionName, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,151]DEBUG 21496[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property regionName with lazy=false
[2015-12-30 01:08:00,151]DEBUG 21496[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for regionName
[2015-12-30 01:08:00,151]DEBUG 21496[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property regionName
[2015-12-30 01:08:00,152] INFO 21497[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 01:08:00,152]DEBUG 21497[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 01:08:00,152]DEBUG 21497[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 01:08:00,152]DEBUG 21497[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name CustomerType
[2015-12-30 01:08:00,152] INFO 21497[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.CustomerType on table CustomerTypes
[2015-12-30 01:08:00,153]DEBUG 21498[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,153]DEBUG 21498[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 01:08:00,157]DEBUG 21502[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 01:08:00,157]DEBUG 21502[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 01:08:00,161]DEBUG 21506[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=Discount, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,161]DEBUG 21506[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property discount with lazy=false
[2015-12-30 01:08:00,161]DEBUG 21506[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for discount
[2015-12-30 01:08:00,161]DEBUG 21506[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property discount
[2015-12-30 01:08:00,161]DEBUG 21506[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=MaxRange, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,162]DEBUG 21507[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property maxRange with lazy=false
[2015-12-30 01:08:00,162]DEBUG 21507[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for maxRange
[2015-12-30 01:08:00,162]DEBUG 21507[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property maxRange
[2015-12-30 01:08:00,162]DEBUG 21507[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=MinRange, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,162]DEBUG 21507[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property minRange with lazy=false
[2015-12-30 01:08:00,162]DEBUG 21507[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for minRange
[2015-12-30 01:08:00,163]DEBUG 21508[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property minRange
[2015-12-30 01:08:00,163]DEBUG 21508[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=TypeName, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,163]DEBUG 21508[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property typeName with lazy=false
[2015-12-30 01:08:00,163]DEBUG 21508[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for typeName
[2015-12-30 01:08:00,165]DEBUG 21510[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property typeName
[2015-12-30 01:08:00,165] INFO 21510[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 01:08:00,165]DEBUG 21510[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 01:08:00,165]DEBUG 21510[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 01:08:00,165]DEBUG 21510[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name User
[2015-12-30 01:08:00,165] INFO 21510[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.User on table Users
[2015-12-30 01:08:00,167]DEBUG 21512[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,167]DEBUG 21512[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 01:08:00,172]DEBUG 21517[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 01:08:00,173]DEBUG 21518[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 01:08:00,173]DEBUG 21518[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=IsUserActive, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,173]DEBUG 21518[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property active with lazy=false
[2015-12-30 01:08:00,173]DEBUG 21518[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for active
[2015-12-30 01:08:00,174]DEBUG 21519[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property active
[2015-12-30 01:08:00,174]DEBUG 21519[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Balance, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,174]DEBUG 21519[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property balance with lazy=false
[2015-12-30 01:08:00,174]DEBUG 21519[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for balance
[2015-12-30 01:08:00,174]DEBUG 21519[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property balance
[2015-12-30 01:08:00,174]DEBUG 21519[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='CustomerTypeRef', referencedColumn='', mappedBy=''}
[2015-12-30 01:08:00,175]DEBUG 21520[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=customerType, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,175]DEBUG 21520[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property customerType
[2015-12-30 01:08:00,175]DEBUG 21520[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Email, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,175]DEBUG 21520[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property email with lazy=false
[2015-12-30 01:08:00,175]DEBUG 21520[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for email
[2015-12-30 01:08:00,176]DEBUG 21521[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property email
[2015-12-30 01:08:00,177]DEBUG 21522[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=FirstName, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,177]DEBUG 21522[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property firstName with lazy=false
[2015-12-30 01:08:00,177]DEBUG 21522[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for firstName
[2015-12-30 01:08:00,177]DEBUG 21522[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property firstName
[2015-12-30 01:08:00,177]DEBUG 21522[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=LastName, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,178]DEBUG 21523[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property lastName with lazy=false
[2015-12-30 01:08:00,178]DEBUG 21523[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for lastName
[2015-12-30 01:08:00,178]DEBUG 21523[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property lastName
[2015-12-30 01:08:00,178]DEBUG 21523[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Login, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,178]DEBUG 21523[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property login with lazy=false
[2015-12-30 01:08:00,178]DEBUG 21523[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for login
[2015-12-30 01:08:00,179]DEBUG 21524[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property login
[2015-12-30 01:08:00,179]DEBUG 21524[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Password, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,179]DEBUG 21524[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property password with lazy=false
[2015-12-30 01:08:00,179]DEBUG 21524[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for password
[2015-12-30 01:08:00,179]DEBUG 21524[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property password
[2015-12-30 01:08:00,179]DEBUG 21524[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='RegionRef', referencedColumn='', mappedBy=''}
[2015-12-30 01:08:00,183]DEBUG 21528[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=region, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,183]DEBUG 21528[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property region
[2015-12-30 01:08:00,183]DEBUG 21528[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='RoleRef', referencedColumn='', mappedBy=''}
[2015-12-30 01:08:00,183]DEBUG 21528[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=role, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,184]DEBUG 21529[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property role
[2015-12-30 01:08:00,184] INFO 21529[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 01:08:00,184]DEBUG 21529[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 01:08:00,184]DEBUG 21529[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 01:08:00,184]DEBUG 21529[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderStatus
[2015-12-30 01:08:00,184] INFO 21529[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.OrderStatus on table OrderStatuses
[2015-12-30 01:08:00,190]DEBUG 21535[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderStatuses), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,190]DEBUG 21535[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 01:08:00,190]DEBUG 21535[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 01:08:00,190]DEBUG 21535[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 01:08:00,190]DEBUG 21535[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderStatuses), mappingColumn=OrederStatusName, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,191]DEBUG 21536[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderStatusName with lazy=false
[2015-12-30 01:08:00,191]DEBUG 21536[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderStatusName
[2015-12-30 01:08:00,191]DEBUG 21536[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderStatusName
[2015-12-30 01:08:00,191] INFO 21536[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 01:08:00,191]DEBUG 21536[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 01:08:00,191]DEBUG 21536[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 01:08:00,195]DEBUG 21540[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Order
[2015-12-30 01:08:00,195] INFO 21540[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Order on table Orders
[2015-12-30 01:08:00,202]DEBUG 21547[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,203]DEBUG 21548[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 01:08:00,203]DEBUG 21548[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 01:08:00,203]DEBUG 21548[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 01:08:00,207]DEBUG 21552[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='Assigne', referencedColumn='', mappedBy=''}
[2015-12-30 01:08:00,207]DEBUG 21552[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=assigne, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,208]DEBUG 21553[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property assigne
[2015-12-30 01:08:00,208]DEBUG 21553[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='Customer', referencedColumn='', mappedBy=''}
[2015-12-30 01:08:00,208]DEBUG 21553[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,209]DEBUG 21554[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property customer
[2015-12-30 01:08:00,209]DEBUG 21554[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=DeliveryDate, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,209]DEBUG 21554[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property deliveryDate with lazy=false
[2015-12-30 01:08:00,210]DEBUG 21555[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for deliveryDate
[2015-12-30 01:08:00,210]DEBUG 21555[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property deliveryDate
[2015-12-30 01:08:00,210]DEBUG 21555[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=IsGift, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,214]DEBUG 21559[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property isGift with lazy=false
[2015-12-30 01:08:00,214]DEBUG 21559[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for isGift
[2015-12-30 01:08:00,215]DEBUG 21560[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property isGift
[2015-12-30 01:08:00,215]DEBUG 21560[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=MaxDiscount, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,215]DEBUG 21560[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property maxDiscount with lazy=false
[2015-12-30 01:08:00,216]DEBUG 21561[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for maxDiscount
[2015-12-30 01:08:00,216]DEBUG 21561[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property maxDiscount
[2015-12-30 01:08:00,220]DEBUG 21565[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderDate, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,224]DEBUG 21569[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderDate with lazy=false
[2015-12-30 01:08:00,224]DEBUG 21569[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderDate
[2015-12-30 01:08:00,224]DEBUG 21569[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderDate
[2015-12-30 01:08:00,225]DEBUG 21570[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderName, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,225]DEBUG 21570[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderName with lazy=false
[2015-12-30 01:08:00,225]DEBUG 21570[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderName
[2015-12-30 01:08:00,225]DEBUG 21570[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderName
[2015-12-30 01:08:00,225]DEBUG 21570[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderNumber, insertable=true, updatable=true, unique=true}
[2015-12-30 01:08:00,225]DEBUG 21570[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderNumber with lazy=false
[2015-12-30 01:08:00,226]DEBUG 21571[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderNumber
[2015-12-30 01:08:00,226]DEBUG 21571[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderNumber
[2015-12-30 01:08:00,226]DEBUG 21571[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='OrderStatusRef', referencedColumn='', mappedBy=''}
[2015-12-30 01:08:00,226]DEBUG 21571[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=orderStatus, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,226]DEBUG 21571[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderStatus
[2015-12-30 01:08:00,227]DEBUG 21572[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=PreferableDeliveryDate, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,228]DEBUG 21573[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property preferableDeliveryDate with lazy=false
[2015-12-30 01:08:00,228]DEBUG 21573[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for preferableDeliveryDate
[2015-12-30 01:08:00,229]DEBUG 21574[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property preferableDeliveryDate
[2015-12-30 01:08:00,229]DEBUG 21574[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=TotalPrice, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,229]DEBUG 21574[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property totalPrice with lazy=false
[2015-12-30 01:08:00,229]DEBUG 21574[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for totalPrice
[2015-12-30 01:08:00,229]DEBUG 21574[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property totalPrice
[2015-12-30 01:08:00,229] INFO 21574[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 01:08:00,230]DEBUG 21575[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 01:08:00,230]DEBUG 21575[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 01:08:00,230]DEBUG 21575[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Product
[2015-12-30 01:08:00,230] INFO 21575[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Product on table Products
[2015-12-30 01:08:00,231]DEBUG 21576[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,231]DEBUG 21576[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 01:08:00,233]DEBUG 21578[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 01:08:00,233]DEBUG 21578[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 01:08:00,234]DEBUG 21579[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=IsProductActive, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,234]DEBUG 21579[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property active with lazy=false
[2015-12-30 01:08:00,234]DEBUG 21579[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for active
[2015-12-30 01:08:00,234]DEBUG 21579[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property active
[2015-12-30 01:08:00,234]DEBUG 21579[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductDescription, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,234]DEBUG 21579[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productDescription with lazy=false
[2015-12-30 01:08:00,235]DEBUG 21580[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productDescription
[2015-12-30 01:08:00,235]DEBUG 21580[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productDescription
[2015-12-30 01:08:00,235]DEBUG 21580[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductName, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,235]DEBUG 21580[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productName with lazy=false
[2015-12-30 01:08:00,235]DEBUG 21580[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productName
[2015-12-30 01:08:00,235]DEBUG 21580[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productName
[2015-12-30 01:08:00,236]DEBUG 21581[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductPrice, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,236]DEBUG 21581[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productPrice with lazy=false
[2015-12-30 01:08:00,236]DEBUG 21581[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productPrice
[2015-12-30 01:08:00,236]DEBUG 21581[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productPrice
[2015-12-30 01:08:00,236] INFO 21581[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 01:08:00,237]DEBUG 21582[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 01:08:00,237]DEBUG 21582[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 01:08:00,237]DEBUG 21582[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Dimension
[2015-12-30 01:08:00,237] INFO 21582[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Dimension on table Dimensions
[2015-12-30 01:08:00,238]DEBUG 21583[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,238]DEBUG 21583[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 01:08:00,238]DEBUG 21583[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 01:08:00,238]DEBUG 21583[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 01:08:00,239]DEBUG 21584[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=DimensionName, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,239]DEBUG 21584[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property dimensionName with lazy=false
[2015-12-30 01:08:00,239]DEBUG 21584[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for dimensionName
[2015-12-30 01:08:00,239]DEBUG 21584[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property dimensionName
[2015-12-30 01:08:00,239]DEBUG 21584[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=NumberOfProducts, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,239]DEBUG 21584[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property numberOfProduct with lazy=false
[2015-12-30 01:08:00,240]DEBUG 21585[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for numberOfProduct
[2015-12-30 01:08:00,240]DEBUG 21585[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property numberOfProduct
[2015-12-30 01:08:00,240] INFO 21585[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.OrderItem
[2015-12-30 01:08:00,240]DEBUG 21585[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 01:08:00,240]DEBUG 21585[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 01:08:00,242]DEBUG 21587[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderItem
[2015-12-30 01:08:00,242] INFO 21587[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.OrderItem on table OrderItems
[2015-12-30 01:08:00,243]DEBUG 21588[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,244]DEBUG 21589[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 01:08:00,244]DEBUG 21589[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 01:08:00,244]DEBUG 21589[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 01:08:00,244]DEBUG 21589[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=Cost, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,244]DEBUG 21589[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cost with lazy=false
[2015-12-30 01:08:00,244]DEBUG 21589[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cost
[2015-12-30 01:08:00,245]DEBUG 21590[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cost
[2015-12-30 01:08:00,245]DEBUG 21590[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='DimensionRef', referencedColumn='', mappedBy=''}
[2015-12-30 01:08:00,245]DEBUG 21590[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=dimension, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,245]DEBUG 21590[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property dimension
[2015-12-30 01:08:00,245]DEBUG 21590[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=ItemPrice, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,246]DEBUG 21591[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property itemPrice with lazy=false
[2015-12-30 01:08:00,246]DEBUG 21591[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for itemPrice
[2015-12-30 01:08:00,246]DEBUG 21591[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property itemPrice
[2015-12-30 01:08:00,246]DEBUG 21591[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='OrderRef', referencedColumn='', mappedBy=''}
[2015-12-30 01:08:00,246]DEBUG 21591[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=order, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,246]DEBUG 21591[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property order
[2015-12-30 01:08:00,247]DEBUG 21592[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='ProductRef', referencedColumn='', mappedBy=''}
[2015-12-30 01:08:00,247]DEBUG 21592[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=product, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,247]DEBUG 21592[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property product
[2015-12-30 01:08:00,247]DEBUG 21592[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=Quantity, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,247]DEBUG 21592[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property quantity with lazy=false
[2015-12-30 01:08:00,248]DEBUG 21593[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for quantity
[2015-12-30 01:08:00,248]DEBUG 21593[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property quantity
[2015-12-30 01:08:00,248] INFO 21593[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.CreditCardType
[2015-12-30 01:08:00,248]DEBUG 21593[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2015-12-30 01:08:00,248]DEBUG 21593[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2015-12-30 01:08:00,248]DEBUG 21593[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name CreditCardType
[2015-12-30 01:08:00,249] INFO 21594[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.CreditCardType on table CardType
[2015-12-30 01:08:00,250]DEBUG 21595[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,250]DEBUG 21595[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2015-12-30 01:08:00,250]DEBUG 21595[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2015-12-30 01:08:00,250]DEBUG 21595[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2015-12-30 01:08:00,250]DEBUG 21595[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardType, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,251]DEBUG 21596[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cardType with lazy=false
[2015-12-30 01:08:00,251]DEBUG 21596[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cardType
[2015-12-30 01:08:00,251]DEBUG 21596[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cardType
[2015-12-30 01:08:00,251]DEBUG 21596[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardNumber, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,251]DEBUG 21596[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property creditCardNumber with lazy=false
[2015-12-30 01:08:00,251]DEBUG 21596[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for creditCardNumber
[2015-12-30 01:08:00,252]DEBUG 21597[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property creditCardNumber
[2015-12-30 01:08:00,252]DEBUG 21597[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardCvv2, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,252]DEBUG 21597[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cvv2 with lazy=false
[2015-12-30 01:08:00,252]DEBUG 21597[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cvv2
[2015-12-30 01:08:00,252]DEBUG 21597[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cvv2
[2015-12-30 01:08:00,252]DEBUG 21597[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=Expiration_Date, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,253]DEBUG 21598[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property expDate with lazy=false
[2015-12-30 01:08:00,253]DEBUG 21598[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for expDate
[2015-12-30 01:08:00,253]DEBUG 21598[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property expDate
[2015-12-30 01:08:00,255]DEBUG 21600[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=IssueDate, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,255]DEBUG 21600[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property issueDate with lazy=false
[2015-12-30 01:08:00,255]DEBUG 21600[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for issueDate
[2015-12-30 01:08:00,255]DEBUG 21600[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property issueDate
[2015-12-30 01:08:00,255]DEBUG 21600[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=IssueNumber, insertable=true, updatable=true, unique=false}
[2015-12-30 01:08:00,256]DEBUG 21601[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property issueNumber with lazy=false
[2015-12-30 01:08:00,256]DEBUG 21601[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for issueNumber
[2015-12-30 01:08:00,256]DEBUG 21601[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property issueNumber
[2015-12-30 01:08:00,256]DEBUG 21601[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 01:08:00,256]DEBUG 21601[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for roleName
[2015-12-30 01:08:00,256]DEBUG 21601[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 01:08:00,257]DEBUG 21602[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for regionName
[2015-12-30 01:08:00,257]DEBUG 21602[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 01:08:00,257]DEBUG 21602[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for discount
[2015-12-30 01:08:00,257]DEBUG 21602[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for maxRange
[2015-12-30 01:08:00,257]DEBUG 21602[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for minRange
[2015-12-30 01:08:00,257]DEBUG 21602[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for typeName
[2015-12-30 01:08:00,257]DEBUG 21602[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 01:08:00,258]DEBUG 21603[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for active
[2015-12-30 01:08:00,258]DEBUG 21603[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for balance
[2015-12-30 01:08:00,258]DEBUG 21603[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for email
[2015-12-30 01:08:00,258]DEBUG 21603[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for firstName
[2015-12-30 01:08:00,258]DEBUG 21603[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for lastName
[2015-12-30 01:08:00,258]DEBUG 21603[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for login
[2015-12-30 01:08:00,258]DEBUG 21603[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for password
[2015-12-30 01:08:00,259]DEBUG 21604[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 01:08:00,259]DEBUG 21604[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderStatusName
[2015-12-30 01:08:00,259]DEBUG 21604[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 01:08:00,259]DEBUG 21604[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for deliveryDate
[2015-12-30 01:08:00,259]DEBUG 21604[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for isGift
[2015-12-30 01:08:00,259]DEBUG 21604[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for maxDiscount
[2015-12-30 01:08:00,259]DEBUG 21604[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderDate
[2015-12-30 01:08:00,259]DEBUG 21604[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderName
[2015-12-30 01:08:00,260]DEBUG 21605[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderNumber
[2015-12-30 01:08:00,260]DEBUG 21605[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for preferableDeliveryDate
[2015-12-30 01:08:00,260]DEBUG 21605[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for totalPrice
[2015-12-30 01:08:00,260]DEBUG 21605[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 01:08:00,260]DEBUG 21605[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for active
[2015-12-30 01:08:00,260]DEBUG 21605[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productDescription
[2015-12-30 01:08:00,260]DEBUG 21605[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productName
[2015-12-30 01:08:00,261]DEBUG 21606[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productPrice
[2015-12-30 01:08:00,261]DEBUG 21606[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 01:08:00,261]DEBUG 21606[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for dimensionName
[2015-12-30 01:08:00,261]DEBUG 21606[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for numberOfProduct
[2015-12-30 01:08:00,261]DEBUG 21606[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 01:08:00,261]DEBUG 21606[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cost
[2015-12-30 01:08:00,261]DEBUG 21606[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for itemPrice
[2015-12-30 01:08:00,261]DEBUG 21606[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for quantity
[2015-12-30 01:08:00,262]DEBUG 21607[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2015-12-30 01:08:00,262]DEBUG 21607[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cardType
[2015-12-30 01:08:00,262]DEBUG 21607[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for creditCardNumber
[2015-12-30 01:08:00,262]DEBUG 21607[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cvv2
[2015-12-30 01:08:00,262]DEBUG 21607[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for expDate
[2015-12-30 01:08:00,262]DEBUG 21607[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for issueDate
[2015-12-30 01:08:00,262]DEBUG 21607[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for issueNumber
[2015-12-30 01:08:00,264]DEBUG 21609[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2015-12-30 01:08:00,264]DEBUG 21609[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2015-12-30 01:08:00,265]DEBUG 21610[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2015-12-30 01:08:00,265]DEBUG 21610[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2015-12-30 01:08:00,265]DEBUG 21610[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2015-12-30 01:08:00,265]DEBUG 21610[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2015-12-30 01:08:00,265]DEBUG 21610[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2015-12-30 01:08:00,265]DEBUG 21610[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 01:08:00,265]DEBUG 21610[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 01:08:00,266]DEBUG 21611[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 01:08:00,266]DEBUG 21611[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 01:08:00,266]DEBUG 21611[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 01:08:00,266]DEBUG 21611[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 01:08:00,266]DEBUG 21611[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 01:08:00,266]DEBUG 21611[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 01:08:00,266]DEBUG 21611[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 01:08:00,267] INFO 21612[main] - org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) - Hibernate Validator not found: ignoring
[2015-12-30 01:08:00,267]DEBUG 21612[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2015-12-30 01:08:00,267]DEBUG 21612[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2015-12-30 01:08:00,267]DEBUG 21612[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2015-12-30 01:08:00,268]DEBUG 21613[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2015-12-30 01:08:00,283] INFO 21628[main] - org.springframework.orm.hibernate3.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:777) - Building new Hibernate SessionFactory
[2015-12-30 01:08:00,283]DEBUG 21628[main] - org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) - Preparing to build session factory with filters : {}
[2015-12-30 01:08:00,284]DEBUG 21629[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2015-12-30 01:08:00,284]DEBUG 21629[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2015-12-30 01:08:00,284]DEBUG 21629[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2015-12-30 01:08:00,284]DEBUG 21629[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2015-12-30 01:08:00,284]DEBUG 21629[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2015-12-30 01:08:00,284]DEBUG 21629[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2015-12-30 01:08:00,284]DEBUG 21629[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2015-12-30 01:08:00,284]DEBUG 21629[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2015-12-30 01:08:00,285]DEBUG 21630[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2015-12-30 01:08:00,285]DEBUG 21630[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 01:08:00,285]DEBUG 21630[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 01:08:00,285]DEBUG 21630[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 01:08:00,285]DEBUG 21630[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 01:08:00,285]DEBUG 21630[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 01:08:00,285]DEBUG 21630[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 01:08:00,286]DEBUG 21631[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 01:08:00,286]DEBUG 21631[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 01:08:00,286]DEBUG 21631[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 01:08:00,286]DEBUG 21631[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2015-12-30 01:08:00,286]DEBUG 21631[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2015-12-30 01:08:00,287]DEBUG 21632[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2015-12-30 01:08:00,287]DEBUG 21632[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2015-12-30 01:08:00,303]DEBUG 21648[main] - org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) - Legacy Validator not present in classpath, ignoring event listener registration
[2015-12-30 01:08:00,304]DEBUG 21649[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2015-12-30 01:08:00,304]DEBUG 21649[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2015-12-30 01:08:00,304]DEBUG 21649[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2015-12-30 01:08:00,304]DEBUG 21649[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2015-12-30 01:08:00,305]DEBUG 21650[main] - org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) - Search not present in classpath, ignoring event listener registration.
[2015-12-30 01:08:00,306] INFO 21651[main] - org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
[2015-12-30 01:08:00,306] INFO 21651[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) - Using Hibernate built-in connection pool (not for production use!)
[2015-12-30 01:08:00,306] INFO 21651[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) - Hibernate connection pool size: 20
[2015-12-30 01:08:00,307] INFO 21652[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) - autocommit mode: false
[2015-12-30 01:08:00,307] INFO 21652[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) - using driver: org.postgresql.Driver at URL: jdbc:postgresql://192.168.103.164:5432/_055_DB
[2015-12-30 01:08:00,307] INFO 21652[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) - connection properties: {user=055db, password=055db}
[2015-12-30 01:08:00,307]DEBUG 21652[main] - org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) - opening new JDBC connection
[2015-12-30 01:08:00,326]DEBUG 21671[main] - org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) - created connection to: jdbc:postgresql://192.168.103.164:5432/_055_DB, Isolation Level: 2
[2015-12-30 01:08:00,326] INFO 21671[main] - org.hibernate.dialect.Dialect.<init>(Dialect.java:135) - Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2015-12-30 01:08:00,328] INFO 21673[main] - org.hibernate.engine.jdbc.JdbcSupportLoader.useContextualLobCreation(JdbcSupportLoader.java:108) - Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
[2015-12-30 01:08:00,329] INFO 21674[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) - Database ->
       name : PostgreSQL
    version : 9.4.5
      major : 9
      minor : 4
[2015-12-30 01:08:00,329] INFO 21674[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.4 JDBC4.1 (build 1200)
      major : 9
      minor : 4
[2015-12-30 01:08:00,329] INFO 21674[main] - org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:65) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[2015-12-30 01:08:00,330] INFO 21675[main] - org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[2015-12-30 01:08:00,330] INFO 21675[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) - Automatic flush during beforeCompletion(): disabled
[2015-12-30 01:08:00,330] INFO 21675[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) - Automatic session close at end of transaction: disabled
[2015-12-30 01:08:00,331] INFO 21676[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) - JDBC batch size: 15
[2015-12-30 01:08:00,331] INFO 21676[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) - JDBC batch updates for versioned data: disabled
[2015-12-30 01:08:00,331] INFO 21676[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) - Scrollable result sets: enabled
[2015-12-30 01:08:00,332]DEBUG 21677[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) - Wrap result sets: disabled
[2015-12-30 01:08:00,332] INFO 21677[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - JDBC3 getGeneratedKeys(): enabled
[2015-12-30 01:08:00,332] INFO 21677[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) - Connection release mode: auto
[2015-12-30 01:08:00,332] INFO 21677[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) - Default batch fetch size: 1
[2015-12-30 01:08:00,333] INFO 21678[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) - Generate SQL with comments: disabled
[2015-12-30 01:08:00,333] INFO 21678[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) - Order SQL updates by primary key: disabled
[2015-12-30 01:08:00,333] INFO 21678[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) - Order SQL inserts for batching: disabled
[2015-12-30 01:08:00,333] INFO 21678[main] - org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[2015-12-30 01:08:00,334] INFO 21679[main] - org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) - Using ASTQueryTranslatorFactory
[2015-12-30 01:08:00,334] INFO 21679[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) - Query language substitutions: {}
[2015-12-30 01:08:00,334] INFO 21679[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) - JPA-QL strict compliance: disabled
[2015-12-30 01:08:00,335] INFO 21680[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) - Second-level cache: enabled
[2015-12-30 01:08:00,335] INFO 21680[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) - Query cache: disabled
[2015-12-30 01:08:00,335] INFO 21680[main] - org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
[2015-12-30 01:08:00,335] INFO 21680[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) - Optimize cache for minimal puts: disabled
[2015-12-30 01:08:00,336] INFO 21681[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) - Structured second-level cache entries: disabled
[2015-12-30 01:08:00,336] INFO 21681[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Statistics: disabled
[2015-12-30 01:08:00,339] INFO 21684[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) - Deleted entity synthetic identifier rollback: disabled
[2015-12-30 01:08:00,340] INFO 21685[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) - Default entity-mode: pojo
[2015-12-30 01:08:00,340] INFO 21685[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) - Named query checking : enabled
[2015-12-30 01:08:00,340] INFO 21685[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) - Check Nullability in Core (should be disabled when Bean Validation is on): disabled
[2015-12-30 01:08:00,347] INFO 21692[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) - building session factory
[2015-12-30 01:08:00,347]DEBUG 21692[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) - Statistics initialized [enabled=false]}
[2015-12-30 01:08:00,348]DEBUG 21693[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@7e4cb74
[2015-12-30 01:08:00,348]DEBUG 21693[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@7e4cb74
[2015-12-30 01:08:00,348]DEBUG 21693[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7e4cb74
[2015-12-30 01:08:00,348]DEBUG 21693[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@243cc381
[2015-12-30 01:08:00,348]DEBUG 21693[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@e7732d4
[2015-12-30 01:08:00,348]DEBUG 21693[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration yes_no -> org.hibernate.type.YesNoType@4996b20e
[2015-12-30 01:08:00,349]DEBUG 21694[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@a6af882
[2015-12-30 01:08:00,349]DEBUG 21694[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@a6af882
[2015-12-30 01:08:00,349]DEBUG 21694[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@a6af882
[2015-12-30 01:08:00,349]DEBUG 21694[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration character -> org.hibernate.type.CharacterType@ce6e2f2
[2015-12-30 01:08:00,349]DEBUG 21694[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char -> org.hibernate.type.CharacterType@ce6e2f2
[2015-12-30 01:08:00,349]DEBUG 21694[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@ce6e2f2
[2015-12-30 01:08:00,349]DEBUG 21694[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@34430a24
[2015-12-30 01:08:00,350]DEBUG 21695[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@34430a24
[2015-12-30 01:08:00,350]DEBUG 21695[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@34430a24
[2015-12-30 01:08:00,350]DEBUG 21695[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration integer -> org.hibernate.type.IntegerType@4bac1460
[2015-12-30 01:08:00,350]DEBUG 21695[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration int -> org.hibernate.type.IntegerType@4bac1460
[2015-12-30 01:08:00,350]DEBUG 21695[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4bac1460
[2015-12-30 01:08:00,350]DEBUG 21695[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@21c47b30
[2015-12-30 01:08:00,350]DEBUG 21695[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@21c47b30
[2015-12-30 01:08:00,351]DEBUG 21696[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@21c47b30
[2015-12-30 01:08:00,351]DEBUG 21696[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@2b4908ec
[2015-12-30 01:08:00,351]DEBUG 21696[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@2b4908ec
[2015-12-30 01:08:00,351]DEBUG 21696[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2b4908ec
[2015-12-30 01:08:00,351]DEBUG 21696[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@6a9cb793
[2015-12-30 01:08:00,351]DEBUG 21696[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@6a9cb793
[2015-12-30 01:08:00,351]DEBUG 21696[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6a9cb793
[2015-12-30 01:08:00,351]DEBUG 21696[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@21d306ef
[2015-12-30 01:08:00,352]DEBUG 21697[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@21d306ef
[2015-12-30 01:08:00,352]DEBUG 21697[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7a8e732a
[2015-12-30 01:08:00,352]DEBUG 21697[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7a8e732a
[2015-12-30 01:08:00,352]DEBUG 21697[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration string -> org.hibernate.type.StringType@1d1fcfbb
[2015-12-30 01:08:00,352]DEBUG 21697[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1d1fcfbb
[2015-12-30 01:08:00,352]DEBUG 21697[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration url -> org.hibernate.type.UrlType@3458d951
[2015-12-30 01:08:00,352]DEBUG 21697[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3458d951
[2015-12-30 01:08:00,353]DEBUG 21698[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration date -> org.hibernate.type.DateType@58198636
[2015-12-30 01:08:00,353]DEBUG 21698[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@58198636
[2015-12-30 01:08:00,353]DEBUG 21698[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration time -> org.hibernate.type.TimeType@5aae20b6
[2015-12-30 01:08:00,353]DEBUG 21698[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5aae20b6
[2015-12-30 01:08:00,353]DEBUG 21698[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timestamp -> org.hibernate.type.TimestampType@50193bcf
[2015-12-30 01:08:00,353]DEBUG 21698[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50193bcf
[2015-12-30 01:08:00,353]DEBUG 21698[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50193bcf
[2015-12-30 01:08:00,355]DEBUG 21700[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b4ba0fe
[2015-12-30 01:08:00,355]DEBUG 21700[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar -> org.hibernate.type.CalendarType@22758cdb
[2015-12-30 01:08:00,355]DEBUG 21700[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@22758cdb
[2015-12-30 01:08:00,356]DEBUG 21701[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@22758cdb
[2015-12-30 01:08:00,356]DEBUG 21701[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2b36546e
[2015-12-30 01:08:00,356]DEBUG 21701[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration locale -> org.hibernate.type.LocaleType@7a4fa248
[2015-12-30 01:08:00,356]DEBUG 21701[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7a4fa248
[2015-12-30 01:08:00,356]DEBUG 21701[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration currency -> org.hibernate.type.CurrencyType@4a229198
[2015-12-30 01:08:00,356]DEBUG 21701[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4a229198
[2015-12-30 01:08:00,356]DEBUG 21701[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4ad496be
[2015-12-30 01:08:00,357]DEBUG 21702[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4ad496be
[2015-12-30 01:08:00,357]DEBUG 21702[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration class -> org.hibernate.type.ClassType@55ffb930
[2015-12-30 01:08:00,357]DEBUG 21702[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@55ffb930
[2015-12-30 01:08:00,357]DEBUG 21702[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@70e2c2f9
[2015-12-30 01:08:00,357]DEBUG 21702[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@70e2c2f9
[2015-12-30 01:08:00,357]DEBUG 21702[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@322e9157
[2015-12-30 01:08:00,358]DEBUG 21703[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@51e1ddd7
[2015-12-30 01:08:00,358]DEBUG 21703[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration binary -> org.hibernate.type.BinaryType@157061e8
[2015-12-30 01:08:00,358]DEBUG 21703[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte[] -> org.hibernate.type.BinaryType@157061e8
[2015-12-30 01:08:00,358]DEBUG 21703[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [B -> org.hibernate.type.BinaryType@157061e8
[2015-12-30 01:08:00,359]DEBUG 21704[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@282c1f9d
[2015-12-30 01:08:00,359]DEBUG 21704[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@282c1f9d
[2015-12-30 01:08:00,359]DEBUG 21704[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@282c1f9d
[2015-12-30 01:08:00,359]DEBUG 21704[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration image -> org.hibernate.type.ImageType@5e08ed20
[2015-12-30 01:08:00,359]DEBUG 21704[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters -> org.hibernate.type.CharArrayType@6f06307f
[2015-12-30 01:08:00,359]DEBUG 21704[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char[] -> org.hibernate.type.CharArrayType@6f06307f
[2015-12-30 01:08:00,359]DEBUG 21704[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [C -> org.hibernate.type.CharArrayType@6f06307f
[2015-12-30 01:08:00,360]DEBUG 21705[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@79513c2b
[2015-12-30 01:08:00,360]DEBUG 21705[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@79513c2b
[2015-12-30 01:08:00,360]DEBUG 21705[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@79513c2b
[2015-12-30 01:08:00,360]DEBUG 21705[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration text -> org.hibernate.type.TextType@1d1669f2
[2015-12-30 01:08:00,360]DEBUG 21705[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@4afc818c
[2015-12-30 01:08:00,360]DEBUG 21705[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4afc818c
[2015-12-30 01:08:00,360]DEBUG 21705[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57bffd97
[2015-12-30 01:08:00,361]DEBUG 21706[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@5c76911d
[2015-12-30 01:08:00,361]DEBUG 21706[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@4e72c39b
[2015-12-30 01:08:00,361]DEBUG 21706[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4e72c39b
[2015-12-30 01:08:00,361]DEBUG 21706[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9327927
[2015-12-30 01:08:00,361]DEBUG 21706[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4cb840d2
[2015-12-30 01:08:00,361]DEBUG 21706[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@2f9312a2
[2015-12-30 01:08:00,361]DEBUG 21706[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration serializable -> org.hibernate.type.SerializableType@79bb65ee
[2015-12-30 01:08:00,362]DEBUG 21707[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration object -> org.hibernate.type.ObjectType@65284069
[2015-12-30 01:08:00,362]DEBUG 21707[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@65284069
[2015-12-30 01:08:00,362]DEBUG 21707[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@78242c99
[2015-12-30 01:08:00,362]DEBUG 21707[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@33dc3f69
[2015-12-30 01:08:00,362]DEBUG 21707[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@514dcfe1
[2015-12-30 01:08:00,362]DEBUG 21707[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c217a55
[2015-12-30 01:08:00,362]DEBUG 21707[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@15e1e8de
[2015-12-30 01:08:00,363]DEBUG 21708[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@54e361de
[2015-12-30 01:08:00,363]DEBUG 21708[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@28f9ed78
[2015-12-30 01:08:00,363]DEBUG 21708[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3ac9905e
[2015-12-30 01:08:00,363]DEBUG 21708[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@eb5eab0
[2015-12-30 01:08:00,363] INFO 21708[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@57bffd97
[2015-12-30 01:08:00,363]DEBUG 21708[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) - Session factory constructed with filter configurations : {}
[2015-12-30 01:08:00,365]DEBUG 21710[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=055db, sun.boot.library.path=/usr/java/jdk1.7.0_79/jre/lib/amd64, java.vm.version=24.79-b02, hibernate.connection.username=055db, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/opt/jenkins-slv/fs/workspace/OMS, java.runtime.version=1.7.0_79-b15, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/opt/jenkins-slv/fs/workspace/OMS, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=/usr/java/jdk1.7.0_79/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/opt/jenkins-slv/fs/workspace/OMS/target/surefire/surefirebooter3268777018065329848.jar, hibernate.check_nullability=false, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/opt/jenkins-slv/fs/workspace/OMS/target/test-classes:/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes:/root/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/root/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/root/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/root/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/root/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/root/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/root/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/root/.m2/repository/junit/junit/4.7/junit-4.7.jar:/root/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/root/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/root/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/root/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/root/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/root/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/root/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/root/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/root/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/root/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/root/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/root/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/root/.m2/repository/org/postgresql/postgresql/9.4-1200-jdbc41/postgresql-9.4-1200-jdbc41.jar:/root/.m2/repository/com/github/dblock/waffle/waffle-jna/1.7/waffle-jna-1.7.jar:/root/.m2/repository/net/java/dev/jna/jna/4.1.0/jna-4.1.0.jar:/root/.m2/repository/net/java/dev/jna/jna-platform/4.1.0/jna-platform-4.1.0.jar:/root/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar:/root/.m2/repository/org/slf4j/slf4j-simple/1.7.7/slf4j-simple-1.7.7.jar:/root/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/root/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/root/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/root/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/root/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/root/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/root/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/root/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/root/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/root/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/root/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/root/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/root/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/root/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/root/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/root/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/root/.m2/repository/emma/emma/2.0.5312/emma-2.0.5312.jar:, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=2.6.32-573.12.1.el6.x86_64, user.home=/root, user.timezone=Europe/Kiev, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.7, file.encoding=UTF-8, hibernate.connection.driver_class=org.postgresql.Driver, user.name=root, java.class.path=/opt/jenkins-slv/fs/workspace/OMS/target/test-classes:/opt/jenkins-slv/fs/workspace/OMS/target/generated-classes/emma/classes:/root/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/root/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/root/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/root/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/root/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/root/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/root/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/root/.m2/repository/junit/junit/4.7/junit-4.7.jar:/root/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/root/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/root/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/root/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/root/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/root/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/root/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/root/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/root/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/root/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/root/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/root/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/root/.m2/repository/org/postgresql/postgresql/9.4-1200-jdbc41/postgresql-9.4-1200-jdbc41.jar:/root/.m2/repository/com/github/dblock/waffle/waffle-jna/1.7/waffle-jna-1.7.jar:/root/.m2/repository/net/java/dev/jna/jna/4.1.0/jna-4.1.0.jar:/root/.m2/repository/net/java/dev/jna/jna-platform/4.1.0/jna-platform-4.1.0.jar:/root/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar:/root/.m2/repository/org/slf4j/slf4j-simple/1.7.7/slf4j-simple-1.7.7.jar:/root/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/root/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/root/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/root/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/root/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/root/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/root/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/root/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/root/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/root/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/root/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/root/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/root/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/root/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/root/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/root/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/root/.m2/repository/emma/emma/2.0.5312/emma-2.0.5312.jar:, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=/usr/java/jdk1.7.0_79/jre, sun.java.command=/opt/jenkins-slv/fs/workspace/OMS/target/surefire/surefirebooter3268777018065329848.jar /opt/jenkins-slv/fs/workspace/OMS/target/surefire/surefire6985874297874726400tmp /opt/jenkins-slv/fs/workspace/OMS/target/surefire/surefire_07852949817005021616tmp, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, hibernate.connection.url=jdbc:postgresql://192.168.103.164:5432/_055_DB, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.7.0_79, java.ext.dirs=/usr/java/jdk1.7.0_79/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.7.0_79/jre/lib/resources.jar:/usr/java/jdk1.7.0_79/jre/lib/rt.jar:/usr/java/jdk1.7.0_79/jre/lib/sunrsasign.jar:/usr/java/jdk1.7.0_79/jre/lib/jsse.jar:/usr/java/jdk1.7.0_79/jre/lib/jce.jar:/usr/java/jdk1.7.0_79/jre/lib/charsets.jar:/usr/java/jdk1.7.0_79/jre/lib/jfr.jar:/usr/java/jdk1.7.0_79/jre/classes, java.vendor=Oracle Corporation, localRepository=/root/.m2/repository, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create-drop, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.isalist=, dialect=org.hibernate.dialect.PostgreSQLDialect}
[2015-12-30 01:08:00,365]DEBUG 21710[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,366]DEBUG 21711[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,366]DEBUG 21711[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,366]DEBUG 21711[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,366]DEBUG 21711[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,366]DEBUG 21711[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,366]DEBUG 21711[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,367]DEBUG 21712[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,367]DEBUG 21712[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,367]DEBUG 21712[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,368]DEBUG 21713[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 01:08:00,368]DEBUG 21713[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Roles where ID =?
[2015-12-30 01:08:00,368]DEBUG 21713[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select role_.ID, role_.RoleName as RoleName20_ from Roles role_ where role_.ID=?
[2015-12-30 01:08:00,368]DEBUG 21713[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Roles (RoleName, ID) values (?, ?)
[2015-12-30 01:08:00,368]DEBUG 21713[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Roles set RoleName=? where ID=?
[2015-12-30 01:08:00,369]DEBUG 21714[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Roles where ID=?
[2015-12-30 01:08:00,370]DEBUG 21715[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.CreditCardType
[2015-12-30 01:08:00,370]DEBUG 21715[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from CardType where ID =?
[2015-12-30 01:08:00,370]DEBUG 21715[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select creditcard_.ID, creditcard_.CardType as CardType29_, creditcard_.CardNumber as CardNumber29_, creditcard_.CardCvv2 as CardCvv4_29_, creditcard_.Expiration_Date as Expiration5_29_, creditcard_.IssueDate as IssueDate29_, creditcard_.IssueNumber as IssueNum7_29_ from CardType creditcard_ where creditcard_.ID=?
[2015-12-30 01:08:00,371]DEBUG 21716[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into CardType (CardType, CardNumber, CardCvv2, Expiration_Date, IssueDate, IssueNumber, ID) values (?, ?, ?, ?, ?, ?, ?)
[2015-12-30 01:08:00,371]DEBUG 21716[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update CardType set CardType=?, CardNumber=?, CardCvv2=?, Expiration_Date=?, IssueDate=?, IssueNumber=? where ID=?
[2015-12-30 01:08:00,371]DEBUG 21716[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from CardType where ID=?
[2015-12-30 01:08:00,372]DEBUG 21717[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.OrderItem
[2015-12-30 01:08:00,373]DEBUG 21718[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from OrderItems where ID =?
[2015-12-30 01:08:00,373]DEBUG 21718[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select orderitem_.ID, orderitem_.Cost as Cost28_, orderitem_.DimensionRef as Dimensio5_28_, orderitem_.ItemPrice as ItemPrice28_, orderitem_.OrderRef as OrderRef28_, orderitem_.ProductRef as ProductRef28_, orderitem_.Quantity as Quantity28_ from OrderItems orderitem_ where orderitem_.ID=?
[2015-12-30 01:08:00,373]DEBUG 21718[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2015-12-30 01:08:00,373]DEBUG 21718[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update OrderItems set Cost=?, DimensionRef=?, ItemPrice=?, OrderRef=?, ProductRef=?, Quantity=? where ID=?
[2015-12-30 01:08:00,373]DEBUG 21718[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from OrderItems where ID=?
[2015-12-30 01:08:00,374]DEBUG 21719[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 01:08:00,374]DEBUG 21719[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Dimensions where ID =?
[2015-12-30 01:08:00,374]DEBUG 21719[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select dimension_.ID, dimension_.DimensionName as Dimensio2_27_, dimension_.NumberOfProducts as NumberOf3_27_ from Dimensions dimension_ where dimension_.ID=?
[2015-12-30 01:08:00,374]DEBUG 21719[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Dimensions (DimensionName, NumberOfProducts, ID) values (?, ?, ?)
[2015-12-30 01:08:00,375]DEBUG 21720[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Dimensions set DimensionName=?, NumberOfProducts=? where ID=?
[2015-12-30 01:08:00,375]DEBUG 21720[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Dimensions where ID=?
[2015-12-30 01:08:00,377]DEBUG 21722[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 01:08:00,377]DEBUG 21722[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Orders where ID =?
[2015-12-30 01:08:00,378]DEBUG 21723[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select order_.ID, order_.Assigne as Assigne25_, order_.Customer as Customer25_, order_.DeliveryDate as Delivery2_25_, order_.IsGift as IsGift25_, order_.MaxDiscount as MaxDisco4_25_, order_.OrderDate as OrderDate25_, order_.OrderName as OrderName25_, order_.OrderNumber as OrderNum7_25_, order_.OrderStatusRef as OrderSt12_25_, order_.PreferableDeliveryDate as Preferab8_25_, order_.TotalPrice as TotalPrice25_ from Orders order_ where order_.ID=?
[2015-12-30 01:08:00,378]DEBUG 21723[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 01:08:00,378]DEBUG 21723[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Orders set Assigne=?, Customer=?, DeliveryDate=?, IsGift=?, MaxDiscount=?, OrderDate=?, OrderName=?, OrderNumber=?, OrderStatusRef=?, PreferableDeliveryDate=?, TotalPrice=? where ID=?
[2015-12-30 01:08:00,378]DEBUG 21723[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Orders where ID=?
[2015-12-30 01:08:00,379]DEBUG 21724[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 01:08:00,381]DEBUG 21726[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from OrderStatuses where ID =?
[2015-12-30 01:08:00,381]DEBUG 21726[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select orderstatu_.ID, orderstatu_.OrederStatusName as OrederSt2_24_ from OrderStatuses orderstatu_ where orderstatu_.ID=?
[2015-12-30 01:08:00,381]DEBUG 21726[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:00,381]DEBUG 21726[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update OrderStatuses set OrederStatusName=? where ID=?
[2015-12-30 01:08:00,382]DEBUG 21727[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from OrderStatuses where ID=?
[2015-12-30 01:08:00,382]DEBUG 21727[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 01:08:00,383]DEBUG 21728[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Regions where ID =?
[2015-12-30 01:08:00,383]DEBUG 21728[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select region_.ID, region_.RegionName as RegionName21_ from Regions region_ where region_.ID=?
[2015-12-30 01:08:00,383]DEBUG 21728[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Regions (RegionName, ID) values (?, ?)
[2015-12-30 01:08:00,383]DEBUG 21728[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Regions set RegionName=? where ID=?
[2015-12-30 01:08:00,383]DEBUG 21728[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Regions where ID=?
[2015-12-30 01:08:00,385]DEBUG 21730[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 01:08:00,386]DEBUG 21731[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Users where ID =?
[2015-12-30 01:08:00,386]DEBUG 21731[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select user_.ID, user_.IsUserActive as IsUserAc2_23_, user_.Balance as Balance23_, user_.CustomerTypeRef as Customer9_23_, user_.Email as Email23_, user_.FirstName as FirstName23_, user_.LastName as LastName23_, user_.Login as Login23_, user_.Password as Password23_, user_.RegionRef as RegionRef23_, user_.RoleRef as RoleRef23_ from Users user_ where user_.ID=?
[2015-12-30 01:08:00,386]DEBUG 21731[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2015-12-30 01:08:00,386]DEBUG 21731[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Users set IsUserActive=?, Balance=?, CustomerTypeRef=?, Email=?, FirstName=?, LastName=?, Login=?, Password=?, RegionRef=?, RoleRef=? where ID=?
[2015-12-30 01:08:00,386]DEBUG 21731[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Users where ID=?
[2015-12-30 01:08:00,387]DEBUG 21732[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 01:08:00,387]DEBUG 21732[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Products where ID =?
[2015-12-30 01:08:00,388]DEBUG 21733[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select product_.ID, product_.IsProductActive as IsProduc2_26_, product_.ProductDescription as ProductD3_26_, product_.ProductName as ProductN4_26_, product_.ProductPrice as ProductP5_26_ from Products product_ where product_.ID=?
[2015-12-30 01:08:00,388]DEBUG 21733[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:00,388]DEBUG 21733[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:00,388]DEBUG 21733[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Products where ID=?
[2015-12-30 01:08:00,391]DEBUG 21736[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 01:08:00,391]DEBUG 21736[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from CustomerTypes where ID =?
[2015-12-30 01:08:00,391]DEBUG 21736[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select customerty_.ID, customerty_.Discount as Discount22_, customerty_.MaxRange as MaxRange22_, customerty_.MinRange as MinRange22_, customerty_.TypeName as TypeName22_ from CustomerTypes customerty_ where customerty_.ID=?
[2015-12-30 01:08:00,391]DEBUG 21736[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:00,391]DEBUG 21736[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update CustomerTypes set Discount=?, MaxRange=?, MinRange=?, TypeName=? where ID=?
[2015-12-30 01:08:00,392]DEBUG 21737[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from CustomerTypes where ID=?
[2015-12-30 01:08:00,392]DEBUG 21737[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [NONE]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2015-12-30 01:08:00,392]DEBUG 21737[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [READ]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2015-12-30 01:08:00,392]DEBUG 21737[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [UPGRADE]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2015-12-30 01:08:00,393]DEBUG 21738[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [UPGRADE_NOWAIT]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2015-12-30 01:08:00,393]DEBUG 21738[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [FORCE]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2015-12-30 01:08:00,393]DEBUG 21738[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_READ]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for share
[2015-12-30 01:08:00,393]DEBUG 21738[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_WRITE]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2015-12-30 01:08:00,393]DEBUG 21738[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2015-12-30 01:08:00,394]DEBUG 21739[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [OPTIMISTIC]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2015-12-30 01:08:00,394]DEBUG 21739[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2015-12-30 01:08:00,394]DEBUG 21739[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Role: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2015-12-30 01:08:00,394]DEBUG 21739[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Role: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2015-12-30 01:08:00,395]DEBUG 21740[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [NONE]: select orderitem0_.ID as ID28_9_, orderitem0_.Cost as Cost28_9_, orderitem0_.DimensionRef as Dimensio5_28_9_, orderitem0_.ItemPrice as ItemPrice28_9_, orderitem0_.OrderRef as OrderRef28_9_, orderitem0_.ProductRef as ProductRef28_9_, orderitem0_.Quantity as Quantity28_9_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, customerty4_.ID as ID22_3_, customerty4_.Discount as Discount22_3_, customerty4_.MaxRange as MaxRange22_3_, customerty4_.MinRange as MinRange22_3_, customerty4_.TypeName as TypeName22_3_, region5_.ID as ID21_4_, region5_.RegionName as RegionName21_4_, role6_.ID as ID20_5_, role6_.RoleName as RoleName20_5_, user7_.ID as ID23_6_, user7_.IsUserActive as IsUserAc2_23_6_, user7_.Balance as Balance23_6_, user7_.CustomerTypeRef as Customer9_23_6_, user7_.Email as Email23_6_, user7_.FirstName as FirstName23_6_, user7_.LastName as LastName23_6_, user7_.Login as Login23_6_, user7_.Password as Password23_6_, user7_.RegionRef as RegionRef23_6_, user7_.RoleRef as RoleRef23_6_, orderstatu8_.ID as ID24_7_, orderstatu8_.OrederStatusName as OrederSt2_24_7_, product9_.ID as ID26_8_, product9_.IsProductActive as IsProduc2_26_8_, product9_.ProductDescription as ProductD3_26_8_, product9_.ProductName as ProductN4_26_8_, product9_.ProductPrice as ProductP5_26_8_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join CustomerTypes customerty4_ on user3_.CustomerTypeRef=customerty4_.ID left outer join Regions region5_ on user3_.RegionRef=region5_.ID left outer join Roles role6_ on user3_.RoleRef=role6_.ID left outer join Users user7_ on order2_.Customer=user7_.ID left outer join OrderStatuses orderstatu8_ on order2_.OrderStatusRef=orderstatu8_.ID left outer join Products product9_ on orderitem0_.ProductRef=product9_.ID where orderitem0_.ID=?
[2015-12-30 01:08:00,396]DEBUG 21741[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [READ]: select orderitem0_.ID as ID28_9_, orderitem0_.Cost as Cost28_9_, orderitem0_.DimensionRef as Dimensio5_28_9_, orderitem0_.ItemPrice as ItemPrice28_9_, orderitem0_.OrderRef as OrderRef28_9_, orderitem0_.ProductRef as ProductRef28_9_, orderitem0_.Quantity as Quantity28_9_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, customerty4_.ID as ID22_3_, customerty4_.Discount as Discount22_3_, customerty4_.MaxRange as MaxRange22_3_, customerty4_.MinRange as MinRange22_3_, customerty4_.TypeName as TypeName22_3_, region5_.ID as ID21_4_, region5_.RegionName as RegionName21_4_, role6_.ID as ID20_5_, role6_.RoleName as RoleName20_5_, user7_.ID as ID23_6_, user7_.IsUserActive as IsUserAc2_23_6_, user7_.Balance as Balance23_6_, user7_.CustomerTypeRef as Customer9_23_6_, user7_.Email as Email23_6_, user7_.FirstName as FirstName23_6_, user7_.LastName as LastName23_6_, user7_.Login as Login23_6_, user7_.Password as Password23_6_, user7_.RegionRef as RegionRef23_6_, user7_.RoleRef as RoleRef23_6_, orderstatu8_.ID as ID24_7_, orderstatu8_.OrederStatusName as OrederSt2_24_7_, product9_.ID as ID26_8_, product9_.IsProductActive as IsProduc2_26_8_, product9_.ProductDescription as ProductD3_26_8_, product9_.ProductName as ProductN4_26_8_, product9_.ProductPrice as ProductP5_26_8_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join CustomerTypes customerty4_ on user3_.CustomerTypeRef=customerty4_.ID left outer join Regions region5_ on user3_.RegionRef=region5_.ID left outer join Roles role6_ on user3_.RoleRef=role6_.ID left outer join Users user7_ on order2_.Customer=user7_.ID left outer join OrderStatuses orderstatu8_ on order2_.OrderStatusRef=orderstatu8_.ID left outer join Products product9_ on orderitem0_.ProductRef=product9_.ID where orderitem0_.ID=?
[2015-12-30 01:08:00,398]DEBUG 21743[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [UPGRADE]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2015-12-30 01:08:00,398]DEBUG 21743[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [UPGRADE_NOWAIT]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2015-12-30 01:08:00,399]DEBUG 21744[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [FORCE]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2015-12-30 01:08:00,399]DEBUG 21744[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_READ]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for share
[2015-12-30 01:08:00,399]DEBUG 21744[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_WRITE]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2015-12-30 01:08:00,399]DEBUG 21744[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_FORCE_INCREMENT]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2015-12-30 01:08:00,400]DEBUG 21745[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [OPTIMISTIC]: select orderitem0_.ID as ID28_9_, orderitem0_.Cost as Cost28_9_, orderitem0_.DimensionRef as Dimensio5_28_9_, orderitem0_.ItemPrice as ItemPrice28_9_, orderitem0_.OrderRef as OrderRef28_9_, orderitem0_.ProductRef as ProductRef28_9_, orderitem0_.Quantity as Quantity28_9_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, customerty4_.ID as ID22_3_, customerty4_.Discount as Discount22_3_, customerty4_.MaxRange as MaxRange22_3_, customerty4_.MinRange as MinRange22_3_, customerty4_.TypeName as TypeName22_3_, region5_.ID as ID21_4_, region5_.RegionName as RegionName21_4_, role6_.ID as ID20_5_, role6_.RoleName as RoleName20_5_, user7_.ID as ID23_6_, user7_.IsUserActive as IsUserAc2_23_6_, user7_.Balance as Balance23_6_, user7_.CustomerTypeRef as Customer9_23_6_, user7_.Email as Email23_6_, user7_.FirstName as FirstName23_6_, user7_.LastName as LastName23_6_, user7_.Login as Login23_6_, user7_.Password as Password23_6_, user7_.RegionRef as RegionRef23_6_, user7_.RoleRef as RoleRef23_6_, orderstatu8_.ID as ID24_7_, orderstatu8_.OrederStatusName as OrederSt2_24_7_, product9_.ID as ID26_8_, product9_.IsProductActive as IsProduc2_26_8_, product9_.ProductDescription as ProductD3_26_8_, product9_.ProductName as ProductN4_26_8_, product9_.ProductPrice as ProductP5_26_8_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join CustomerTypes customerty4_ on user3_.CustomerTypeRef=customerty4_.ID left outer join Regions region5_ on user3_.RegionRef=region5_.ID left outer join Roles role6_ on user3_.RoleRef=role6_.ID left outer join Users user7_ on order2_.Customer=user7_.ID left outer join OrderStatuses orderstatu8_ on order2_.OrderStatusRef=orderstatu8_.ID left outer join Products product9_ on orderitem0_.ProductRef=product9_.ID where orderitem0_.ID=?
[2015-12-30 01:08:00,401]DEBUG 21746[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [OPTIMISTIC_FORCE_INCREMENT]: select orderitem0_.ID as ID28_9_, orderitem0_.Cost as Cost28_9_, orderitem0_.DimensionRef as Dimensio5_28_9_, orderitem0_.ItemPrice as ItemPrice28_9_, orderitem0_.OrderRef as OrderRef28_9_, orderitem0_.ProductRef as ProductRef28_9_, orderitem0_.Quantity as Quantity28_9_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, customerty4_.ID as ID22_3_, customerty4_.Discount as Discount22_3_, customerty4_.MaxRange as MaxRange22_3_, customerty4_.MinRange as MinRange22_3_, customerty4_.TypeName as TypeName22_3_, region5_.ID as ID21_4_, region5_.RegionName as RegionName21_4_, role6_.ID as ID20_5_, role6_.RoleName as RoleName20_5_, user7_.ID as ID23_6_, user7_.IsUserActive as IsUserAc2_23_6_, user7_.Balance as Balance23_6_, user7_.CustomerTypeRef as Customer9_23_6_, user7_.Email as Email23_6_, user7_.FirstName as FirstName23_6_, user7_.LastName as LastName23_6_, user7_.Login as Login23_6_, user7_.Password as Password23_6_, user7_.RegionRef as RegionRef23_6_, user7_.RoleRef as RoleRef23_6_, orderstatu8_.ID as ID24_7_, orderstatu8_.OrederStatusName as OrederSt2_24_7_, product9_.ID as ID26_8_, product9_.IsProductActive as IsProduc2_26_8_, product9_.ProductDescription as ProductD3_26_8_, product9_.ProductName as ProductN4_26_8_, product9_.ProductPrice as ProductP5_26_8_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join CustomerTypes customerty4_ on user3_.CustomerTypeRef=customerty4_.ID left outer join Regions region5_ on user3_.RegionRef=region5_.ID left outer join Roles role6_ on user3_.RoleRef=role6_.ID left outer join Users user7_ on order2_.Customer=user7_.ID left outer join OrderStatuses orderstatu8_ on order2_.OrderStatusRef=orderstatu8_.ID left outer join Products product9_ on orderitem0_.ProductRef=product9_.ID where orderitem0_.ID=?
[2015-12-30 01:08:00,402]DEBUG 21747[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.OrderItem: select orderitem0_.ID as ID28_9_, orderitem0_.Cost as Cost28_9_, orderitem0_.DimensionRef as Dimensio5_28_9_, orderitem0_.ItemPrice as ItemPrice28_9_, orderitem0_.OrderRef as OrderRef28_9_, orderitem0_.ProductRef as ProductRef28_9_, orderitem0_.Quantity as Quantity28_9_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, customerty4_.ID as ID22_3_, customerty4_.Discount as Discount22_3_, customerty4_.MaxRange as MaxRange22_3_, customerty4_.MinRange as MinRange22_3_, customerty4_.TypeName as TypeName22_3_, region5_.ID as ID21_4_, region5_.RegionName as RegionName21_4_, role6_.ID as ID20_5_, role6_.RoleName as RoleName20_5_, user7_.ID as ID23_6_, user7_.IsUserActive as IsUserAc2_23_6_, user7_.Balance as Balance23_6_, user7_.CustomerTypeRef as Customer9_23_6_, user7_.Email as Email23_6_, user7_.FirstName as FirstName23_6_, user7_.LastName as LastName23_6_, user7_.Login as Login23_6_, user7_.Password as Password23_6_, user7_.RegionRef as RegionRef23_6_, user7_.RoleRef as RoleRef23_6_, orderstatu8_.ID as ID24_7_, orderstatu8_.OrederStatusName as OrederSt2_24_7_, product9_.ID as ID26_8_, product9_.IsProductActive as IsProduc2_26_8_, product9_.ProductDescription as ProductD3_26_8_, product9_.ProductName as ProductN4_26_8_, product9_.ProductPrice as ProductP5_26_8_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join CustomerTypes customerty4_ on user3_.CustomerTypeRef=customerty4_.ID left outer join Regions region5_ on user3_.RegionRef=region5_.ID left outer join Roles role6_ on user3_.RoleRef=role6_.ID left outer join Users user7_ on order2_.Customer=user7_.ID left outer join OrderStatuses orderstatu8_ on order2_.OrderStatusRef=orderstatu8_.ID left outer join Products product9_ on orderitem0_.ProductRef=product9_.ID where orderitem0_.ID=?
[2015-12-30 01:08:00,402]DEBUG 21747[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.OrderItem: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=?
[2015-12-30 01:08:00,403]DEBUG 21748[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [NONE]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2015-12-30 01:08:00,403]DEBUG 21748[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [READ]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2015-12-30 01:08:00,403]DEBUG 21748[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [UPGRADE]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2015-12-30 01:08:00,403]DEBUG 21748[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [UPGRADE_NOWAIT]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2015-12-30 01:08:00,404]DEBUG 21749[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [FORCE]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2015-12-30 01:08:00,404]DEBUG 21749[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_READ]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for share
[2015-12-30 01:08:00,404]DEBUG 21749[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_WRITE]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2015-12-30 01:08:00,404]DEBUG 21749[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_FORCE_INCREMENT]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2015-12-30 01:08:00,405]DEBUG 21750[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [OPTIMISTIC]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2015-12-30 01:08:00,405]DEBUG 21750[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [OPTIMISTIC_FORCE_INCREMENT]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2015-12-30 01:08:00,405]DEBUG 21750[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.CreditCardType: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2015-12-30 01:08:00,405]DEBUG 21750[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.CreditCardType: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2015-12-30 01:08:00,406]DEBUG 21751[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [NONE]: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2015-12-30 01:08:00,407]DEBUG 21752[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [READ]: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2015-12-30 01:08:00,407]DEBUG 21752[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [UPGRADE]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2015-12-30 01:08:00,407]DEBUG 21752[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [UPGRADE_NOWAIT]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2015-12-30 01:08:00,408]DEBUG 21753[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [FORCE]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2015-12-30 01:08:00,408]DEBUG 21753[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_READ]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for share
[2015-12-30 01:08:00,408]DEBUG 21753[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_WRITE]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2015-12-30 01:08:00,409]DEBUG 21754[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2015-12-30 01:08:00,409]DEBUG 21754[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [OPTIMISTIC]: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2015-12-30 01:08:00,410]DEBUG 21755[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2015-12-30 01:08:00,411]DEBUG 21756[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Order: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2015-12-30 01:08:00,413]DEBUG 21758[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Order: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=?
[2015-12-30 01:08:00,413]DEBUG 21758[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [NONE]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2015-12-30 01:08:00,413]DEBUG 21758[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [READ]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2015-12-30 01:08:00,413]DEBUG 21758[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [UPGRADE]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2015-12-30 01:08:00,414]DEBUG 21759[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [UPGRADE_NOWAIT]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2015-12-30 01:08:00,414]DEBUG 21759[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [FORCE]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2015-12-30 01:08:00,414]DEBUG 21759[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_READ]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for share
[2015-12-30 01:08:00,414]DEBUG 21759[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_WRITE]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2015-12-30 01:08:00,414]DEBUG 21759[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_FORCE_INCREMENT]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2015-12-30 01:08:00,415]DEBUG 21760[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [OPTIMISTIC]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2015-12-30 01:08:00,415]DEBUG 21760[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [OPTIMISTIC_FORCE_INCREMENT]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2015-12-30 01:08:00,415]DEBUG 21760[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Dimension: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2015-12-30 01:08:00,415]DEBUG 21760[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Dimension: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2015-12-30 01:08:00,415]DEBUG 21760[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [NONE]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2015-12-30 01:08:00,416]DEBUG 21761[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [READ]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2015-12-30 01:08:00,416]DEBUG 21761[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [UPGRADE]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2015-12-30 01:08:00,416]DEBUG 21761[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [UPGRADE_NOWAIT]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2015-12-30 01:08:00,416]DEBUG 21761[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [FORCE]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2015-12-30 01:08:00,417]DEBUG 21762[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_READ]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for share
[2015-12-30 01:08:00,417]DEBUG 21762[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_WRITE]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2015-12-30 01:08:00,417]DEBUG 21762[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_FORCE_INCREMENT]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2015-12-30 01:08:00,417]DEBUG 21762[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [OPTIMISTIC]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2015-12-30 01:08:00,417]DEBUG 21762[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [OPTIMISTIC_FORCE_INCREMENT]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2015-12-30 01:08:00,418]DEBUG 21763[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.OrderStatus: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2015-12-30 01:08:00,418]DEBUG 21763[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.OrderStatus: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2015-12-30 01:08:00,418]DEBUG 21763[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [NONE]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2015-12-30 01:08:00,418]DEBUG 21763[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [READ]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2015-12-30 01:08:00,420]DEBUG 21765[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [UPGRADE]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2015-12-30 01:08:00,420]DEBUG 21765[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [UPGRADE_NOWAIT]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2015-12-30 01:08:00,420]DEBUG 21765[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [FORCE]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2015-12-30 01:08:00,421]DEBUG 21766[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_READ]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for share
[2015-12-30 01:08:00,421]DEBUG 21766[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_WRITE]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2015-12-30 01:08:00,422]DEBUG 21767[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_FORCE_INCREMENT]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2015-12-30 01:08:00,422]DEBUG 21767[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [OPTIMISTIC]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2015-12-30 01:08:00,423]DEBUG 21768[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [OPTIMISTIC_FORCE_INCREMENT]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2015-12-30 01:08:00,424]DEBUG 21769[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Region: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2015-12-30 01:08:00,424]DEBUG 21769[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Region: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2015-12-30 01:08:00,424]DEBUG 21769[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [NONE]: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2015-12-30 01:08:00,425]DEBUG 21770[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [READ]: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2015-12-30 01:08:00,425]DEBUG 21770[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [UPGRADE]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2015-12-30 01:08:00,425]DEBUG 21770[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [UPGRADE_NOWAIT]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2015-12-30 01:08:00,426]DEBUG 21771[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [FORCE]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2015-12-30 01:08:00,426]DEBUG 21771[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_READ]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for share
[2015-12-30 01:08:00,426]DEBUG 21771[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_WRITE]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2015-12-30 01:08:00,426]DEBUG 21771[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2015-12-30 01:08:00,428]DEBUG 21773[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [OPTIMISTIC]: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2015-12-30 01:08:00,429]DEBUG 21774[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2015-12-30 01:08:00,429]DEBUG 21774[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.User: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2015-12-30 01:08:00,430]DEBUG 21775[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.User: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=?
[2015-12-30 01:08:00,430]DEBUG 21775[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [NONE]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2015-12-30 01:08:00,430]DEBUG 21775[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [READ]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2015-12-30 01:08:00,430]DEBUG 21775[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [UPGRADE]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2015-12-30 01:08:00,431]DEBUG 21776[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [UPGRADE_NOWAIT]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2015-12-30 01:08:00,431]DEBUG 21776[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [FORCE]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2015-12-30 01:08:00,431]DEBUG 21776[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_READ]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for share
[2015-12-30 01:08:00,431]DEBUG 21776[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_WRITE]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2015-12-30 01:08:00,432]DEBUG 21777[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_FORCE_INCREMENT]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2015-12-30 01:08:00,432]DEBUG 21777[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [OPTIMISTIC]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2015-12-30 01:08:00,432]DEBUG 21777[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [OPTIMISTIC_FORCE_INCREMENT]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2015-12-30 01:08:00,432]DEBUG 21777[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.CustomerType: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2015-12-30 01:08:00,433]DEBUG 21778[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.CustomerType: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2015-12-30 01:08:00,433]DEBUG 21778[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [NONE]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2015-12-30 01:08:00,433]DEBUG 21778[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [READ]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2015-12-30 01:08:00,433]DEBUG 21778[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [UPGRADE]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2015-12-30 01:08:00,434]DEBUG 21779[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [UPGRADE_NOWAIT]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2015-12-30 01:08:00,434]DEBUG 21779[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [FORCE]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2015-12-30 01:08:00,434]DEBUG 21779[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_READ]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for share
[2015-12-30 01:08:00,434]DEBUG 21779[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_WRITE]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2015-12-30 01:08:00,434]DEBUG 21779[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2015-12-30 01:08:00,435]DEBUG 21780[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [OPTIMISTIC]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2015-12-30 01:08:00,435]DEBUG 21780[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2015-12-30 01:08:00,435]DEBUG 21780[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Product: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2015-12-30 01:08:00,435]DEBUG 21780[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Product: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2015-12-30 01:08:00,436]DEBUG 21781[main] - org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) - registered: 56096a6d-18f1-4d82-98b3-34edd52e37eb (unnamed)
[2015-12-30 01:08:00,436] INFO 21781[main] - org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) - Not binding factory to JNDI, no JNDI name configured
[2015-12-30 01:08:00,436]DEBUG 21781[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) - instantiated session factory
[2015-12-30 01:08:00,436]DEBUG 21781[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2015-12-30 01:08:00,436]DEBUG 21781[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2015-12-30 01:08:00,436]DEBUG 21781[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2015-12-30 01:08:00,436]DEBUG 21781[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2015-12-30 01:08:00,437]DEBUG 21782[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2015-12-30 01:08:00,437]DEBUG 21782[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2015-12-30 01:08:00,437]DEBUG 21782[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2015-12-30 01:08:00,437]DEBUG 21782[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2015-12-30 01:08:00,437]DEBUG 21782[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2015-12-30 01:08:00,437]DEBUG 21782[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 01:08:00,438]DEBUG 21783[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 01:08:00,438]DEBUG 21783[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 01:08:00,438]DEBUG 21783[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 01:08:00,438]DEBUG 21783[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 01:08:00,438]DEBUG 21783[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 01:08:00,438]DEBUG 21783[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 01:08:00,438]DEBUG 21783[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 01:08:00,440]DEBUG 21785[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 01:08:00,441]DEBUG 21786[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2015-12-30 01:08:00,441]DEBUG 21786[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2015-12-30 01:08:00,441]DEBUG 21786[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2015-12-30 01:08:00,441]DEBUG 21786[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2015-12-30 01:08:00,462]DEBUG 21807[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,462]DEBUG 21807[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,463]DEBUG 21808[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,463]DEBUG 21808[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,464]DEBUG 21809[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,464]DEBUG 21809[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,464]DEBUG 21809[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,465]DEBUG 21810[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,465]DEBUG 21810[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,465]DEBUG 21810[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,465]DEBUG 21810[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2015-12-30 01:08:00,465]DEBUG 21810[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2015-12-30 01:08:00,465]DEBUG 21810[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2015-12-30 01:08:00,465]DEBUG 21810[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2015-12-30 01:08:00,466]DEBUG 21811[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2015-12-30 01:08:00,466]DEBUG 21811[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2015-12-30 01:08:00,466]DEBUG 21811[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2015-12-30 01:08:00,466]DEBUG 21811[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2015-12-30 01:08:00,466]DEBUG 21811[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2015-12-30 01:08:00,466]DEBUG 21811[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 01:08:00,466]DEBUG 21811[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 01:08:00,467]DEBUG 21812[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 01:08:00,467]DEBUG 21812[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 01:08:00,467]DEBUG 21812[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 01:08:00,467]DEBUG 21812[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 01:08:00,467]DEBUG 21812[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 01:08:00,467]DEBUG 21812[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 01:08:00,467]DEBUG 21812[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 01:08:00,468]DEBUG 21813[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2015-12-30 01:08:00,468]DEBUG 21813[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2015-12-30 01:08:00,468]DEBUG 21813[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2015-12-30 01:08:00,469]DEBUG 21814[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2015-12-30 01:08:00,480]DEBUG 21825[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,480]DEBUG 21825[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,480]DEBUG 21825[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,481]DEBUG 21826[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,481]DEBUG 21826[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,481]DEBUG 21826[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,481]DEBUG 21826[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,481]DEBUG 21826[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,481]DEBUG 21826[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,482]DEBUG 21827[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,482]DEBUG 21827[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,482]DEBUG 21827[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,482]DEBUG 21827[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,482]DEBUG 21827[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,483]DEBUG 21828[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,483]DEBUG 21828[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,483]DEBUG 21828[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,483]DEBUG 21828[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,483]DEBUG 21828[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,483]DEBUG 21828[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:00,484] INFO 21829[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2015-12-30 01:08:00,484]DEBUG 21829[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2015-12-30 01:08:00,484] INFO 21829[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2015-12-30 01:08:00,484]DEBUG 21829[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD3262E1ABF7
[2015-12-30 01:08:00,670]DEBUG 22015[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32A6376397
[2015-12-30 01:08:00,737]DEBUG 22082[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32BCDB3C97
[2015-12-30 01:08:00,829]DEBUG 22174[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05990DB877
[2015-12-30 01:08:00,904]DEBUG 22249[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05C0F431DD
[2015-12-30 01:08:01,031]DEBUG 22376[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05F161465
[2015-12-30 01:08:01,087]DEBUG 22432[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE83D05058F
[2015-12-30 01:08:01,177]DEBUG 22522[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE89AEF426F
[2015-12-30 01:08:01,255]DEBUG 22600[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE8FEAD4DCF
[2015-12-30 01:08:01,322]DEBUG 22667[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CardType cascade
[2015-12-30 01:08:01,406]DEBUG 22751[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CustomerTypes cascade
[2015-12-30 01:08:01,508]DEBUG 22853[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Dimensions cascade
[2015-12-30 01:08:01,592]DEBUG 22937[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderItems cascade
[2015-12-30 01:08:01,667]DEBUG 23012[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderStatuses cascade
[2015-12-30 01:08:01,843]DEBUG 23188[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Orders cascade
[2015-12-30 01:08:01,968]DEBUG 23313[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Products cascade
[2015-12-30 01:08:02,128]DEBUG 23473[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Regions cascade
[2015-12-30 01:08:02,186]DEBUG 23531[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Roles cascade
[2015-12-30 01:08:02,236]DEBUG 23581[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Users cascade
[2015-12-30 01:08:02,303]DEBUG 23648[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop sequence hibernate_sequence
[2015-12-30 01:08:02,378]DEBUG 23723[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table CardType (ID int4 not null, CardType varchar(255), CardNumber varchar(255), CardCvv2 int4, Expiration_Date varchar(255), IssueDate varchar(255), IssueNumber varchar(255), primary key (ID))
[2015-12-30 01:08:02,861]DEBUG 24206[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table CustomerTypes (ID int4 not null, Discount float8, MaxRange float8, MinRange float8, TypeName varchar(255), primary key (ID))
[2015-12-30 01:08:03,102]DEBUG 24447[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Dimensions (ID int4 not null, DimensionName varchar(255), NumberOfProducts int4, primary key (ID))
[2015-12-30 01:08:03,481]DEBUG 24826[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table OrderItems (ID int4 not null, Cost float8, ItemPrice float8, Quantity int4, DimensionRef int4, OrderRef int4, ProductRef int4, primary key (ID))
[2015-12-30 01:08:03,768]DEBUG 25113[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table OrderStatuses (ID int4 not null, OrederStatusName varchar(255), primary key (ID))
[2015-12-30 01:08:03,994]DEBUG 25339[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Orders (ID int4 not null, DeliveryDate timestamp, IsGift bool, MaxDiscount int4, OrderDate timestamp, OrderName varchar(100), OrderNumber int4 unique, PreferableDeliveryDate timestamp, TotalPrice float8, Assigne int4, Customer int4, OrderStatusRef int4, primary key (ID))
[2015-12-30 01:08:04,346]DEBUG 25691[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Products (ID int4 not null, IsProductActive bool, ProductDescription varchar(255), ProductName varchar(255), ProductPrice float8, primary key (ID))
[2015-12-30 01:08:04,771]DEBUG 26116[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Regions (ID int4 not null, RegionName varchar(255), primary key (ID))
[2015-12-30 01:08:04,992]DEBUG 26337[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Roles (ID int4 not null, RoleName varchar(255), primary key (ID))
[2015-12-30 01:08:05,406]DEBUG 26751[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Users (ID int4 not null, IsUserActive bool, Balance float8, Email varchar(255) not null, FirstName varchar(255) not null, LastName varchar(255) not null, Login varchar(255) not null, Password varchar(255) not null, CustomerTypeRef int4, RegionRef int4, RoleRef int4 not null, primary key (ID))
[2015-12-30 01:08:05,929]DEBUG 27274[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add constraint FKA2B1AD3262E1ABF7 foreign key (ProductRef) references Products
[2015-12-30 01:08:05,998]DEBUG 27343[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add constraint FKA2B1AD32A6376397 foreign key (DimensionRef) references Dimensions
[2015-12-30 01:08:06,062]DEBUG 27407[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add constraint FKA2B1AD32BCDB3C97 foreign key (OrderRef) references Orders
[2015-12-30 01:08:06,096]DEBUG 27441[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add constraint FK8D444F05990DB877 foreign key (OrderStatusRef) references OrderStatuses
[2015-12-30 01:08:06,146]DEBUG 27491[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add constraint FK8D444F05C0F431DD foreign key (Assigne) references Users
[2015-12-30 01:08:06,188]DEBUG 27533[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add constraint FK8D444F05F161465 foreign key (Customer) references Users
[2015-12-30 01:08:06,221]DEBUG 27566[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add constraint FK4E39DE83D05058F foreign key (RoleRef) references Roles
[2015-12-30 01:08:06,271]DEBUG 27616[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add constraint FK4E39DE89AEF426F foreign key (CustomerTypeRef) references CustomerTypes
[2015-12-30 01:08:06,305]DEBUG 27650[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add constraint FK4E39DE8FEAD4DCF foreign key (RegionRef) references Regions
[2015-12-30 01:08:06,338]DEBUG 27683[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create sequence hibernate_sequence
[2015-12-30 01:08:06,379] INFO 27724[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2015-12-30 01:08:06,380]DEBUG 27725[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2015-12-30 01:08:06,380]DEBUG 27725[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2015-12-30 01:08:06,381]DEBUG 27726[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2015-12-30 01:08:06,381]DEBUG 27726[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2015-12-30 01:08:06,381]DEBUG 27726[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2015-12-30 01:08:06,381]DEBUG 27726[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2015-12-30 01:08:06,382]DEBUG 27727[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2015-12-30 01:08:06,382]DEBUG 27727[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2015-12-30 01:08:06,382]DEBUG 27727[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2015-12-30 01:08:06,383]DEBUG 27728[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 01:08:06,383]DEBUG 27728[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 01:08:06,383]DEBUG 27728[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 01:08:06,384]DEBUG 27729[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 01:08:06,384]DEBUG 27729[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 01:08:06,384]DEBUG 27729[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 01:08:06,385]DEBUG 27730[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 01:08:06,385]DEBUG 27730[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 01:08:06,385]DEBUG 27730[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 01:08:06,386]DEBUG 27731[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2015-12-30 01:08:06,387]DEBUG 27732[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2015-12-30 01:08:06,387]DEBUG 27732[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2015-12-30 01:08:06,388]DEBUG 27733[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2015-12-30 01:08:06,413]DEBUG 27758[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,413]DEBUG 27758[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,413]DEBUG 27758[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,413]DEBUG 27758[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,413]DEBUG 27758[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,414]DEBUG 27759[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,414]DEBUG 27759[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,414]DEBUG 27759[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,414]DEBUG 27759[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,414]DEBUG 27759[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,416]DEBUG 27761[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2015-12-30 01:08:06,416]DEBUG 27761[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2015-12-30 01:08:06,416]DEBUG 27761[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2015-12-30 01:08:06,416]DEBUG 27761[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2015-12-30 01:08:06,416]DEBUG 27761[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2015-12-30 01:08:06,416]DEBUG 27761[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2015-12-30 01:08:06,417]DEBUG 27762[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2015-12-30 01:08:06,417]DEBUG 27762[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2015-12-30 01:08:06,417]DEBUG 27762[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2015-12-30 01:08:06,417]DEBUG 27762[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 01:08:06,417]DEBUG 27762[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 01:08:06,417]DEBUG 27762[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 01:08:06,417]DEBUG 27762[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 01:08:06,417]DEBUG 27762[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 01:08:06,418]DEBUG 27763[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 01:08:06,418]DEBUG 27763[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 01:08:06,418]DEBUG 27763[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 01:08:06,418]DEBUG 27763[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 01:08:06,419]DEBUG 27764[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2015-12-30 01:08:06,419]DEBUG 27764[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2015-12-30 01:08:06,419]DEBUG 27764[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2015-12-30 01:08:06,419]DEBUG 27764[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2015-12-30 01:08:06,430]DEBUG 27775[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,430]DEBUG 27775[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,431]DEBUG 27776[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,431]DEBUG 27776[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,431]DEBUG 27776[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,431]DEBUG 27776[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,431]DEBUG 27776[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,432]DEBUG 27777[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,432]DEBUG 27777[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,432]DEBUG 27777[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,432]DEBUG 27777[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,432]DEBUG 27777[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,433]DEBUG 27778[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,433]DEBUG 27778[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,433]DEBUG 27778[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,433]DEBUG 27778[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,433]DEBUG 27778[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,433]DEBUG 27778[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,434]DEBUG 27779[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,434]DEBUG 27779[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.PostgreSQLDialect]
[2015-12-30 01:08:06,434]DEBUG 27779[main] - org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) - Checking 0 named HQL queries
[2015-12-30 01:08:06,434]DEBUG 27779[main] - org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) - Checking 0 named SQL queries
[2015-12-30 01:08:06,436]DEBUG 27781[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,436]DEBUG 27781[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,437]DEBUG 27782[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
[2015-12-30 01:08:06,437]DEBUG 27782[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-12-30 01:08:06,437]DEBUG 27782[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-12-30 01:08:06,438]DEBUG 27783[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
[2015-12-30 01:08:06,438]DEBUG 27783[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-12-30 01:08:06,438]DEBUG 27783[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,439]DEBUG 27784[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'sessionFactory'
[2015-12-30 01:08:06,439]DEBUG 27784[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,441]DEBUG 27786[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'transactionManager'
[2015-12-30 01:08:06,441]DEBUG 27786[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,442]DEBUG 27787[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'transactionManager'
[2015-12-30 01:08:06,442]DEBUG 27787[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2015-12-30 01:08:06,442]DEBUG 27787[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-12-30 01:08:06,442]DEBUG 27787[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-12-30 01:08:06,442]DEBUG 27787[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-12-30 01:08:06,443]DEBUG 27788[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
[2015-12-30 01:08:06,443]DEBUG 27788[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2015-12-30 01:08:06,443]DEBUG 27788[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-12-30 01:08:06,443]DEBUG 27788[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-12-30 01:08:06,443]DEBUG 27788[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,443]DEBUG 27788[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2015-12-30 01:08:06,443]DEBUG 27788[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2015-12-30 01:08:06,444]DEBUG 27789[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2015-12-30 01:08:06,444]DEBUG 27789[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2015-12-30 01:08:06,444]DEBUG 27789[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2015-12-30 01:08:06,444]DEBUG 27789[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderDao'
[2015-12-30 01:08:06,444]DEBUG 27789[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderDao'
[2015-12-30 01:08:06,446]DEBUG 27791[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,446]DEBUG 27791[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.orderStatusDao
[2015-12-30 01:08:06,446]DEBUG 27791[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.roleDao
[2015-12-30 01:08:06,446]DEBUG 27791[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderDao' to allow for resolving potential circular references
[2015-12-30 01:08:06,446]DEBUG 27791[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,447]DEBUG 27792[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:06,447]DEBUG 27792[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'sessionFactory'
[2015-12-30 01:08:06,447]DEBUG 27792[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.orderStatusDao
[2015-12-30 01:08:06,447]DEBUG 27792[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:06,447]DEBUG 27792[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderStatusDao'
[2015-12-30 01:08:06,448]DEBUG 27793[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,448]DEBUG 27793[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderStatusDao' to allow for resolving potential circular references
[2015-12-30 01:08:06,448]DEBUG 27793[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderStatusDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,448]DEBUG 27793[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:06,449]DEBUG 27794[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderStatusDao' to bean named 'sessionFactory'
[2015-12-30 01:08:06,449]DEBUG 27794[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,450]DEBUG 27795[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderStatusDao'
[2015-12-30 01:08:06,450]DEBUG 27795[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'orderStatusDao'
[2015-12-30 01:08:06,450]DEBUG 27795[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.roleDao
[2015-12-30 01:08:06,450]DEBUG 27795[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'roleDao'
[2015-12-30 01:08:06,450]DEBUG 27795[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'roleDao'
[2015-12-30 01:08:06,452]DEBUG 27797[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,452]DEBUG 27797[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'roleDao' to allow for resolving potential circular references
[2015-12-30 01:08:06,452]DEBUG 27797[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'roleDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,453]DEBUG 27798[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:06,453]DEBUG 27798[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'roleDao' to bean named 'sessionFactory'
[2015-12-30 01:08:06,453]DEBUG 27798[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,454]DEBUG 27799[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'roleDao'
[2015-12-30 01:08:06,454]DEBUG 27799[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'roleDao'
[2015-12-30 01:08:06,454]DEBUG 27799[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,456]DEBUG 27801[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderDao'
[2015-12-30 01:08:06,457]DEBUG 27802[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:06,457]DEBUG 27802[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'userDao'
[2015-12-30 01:08:06,457]DEBUG 27802[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'userDao'
[2015-12-30 01:08:06,457]DEBUG 27802[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.UserDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,457]DEBUG 27802[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'userDao' to allow for resolving potential circular references
[2015-12-30 01:08:06,458]DEBUG 27803[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'userDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,458]DEBUG 27803[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:06,458]DEBUG 27803[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'userDao' to bean named 'sessionFactory'
[2015-12-30 01:08:06,458]DEBUG 27803[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,459]DEBUG 27804[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'userDao'
[2015-12-30 01:08:06,459]DEBUG 27804[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'regionDao'
[2015-12-30 01:08:06,459]DEBUG 27804[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'regionDao'
[2015-12-30 01:08:06,460]DEBUG 27805[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,460]DEBUG 27805[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'regionDao' to allow for resolving potential circular references
[2015-12-30 01:08:06,460]DEBUG 27805[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'regionDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,460]DEBUG 27805[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:06,460]DEBUG 27805[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'regionDao' to bean named 'sessionFactory'
[2015-12-30 01:08:06,461]DEBUG 27806[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,461]DEBUG 27806[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'regionDao'
[2015-12-30 01:08:06,461]DEBUG 27806[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:06,461]DEBUG 27806[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'productDao'
[2015-12-30 01:08:06,462]DEBUG 27807[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'productDao'
[2015-12-30 01:08:06,462]DEBUG 27807[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,462]DEBUG 27807[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'productDao' to allow for resolving potential circular references
[2015-12-30 01:08:06,462]DEBUG 27807[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'productDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,463]DEBUG 27808[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:06,463]DEBUG 27808[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'productDao' to bean named 'sessionFactory'
[2015-12-30 01:08:06,463]DEBUG 27808[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,464]DEBUG 27809[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'productDao'
[2015-12-30 01:08:06,465]DEBUG 27810[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:06,465]DEBUG 27810[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'dimensionDao'
[2015-12-30 01:08:06,465]DEBUG 27810[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,465]DEBUG 27810[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'dimensionDao' to allow for resolving potential circular references
[2015-12-30 01:08:06,465]DEBUG 27810[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'dimensionDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,466]DEBUG 27811[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:06,466]DEBUG 27811[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'dimensionDao' to bean named 'sessionFactory'
[2015-12-30 01:08:06,466]DEBUG 27811[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,471]DEBUG 27816[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'dimensionDao'
[2015-12-30 01:08:06,471]DEBUG 27816[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:06,471]DEBUG 27816[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'customerTypeDao'
[2015-12-30 01:08:06,472]DEBUG 27817[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,472]DEBUG 27817[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'customerTypeDao' to allow for resolving potential circular references
[2015-12-30 01:08:06,472]DEBUG 27817[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'customerTypeDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,472]DEBUG 27817[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:06,473]DEBUG 27818[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'customerTypeDao' to bean named 'sessionFactory'
[2015-12-30 01:08:06,475]DEBUG 27820[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,483]DEBUG 27828[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'customerTypeDao'
[2015-12-30 01:08:06,484]DEBUG 27829[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:06,484]DEBUG 27829[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderItemDao'
[2015-12-30 01:08:06,488]DEBUG 27833[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,488]DEBUG 27833[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderItemDao' to allow for resolving potential circular references
[2015-12-30 01:08:06,488]DEBUG 27833[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderItemDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,488]DEBUG 27833[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:06,488]DEBUG 27833[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderItemDao' to bean named 'sessionFactory'
[2015-12-30 01:08:06,489]DEBUG 27834[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,494]DEBUG 27839[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderItemDao'
[2015-12-30 01:08:06,494]DEBUG 27839[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'creditCardTypeDao'
[2015-12-30 01:08:06,494]DEBUG 27839[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'creditCardTypeDao'
[2015-12-30 01:08:06,495]DEBUG 27840[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.CreditCardTypeDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,495]DEBUG 27840[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'creditCardTypeDao' to allow for resolving potential circular references
[2015-12-30 01:08:06,495]DEBUG 27840[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'creditCardTypeDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2015-12-30 01:08:06,495]DEBUG 27840[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:06,495]DEBUG 27840[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'creditCardTypeDao' to bean named 'sessionFactory'
[2015-12-30 01:08:06,496]DEBUG 27841[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,497]DEBUG 27842[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'creditCardTypeDao'
[2015-12-30 01:08:06,497]DEBUG 27842[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:06,497]DEBUG 27842[main] - org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:827) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@399cfbc4]
[2015-12-30 01:08:06,497]DEBUG 27842[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2015-12-30 01:08:06,504]DEBUG 27849[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:06,504]DEBUG 27849[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:06,504]DEBUG 27849[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:06,504]DEBUG 27849[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:06,504]DEBUG 27849[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:06,504]DEBUG 27849[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:06,505]DEBUG 27850[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:06,505]DEBUG 27850[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:06,505]DEBUG 27850[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:06,505]DEBUG 27850[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:06,505]DEBUG 27850[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:06,505]DEBUG 27850[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:06,505]DEBUG 27850[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'customerTypeDao'
[2015-12-30 01:08:06,509]DEBUG 27854[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:06,509]DEBUG 27854[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:06,509]DEBUG 27854[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'dimensionDao'
[2015-12-30 01:08:06,509]DEBUG 27854[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:06,509]DEBUG 27854[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:06,509]DEBUG 27854[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'orderDao'
[2015-12-30 01:08:06,510]DEBUG 27855[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:06,510]DEBUG 27855[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:06,510]DEBUG 27855[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'orderItemDao'
[2015-12-30 01:08:06,510]DEBUG 27855[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:06,510]DEBUG 27855[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:06,510]DEBUG 27855[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'orderStatusDao'
[2015-12-30 01:08:06,510]DEBUG 27855[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:06,511]DEBUG 27856[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:06,511]DEBUG 27856[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'productDao'
[2015-12-30 01:08:06,511]DEBUG 27856[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:06,511]DEBUG 27856[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:06,511]DEBUG 27856[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'regionDao'
[2015-12-30 01:08:06,511]DEBUG 27856[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:06,515]DEBUG 27860[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:06,515]DEBUG 27860[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'roleDao'
[2015-12-30 01:08:06,515]DEBUG 27860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:06,515]DEBUG 27860[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:06,515]DEBUG 27860[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'userDao'
[2015-12-30 01:08:06,515]DEBUG 27860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:06,516]DEBUG 27861[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:06,516]DEBUG 27861[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'sessionFactory'
[2015-12-30 01:08:06,520]DEBUG 27865[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,521]DEBUG 27866[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,521]DEBUG 27866[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:06,521]DEBUG 27866[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@836006d]
[2015-12-30 01:08:06,521]DEBUG 27866[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2015-12-30 01:08:06,522]DEBUG 27867[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.setUp()
[2015-12-30 01:08:06,525]DEBUG 27870[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,526]DEBUG 27871[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.tearDown()
[2015-12-30 01:08:06,526]DEBUG 27871[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,526]DEBUG 27871[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testFindAll()
[2015-12-30 01:08:06,527]DEBUG 27872[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,527]DEBUG 27872[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testInsertOrUpdate()
[2015-12-30 01:08:06,527]DEBUG 27872[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,527]DEBUG 27872[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testDelete()
[2015-12-30 01:08:06,527]DEBUG 27872[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,527]DEBUG 27872[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testFindByID()
[2015-12-30 01:08:06,527]DEBUG 27872[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindOrderStatusByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,528]DEBUG 27873[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testFindOrderStatusByName()
[2015-12-30 01:08:06,528]DEBUG 27873[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2015-12-30 01:08:06,528]DEBUG 27873[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2015-12-30 01:08:06,528]DEBUG 27873[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,528]DEBUG 27873[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2015-12-30 01:08:06,528]DEBUG 27873[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2015-12-30 01:08:06,528]DEBUG 27873[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2015-12-30 01:08:06,532]DEBUG 27877[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2015-12-30 01:08:06,532]DEBUG 27877[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2015-12-30 01:08:06,532]DEBUG 27877[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2015-12-30 01:08:06,532]DEBUG 27877[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2015-12-30 01:08:06,532]DEBUG 27877[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2015-12-30 01:08:06,532]DEBUG 27877[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2015-12-30 01:08:06,532]DEBUG 27877[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2015-12-30 01:08:06,533]DEBUG 27878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2015-12-30 01:08:06,533]DEBUG 27878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2015-12-30 01:08:06,533]DEBUG 27878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2015-12-30 01:08:06,533]DEBUG 27878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2015-12-30 01:08:06,533]DEBUG 27878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2015-12-30 01:08:06,533]DEBUG 27878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2015-12-30 01:08:06,533]DEBUG 27878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2015-12-30 01:08:06,533]DEBUG 27878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2015-12-30 01:08:06,533]DEBUG 27878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 01:08:06,534]DEBUG 27879[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 01:08:06,534]DEBUG 27879[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2015-12-30 01:08:06,534]DEBUG 27879[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2015-12-30 01:08:06,534]DEBUG 27879[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2015-12-30 01:08:06,534]DEBUG 27879[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2015-12-30 01:08:06,534]DEBUG 27879[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2015-12-30 01:08:06,534]DEBUG 27879[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2015-12-30 01:08:06,534]DEBUG 27879[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2015-12-30 01:08:06,534]DEBUG 27879[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 01:08:06,536]DEBUG 27881[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 01:08:06,536]DEBUG 27881[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2015-12-30 01:08:06,536]DEBUG 27881[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2015-12-30 01:08:06,536]DEBUG 27881[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2015-12-30 01:08:06,536]DEBUG 27881[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 01:08:06,537]DEBUG 27882[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2015-12-30 01:08:06,537]DEBUG 27882[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 01:08:06,540]DEBUG 27885[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2015-12-30 01:08:06,540]DEBUG 27885[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2015-12-30 01:08:06,568]DEBUG 27913[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,568]DEBUG 27913[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@836006d, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,568]DEBUG 27913[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 01:08:06,569]DEBUG 27914[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@25a517e9 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 01:08:06,569]DEBUG 27914[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:06,569]DEBUG 27914[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,569]DEBUG 27914[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304865
[2015-12-30 01:08:06,574]DEBUG 27919[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@130b3958] for Hibernate transaction
[2015-12-30 01:08:06,574]DEBUG 27919[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@130b3958]
[2015-12-30 01:08:06,574]DEBUG 27919[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:06,574]DEBUG 27919[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:06,574]DEBUG 27919[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:06,575]DEBUG 27920[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@836006d, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,575] INFO 27920[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@7ae48ca0]; rollback [true]
[2015-12-30 01:08:06,575]DEBUG 27920[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,575]DEBUG 27920[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,579]DEBUG 27924[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[1]]
[2015-12-30 01:08:06,579]DEBUG 27924[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,579]DEBUG 27924[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 1, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,581]DEBUG 27926[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,581]DEBUG 27926[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,582]DEBUG 27927[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[2]]
[2015-12-30 01:08:06,583]DEBUG 27928[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,583]DEBUG 27928[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 2, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,583]DEBUG 27928[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,583]DEBUG 27928[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,584]DEBUG 27929[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[3]]
[2015-12-30 01:08:06,584]DEBUG 27929[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,584]DEBUG 27929[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 3, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,585]DEBUG 27930[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,585]DEBUG 27930[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,585]DEBUG 27930[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,585]DEBUG 27930[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,585]DEBUG 27930[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,585]DEBUG 27930[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 01:08:06,586]DEBUG 27931[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 01:08:06,586]DEBUG 27931[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 01:08:06,586]DEBUG 27931[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 01:08:06,587]DEBUG 27932[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,587]DEBUG 27932[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,587]DEBUG 27932[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:06,587]DEBUG 27932[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,588]DEBUG 27933[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:06,588]DEBUG 27933[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,588]DEBUG 27933[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:06,590]DEBUG 27935[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,590]DEBUG 27935[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,590]DEBUG 27935[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID24_0_, this_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses this_
[2015-12-30 01:08:06,594]DEBUG 27939[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:06,594]DEBUG 27939[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#1]
[2015-12-30 01:08:06,594]DEBUG 27939[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#2]
[2015-12-30 01:08:06,594]DEBUG 27939[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3]
[2015-12-30 01:08:06,594]DEBUG 27939[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:06,594]DEBUG 27939[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,594]DEBUG 27939[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:06,595]DEBUG 27940[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.OrderItem
[2015-12-30 01:08:06,600]DEBUG 27945[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'OrderItem'

[2015-12-30 01:08:06,600]DEBUG 27945[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,600]DEBUG 27945[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 01:08:06,601]DEBUG 27946[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.OrderItem (no alias) -> orderitem0_
[2015-12-30 01:08:06,601]DEBUG 27946[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 01:08:06,601]DEBUG 27946[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 01:08:06,601]DEBUG 27946[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (OrderItems)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[orderitem0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'OrderItems' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OrderItems,tableAlias=orderitem0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.OrderItem}}

[2015-12-30 01:08:06,601]DEBUG 27946[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,602]DEBUG 27947[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,602]DEBUG 27947[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,602]DEBUG 27947[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,603]DEBUG 27948[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,603]DEBUG 27948[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,603]DEBUG 27948[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,603]DEBUG 27948[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 01:08:06,603]DEBUG 27948[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 01:08:06,603]DEBUG 27948[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 01:08:06,603]DEBUG 27948[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,603]DEBUG 27948[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 01:08:06,606]DEBUG 27951[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,607]DEBUG 27952[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Dimension
[2015-12-30 01:08:06,616]DEBUG 27961[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Dimension'

[2015-12-30 01:08:06,618]DEBUG 27963[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,618]DEBUG 27963[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 01:08:06,619]DEBUG 27964[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Dimension (no alias) -> dimension0_
[2015-12-30 01:08:06,619]DEBUG 27964[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 01:08:06,619]DEBUG 27964[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 01:08:06,619]DEBUG 27964[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Dimensions)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[dimension0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Dimensions' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Dimensions,tableAlias=dimension0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Dimension}}

[2015-12-30 01:08:06,619]DEBUG 27964[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,620]DEBUG 27965[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,621]DEBUG 27966[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,621]DEBUG 27966[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,621]DEBUG 27966[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,621]DEBUG 27966[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,621]DEBUG 27966[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,622]DEBUG 27967[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 01:08:06,622]DEBUG 27967[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 01:08:06,622]DEBUG 27967[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 01:08:06,622]DEBUG 27967[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,623]DEBUG 27968[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 01:08:06,627]DEBUG 27972[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,627]DEBUG 27972[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Product
[2015-12-30 01:08:06,629]DEBUG 27974[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Product'

[2015-12-30 01:08:06,629]DEBUG 27974[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,629]DEBUG 27974[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 01:08:06,629]DEBUG 27974[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Product (no alias) -> product0_
[2015-12-30 01:08:06,629]DEBUG 27974[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 01:08:06,630]DEBUG 27975[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 01:08:06,630]DEBUG 27975[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Products)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Products' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Products,tableAlias=product0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Product}}

[2015-12-30 01:08:06,630]DEBUG 27975[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,630]DEBUG 27975[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,630]DEBUG 27975[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,630]DEBUG 27975[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,631]DEBUG 27976[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,631]DEBUG 27976[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,631]DEBUG 27976[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,631]DEBUG 27976[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 01:08:06,631]DEBUG 27976[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 01:08:06,631]DEBUG 27976[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 01:08:06,631]DEBUG 27976[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,631]DEBUG 27976[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:06,635]DEBUG 27980[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,635]DEBUG 27980[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Order
[2015-12-30 01:08:06,636]DEBUG 27981[main] - org.hibernate.hql.ast.HqlParser.weakKeywords(HqlParser.java:340) - weakKeywords() : new LT(1) token - ["Order",<126> previously: <41>,line=1,col=54,possibleID=true]
[2015-12-30 01:08:06,638]DEBUG 27983[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Order'

[2015-12-30 01:08:06,638]DEBUG 27983[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,638]DEBUG 27983[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 01:08:06,638]DEBUG 27983[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Order (no alias) -> order0_
[2015-12-30 01:08:06,638]DEBUG 27983[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 01:08:06,639]DEBUG 27984[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 01:08:06,639]DEBUG 27984[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Orders)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Orders' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Orders,tableAlias=order0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Order}}

[2015-12-30 01:08:06,639]DEBUG 27984[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,639]DEBUG 27984[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,639]DEBUG 27984[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,644]DEBUG 27989[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,644]DEBUG 27989[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,644]DEBUG 27989[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,644]DEBUG 27989[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,644]DEBUG 27989[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 01:08:06,644]DEBUG 27989[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 01:08:06,644]DEBUG 27989[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 01:08:06,644]DEBUG 27989[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,645]DEBUG 27990[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 01:08:06,646]DEBUG 27991[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,647]DEBUG 27992[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.OrderStatus
[2015-12-30 01:08:06,648]DEBUG 27993[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'OrderStatus'

[2015-12-30 01:08:06,648]DEBUG 27993[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,653]DEBUG 27998[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 01:08:06,654]DEBUG 27999[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.OrderStatus (no alias) -> orderstatu0_
[2015-12-30 01:08:06,654]DEBUG 27999[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 01:08:06,654]DEBUG 27999[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 01:08:06,654]DEBUG 27999[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (OrderStatuses)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[orderstatu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'OrderStatuses' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OrderStatuses,tableAlias=orderstatu0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.OrderStatus}}

[2015-12-30 01:08:06,654]DEBUG 27999[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,656]DEBUG 28001[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,656]DEBUG 28001[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,656]DEBUG 28001[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,657]DEBUG 28002[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,657]DEBUG 28002[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,657]DEBUG 28002[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,657]DEBUG 28002[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 01:08:06,657]DEBUG 28002[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 01:08:06,657]DEBUG 28002[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 01:08:06,657]DEBUG 28002[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,657]DEBUG 28002[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 01:08:06,660]DEBUG 28005[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,665]DEBUG 28010[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.User
[2015-12-30 01:08:06,666]DEBUG 28011[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'User'

[2015-12-30 01:08:06,666]DEBUG 28011[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,666]DEBUG 28011[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 01:08:06,666]DEBUG 28011[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.User (no alias) -> user0_
[2015-12-30 01:08:06,667]DEBUG 28012[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 01:08:06,667]DEBUG 28012[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 01:08:06,668]DEBUG 28013[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Users)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.User}}

[2015-12-30 01:08:06,668]DEBUG 28013[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,668]DEBUG 28013[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,668]DEBUG 28013[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,668]DEBUG 28013[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,668]DEBUG 28013[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,669]DEBUG 28014[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,670]DEBUG 28015[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,670]DEBUG 28015[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 01:08:06,670]DEBUG 28015[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 01:08:06,670]DEBUG 28015[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 01:08:06,670]DEBUG 28015[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,671]DEBUG 28016[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 01:08:06,672]DEBUG 28017[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,673]DEBUG 28018[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.CustomerType
[2015-12-30 01:08:06,674]DEBUG 28019[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'CustomerType'

[2015-12-30 01:08:06,674]DEBUG 28019[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,675]DEBUG 28020[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 01:08:06,675]DEBUG 28020[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (no alias) -> customerty0_
[2015-12-30 01:08:06,676]DEBUG 28021[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 01:08:06,676]DEBUG 28021[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 01:08:06,676]DEBUG 28021[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (CustomerTypes)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerTypes' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}

[2015-12-30 01:08:06,676]DEBUG 28021[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,676]DEBUG 28021[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,676]DEBUG 28021[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,677]DEBUG 28022[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,677]DEBUG 28022[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,677]DEBUG 28022[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,677]DEBUG 28022[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,677]DEBUG 28022[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 01:08:06,677]DEBUG 28022[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 01:08:06,677]DEBUG 28022[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 01:08:06,677]DEBUG 28022[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,677]DEBUG 28022[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 01:08:06,679]DEBUG 28024[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,679]DEBUG 28024[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Region
[2015-12-30 01:08:06,682]DEBUG 28027[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Region'

[2015-12-30 01:08:06,682]DEBUG 28027[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,682]DEBUG 28027[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 01:08:06,682]DEBUG 28027[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Region (no alias) -> region0_
[2015-12-30 01:08:06,682]DEBUG 28027[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 01:08:06,682]DEBUG 28027[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 01:08:06,684]DEBUG 28029[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Regions)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[region0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Regions' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Regions,tableAlias=region0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Region}}

[2015-12-30 01:08:06,685]DEBUG 28030[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,685]DEBUG 28030[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,685]DEBUG 28030[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,685]DEBUG 28030[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,685]DEBUG 28030[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,685]DEBUG 28030[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,685]DEBUG 28030[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,686]DEBUG 28031[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 01:08:06,686]DEBUG 28031[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 01:08:06,686]DEBUG 28031[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 01:08:06,686]DEBUG 28031[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,686]DEBUG 28031[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 01:08:06,687]DEBUG 28032[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,688]DEBUG 28033[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Role
[2015-12-30 01:08:06,689]DEBUG 28034[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Role'

[2015-12-30 01:08:06,689]DEBUG 28034[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,689]DEBUG 28034[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2015-12-30 01:08:06,690]DEBUG 28035[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Role (no alias) -> role0_
[2015-12-30 01:08:06,690]DEBUG 28035[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2015-12-30 01:08:06,690]DEBUG 28035[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2015-12-30 01:08:06,690]DEBUG 28035[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Roles)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Roles' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Roles,tableAlias=role0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Role}}

[2015-12-30 01:08:06,690]DEBUG 28035[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,690]DEBUG 28035[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:06,691]DEBUG 28036[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,691]DEBUG 28036[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,691]DEBUG 28036[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,691]DEBUG 28036[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,691]DEBUG 28036[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,691]DEBUG 28036[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2015-12-30 01:08:06,691]DEBUG 28036[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2015-12-30 01:08:06,691]DEBUG 28036[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2015-12-30 01:08:06,692]DEBUG 28037[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,692]DEBUG 28037[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 01:08:06,693]DEBUG 28038[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,693]DEBUG 28038[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@836006d, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,693]DEBUG 28038[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:06,693]DEBUG 28038[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@130b3958]
[2015-12-30 01:08:06,694]DEBUG 28039[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:06,696]DEBUG 28041[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:06,696]DEBUG 28041[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:06,696]DEBUG 28041[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@130b3958] after transaction
[2015-12-30 01:08:06,696]DEBUG 28041[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:06,697]DEBUG 28042[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:06,697]DEBUG 28042[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:06,697] INFO 28042[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@836006d, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,698]DEBUG 28043[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@836006d, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:06,699]DEBUG 28044[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 01:08:06,699]DEBUG 28044[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 01:08:06,699]DEBUG 28044[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2204a360, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:06,700]DEBUG 28045[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:06,700]DEBUG 28045[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:06,700]DEBUG 28045[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:06,700]DEBUG 28045[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:06,701]DEBUG 28046[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:06,701]DEBUG 28046[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:06,701]DEBUG 28046[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:06,701]DEBUG 28046[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:06,701]DEBUG 28046[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:06,702]DEBUG 28047[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:06,702]DEBUG 28047[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:06,702]DEBUG 28047[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:06,702]DEBUG 28047[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:06,703]DEBUG 28048[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:06,703]DEBUG 28048[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:06,703]DEBUG 28048[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:06,703]DEBUG 28048[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:06,703]DEBUG 28048[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:06,704]DEBUG 28049[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:06,704]DEBUG 28049[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:06,704]DEBUG 28049[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,704]DEBUG 28049[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:06,705]DEBUG 28050[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2204a360]
[2015-12-30 01:08:06,705]DEBUG 28050[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,706]DEBUG 28051[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2204a360, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,706]DEBUG 28051[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:06,707]DEBUG 28052[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,707]DEBUG 28052[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304867
[2015-12-30 01:08:06,707]DEBUG 28052[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@246ecbfd] for Hibernate transaction
[2015-12-30 01:08:06,710]DEBUG 28055[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@246ecbfd]
[2015-12-30 01:08:06,710]DEBUG 28055[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:06,710]DEBUG 28055[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:06,711]DEBUG 28056[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:06,711]DEBUG 28056[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2204a360, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,711] INFO 28056[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@7ae48ca0]; rollback [true]
[2015-12-30 01:08:06,711]DEBUG 28056[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,712]DEBUG 28057[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,713]DEBUG 28058[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[4]]
[2015-12-30 01:08:06,713]DEBUG 28058[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,714]DEBUG 28059[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 4, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,714]DEBUG 28059[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,714]DEBUG 28059[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,716]DEBUG 28061[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[5]]
[2015-12-30 01:08:06,716]DEBUG 28061[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,716]DEBUG 28061[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 5, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,717]DEBUG 28062[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,717]DEBUG 28062[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,718]DEBUG 28063[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[6]]
[2015-12-30 01:08:06,718]DEBUG 28063[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,719]DEBUG 28064[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 6, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,719]DEBUG 28064[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,720]DEBUG 28065[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,720]DEBUG 28065[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,720]DEBUG 28065[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,720]DEBUG 28065[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,721]DEBUG 28066[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 01:08:06,721]DEBUG 28066[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 01:08:06,721]DEBUG 28066[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 01:08:06,721]DEBUG 28066[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 01:08:06,722]DEBUG 28067[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,722]DEBUG 28067[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,723]DEBUG 28068[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:06,723]DEBUG 28068[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,723]DEBUG 28068[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:06,723]DEBUG 28068[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,724]DEBUG 28069[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:06,726]DEBUG 28071[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,726]DEBUG 28071[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,727]DEBUG 28072[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID24_0_, this_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses this_
[2015-12-30 01:08:06,728]DEBUG 28073[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:06,728]DEBUG 28073[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#4]
[2015-12-30 01:08:06,728]DEBUG 28073[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#5]
[2015-12-30 01:08:06,728]DEBUG 28073[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#6]
[2015-12-30 01:08:06,728]DEBUG 28073[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:06,729]DEBUG 28074[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,729]DEBUG 28074[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:06,729]DEBUG 28074[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,729]DEBUG 28074[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,729]DEBUG 28074[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,729]DEBUG 28074[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,729]DEBUG 28074[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,729]DEBUG 28074[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 01:08:06,729]DEBUG 28074[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 01:08:06,730]DEBUG 28075[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 01:08:06,730]DEBUG 28075[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,730]DEBUG 28075[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 01:08:06,731]DEBUG 28076[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,731]DEBUG 28076[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,731]DEBUG 28076[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,731]DEBUG 28076[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,731]DEBUG 28076[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,732]DEBUG 28077[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,732]DEBUG 28077[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 01:08:06,732]DEBUG 28077[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 01:08:06,732]DEBUG 28077[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 01:08:06,732]DEBUG 28077[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,732]DEBUG 28077[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 01:08:06,733]DEBUG 28078[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,734]DEBUG 28079[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,734]DEBUG 28079[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,734]DEBUG 28079[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,734]DEBUG 28079[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,735]DEBUG 28080[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,735]DEBUG 28080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 01:08:06,735]DEBUG 28080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 01:08:06,735]DEBUG 28080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 01:08:06,736]DEBUG 28081[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,736]DEBUG 28081[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:06,740]DEBUG 28085[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,740]DEBUG 28085[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,740]DEBUG 28085[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,741]DEBUG 28086[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,742]DEBUG 28087[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,742]DEBUG 28087[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,742]DEBUG 28087[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 01:08:06,742]DEBUG 28087[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 01:08:06,743]DEBUG 28088[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 01:08:06,743]DEBUG 28088[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,743]DEBUG 28088[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 01:08:06,744]DEBUG 28089[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,745]DEBUG 28090[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,745]DEBUG 28090[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,745]DEBUG 28090[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,746]DEBUG 28091[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,746]DEBUG 28091[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,746]DEBUG 28091[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 01:08:06,746]DEBUG 28091[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 01:08:06,746]DEBUG 28091[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 01:08:06,747]DEBUG 28092[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,747]DEBUG 28092[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 01:08:06,749]DEBUG 28094[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,749]DEBUG 28094[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,749]DEBUG 28094[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,750]DEBUG 28095[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,750]DEBUG 28095[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,750]DEBUG 28095[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,750]DEBUG 28095[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 01:08:06,751]DEBUG 28096[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 01:08:06,751]DEBUG 28096[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 01:08:06,751]DEBUG 28096[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,751]DEBUG 28096[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 01:08:06,753]DEBUG 28098[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,753]DEBUG 28098[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,753]DEBUG 28098[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,753]DEBUG 28098[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,754]DEBUG 28099[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,754]DEBUG 28099[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,754]DEBUG 28099[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 01:08:06,754]DEBUG 28099[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 01:08:06,754]DEBUG 28099[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 01:08:06,755]DEBUG 28100[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,755]DEBUG 28100[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 01:08:06,756]DEBUG 28101[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,757]DEBUG 28102[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,757]DEBUG 28102[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,757]DEBUG 28102[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,757]DEBUG 28102[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,758]DEBUG 28103[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,758]DEBUG 28103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 01:08:06,758]DEBUG 28103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 01:08:06,758]DEBUG 28103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 01:08:06,758]DEBUG 28103[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,759]DEBUG 28104[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 01:08:06,760]DEBUG 28105[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,760]DEBUG 28105[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,760]DEBUG 28105[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,761]DEBUG 28106[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,761]DEBUG 28106[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,761]DEBUG 28106[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,761]DEBUG 28106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2015-12-30 01:08:06,762]DEBUG 28107[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2015-12-30 01:08:06,762]DEBUG 28107[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2015-12-30 01:08:06,762]DEBUG 28107[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,762]DEBUG 28107[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 01:08:06,764]DEBUG 28109[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,764]DEBUG 28109[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2204a360, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,764]DEBUG 28109[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:06,764]DEBUG 28109[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@246ecbfd]
[2015-12-30 01:08:06,765]DEBUG 28110[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:06,766]DEBUG 28111[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:06,766]DEBUG 28111[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:06,767]DEBUG 28112[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@246ecbfd] after transaction
[2015-12-30 01:08:06,767]DEBUG 28112[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:06,767]DEBUG 28112[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:06,767]DEBUG 28112[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:06,767] INFO 28112[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2204a360, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,768]DEBUG 28113[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2204a360, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:06,769]DEBUG 28114[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 01:08:06,769]DEBUG 28114[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 01:08:06,770]DEBUG 28115[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@42a68662, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:06,770]DEBUG 28115[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:06,770]DEBUG 28115[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:06,770]DEBUG 28115[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:06,771]DEBUG 28116[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:06,773]DEBUG 28118[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:06,773]DEBUG 28118[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:06,774]DEBUG 28119[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:06,774]DEBUG 28119[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:06,774]DEBUG 28119[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:06,774]DEBUG 28119[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:06,775]DEBUG 28120[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:06,775]DEBUG 28120[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:06,775]DEBUG 28120[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:06,775]DEBUG 28120[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:06,775]DEBUG 28120[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:06,776]DEBUG 28121[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:06,776]DEBUG 28121[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:06,776]DEBUG 28121[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:06,776]DEBUG 28121[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:06,777]DEBUG 28122[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:06,777]DEBUG 28122[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,777]DEBUG 28122[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:06,777]DEBUG 28122[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@42a68662]
[2015-12-30 01:08:06,778]DEBUG 28123[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,778]DEBUG 28123[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@42a68662, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,778]DEBUG 28123[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:06,779]DEBUG 28124[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,779]DEBUG 28124[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304867
[2015-12-30 01:08:06,780]DEBUG 28125[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7f0091ca] for Hibernate transaction
[2015-12-30 01:08:06,780]DEBUG 28125[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7f0091ca]
[2015-12-30 01:08:06,780]DEBUG 28125[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:06,780]DEBUG 28125[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:06,781]DEBUG 28126[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:06,781]DEBUG 28126[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@42a68662, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,781] INFO 28126[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@7ae48ca0]; rollback [true]
[2015-12-30 01:08:06,781]DEBUG 28126[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,782]DEBUG 28127[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,783]DEBUG 28128[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[7]]
[2015-12-30 01:08:06,783]DEBUG 28128[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,784]DEBUG 28129[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 7, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,784]DEBUG 28129[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,784]DEBUG 28129[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,786]DEBUG 28131[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[8]]
[2015-12-30 01:08:06,786]DEBUG 28131[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,786]DEBUG 28131[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 8, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,786]DEBUG 28131[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,786]DEBUG 28131[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,787]DEBUG 28132[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[9]]
[2015-12-30 01:08:06,787]DEBUG 28132[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,788]DEBUG 28133[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 9, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,788]DEBUG 28133[main] - org.hibernate.event.def.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:442) - load request found matching entity in context, but it is scheduled for removal; returning null
[2015-12-30 01:08:06,788]DEBUG 28133[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,788]DEBUG 28133[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,788]DEBUG 28133[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 1 deletions to 3 objects
[2015-12-30 01:08:06,788]DEBUG 28133[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,789]DEBUG 28134[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,789]DEBUG 28134[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 01:08:06,789]DEBUG 28134[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 01:08:06,789]DEBUG 28134[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2015-12-30 01:08:06,789]DEBUG 28134[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,789]DEBUG 28134[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 01:08:06,790]DEBUG 28135[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,791]DEBUG 28136[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,791]DEBUG 28136[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,791]DEBUG 28136[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 1 deletions to 3 objects
[2015-12-30 01:08:06,791]DEBUG 28136[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,791]DEBUG 28136[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,792]DEBUG 28137[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 01:08:06,792]DEBUG 28137[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 01:08:06,792]DEBUG 28137[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2015-12-30 01:08:06,792]DEBUG 28137[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,792]DEBUG 28137[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 01:08:06,793]DEBUG 28138[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,794]DEBUG 28139[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,794]DEBUG 28139[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,794]DEBUG 28139[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 1 deletions to 3 objects
[2015-12-30 01:08:06,794]DEBUG 28139[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,794]DEBUG 28139[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,794]DEBUG 28139[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 01:08:06,794]DEBUG 28139[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 01:08:06,794]DEBUG 28139[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2015-12-30 01:08:06,795]DEBUG 28140[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,795]DEBUG 28140[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:06,796]DEBUG 28141[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,796]DEBUG 28141[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,796]DEBUG 28141[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,798]DEBUG 28143[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 1 deletions to 3 objects
[2015-12-30 01:08:06,798]DEBUG 28143[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,798]DEBUG 28143[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,798]DEBUG 28143[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 01:08:06,798]DEBUG 28143[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 01:08:06,798]DEBUG 28143[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2015-12-30 01:08:06,798]DEBUG 28143[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,798]DEBUG 28143[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 01:08:06,800]DEBUG 28145[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,800]DEBUG 28145[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,800]DEBUG 28145[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,800]DEBUG 28145[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 1 deletions to 3 objects
[2015-12-30 01:08:06,800]DEBUG 28145[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,800]DEBUG 28145[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,800]DEBUG 28145[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 01:08:06,801]DEBUG 28146[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 01:08:06,801]DEBUG 28146[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2015-12-30 01:08:06,801]DEBUG 28146[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 01:08:06,801]DEBUG 28146[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,801]DEBUG 28146[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,801]DEBUG 28146[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:06,801]DEBUG 28146[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,802]DEBUG 28147[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:06,802]DEBUG 28147[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,802]DEBUG 28147[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:06,803]DEBUG 28148[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,804]DEBUG 28149[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,804]DEBUG 28149[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses where ID=?
[2015-12-30 01:08:06,804]DEBUG 28149[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 01:08:06,805]DEBUG 28150[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,805]DEBUG 28150[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,805]DEBUG 28150[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 01:08:06,807]DEBUG 28152[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,807]DEBUG 28152[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,807]DEBUG 28152[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,807]DEBUG 28152[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2015-12-30 01:08:06,807]DEBUG 28152[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,807]DEBUG 28152[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,808]DEBUG 28153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 01:08:06,808]DEBUG 28153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 01:08:06,808]DEBUG 28153[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,808]DEBUG 28153[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 01:08:06,809]DEBUG 28154[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,809]DEBUG 28154[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,809]DEBUG 28154[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,809]DEBUG 28154[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2015-12-30 01:08:06,809]DEBUG 28154[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,810]DEBUG 28155[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,810]DEBUG 28155[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 01:08:06,810]DEBUG 28155[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 01:08:06,810]DEBUG 28155[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,810]DEBUG 28155[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 01:08:06,811]DEBUG 28156[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,811]DEBUG 28156[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,811]DEBUG 28156[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,812]DEBUG 28157[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2015-12-30 01:08:06,812]DEBUG 28157[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,812]DEBUG 28157[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,812]DEBUG 28157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 01:08:06,812]DEBUG 28157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 01:08:06,812]DEBUG 28157[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,812]DEBUG 28157[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 01:08:06,813]DEBUG 28158[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,813]DEBUG 28158[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,814]DEBUG 28159[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,814]DEBUG 28159[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2015-12-30 01:08:06,814]DEBUG 28159[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,814]DEBUG 28159[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,814]DEBUG 28159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2015-12-30 01:08:06,814]DEBUG 28159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2015-12-30 01:08:06,814]DEBUG 28159[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,814]DEBUG 28159[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 01:08:06,815]DEBUG 28160[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,816]DEBUG 28161[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@42a68662, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,816]DEBUG 28161[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:06,816]DEBUG 28161[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7f0091ca]
[2015-12-30 01:08:06,816]DEBUG 28161[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:06,817]DEBUG 28162[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:06,817]DEBUG 28162[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:06,817]DEBUG 28162[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7f0091ca] after transaction
[2015-12-30 01:08:06,817]DEBUG 28162[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:06,817]DEBUG 28162[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:06,818]DEBUG 28163[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:06,818] INFO 28163[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@42a68662, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,819]DEBUG 28164[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@42a68662, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:06,820]DEBUG 28165[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 01:08:06,820]DEBUG 28165[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 01:08:06,820]DEBUG 28165[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4cff742e, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:06,820]DEBUG 28165[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:06,821]DEBUG 28166[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:06,821]DEBUG 28166[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:06,821]DEBUG 28166[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:06,821]DEBUG 28166[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:06,821]DEBUG 28166[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:06,821]DEBUG 28166[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:06,821]DEBUG 28166[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:06,821]DEBUG 28166[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:06,821]DEBUG 28166[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:06,822]DEBUG 28167[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:06,822]DEBUG 28167[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:06,822]DEBUG 28167[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:06,822]DEBUG 28167[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:06,822]DEBUG 28167[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:06,825]DEBUG 28170[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:06,825]DEBUG 28170[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:06,825]DEBUG 28170[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:06,825]DEBUG 28170[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:06,825]DEBUG 28170[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:06,826]DEBUG 28171[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,826]DEBUG 28171[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:06,826]DEBUG 28171[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4cff742e]
[2015-12-30 01:08:06,826]DEBUG 28171[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,826]DEBUG 28171[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4cff742e, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,827]DEBUG 28172[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:06,827]DEBUG 28172[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,827]DEBUG 28172[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304868
[2015-12-30 01:08:06,827]DEBUG 28172[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@480c26ba] for Hibernate transaction
[2015-12-30 01:08:06,827]DEBUG 28172[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@480c26ba]
[2015-12-30 01:08:06,827]DEBUG 28172[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:06,828]DEBUG 28173[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:06,828]DEBUG 28173[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:06,828]DEBUG 28173[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4cff742e, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,828] INFO 28173[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@7ae48ca0]; rollback [true]
[2015-12-30 01:08:06,828]DEBUG 28173[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,828]DEBUG 28173[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,830]DEBUG 28175[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[10]]
[2015-12-30 01:08:06,830]DEBUG 28175[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,830]DEBUG 28175[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 10, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,830]DEBUG 28175[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,830]DEBUG 28175[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,832]DEBUG 28177[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[11]]
[2015-12-30 01:08:06,832]DEBUG 28177[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,832]DEBUG 28177[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 11, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,832]DEBUG 28177[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,832]DEBUG 28177[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,833]DEBUG 28178[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[12]]
[2015-12-30 01:08:06,834]DEBUG 28179[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,834]DEBUG 28179[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 12, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,834]DEBUG 28179[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,834]DEBUG 28179[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,835]DEBUG 28180[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,835]DEBUG 28180[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,835]DEBUG 28180[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,835]DEBUG 28180[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 01:08:06,835]DEBUG 28180[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 01:08:06,835]DEBUG 28180[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 01:08:06,836]DEBUG 28181[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,836]DEBUG 28181[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 01:08:06,837]DEBUG 28182[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,837]DEBUG 28182[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,837]DEBUG 28182[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,838]DEBUG 28183[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,839]DEBUG 28184[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,839]DEBUG 28184[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,839]DEBUG 28184[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 01:08:06,839]DEBUG 28184[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 01:08:06,839]DEBUG 28184[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 01:08:06,839]DEBUG 28184[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,839]DEBUG 28184[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 01:08:06,840]DEBUG 28185[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,841]DEBUG 28186[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,841]DEBUG 28186[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,841]DEBUG 28186[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,841]DEBUG 28186[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,841]DEBUG 28186[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,841]DEBUG 28186[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 01:08:06,841]DEBUG 28186[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 01:08:06,843]DEBUG 28188[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 01:08:06,843]DEBUG 28188[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,843]DEBUG 28188[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:06,845]DEBUG 28190[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,845]DEBUG 28190[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,845]DEBUG 28190[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,845]DEBUG 28190[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,845]DEBUG 28190[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,845]DEBUG 28190[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,845]DEBUG 28190[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 01:08:06,846]DEBUG 28191[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 01:08:06,846]DEBUG 28191[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 01:08:06,846]DEBUG 28191[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,846]DEBUG 28191[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 01:08:06,847]DEBUG 28192[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,847]DEBUG 28192[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,847]DEBUG 28192[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,848]DEBUG 28193[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,848]DEBUG 28193[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,848]DEBUG 28193[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,848]DEBUG 28193[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 01:08:06,848]DEBUG 28193[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 01:08:06,848]DEBUG 28193[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 01:08:06,848]DEBUG 28193[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 01:08:06,848]DEBUG 28193[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,849]DEBUG 28194[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,849]DEBUG 28194[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:06,849]DEBUG 28194[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,849]DEBUG 28194[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:06,849]DEBUG 28194[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,849]DEBUG 28194[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:06,851]DEBUG 28196[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,851]DEBUG 28196[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,851]DEBUG 28196[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 01:08:06,852]DEBUG 28197[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,853]DEBUG 28198[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,853]DEBUG 28198[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,853]DEBUG 28198[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,853]DEBUG 28198[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,853]DEBUG 28198[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,853]DEBUG 28198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 01:08:06,853]DEBUG 28198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 01:08:06,853]DEBUG 28198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 01:08:06,854]DEBUG 28199[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,854]DEBUG 28199[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 01:08:06,855]DEBUG 28200[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,855]DEBUG 28200[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,855]DEBUG 28200[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,855]DEBUG 28200[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,855]DEBUG 28200[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,855]DEBUG 28200[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,856]DEBUG 28201[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 01:08:06,856]DEBUG 28201[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 01:08:06,856]DEBUG 28201[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 01:08:06,856]DEBUG 28201[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,856]DEBUG 28201[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 01:08:06,857]DEBUG 28202[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,857]DEBUG 28202[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,857]DEBUG 28202[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,857]DEBUG 28202[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,858]DEBUG 28203[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,858]DEBUG 28203[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,858]DEBUG 28203[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 01:08:06,858]DEBUG 28203[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 01:08:06,858]DEBUG 28203[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 01:08:06,858]DEBUG 28203[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,858]DEBUG 28203[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 01:08:06,859]DEBUG 28204[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,860]DEBUG 28205[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,860]DEBUG 28205[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,860]DEBUG 28205[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,860]DEBUG 28205[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,860]DEBUG 28205[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,860]DEBUG 28205[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2015-12-30 01:08:06,860]DEBUG 28205[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2015-12-30 01:08:06,860]DEBUG 28205[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2015-12-30 01:08:06,860]DEBUG 28205[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,861]DEBUG 28206[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 01:08:06,862]DEBUG 28207[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,862]DEBUG 28207[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4cff742e, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,862]DEBUG 28207[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:06,862]DEBUG 28207[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@480c26ba]
[2015-12-30 01:08:06,862]DEBUG 28207[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:06,863]DEBUG 28208[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:06,863]DEBUG 28208[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:06,865]DEBUG 28210[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@480c26ba] after transaction
[2015-12-30 01:08:06,865]DEBUG 28210[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:06,865]DEBUG 28210[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:06,865]DEBUG 28210[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:06,866] INFO 28211[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4cff742e, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,866]DEBUG 28211[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4cff742e, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:06,866]DEBUG 28211[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 01:08:06,866]DEBUG 28211[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 01:08:06,867]DEBUG 28212[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@60e83ca6, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:06,867]DEBUG 28212[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:06,867]DEBUG 28212[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:06,867]DEBUG 28212[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:06,867]DEBUG 28212[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:06,867]DEBUG 28212[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:06,868]DEBUG 28213[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:06,868]DEBUG 28213[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:06,868]DEBUG 28213[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:06,868]DEBUG 28213[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:06,869]DEBUG 28214[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:06,869]DEBUG 28214[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:06,869]DEBUG 28214[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:06,869]DEBUG 28214[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:06,869]DEBUG 28214[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:06,869]DEBUG 28214[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:06,869]DEBUG 28214[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:06,869]DEBUG 28214[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:06,869]DEBUG 28214[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:06,869]DEBUG 28214[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:06,870]DEBUG 28215[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:06,870]DEBUG 28215[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,870]DEBUG 28215[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:06,870]DEBUG 28215[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@60e83ca6]
[2015-12-30 01:08:06,870]DEBUG 28215[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindOrderStatusByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,870]DEBUG 28215[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@60e83ca6, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,871]DEBUG 28216[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:06,871]DEBUG 28216[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindOrderStatusByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,871]DEBUG 28216[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304868
[2015-12-30 01:08:06,871]DEBUG 28216[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@34f28ba5] for Hibernate transaction
[2015-12-30 01:08:06,871]DEBUG 28216[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@34f28ba5]
[2015-12-30 01:08:06,871]DEBUG 28216[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:06,871]DEBUG 28216[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:06,872]DEBUG 28217[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:06,872]DEBUG 28217[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@60e83ca6, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,872] INFO 28217[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@7ae48ca0]; rollback [true]
[2015-12-30 01:08:06,872]DEBUG 28217[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,872]DEBUG 28217[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,873]DEBUG 28218[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[13]]
[2015-12-30 01:08:06,874]DEBUG 28219[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,874]DEBUG 28219[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 13, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,874]DEBUG 28219[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,874]DEBUG 28219[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,880]DEBUG 28225[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[14]]
[2015-12-30 01:08:06,880]DEBUG 28225[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,880]DEBUG 28225[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 14, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,881]DEBUG 28226[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,881]DEBUG 28226[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,882]DEBUG 28227[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[15]]
[2015-12-30 01:08:06,882]DEBUG 28227[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,882]DEBUG 28227[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 15, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,882]DEBUG 28227[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,883]DEBUG 28228[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,884]DEBUG 28229[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[16]]
[2015-12-30 01:08:06,884]DEBUG 28229[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,884]DEBUG 28229[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 16, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,884]DEBUG 28229[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,885]DEBUG 28230[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,885]DEBUG 28230[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:06,885]DEBUG 28230[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,885]DEBUG 28230[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,885]DEBUG 28230[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2015-12-30 01:08:06,885]DEBUG 28230[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 01:08:06,885]DEBUG 28230[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 01:08:06,885]DEBUG 28230[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 01:08:06,886]DEBUG 28231[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 01:08:06,886]DEBUG 28231[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,886]DEBUG 28231[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,886]DEBUG 28231[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:06,886]DEBUG 28231[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,886]DEBUG 28231[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:06,886]DEBUG 28231[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,888]DEBUG 28233[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:06,888]DEBUG 28233[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,889]DEBUG 28234[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 01:08:06,890]DEBUG 28235[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,891]DEBUG 28236[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,891]DEBUG 28236[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID24_0_, this_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses this_ where this_.OrederStatusName=?
[2015-12-30 01:08:06,893]DEBUG 28238[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:06,894]DEBUG 28239[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#16]
[2015-12-30 01:08:06,894]DEBUG 28239[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:06,894]DEBUG 28239[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,894]DEBUG 28239[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:06,894]DEBUG 28239[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,894]DEBUG 28239[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,894]DEBUG 28239[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 01:08:06,895]DEBUG 28240[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,895]DEBUG 28240[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,895]DEBUG 28240[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2015-12-30 01:08:06,895]DEBUG 28240[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 01:08:06,895]DEBUG 28240[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 01:08:06,895]DEBUG 28240[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 01:08:06,895]DEBUG 28240[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,895]DEBUG 28240[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 01:08:06,897]DEBUG 28242[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,897]DEBUG 28242[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,897]DEBUG 28242[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,897]DEBUG 28242[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 01:08:06,897]DEBUG 28242[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,897]DEBUG 28242[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,897]DEBUG 28242[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2015-12-30 01:08:06,897]DEBUG 28242[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 01:08:06,898]DEBUG 28243[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 01:08:06,898]DEBUG 28243[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 01:08:06,898]DEBUG 28243[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,898]DEBUG 28243[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 01:08:06,899]DEBUG 28244[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,899]DEBUG 28244[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,899]DEBUG 28244[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,900]DEBUG 28245[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 01:08:06,900]DEBUG 28245[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,900]DEBUG 28245[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,900]DEBUG 28245[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2015-12-30 01:08:06,900]DEBUG 28245[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 01:08:06,900]DEBUG 28245[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 01:08:06,900]DEBUG 28245[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 01:08:06,900]DEBUG 28245[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,901]DEBUG 28246[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:06,902]DEBUG 28247[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,902]DEBUG 28247[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,902]DEBUG 28247[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,902]DEBUG 28247[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 01:08:06,902]DEBUG 28247[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,902]DEBUG 28247[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,902]DEBUG 28247[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2015-12-30 01:08:06,903]DEBUG 28248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 01:08:06,903]DEBUG 28248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 01:08:06,903]DEBUG 28248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 01:08:06,903]DEBUG 28248[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,903]DEBUG 28248[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 01:08:06,904]DEBUG 28249[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,904]DEBUG 28249[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,904]DEBUG 28249[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,905]DEBUG 28250[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2015-12-30 01:08:06,905]DEBUG 28250[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,905]DEBUG 28250[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,905]DEBUG 28250[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2015-12-30 01:08:06,905]DEBUG 28250[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 01:08:06,905]DEBUG 28250[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 01:08:06,905]DEBUG 28250[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 01:08:06,905]DEBUG 28250[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 01:08:06,906]DEBUG 28251[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,906]DEBUG 28251[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses where ID=?
[2015-12-30 01:08:06,906]DEBUG 28251[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 01:08:06,907]DEBUG 28252[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,907]DEBUG 28252[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,907]DEBUG 28252[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 01:08:06,909]DEBUG 28254[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,909]DEBUG 28254[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,909]DEBUG 28254[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,909]DEBUG 28254[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,909]DEBUG 28254[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,909]DEBUG 28254[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,909]DEBUG 28254[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 01:08:06,910]DEBUG 28255[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 01:08:06,911]DEBUG 28256[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 01:08:06,911]DEBUG 28256[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,911]DEBUG 28256[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 01:08:06,913]DEBUG 28258[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,913]DEBUG 28258[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,913]DEBUG 28258[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,913]DEBUG 28258[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,913]DEBUG 28258[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,913]DEBUG 28258[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,913]DEBUG 28258[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 01:08:06,913]DEBUG 28258[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 01:08:06,914]DEBUG 28259[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 01:08:06,914]DEBUG 28259[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,914]DEBUG 28259[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 01:08:06,915]DEBUG 28260[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,915]DEBUG 28260[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,915]DEBUG 28260[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,915]DEBUG 28260[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,915]DEBUG 28260[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,915]DEBUG 28260[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,916]DEBUG 28261[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 01:08:06,916]DEBUG 28261[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 01:08:06,916]DEBUG 28261[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 01:08:06,916]DEBUG 28261[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,916]DEBUG 28261[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 01:08:06,917]DEBUG 28262[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,917]DEBUG 28262[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,917]DEBUG 28262[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,918]DEBUG 28263[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,918]DEBUG 28263[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,918]DEBUG 28263[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,918]DEBUG 28263[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2015-12-30 01:08:06,918]DEBUG 28263[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2015-12-30 01:08:06,918]DEBUG 28263[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2015-12-30 01:08:06,918]DEBUG 28263[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,918]DEBUG 28263[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 01:08:06,919]DEBUG 28264[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,920]DEBUG 28265[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@60e83ca6, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,920]DEBUG 28265[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:06,920]DEBUG 28265[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@34f28ba5]
[2015-12-30 01:08:06,920]DEBUG 28265[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:06,921]DEBUG 28266[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:06,921]DEBUG 28266[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:06,921]DEBUG 28266[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@34f28ba5] after transaction
[2015-12-30 01:08:06,921]DEBUG 28266[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:06,921]DEBUG 28266[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:06,922]DEBUG 28267[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:06,922] INFO 28267[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@60e83ca6, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2015-12-30 01:08:06,922]DEBUG 28267[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@60e83ca6, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:06,922]DEBUG 28267[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 01:08:06,923]DEBUG 28268[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 01:08:06,923]DEBUG 28268[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@1adda7, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:06,923]DEBUG 28268[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:06,923]DEBUG 28268[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:06,923]DEBUG 28268[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:06,923]DEBUG 28268[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:06,923]DEBUG 28268[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:06,924]DEBUG 28269[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:06,924]DEBUG 28269[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:06,924]DEBUG 28269[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:06,924]DEBUG 28269[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:06,924]DEBUG 28269[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:06,924]DEBUG 28269[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:06,924]DEBUG 28269[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:06,924]DEBUG 28269[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:06,925]DEBUG 28270[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:06,925]DEBUG 28270[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:06,925]DEBUG 28270[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:06,925]DEBUG 28270[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:06,925]DEBUG 28270[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:06,925]DEBUG 28270[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:06,925]DEBUG 28270[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:06,925]DEBUG 28270[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,926]DEBUG 28271[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:06,926]DEBUG 28271[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@1adda7]
[2015-12-30 01:08:06,926]DEBUG 28271[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,926]DEBUG 28271[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@1adda7, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 01:08:06,926]DEBUG 28271[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:06,927]DEBUG 28272[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,927]DEBUG 28272[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304869
[2015-12-30 01:08:06,927]DEBUG 28272[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@627f29ad] for Hibernate transaction
[2015-12-30 01:08:06,927]DEBUG 28272[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@627f29ad]
[2015-12-30 01:08:06,927]DEBUG 28272[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:06,927]DEBUG 28272[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:06,927]DEBUG 28272[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:06,928]DEBUG 28273[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@1adda7, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 01:08:06,929] INFO 28274[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@7ae48ca0]; rollback [true]
[2015-12-30 01:08:06,929]DEBUG 28274[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,929]DEBUG 28274[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,931]DEBUG 28276[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[17]]
[2015-12-30 01:08:06,931]DEBUG 28276[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,931]DEBUG 28276[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 17, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,931]DEBUG 28276[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,931]DEBUG 28276[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,932]DEBUG 28277[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[18]]
[2015-12-30 01:08:06,933]DEBUG 28278[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,933]DEBUG 28278[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 18, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,933]DEBUG 28278[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,933]DEBUG 28278[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:06,934]DEBUG 28279[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[19]]
[2015-12-30 01:08:06,934]DEBUG 28279[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,935]DEBUG 28280[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 19, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:06,935]DEBUG 28280[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,935]DEBUG 28280[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,935]DEBUG 28280[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,936]DEBUG 28281[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,936]DEBUG 28281[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,936]DEBUG 28281[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 01:08:06,936]DEBUG 28281[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 01:08:06,936]DEBUG 28281[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 01:08:06,936]DEBUG 28281[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,936]DEBUG 28281[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 01:08:06,938]DEBUG 28283[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,938]DEBUG 28283[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,938]DEBUG 28283[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,942]DEBUG 28287[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,942]DEBUG 28287[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,942]DEBUG 28287[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,942]DEBUG 28287[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 01:08:06,942]DEBUG 28287[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 01:08:06,942]DEBUG 28287[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 01:08:06,943]DEBUG 28288[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,943]DEBUG 28288[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 01:08:06,944]DEBUG 28289[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,944]DEBUG 28289[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,944]DEBUG 28289[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,945]DEBUG 28290[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,945]DEBUG 28290[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,945]DEBUG 28290[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,945]DEBUG 28290[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 01:08:06,945]DEBUG 28290[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 01:08:06,945]DEBUG 28290[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 01:08:06,945]DEBUG 28290[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,945]DEBUG 28290[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:06,947]DEBUG 28292[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,947]DEBUG 28292[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,947]DEBUG 28292[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,947]DEBUG 28292[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,947]DEBUG 28292[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,947]DEBUG 28292[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,948]DEBUG 28293[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 01:08:06,948]DEBUG 28293[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 01:08:06,948]DEBUG 28293[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 01:08:06,948]DEBUG 28293[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,948]DEBUG 28293[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 01:08:06,949]DEBUG 28294[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,949]DEBUG 28294[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,949]DEBUG 28294[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,950]DEBUG 28295[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,950]DEBUG 28295[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,950]DEBUG 28295[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,950]DEBUG 28295[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 01:08:06,950]DEBUG 28295[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 01:08:06,950]DEBUG 28295[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 01:08:06,950]DEBUG 28295[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2015-12-30 01:08:06,950]DEBUG 28295[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,951]DEBUG 28296[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,951]DEBUG 28296[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:06,951]DEBUG 28296[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,951]DEBUG 28296[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:06,951]DEBUG 28296[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2015-12-30 01:08:06,951]DEBUG 28296[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:06,953]DEBUG 28298[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,953]DEBUG 28298[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,953]DEBUG 28298[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 01:08:06,955]DEBUG 28300[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,955]DEBUG 28300[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,956]DEBUG 28301[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,956]DEBUG 28301[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,957]DEBUG 28302[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,957]DEBUG 28302[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,957]DEBUG 28302[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 01:08:06,957]DEBUG 28302[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 01:08:06,957]DEBUG 28302[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 01:08:06,957]DEBUG 28302[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,957]DEBUG 28302[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 01:08:06,958]DEBUG 28303[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,959]DEBUG 28304[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,959]DEBUG 28304[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,959]DEBUG 28304[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,959]DEBUG 28304[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,959]DEBUG 28304[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,959]DEBUG 28304[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 01:08:06,959]DEBUG 28304[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 01:08:06,960]DEBUG 28305[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 01:08:06,960]DEBUG 28305[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,960]DEBUG 28305[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 01:08:06,961]DEBUG 28306[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,961]DEBUG 28306[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,961]DEBUG 28306[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,961]DEBUG 28306[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,961]DEBUG 28306[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,962]DEBUG 28307[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,962]DEBUG 28307[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 01:08:06,962]DEBUG 28307[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 01:08:06,962]DEBUG 28307[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 01:08:06,962]DEBUG 28307[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,962]DEBUG 28307[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 01:08:06,963]DEBUG 28308[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,963]DEBUG 28308[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:06,964]DEBUG 28309[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:06,964]DEBUG 28309[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:06,964]DEBUG 28309[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:06,964]DEBUG 28309[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:06,964]DEBUG 28309[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2015-12-30 01:08:06,964]DEBUG 28309[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2015-12-30 01:08:06,964]DEBUG 28309[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2015-12-30 01:08:06,964]DEBUG 28309[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:06,965]DEBUG 28310[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 01:08:06,966]DEBUG 28311[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:06,966]DEBUG 28311[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@1adda7, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 01:08:06,966]DEBUG 28311[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:06,966]DEBUG 28311[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@627f29ad]
[2015-12-30 01:08:06,966]DEBUG 28311[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:06,967]DEBUG 28312[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:06,967]DEBUG 28312[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:06,967]DEBUG 28312[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@627f29ad] after transaction
[2015-12-30 01:08:06,968]DEBUG 28313[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:06,968]DEBUG 28313[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:06,968]DEBUG 28313[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:06,968] INFO 28313[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@1adda7, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 01:08:06,968]DEBUG 28313[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@1adda7, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:06,969]DEBUG 28314[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@1a1d85b8 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2015-12-30 01:08:06,972]DEBUG 28317[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest].
[2015-12-30 01:08:06,972] INFO 28317[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: using defaults.
[2015-12-30 01:08:06,972]DEBUG 28317[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:06,972]DEBUG 28317[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:06,973]DEBUG 28318[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:06,974]DEBUG 28319[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:06,974]DEBUG 28319[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:06,974]DEBUG 28319[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:06,976]DEBUG 28321[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:06,976]DEBUG 28321[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:06,976]DEBUG 28321[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@71312a49, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:06,981]DEBUG 28326[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:06,981]DEBUG 28326[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:06,981]DEBUG 28326[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:06,982]DEBUG 28327[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:06,983]DEBUG 28328[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:06,983]DEBUG 28328[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:06,983]DEBUG 28328[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:06,984]DEBUG 28329[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:06,985]DEBUG 28330[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:06,985]DEBUG 28330[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:06,985]DEBUG 28330[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:06,985]DEBUG 28330[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:06,985]DEBUG 28330[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'customerTypeDao'
[2015-12-30 01:08:06,986]DEBUG 28331[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:06,986]DEBUG 28331[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:06,986]DEBUG 28331[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'dimensionDao'
[2015-12-30 01:08:06,986]DEBUG 28331[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:06,986]DEBUG 28331[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:06,987]DEBUG 28332[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'orderDao'
[2015-12-30 01:08:06,987]DEBUG 28332[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:06,987]DEBUG 28332[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:06,987]DEBUG 28332[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'orderItemDao'
[2015-12-30 01:08:06,987]DEBUG 28332[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:06,987]DEBUG 28332[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:06,988]DEBUG 28333[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'orderStatusDao'
[2015-12-30 01:08:06,988]DEBUG 28333[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:06,988]DEBUG 28333[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:06,988]DEBUG 28333[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'productDao'
[2015-12-30 01:08:06,988]DEBUG 28333[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:06,989]DEBUG 28334[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:06,989]DEBUG 28334[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'regionDao'
[2015-12-30 01:08:06,989]DEBUG 28334[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:06,989]DEBUG 28334[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:06,989]DEBUG 28334[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'roleDao'
[2015-12-30 01:08:06,989]DEBUG 28334[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:06,990]DEBUG 28335[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:06,990]DEBUG 28335[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'userDao'
[2015-12-30 01:08:06,990]DEBUG 28335[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:06,990]DEBUG 28335[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:06,990]DEBUG 28335[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'sessionFactory'
[2015-12-30 01:08:06,991]DEBUG 28336[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:06,991]DEBUG 28336[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,991]DEBUG 28336[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:06,992]DEBUG 28337[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@71312a49]
[2015-12-30 01:08:06,992]DEBUG 28337[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.setUp() throws java.lang.Exception
[2015-12-30 01:08:06,993]DEBUG 28338[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,993]DEBUG 28338[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.tearDown()
[2015-12-30 01:08:06,993]DEBUG 28338[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,993]DEBUG 28338[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindAll()
[2015-12-30 01:08:06,993]DEBUG 28338[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,994]DEBUG 28339[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testInsertOrUpdate()
[2015-12-30 01:08:06,994]DEBUG 28339[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,994]DEBUG 28339[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testDelete()
[2015-12-30 01:08:06,994]DEBUG 28339[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,994]DEBUG 28339[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindByCriterions()
[2015-12-30 01:08:06,995]DEBUG 28340[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,995]DEBUG 28340[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindByOneOfCriterions()
[2015-12-30 01:08:06,995]DEBUG 28340[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,995]DEBUG 28340[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindByID()
[2015-12-30 01:08:06,995]DEBUG 28340[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetStandartTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,996]DEBUG 28341[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetStandartTypeDiscount()
[2015-12-30 01:08:06,996]DEBUG 28341[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSilverTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,996]DEBUG 28341[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetSilverTypeDiscount()
[2015-12-30 01:08:06,996]DEBUG 28341[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetGoldTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,996]DEBUG 28341[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetGoldTypeDiscount()
[2015-12-30 01:08:06,997]DEBUG 28342[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetPlatinumTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:06,997]DEBUG 28342[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetPlatinumTypeDiscount()
[2015-12-30 01:08:07,002]DEBUG 28347[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2015-12-30 01:08:07,002]DEBUG 28347[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2015-12-30 01:08:07,002]DEBUG 28347[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,002]DEBUG 28347[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2015-12-30 01:08:07,004]DEBUG 28349[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2015-12-30 01:08:07,004]DEBUG 28349[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2015-12-30 01:08:07,005]DEBUG 28350[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2015-12-30 01:08:07,005]DEBUG 28350[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2015-12-30 01:08:07,005]DEBUG 28350[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2015-12-30 01:08:07,005]DEBUG 28350[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2015-12-30 01:08:07,005]DEBUG 28350[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2015-12-30 01:08:07,005]DEBUG 28350[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2015-12-30 01:08:07,006]DEBUG 28351[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2015-12-30 01:08:07,006]DEBUG 28351[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2015-12-30 01:08:07,006]DEBUG 28351[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2015-12-30 01:08:07,006]DEBUG 28351[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2015-12-30 01:08:07,006]DEBUG 28351[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2015-12-30 01:08:07,007]DEBUG 28352[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2015-12-30 01:08:07,007]DEBUG 28352[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2015-12-30 01:08:07,007]DEBUG 28352[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2015-12-30 01:08:07,007]DEBUG 28352[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2015-12-30 01:08:07,007]DEBUG 28352[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 01:08:07,007]DEBUG 28352[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 01:08:07,011]DEBUG 28356[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2015-12-30 01:08:07,011]DEBUG 28356[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2015-12-30 01:08:07,011]DEBUG 28356[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2015-12-30 01:08:07,011]DEBUG 28356[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2015-12-30 01:08:07,011]DEBUG 28356[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2015-12-30 01:08:07,011]DEBUG 28356[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2015-12-30 01:08:07,012]DEBUG 28357[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2015-12-30 01:08:07,012]DEBUG 28357[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 01:08:07,012]DEBUG 28357[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 01:08:07,012]DEBUG 28357[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2015-12-30 01:08:07,012]DEBUG 28357[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2015-12-30 01:08:07,012]DEBUG 28357[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2015-12-30 01:08:07,013]DEBUG 28358[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 01:08:07,013]DEBUG 28358[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2015-12-30 01:08:07,013]DEBUG 28358[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 01:08:07,013]DEBUG 28358[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2015-12-30 01:08:07,013]DEBUG 28358[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2015-12-30 01:08:07,038]DEBUG 28383[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,038]DEBUG 28383[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@71312a49, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,038]DEBUG 28383[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,039]DEBUG 28384[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@5093c8c0 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,039]DEBUG 28384[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:07,039]DEBUG 28384[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,044]DEBUG 28389[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304870
[2015-12-30 01:08:07,044]DEBUG 28389[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@273b003e] for Hibernate transaction
[2015-12-30 01:08:07,044]DEBUG 28389[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@273b003e]
[2015-12-30 01:08:07,044]DEBUG 28389[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:07,044]DEBUG 28389[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:07,044]DEBUG 28389[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:07,045]DEBUG 28390[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@71312a49, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,045] INFO 28390[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:07,045]DEBUG 28390[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,045]DEBUG 28390[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,047]DEBUG 28392[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[20]]
[2015-12-30 01:08:07,047]DEBUG 28392[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,048]DEBUG 28393[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 20, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,048]DEBUG 28393[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,048]DEBUG 28393[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,052]DEBUG 28397[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[21]]
[2015-12-30 01:08:07,054]DEBUG 28399[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,054]DEBUG 28399[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 21, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,055]DEBUG 28400[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,055]DEBUG 28400[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,056]DEBUG 28401[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[22]]
[2015-12-30 01:08:07,056]DEBUG 28401[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,056]DEBUG 28401[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 22, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,056]DEBUG 28401[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,057]DEBUG 28402[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,058]DEBUG 28403[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[23]]
[2015-12-30 01:08:07,058]DEBUG 28403[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,058]DEBUG 28403[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 23, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,059]DEBUG 28404[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,059]DEBUG 28404[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,059]DEBUG 28404[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,059]DEBUG 28404[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,059]DEBUG 28404[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,059]DEBUG 28404[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,060]DEBUG 28405[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,060]DEBUG 28405[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,060]DEBUG 28405[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,060]DEBUG 28405[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 01:08:07,064]DEBUG 28409[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,064]DEBUG 28409[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,065]DEBUG 28410[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,065]DEBUG 28410[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,065]DEBUG 28410[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,065]DEBUG 28410[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,066]DEBUG 28411[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,066]DEBUG 28411[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,066]DEBUG 28411[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 01:08:07,069]DEBUG 28414[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,069]DEBUG 28414[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,069]DEBUG 28414[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_
[2015-12-30 01:08:07,071]DEBUG 28416[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:07,071]DEBUG 28416[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#20]
[2015-12-30 01:08:07,071]DEBUG 28416[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#21]
[2015-12-30 01:08:07,071]DEBUG 28416[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#22]
[2015-12-30 01:08:07,071]DEBUG 28416[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#23]
[2015-12-30 01:08:07,072]DEBUG 28417[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:07,072]DEBUG 28417[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,072]DEBUG 28417[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:07,072]DEBUG 28417[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,072]DEBUG 28417[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,073]DEBUG 28418[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,073]DEBUG 28418[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,078]DEBUG 28423[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,078]DEBUG 28423[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,078]DEBUG 28423[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,079]DEBUG 28424[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,079]DEBUG 28424[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,079]DEBUG 28424[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,084]DEBUG 28429[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 01:08:07,085]DEBUG 28430[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,085]DEBUG 28430[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,085]DEBUG 28430[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,086]DEBUG 28431[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,086]DEBUG 28431[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,086]DEBUG 28431[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,086]DEBUG 28431[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,086]DEBUG 28431[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,086]DEBUG 28431[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,087]DEBUG 28432[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,087]DEBUG 28432[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,087]DEBUG 28432[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 01:08:07,091]DEBUG 28436[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,093]DEBUG 28438[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,093]DEBUG 28438[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,093]DEBUG 28438[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,093]DEBUG 28438[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,094]DEBUG 28439[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,094]DEBUG 28439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,094]DEBUG 28439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,094]DEBUG 28439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,094]DEBUG 28439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,094]DEBUG 28439[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,099]DEBUG 28444[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:07,100]DEBUG 28445[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,100]DEBUG 28445[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,100]DEBUG 28445[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,101]DEBUG 28446[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,101]DEBUG 28446[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,101]DEBUG 28446[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,101]DEBUG 28446[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,101]DEBUG 28446[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,101]DEBUG 28446[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,102]DEBUG 28447[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,102]DEBUG 28447[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,107]DEBUG 28452[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 01:08:07,108]DEBUG 28453[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,108]DEBUG 28453[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,109]DEBUG 28454[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,109]DEBUG 28454[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,109]DEBUG 28454[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,109]DEBUG 28454[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,109]DEBUG 28454[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,110]DEBUG 28455[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,110]DEBUG 28455[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,110]DEBUG 28455[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,110]DEBUG 28455[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,110]DEBUG 28455[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 01:08:07,115]DEBUG 28460[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,115]DEBUG 28460[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,115]DEBUG 28460[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,115]DEBUG 28460[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,115]DEBUG 28460[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,116]DEBUG 28461[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,116]DEBUG 28461[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,116]DEBUG 28461[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,116]DEBUG 28461[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,116]DEBUG 28461[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,120]DEBUG 28465[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,121]DEBUG 28466[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 01:08:07,122]DEBUG 28467[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,122]DEBUG 28467[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,123]DEBUG 28468[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,123]DEBUG 28468[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,123]DEBUG 28468[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,123]DEBUG 28468[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,123]DEBUG 28468[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,123]DEBUG 28468[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,124]DEBUG 28469[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,124]DEBUG 28469[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,124]DEBUG 28469[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,124]DEBUG 28469[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 01:08:07,132]DEBUG 28477[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,132]DEBUG 28477[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,132]DEBUG 28477[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,132]DEBUG 28477[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,132]DEBUG 28477[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,132]DEBUG 28477[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,133]DEBUG 28478[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,133]DEBUG 28478[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,133]DEBUG 28478[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,133]DEBUG 28478[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,133]DEBUG 28478[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,133]DEBUG 28478[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 01:08:07,134]DEBUG 28479[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,135]DEBUG 28480[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,135]DEBUG 28480[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,135]DEBUG 28480[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,135]DEBUG 28480[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,137]DEBUG 28482[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,137]DEBUG 28482[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,137]DEBUG 28482[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,137]DEBUG 28482[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=21, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,137]DEBUG 28482[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=20, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,138]DEBUG 28483[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,138]DEBUG 28483[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 01:08:07,141]DEBUG 28486[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,141]DEBUG 28486[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@71312a49, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,141]DEBUG 28486[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:07,141]DEBUG 28486[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@273b003e]
[2015-12-30 01:08:07,141]DEBUG 28486[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:07,143]DEBUG 28488[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:07,143]DEBUG 28488[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,143]DEBUG 28488[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@273b003e] after transaction
[2015-12-30 01:08:07,143]DEBUG 28488[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:07,143]DEBUG 28488[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:07,143]DEBUG 28488[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,143] INFO 28488[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@71312a49, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,144]DEBUG 28489[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@71312a49, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:07,144]DEBUG 28489[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,144]DEBUG 28489[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,145]DEBUG 28490[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@222942da, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:07,145]DEBUG 28490[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:07,145]DEBUG 28490[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:07,145]DEBUG 28490[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:07,145]DEBUG 28490[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:07,145]DEBUG 28490[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:07,145]DEBUG 28490[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:07,149]DEBUG 28494[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:07,149]DEBUG 28494[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:07,149]DEBUG 28494[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:07,149]DEBUG 28494[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:07,149]DEBUG 28494[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:07,150]DEBUG 28495[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:07,150]DEBUG 28495[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:07,150]DEBUG 28495[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:07,150]DEBUG 28495[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:07,150]DEBUG 28495[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:07,150]DEBUG 28495[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:07,150]DEBUG 28495[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:07,150]DEBUG 28495[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:07,150]DEBUG 28495[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:07,151]DEBUG 28496[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:07,151]DEBUG 28496[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:07,151]DEBUG 28496[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@222942da]
[2015-12-30 01:08:07,151]DEBUG 28496[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,155]DEBUG 28500[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@222942da, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,155]DEBUG 28500[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:07,155]DEBUG 28500[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,156]DEBUG 28501[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304871
[2015-12-30 01:08:07,156]DEBUG 28501[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2b211a98] for Hibernate transaction
[2015-12-30 01:08:07,156]DEBUG 28501[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2b211a98]
[2015-12-30 01:08:07,156]DEBUG 28501[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:07,156]DEBUG 28501[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:07,156]DEBUG 28501[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:07,156]DEBUG 28501[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@222942da, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,156] INFO 28501[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:07,157]DEBUG 28502[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,157]DEBUG 28502[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,158]DEBUG 28503[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[24]]
[2015-12-30 01:08:07,158]DEBUG 28503[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,158]DEBUG 28503[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 24, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,159]DEBUG 28504[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,159]DEBUG 28504[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,160]DEBUG 28505[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[25]]
[2015-12-30 01:08:07,160]DEBUG 28505[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,160]DEBUG 28505[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 25, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,160]DEBUG 28505[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,161]DEBUG 28506[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,162]DEBUG 28507[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[26]]
[2015-12-30 01:08:07,162]DEBUG 28507[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,162]DEBUG 28507[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 26, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,162]DEBUG 28507[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,163]DEBUG 28508[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,169]DEBUG 28514[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[27]]
[2015-12-30 01:08:07,169]DEBUG 28514[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,169]DEBUG 28514[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 27, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,169]DEBUG 28514[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,169]DEBUG 28514[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,170]DEBUG 28515[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,171]DEBUG 28516[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,171]DEBUG 28516[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,172]DEBUG 28517[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,172]DEBUG 28517[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,172]DEBUG 28517[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,172]DEBUG 28517[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,172]DEBUG 28517[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 01:08:07,172]DEBUG 28517[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,172]DEBUG 28517[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,173]DEBUG 28518[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,173]DEBUG 28518[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,173]DEBUG 28518[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,173]DEBUG 28518[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,173]DEBUG 28518[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,173]DEBUG 28518[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,179]DEBUG 28524[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 01:08:07,181]DEBUG 28526[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,181]DEBUG 28526[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,181]DEBUG 28526[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 01:08:07,183]DEBUG 28528[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,184]DEBUG 28529[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,184]DEBUG 28529[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,187]DEBUG 28532[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[28]]
[2015-12-30 01:08:07,187]DEBUG 28532[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,187]DEBUG 28532[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 28, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,187]DEBUG 28532[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Standard
[2015-12-30 01:08:07,192]DEBUG 28537[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Standard'

[2015-12-30 01:08:07,192]DEBUG 28537[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:07,193]DEBUG 28538[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2015-12-30 01:08:07,193]DEBUG 28538[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2015-12-30 01:08:07,203]DEBUG 28548[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2015-12-30 01:08:07,208]DEBUG 28553[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@1d1fcfbb
[2015-12-30 01:08:07,209]DEBUG 28554[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2015-12-30 01:08:07,214]DEBUG 28559[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2015-12-30 01:08:07,215]DEBUG 28560[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2015-12-30 01:08:07,225]DEBUG 28570[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2015-12-30 01:08:07,232]DEBUG 28577[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2015-12-30 01:08:07,232]DEBUG 28577[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2015-12-30 01:08:07,233]DEBUG 28578[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Standard, expectedType=org.hibernate.type.StringType@1d1fcfbb}

[2015-12-30 01:08:07,233]DEBUG 28578[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:07,233]DEBUG 28578[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Standard
[2015-12-30 01:08:07,233]DEBUG 28578[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 01:08:07,233]DEBUG 28578[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:07,242]DEBUG 28587[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,242]DEBUG 28587[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,242]DEBUG 28587[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 1 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 01:08:07,242]DEBUG 28587[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,242]DEBUG 28587[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,243]DEBUG 28588[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,243]DEBUG 28588[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,243]DEBUG 28588[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,243]DEBUG 28588[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,243]DEBUG 28588[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,243]DEBUG 28588[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 01:08:07,243]DEBUG 28588[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,244]DEBUG 28589[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,244]DEBUG 28589[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2015-12-30 01:08:07,248]DEBUG 28593[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,250]DEBUG 28595[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,250]DEBUG 28595[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 01:08:07,254]DEBUG 28599[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:07,254]DEBUG 28599[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#28]
[2015-12-30 01:08:07,254]DEBUG 28599[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:07,254]DEBUG 28599[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,254]DEBUG 28599[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:07,255]DEBUG 28600[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,256]DEBUG 28601[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,256]DEBUG 28601[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 01:08:07,256]DEBUG 28601[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,256]DEBUG 28601[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,256]DEBUG 28601[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,256]DEBUG 28601[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,259]DEBUG 28604[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,259]DEBUG 28604[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,259]DEBUG 28604[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,259]DEBUG 28604[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,259]DEBUG 28604[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 01:08:07,261]DEBUG 28606[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,261]DEBUG 28606[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,261]DEBUG 28606[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,261]DEBUG 28606[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 01:08:07,261]DEBUG 28606[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,261]DEBUG 28606[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,262]DEBUG 28607[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,262]DEBUG 28607[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,262]DEBUG 28607[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,262]DEBUG 28607[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,262]DEBUG 28607[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,262]DEBUG 28607[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,262]DEBUG 28607[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 01:08:07,263]DEBUG 28608[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,263]DEBUG 28608[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,264]DEBUG 28609[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,264]DEBUG 28609[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 01:08:07,264]DEBUG 28609[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,264]DEBUG 28609[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,264]DEBUG 28609[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,264]DEBUG 28609[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,264]DEBUG 28609[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,264]DEBUG 28609[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,265]DEBUG 28610[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,265]DEBUG 28610[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,265]DEBUG 28610[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:07,266]DEBUG 28611[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,266]DEBUG 28611[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,266]DEBUG 28611[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,267]DEBUG 28612[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 01:08:07,267]DEBUG 28612[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,267]DEBUG 28612[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,267]DEBUG 28612[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,267]DEBUG 28612[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,267]DEBUG 28612[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,267]DEBUG 28612[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,267]DEBUG 28612[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,268]DEBUG 28613[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,268]DEBUG 28613[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 01:08:07,269]DEBUG 28614[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,269]DEBUG 28614[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,269]DEBUG 28614[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,269]DEBUG 28614[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 01:08:07,269]DEBUG 28614[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,269]DEBUG 28614[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,270]DEBUG 28615[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,270]DEBUG 28615[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,270]DEBUG 28615[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,270]DEBUG 28615[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,270]DEBUG 28615[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,270]DEBUG 28615[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,270]DEBUG 28615[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 01:08:07,271]DEBUG 28616[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,272]DEBUG 28617[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,272]DEBUG 28617[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,272]DEBUG 28617[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 01:08:07,272]DEBUG 28617[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,273]DEBUG 28618[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,273]DEBUG 28618[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,273]DEBUG 28618[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,273]DEBUG 28618[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,273]DEBUG 28618[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,273]DEBUG 28618[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,275]DEBUG 28620[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,275]DEBUG 28620[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 01:08:07,277]DEBUG 28622[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,277]DEBUG 28622[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,277]DEBUG 28622[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,277]DEBUG 28622[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 01:08:07,277]DEBUG 28622[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,277]DEBUG 28622[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,278]DEBUG 28623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,278]DEBUG 28623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,278]DEBUG 28623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,278]DEBUG 28623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,278]DEBUG 28623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,278]DEBUG 28623[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,278]DEBUG 28623[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 01:08:07,280]DEBUG 28625[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,280]DEBUG 28625[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,280]DEBUG 28625[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,280]DEBUG 28625[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 01:08:07,280]DEBUG 28625[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,280]DEBUG 28625[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,280]DEBUG 28625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,280]DEBUG 28625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,281]DEBUG 28626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,281]DEBUG 28626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,281]DEBUG 28626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,281]DEBUG 28626[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,281]DEBUG 28626[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 01:08:07,282]DEBUG 28627[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,282]DEBUG 28627[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,283]DEBUG 28628[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,283]DEBUG 28628[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2015-12-30 01:08:07,283]DEBUG 28628[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,283]DEBUG 28628[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,283]DEBUG 28628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,283]DEBUG 28628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=25, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,283]DEBUG 28628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=24, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,284]DEBUG 28629[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=28, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,284]DEBUG 28629[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,284]DEBUG 28629[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,284]DEBUG 28629[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 01:08:07,285]DEBUG 28630[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,286]DEBUG 28631[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@222942da, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,286]DEBUG 28631[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:07,286]DEBUG 28631[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2b211a98]
[2015-12-30 01:08:07,286]DEBUG 28631[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:07,287]DEBUG 28632[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:07,287]DEBUG 28632[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,288]DEBUG 28633[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2b211a98] after transaction
[2015-12-30 01:08:07,288]DEBUG 28633[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:07,288]DEBUG 28633[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:07,288]DEBUG 28633[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,289] INFO 28634[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@222942da, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,290]DEBUG 28635[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@222942da, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:07,290]DEBUG 28635[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,291]DEBUG 28636[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,291]DEBUG 28636[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@592b94df, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:07,291]DEBUG 28636[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:07,292]DEBUG 28637[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:07,292]DEBUG 28637[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:07,292]DEBUG 28637[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:07,292]DEBUG 28637[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:07,293]DEBUG 28638[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:07,293]DEBUG 28638[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:07,293]DEBUG 28638[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:07,293]DEBUG 28638[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:07,293]DEBUG 28638[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:07,294]DEBUG 28639[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:07,294]DEBUG 28639[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:07,294]DEBUG 28639[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:07,294]DEBUG 28639[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:07,294]DEBUG 28639[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:07,295]DEBUG 28640[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:07,295]DEBUG 28640[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:07,295]DEBUG 28640[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:07,295]DEBUG 28640[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:07,296]DEBUG 28641[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:07,296]DEBUG 28641[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:07,296]DEBUG 28641[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:07,296]DEBUG 28641[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@592b94df]
[2015-12-30 01:08:07,297]DEBUG 28642[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,297]DEBUG 28642[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@592b94df, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,297]DEBUG 28642[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:07,298]DEBUG 28643[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,299]DEBUG 28644[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304872
[2015-12-30 01:08:07,299]DEBUG 28644[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@63a818f] for Hibernate transaction
[2015-12-30 01:08:07,301]DEBUG 28646[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@63a818f]
[2015-12-30 01:08:07,302]DEBUG 28647[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:07,302]DEBUG 28647[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:07,302]DEBUG 28647[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:07,302]DEBUG 28647[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@592b94df, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,302] INFO 28647[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:07,303]DEBUG 28648[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,303]DEBUG 28648[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,304]DEBUG 28649[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[29]]
[2015-12-30 01:08:07,305]DEBUG 28650[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,305]DEBUG 28650[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 29, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,305]DEBUG 28650[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,306]DEBUG 28651[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,307]DEBUG 28652[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[30]]
[2015-12-30 01:08:07,307]DEBUG 28652[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,308]DEBUG 28653[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 30, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,308]DEBUG 28653[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,308]DEBUG 28653[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,310]DEBUG 28655[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[31]]
[2015-12-30 01:08:07,310]DEBUG 28655[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,310]DEBUG 28655[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 31, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,310]DEBUG 28655[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,311]DEBUG 28656[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,312]DEBUG 28657[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[32]]
[2015-12-30 01:08:07,312]DEBUG 28657[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,312]DEBUG 28657[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 32, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,313] INFO 28658[main] - org.hibernate.event.def.DefaultDeleteEventListener.deleteTransientEntity(DefaultDeleteEventListener.java:203) - handling transient entity in delete processing
[2015-12-30 01:08:07,313]DEBUG 28658[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,314]DEBUG 28659[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,314]DEBUG 28659[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,314]DEBUG 28659[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,314]DEBUG 28659[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,314]DEBUG 28659[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,315]DEBUG 28660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,315]DEBUG 28660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,315]DEBUG 28660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,315]DEBUG 28660[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 01:08:07,316]DEBUG 28661[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,316]DEBUG 28661[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,316]DEBUG 28661[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,317]DEBUG 28662[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,317]DEBUG 28662[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,317]DEBUG 28662[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,318]DEBUG 28663[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,318]DEBUG 28663[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,318]DEBUG 28663[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 01:08:07,321]DEBUG 28666[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,321]DEBUG 28666[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,321]DEBUG 28666[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 01:08:07,323]DEBUG 28668[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:07,323]DEBUG 28668[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#29]
[2015-12-30 01:08:07,323]DEBUG 28668[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:07,324]DEBUG 28669[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,324]DEBUG 28669[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:07,324]DEBUG 28669[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,325]DEBUG 28670[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,325]DEBUG 28670[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,325]DEBUG 28670[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,325]DEBUG 28670[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,326]DEBUG 28671[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,326]DEBUG 28671[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,326]DEBUG 28671[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,326]DEBUG 28671[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,327]DEBUG 28672[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,327]DEBUG 28672[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 01:08:07,328]DEBUG 28673[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,329]DEBUG 28674[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,329]DEBUG 28674[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,329]DEBUG 28674[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,329]DEBUG 28674[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,330]DEBUG 28675[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,330]DEBUG 28675[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,330]DEBUG 28675[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,330]DEBUG 28675[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,331]DEBUG 28676[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,331]DEBUG 28676[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,331]DEBUG 28676[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 01:08:07,332]DEBUG 28677[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,335]DEBUG 28680[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,335]DEBUG 28680[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,335]DEBUG 28680[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,336]DEBUG 28681[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,336]DEBUG 28681[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,336]DEBUG 28681[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,336]DEBUG 28681[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,337]DEBUG 28682[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,337]DEBUG 28682[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,337]DEBUG 28682[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,337]DEBUG 28682[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:07,339]DEBUG 28684[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,339]DEBUG 28684[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,339]DEBUG 28684[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,340]DEBUG 28685[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,340]DEBUG 28685[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,340]DEBUG 28685[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,340]DEBUG 28685[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,341]DEBUG 28686[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,341]DEBUG 28686[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,341]DEBUG 28686[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,341]DEBUG 28686[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,342]DEBUG 28687[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 01:08:07,343]DEBUG 28688[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,343]DEBUG 28688[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,344]DEBUG 28689[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,344]DEBUG 28689[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,344]DEBUG 28689[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,345]DEBUG 28690[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,345]DEBUG 28690[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,345]DEBUG 28690[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,345]DEBUG 28690[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,347]DEBUG 28692[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,347]DEBUG 28692[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,347]DEBUG 28692[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 01:08:07,348]DEBUG 28693[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,348]DEBUG 28693[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,348]DEBUG 28693[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,349]DEBUG 28694[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,349]DEBUG 28694[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,349]DEBUG 28694[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,349]DEBUG 28694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,349]DEBUG 28694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,349]DEBUG 28694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,349]DEBUG 28694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,349]DEBUG 28694[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,350]DEBUG 28695[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 01:08:07,351]DEBUG 28696[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,351]DEBUG 28696[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,351]DEBUG 28696[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,351]DEBUG 28696[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,351]DEBUG 28696[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,351]DEBUG 28696[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,351]DEBUG 28696[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,352]DEBUG 28697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,352]DEBUG 28697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,352]DEBUG 28697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,352]DEBUG 28697[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,352]DEBUG 28697[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 01:08:07,353]DEBUG 28698[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,354]DEBUG 28699[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,354]DEBUG 28699[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,354]DEBUG 28699[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,354]DEBUG 28699[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,355]DEBUG 28700[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,355]DEBUG 28700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,355]DEBUG 28700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,355]DEBUG 28700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,355]DEBUG 28700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,355]DEBUG 28700[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,355]DEBUG 28700[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 01:08:07,356]DEBUG 28701[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,357]DEBUG 28702[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,357]DEBUG 28702[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,357]DEBUG 28702[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,357]DEBUG 28702[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,357]DEBUG 28702[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,357]DEBUG 28702[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,357]DEBUG 28702[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,358]DEBUG 28703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,358]DEBUG 28703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,358]DEBUG 28703[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,358]DEBUG 28703[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 01:08:07,359]DEBUG 28704[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,359]DEBUG 28704[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@592b94df, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,361]DEBUG 28706[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:07,361]DEBUG 28706[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@63a818f]
[2015-12-30 01:08:07,361]DEBUG 28706[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:07,362]DEBUG 28707[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:07,362]DEBUG 28707[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,362]DEBUG 28707[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@63a818f] after transaction
[2015-12-30 01:08:07,362]DEBUG 28707[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:07,362]DEBUG 28707[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:07,362]DEBUG 28707[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,363] INFO 28708[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@592b94df, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,363]DEBUG 28708[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@592b94df, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:07,364]DEBUG 28709[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,364]DEBUG 28709[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,364]DEBUG 28709[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7b3287a, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:07,364]DEBUG 28709[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:07,364]DEBUG 28709[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:07,364]DEBUG 28709[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:07,364]DEBUG 28709[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:07,364]DEBUG 28709[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:07,365]DEBUG 28710[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:07,365]DEBUG 28710[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:07,365]DEBUG 28710[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:07,365]DEBUG 28710[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:07,365]DEBUG 28710[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:07,365]DEBUG 28710[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:07,365]DEBUG 28710[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:07,365]DEBUG 28710[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:07,365]DEBUG 28710[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:07,365]DEBUG 28710[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:07,366]DEBUG 28711[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:07,366]DEBUG 28711[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:07,366]DEBUG 28711[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:07,366]DEBUG 28711[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:07,366]DEBUG 28711[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:07,366]DEBUG 28711[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:07,366]DEBUG 28711[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:07,366]DEBUG 28711[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7b3287a]
[2015-12-30 01:08:07,367]DEBUG 28712[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,367]DEBUG 28712[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7b3287a, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,367]DEBUG 28712[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:07,367]DEBUG 28712[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,368]DEBUG 28713[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304873
[2015-12-30 01:08:07,368]DEBUG 28713[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6c473bcd] for Hibernate transaction
[2015-12-30 01:08:07,368]DEBUG 28713[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6c473bcd]
[2015-12-30 01:08:07,368]DEBUG 28713[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:07,368]DEBUG 28713[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:07,368]DEBUG 28713[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:07,368]DEBUG 28713[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7b3287a, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,368] INFO 28713[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:07,368]DEBUG 28713[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,369]DEBUG 28714[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,370]DEBUG 28715[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[33]]
[2015-12-30 01:08:07,370]DEBUG 28715[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,370]DEBUG 28715[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 33, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,370]DEBUG 28715[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,370]DEBUG 28715[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,372]DEBUG 28717[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[34]]
[2015-12-30 01:08:07,372]DEBUG 28717[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,372]DEBUG 28717[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 34, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,372]DEBUG 28717[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,372]DEBUG 28717[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,373]DEBUG 28718[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[35]]
[2015-12-30 01:08:07,373]DEBUG 28718[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,374]DEBUG 28719[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 35, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,374]DEBUG 28719[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,374]DEBUG 28719[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,375]DEBUG 28720[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[36]]
[2015-12-30 01:08:07,376]DEBUG 28721[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,376]DEBUG 28721[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 36, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,376]DEBUG 28721[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,376]DEBUG 28721[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,376]DEBUG 28721[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,377]DEBUG 28722[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,377]DEBUG 28722[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,377]DEBUG 28722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,377]DEBUG 28722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,377]DEBUG 28722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,377]DEBUG 28722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,377]DEBUG 28722[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 01:08:07,377]DEBUG 28722[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,378]DEBUG 28723[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,379]DEBUG 28724[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,379]DEBUG 28724[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,380]DEBUG 28725[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,380]DEBUG 28725[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,380]DEBUG 28725[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,380]DEBUG 28725[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,380]DEBUG 28725[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 01:08:07,382]DEBUG 28727[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,383]DEBUG 28728[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,383]DEBUG 28728[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_ where this_.TypeName=? and this_.ID<=?
[2015-12-30 01:08:07,384]DEBUG 28729[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:07,384]DEBUG 28729[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#33]
[2015-12-30 01:08:07,385]DEBUG 28730[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:07,385]DEBUG 28730[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,385]DEBUG 28730[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:07,385]DEBUG 28730[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,385]DEBUG 28730[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,385]DEBUG 28730[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,386]DEBUG 28731[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,386]DEBUG 28731[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,386]DEBUG 28731[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,386]DEBUG 28731[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,386]DEBUG 28731[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,386]DEBUG 28731[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,386]DEBUG 28731[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,386]DEBUG 28731[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 01:08:07,388]DEBUG 28733[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,388]DEBUG 28733[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,388]DEBUG 28733[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,388]DEBUG 28733[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,388]DEBUG 28733[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,388]DEBUG 28733[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,388]DEBUG 28733[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,389]DEBUG 28734[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,389]DEBUG 28734[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,389]DEBUG 28734[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,389]DEBUG 28734[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,389]DEBUG 28734[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 01:08:07,390]DEBUG 28735[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,391]DEBUG 28736[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,391]DEBUG 28736[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,391]DEBUG 28736[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,391]DEBUG 28736[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,391]DEBUG 28736[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,391]DEBUG 28736[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,391]DEBUG 28736[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,391]DEBUG 28736[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,392]DEBUG 28737[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,392]DEBUG 28737[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,392]DEBUG 28737[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:07,393]DEBUG 28738[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,393]DEBUG 28738[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,393]DEBUG 28738[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,395]DEBUG 28740[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,395]DEBUG 28740[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,395]DEBUG 28740[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,396]DEBUG 28741[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,396]DEBUG 28741[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,396]DEBUG 28741[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,396]DEBUG 28741[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,396]DEBUG 28741[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,396]DEBUG 28741[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 01:08:07,397]DEBUG 28742[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,398]DEBUG 28743[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,398]DEBUG 28743[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,398]DEBUG 28743[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,398]DEBUG 28743[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,398]DEBUG 28743[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,398]DEBUG 28743[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,398]DEBUG 28743[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,398]DEBUG 28743[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,399]DEBUG 28744[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,399]DEBUG 28744[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,399]DEBUG 28744[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 01:08:07,400]DEBUG 28745[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,400]DEBUG 28745[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,400]DEBUG 28745[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,400]DEBUG 28745[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,400]DEBUG 28745[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,401]DEBUG 28746[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,401]DEBUG 28746[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,401]DEBUG 28746[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,401]DEBUG 28746[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,402]DEBUG 28747[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,402]DEBUG 28747[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,403]DEBUG 28748[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 01:08:07,404]DEBUG 28749[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,404]DEBUG 28749[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,404]DEBUG 28749[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,404]DEBUG 28749[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,405]DEBUG 28750[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,405]DEBUG 28750[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,405]DEBUG 28750[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,405]DEBUG 28750[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,405]DEBUG 28750[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,405]DEBUG 28750[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,405]DEBUG 28750[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,405]DEBUG 28750[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 01:08:07,407]DEBUG 28752[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,407]DEBUG 28752[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,407]DEBUG 28752[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,407]DEBUG 28752[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,407]DEBUG 28752[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,407]DEBUG 28752[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,407]DEBUG 28752[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,408]DEBUG 28753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,408]DEBUG 28753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,408]DEBUG 28753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,408]DEBUG 28753[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,408]DEBUG 28753[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 01:08:07,409]DEBUG 28754[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,409]DEBUG 28754[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,409]DEBUG 28754[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,410]DEBUG 28755[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,410]DEBUG 28755[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,410]DEBUG 28755[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,410]DEBUG 28755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,410]DEBUG 28755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,410]DEBUG 28755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,410]DEBUG 28755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,410]DEBUG 28755[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,410]DEBUG 28755[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 01:08:07,411]DEBUG 28756[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,412]DEBUG 28757[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7b3287a, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,412]DEBUG 28757[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:07,412]DEBUG 28757[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6c473bcd]
[2015-12-30 01:08:07,412]DEBUG 28757[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:07,413]DEBUG 28758[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:07,413]DEBUG 28758[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,413]DEBUG 28758[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6c473bcd] after transaction
[2015-12-30 01:08:07,413]DEBUG 28758[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:07,413]DEBUG 28758[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:07,413]DEBUG 28758[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,414] INFO 28759[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7b3287a, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,414]DEBUG 28759[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7b3287a, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:07,414]DEBUG 28759[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,415]DEBUG 28760[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,415]DEBUG 28760[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@d201f1a, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:07,415]DEBUG 28760[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:07,415]DEBUG 28760[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:07,415]DEBUG 28760[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:07,415]DEBUG 28760[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:07,415]DEBUG 28760[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:07,416]DEBUG 28761[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:07,416]DEBUG 28761[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:07,416]DEBUG 28761[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:07,416]DEBUG 28761[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:07,416]DEBUG 28761[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:07,416]DEBUG 28761[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:07,416]DEBUG 28761[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:07,416]DEBUG 28761[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:07,416]DEBUG 28761[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:07,416]DEBUG 28761[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:07,417]DEBUG 28762[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:07,417]DEBUG 28762[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:07,417]DEBUG 28762[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:07,417]DEBUG 28762[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:07,417]DEBUG 28762[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:07,417]DEBUG 28762[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:07,417]DEBUG 28762[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:07,417]DEBUG 28762[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@d201f1a]
[2015-12-30 01:08:07,418]DEBUG 28763[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,418]DEBUG 28763[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@d201f1a, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,418]DEBUG 28763[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:07,418]DEBUG 28763[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,418]DEBUG 28763[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304874
[2015-12-30 01:08:07,419]DEBUG 28764[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@60cd886a] for Hibernate transaction
[2015-12-30 01:08:07,419]DEBUG 28764[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@60cd886a]
[2015-12-30 01:08:07,419]DEBUG 28764[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:07,420]DEBUG 28765[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:07,420]DEBUG 28765[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:07,420]DEBUG 28765[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@d201f1a, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,421] INFO 28766[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:07,421]DEBUG 28766[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,421]DEBUG 28766[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,422]DEBUG 28767[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[37]]
[2015-12-30 01:08:07,422]DEBUG 28767[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,422]DEBUG 28767[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 37, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,423]DEBUG 28768[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,423]DEBUG 28768[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,424]DEBUG 28769[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[38]]
[2015-12-30 01:08:07,424]DEBUG 28769[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,424]DEBUG 28769[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 38, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,424]DEBUG 28769[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,424]DEBUG 28769[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,426]DEBUG 28771[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[39]]
[2015-12-30 01:08:07,426]DEBUG 28771[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,426]DEBUG 28771[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 39, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,426]DEBUG 28771[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,426]DEBUG 28771[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,427]DEBUG 28772[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[40]]
[2015-12-30 01:08:07,427]DEBUG 28772[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,428]DEBUG 28773[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 40, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,428]DEBUG 28773[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,428]DEBUG 28773[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,428]DEBUG 28773[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,428]DEBUG 28773[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,429]DEBUG 28774[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,429]DEBUG 28774[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,429]DEBUG 28774[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,429]DEBUG 28774[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,429]DEBUG 28774[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,429]DEBUG 28774[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 01:08:07,429]DEBUG 28774[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,429]DEBUG 28774[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,430]DEBUG 28775[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,430]DEBUG 28775[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,430]DEBUG 28775[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,430]DEBUG 28775[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,430]DEBUG 28775[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,430]DEBUG 28775[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,431]DEBUG 28776[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 01:08:07,433]DEBUG 28778[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,433]DEBUG 28778[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,433]DEBUG 28778[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_ where this_.TypeName=? and this_.ID<=?
[2015-12-30 01:08:07,435]DEBUG 28780[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:07,435]DEBUG 28780[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#37]
[2015-12-30 01:08:07,435]DEBUG 28780[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:07,435]DEBUG 28780[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,435]DEBUG 28780[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:07,435]DEBUG 28780[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,435]DEBUG 28780[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,436]DEBUG 28781[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,436]DEBUG 28781[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,436]DEBUG 28781[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,436]DEBUG 28781[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,436]DEBUG 28781[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,436]DEBUG 28781[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,436]DEBUG 28781[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,436]DEBUG 28781[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,437]DEBUG 28782[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 01:08:07,438]DEBUG 28783[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,438]DEBUG 28783[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,438]DEBUG 28783[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,438]DEBUG 28783[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,438]DEBUG 28783[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,438]DEBUG 28783[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,438]DEBUG 28783[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,439]DEBUG 28784[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,439]DEBUG 28784[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,439]DEBUG 28784[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,439]DEBUG 28784[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,439]DEBUG 28784[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 01:08:07,440]DEBUG 28785[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,440]DEBUG 28785[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,441]DEBUG 28786[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,441]DEBUG 28786[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,443]DEBUG 28788[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,443]DEBUG 28788[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,443]DEBUG 28788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,443]DEBUG 28788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,443]DEBUG 28788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,443]DEBUG 28788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,444]DEBUG 28789[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,444]DEBUG 28789[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:07,445]DEBUG 28790[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,445]DEBUG 28790[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,445]DEBUG 28790[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,446]DEBUG 28791[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,446]DEBUG 28791[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,446]DEBUG 28791[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,446]DEBUG 28791[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,446]DEBUG 28791[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,446]DEBUG 28791[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,447]DEBUG 28792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,447]DEBUG 28792[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,447]DEBUG 28792[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 01:08:07,448]DEBUG 28793[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,448]DEBUG 28793[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,448]DEBUG 28793[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,449]DEBUG 28794[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,449]DEBUG 28794[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,449]DEBUG 28794[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,449]DEBUG 28794[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,449]DEBUG 28794[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,449]DEBUG 28794[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,450]DEBUG 28795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,450]DEBUG 28795[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,450]DEBUG 28795[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 01:08:07,451]DEBUG 28796[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,451]DEBUG 28796[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,452]DEBUG 28797[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,452]DEBUG 28797[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,452]DEBUG 28797[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,452]DEBUG 28797[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,452]DEBUG 28797[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,453]DEBUG 28798[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,453]DEBUG 28798[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,453]DEBUG 28798[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,453]DEBUG 28798[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,453]DEBUG 28798[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 01:08:07,455]DEBUG 28800[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,455]DEBUG 28800[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,455]DEBUG 28800[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,455]DEBUG 28800[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,456]DEBUG 28801[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,456]DEBUG 28801[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,456]DEBUG 28801[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,456]DEBUG 28801[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,456]DEBUG 28801[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,456]DEBUG 28801[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,456]DEBUG 28801[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,457]DEBUG 28802[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 01:08:07,458]DEBUG 28803[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,458]DEBUG 28803[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,458]DEBUG 28803[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,459]DEBUG 28804[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,459]DEBUG 28804[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,459]DEBUG 28804[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,459]DEBUG 28804[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,459]DEBUG 28804[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,459]DEBUG 28804[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,460]DEBUG 28805[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,460]DEBUG 28805[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,460]DEBUG 28805[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 01:08:07,461]DEBUG 28806[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,461]DEBUG 28806[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,462]DEBUG 28807[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,462]DEBUG 28807[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,462]DEBUG 28807[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,462]DEBUG 28807[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,462]DEBUG 28807[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,462]DEBUG 28807[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,463]DEBUG 28808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,463]DEBUG 28808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=38, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,463]DEBUG 28808[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,463]DEBUG 28808[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 01:08:07,464]DEBUG 28809[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,465]DEBUG 28810[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@d201f1a, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,465]DEBUG 28810[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:07,465]DEBUG 28810[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@60cd886a]
[2015-12-30 01:08:07,465]DEBUG 28810[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:07,468]DEBUG 28813[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:07,468]DEBUG 28813[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,468]DEBUG 28813[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@60cd886a] after transaction
[2015-12-30 01:08:07,468]DEBUG 28813[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:07,469]DEBUG 28814[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:07,469]DEBUG 28814[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,469] INFO 28814[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@d201f1a, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,470]DEBUG 28815[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@d201f1a, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:07,470]DEBUG 28815[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,470]DEBUG 28815[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,471]DEBUG 28816[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1222a7e1, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:07,471]DEBUG 28816[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:07,471]DEBUG 28816[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:07,471]DEBUG 28816[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:07,471]DEBUG 28816[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:07,471]DEBUG 28816[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:07,472]DEBUG 28817[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:07,472]DEBUG 28817[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:07,472]DEBUG 28817[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:07,472]DEBUG 28817[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:07,472]DEBUG 28817[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:07,472]DEBUG 28817[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:07,472]DEBUG 28817[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:07,473]DEBUG 28818[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:07,473]DEBUG 28818[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:07,473]DEBUG 28818[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:07,473]DEBUG 28818[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:07,473]DEBUG 28818[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:07,473]DEBUG 28818[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:07,474]DEBUG 28819[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:07,474]DEBUG 28819[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:07,474]DEBUG 28819[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:07,474]DEBUG 28819[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:07,474]DEBUG 28819[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1222a7e1]
[2015-12-30 01:08:07,475]DEBUG 28820[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,475]DEBUG 28820[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1222a7e1, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,475]DEBUG 28820[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:07,476]DEBUG 28821[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,476]DEBUG 28821[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304874
[2015-12-30 01:08:07,476]DEBUG 28821[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1cb187e0] for Hibernate transaction
[2015-12-30 01:08:07,476]DEBUG 28821[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1cb187e0]
[2015-12-30 01:08:07,476]DEBUG 28821[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:07,477]DEBUG 28822[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:07,477]DEBUG 28822[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:07,477]DEBUG 28822[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1222a7e1, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,477] INFO 28822[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:07,477]DEBUG 28822[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,477]DEBUG 28822[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,479]DEBUG 28824[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[41]]
[2015-12-30 01:08:07,479]DEBUG 28824[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,479]DEBUG 28824[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 41, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,480]DEBUG 28825[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,480]DEBUG 28825[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,481]DEBUG 28826[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[42]]
[2015-12-30 01:08:07,481]DEBUG 28826[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,482]DEBUG 28827[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 42, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,482]DEBUG 28827[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,482]DEBUG 28827[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,483]DEBUG 28828[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[43]]
[2015-12-30 01:08:07,484]DEBUG 28829[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,484]DEBUG 28829[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 43, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,484]DEBUG 28829[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,484]DEBUG 28829[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,485]DEBUG 28830[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[44]]
[2015-12-30 01:08:07,486]DEBUG 28831[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,486]DEBUG 28831[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 44, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,486]DEBUG 28831[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,486]DEBUG 28831[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,486]DEBUG 28831[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,486]DEBUG 28831[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,487]DEBUG 28832[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,487]DEBUG 28832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,487]DEBUG 28832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,487]DEBUG 28832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,487]DEBUG 28832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,487]DEBUG 28832[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 01:08:07,487]DEBUG 28832[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,487]DEBUG 28832[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,488]DEBUG 28833[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,488]DEBUG 28833[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,488]DEBUG 28833[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,490]DEBUG 28835[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,490]DEBUG 28835[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,490]DEBUG 28835[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,490]DEBUG 28835[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 01:08:07,492]DEBUG 28837[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,493]DEBUG 28838[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,493]DEBUG 28838[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 01:08:07,494]DEBUG 28839[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:07,494]DEBUG 28839[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#41]
[2015-12-30 01:08:07,495]DEBUG 28840[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:07,495]DEBUG 28840[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,495]DEBUG 28840[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:07,495]DEBUG 28840[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,495]DEBUG 28840[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,495]DEBUG 28840[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,496]DEBUG 28841[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,496]DEBUG 28841[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,496]DEBUG 28841[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,496]DEBUG 28841[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,496]DEBUG 28841[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,496]DEBUG 28841[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,496]DEBUG 28841[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,496]DEBUG 28841[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 01:08:07,497]DEBUG 28842[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,498]DEBUG 28843[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,498]DEBUG 28843[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,498]DEBUG 28843[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,498]DEBUG 28843[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,498]DEBUG 28843[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,498]DEBUG 28843[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,498]DEBUG 28843[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,498]DEBUG 28843[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,499]DEBUG 28844[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,499]DEBUG 28844[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,499]DEBUG 28844[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 01:08:07,500]DEBUG 28845[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,500]DEBUG 28845[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,500]DEBUG 28845[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,500]DEBUG 28845[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,500]DEBUG 28845[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,501]DEBUG 28846[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,501]DEBUG 28846[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,501]DEBUG 28846[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,501]DEBUG 28846[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,501]DEBUG 28846[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,501]DEBUG 28846[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,501]DEBUG 28846[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:07,502]DEBUG 28847[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,502]DEBUG 28847[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,503]DEBUG 28848[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,503]DEBUG 28848[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,503]DEBUG 28848[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,503]DEBUG 28848[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,503]DEBUG 28848[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,503]DEBUG 28848[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,503]DEBUG 28848[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,503]DEBUG 28848[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,504]DEBUG 28849[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,504]DEBUG 28849[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 01:08:07,505]DEBUG 28850[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,505]DEBUG 28850[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,505]DEBUG 28850[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,505]DEBUG 28850[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,505]DEBUG 28850[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,505]DEBUG 28850[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,505]DEBUG 28850[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,506]DEBUG 28851[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,506]DEBUG 28851[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,506]DEBUG 28851[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,506]DEBUG 28851[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,506]DEBUG 28851[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 01:08:07,507]DEBUG 28852[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,507]DEBUG 28852[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,507]DEBUG 28852[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,508]DEBUG 28853[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,508]DEBUG 28853[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,508]DEBUG 28853[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,508]DEBUG 28853[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,508]DEBUG 28853[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,508]DEBUG 28853[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,508]DEBUG 28853[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,508]DEBUG 28853[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,510]DEBUG 28855[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 01:08:07,511]DEBUG 28856[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,511]DEBUG 28856[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,511]DEBUG 28856[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,512]DEBUG 28857[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,512]DEBUG 28857[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,512]DEBUG 28857[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,512]DEBUG 28857[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,512]DEBUG 28857[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,512]DEBUG 28857[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,512]DEBUG 28857[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,513]DEBUG 28858[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,513]DEBUG 28858[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 01:08:07,514]DEBUG 28859[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,514]DEBUG 28859[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,514]DEBUG 28859[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,514]DEBUG 28859[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,515]DEBUG 28860[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,515]DEBUG 28860[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,515]DEBUG 28860[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,515]DEBUG 28860[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,515]DEBUG 28860[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,515]DEBUG 28860[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,515]DEBUG 28860[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,515]DEBUG 28860[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 01:08:07,516]DEBUG 28861[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,517]DEBUG 28862[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,521]DEBUG 28866[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,521]DEBUG 28866[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,523]DEBUG 28868[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,524]DEBUG 28869[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,524]DEBUG 28869[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=41, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,524]DEBUG 28869[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=42, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,524]DEBUG 28869[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,524]DEBUG 28869[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,524]DEBUG 28869[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,524]DEBUG 28869[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 01:08:07,528]DEBUG 28873[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,528]DEBUG 28873[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1222a7e1, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,528]DEBUG 28873[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:07,528]DEBUG 28873[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1cb187e0]
[2015-12-30 01:08:07,528]DEBUG 28873[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:07,529]DEBUG 28874[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:07,529]DEBUG 28874[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,529]DEBUG 28874[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1cb187e0] after transaction
[2015-12-30 01:08:07,529]DEBUG 28874[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:07,530]DEBUG 28875[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:07,530]DEBUG 28875[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,530] INFO 28875[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1222a7e1, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,530]DEBUG 28875[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1222a7e1, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:07,531]DEBUG 28876[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,531]DEBUG 28876[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,531]DEBUG 28876[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@def3dc7, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:07,531]DEBUG 28876[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:07,531]DEBUG 28876[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:07,531]DEBUG 28876[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:07,531]DEBUG 28876[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:07,532]DEBUG 28877[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:07,532]DEBUG 28877[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:07,532]DEBUG 28877[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:07,532]DEBUG 28877[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:07,532]DEBUG 28877[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:07,532]DEBUG 28877[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:07,532]DEBUG 28877[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:07,532]DEBUG 28877[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:07,532]DEBUG 28877[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:07,532]DEBUG 28877[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:07,533]DEBUG 28878[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:07,533]DEBUG 28878[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:07,533]DEBUG 28878[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:07,533]DEBUG 28878[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:07,533]DEBUG 28878[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:07,533]DEBUG 28878[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:07,535]DEBUG 28880[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:07,536]DEBUG 28881[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:07,536]DEBUG 28881[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@def3dc7]
[2015-12-30 01:08:07,536]DEBUG 28881[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetStandartTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,536]DEBUG 28881[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@def3dc7, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,536]DEBUG 28881[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:07,539]DEBUG 28884[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetStandartTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,539]DEBUG 28884[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304875
[2015-12-30 01:08:07,539]DEBUG 28884[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@192ffd75] for Hibernate transaction
[2015-12-30 01:08:07,539]DEBUG 28884[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@192ffd75]
[2015-12-30 01:08:07,539]DEBUG 28884[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:07,540]DEBUG 28885[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:07,540]DEBUG 28885[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:07,541]DEBUG 28886[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@def3dc7, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,541] INFO 28886[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:07,541]DEBUG 28886[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,541]DEBUG 28886[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,543]DEBUG 28888[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[45]]
[2015-12-30 01:08:07,543]DEBUG 28888[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,543]DEBUG 28888[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 45, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,543]DEBUG 28888[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,543]DEBUG 28888[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,544]DEBUG 28889[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[46]]
[2015-12-30 01:08:07,545]DEBUG 28890[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,545]DEBUG 28890[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 46, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,545]DEBUG 28890[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,545]DEBUG 28890[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,546]DEBUG 28891[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[47]]
[2015-12-30 01:08:07,546]DEBUG 28891[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,546]DEBUG 28891[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 47, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,546]DEBUG 28891[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,547]DEBUG 28892[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,548]DEBUG 28893[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[48]]
[2015-12-30 01:08:07,548]DEBUG 28893[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,548]DEBUG 28893[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 48, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,548]DEBUG 28893[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,548]DEBUG 28893[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,548]DEBUG 28893[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,548]DEBUG 28893[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,549]DEBUG 28894[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,549]DEBUG 28894[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,549]DEBUG 28894[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,549]DEBUG 28894[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,549]DEBUG 28894[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,549]DEBUG 28894[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 01:08:07,549]DEBUG 28894[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,549]DEBUG 28894[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,550]DEBUG 28895[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,550]DEBUG 28895[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,550]DEBUG 28895[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,550]DEBUG 28895[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,550]DEBUG 28895[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,550]DEBUG 28895[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,550]DEBUG 28895[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 01:08:07,552]DEBUG 28897[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,553]DEBUG 28898[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,553]DEBUG 28898[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 01:08:07,554]DEBUG 28899[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:07,554]DEBUG 28899[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#45]
[2015-12-30 01:08:07,554]DEBUG 28899[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:07,555]DEBUG 28900[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,555]DEBUG 28900[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:07,555]DEBUG 28900[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,555]DEBUG 28900[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,555]DEBUG 28900[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,555]DEBUG 28900[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,555]DEBUG 28900[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,555]DEBUG 28900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,556]DEBUG 28901[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,556]DEBUG 28901[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,556]DEBUG 28901[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,556]DEBUG 28901[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,556]DEBUG 28901[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 01:08:07,557]DEBUG 28902[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,557]DEBUG 28902[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,557]DEBUG 28902[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,557]DEBUG 28902[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,558]DEBUG 28903[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,558]DEBUG 28903[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,558]DEBUG 28903[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,561]DEBUG 28906[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,561]DEBUG 28906[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,561]DEBUG 28906[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,561]DEBUG 28906[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,561]DEBUG 28906[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 01:08:07,562]DEBUG 28907[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,562]DEBUG 28907[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,563]DEBUG 28908[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,563]DEBUG 28908[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,563]DEBUG 28908[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,563]DEBUG 28908[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,564]DEBUG 28909[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,564]DEBUG 28909[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,565]DEBUG 28910[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,565]DEBUG 28910[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,565]DEBUG 28910[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,565]DEBUG 28910[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:07,566]DEBUG 28911[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,566]DEBUG 28911[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,566]DEBUG 28911[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,566]DEBUG 28911[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,567]DEBUG 28912[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,567]DEBUG 28912[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,567]DEBUG 28912[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,567]DEBUG 28912[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,567]DEBUG 28912[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,567]DEBUG 28912[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,567]DEBUG 28912[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,567]DEBUG 28912[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 01:08:07,568]DEBUG 28913[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,569]DEBUG 28914[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,569]DEBUG 28914[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,569]DEBUG 28914[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,569]DEBUG 28914[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,569]DEBUG 28914[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,569]DEBUG 28914[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,569]DEBUG 28914[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,569]DEBUG 28914[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,569]DEBUG 28914[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,570]DEBUG 28915[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,570]DEBUG 28915[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 01:08:07,571]DEBUG 28916[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,571]DEBUG 28916[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,571]DEBUG 28916[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,571]DEBUG 28916[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,571]DEBUG 28916[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,571]DEBUG 28916[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,571]DEBUG 28916[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,572]DEBUG 28917[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,572]DEBUG 28917[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,572]DEBUG 28917[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,572]DEBUG 28917[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,572]DEBUG 28917[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 01:08:07,573]DEBUG 28918[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,573]DEBUG 28918[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,573]DEBUG 28918[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,574]DEBUG 28919[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,574]DEBUG 28919[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,574]DEBUG 28919[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,574]DEBUG 28919[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,574]DEBUG 28919[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,574]DEBUG 28919[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,574]DEBUG 28919[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,574]DEBUG 28919[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,574]DEBUG 28919[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 01:08:07,576]DEBUG 28921[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,576]DEBUG 28921[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,576]DEBUG 28921[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,576]DEBUG 28921[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,576]DEBUG 28921[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,576]DEBUG 28921[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,577]DEBUG 28922[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,577]DEBUG 28922[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,577]DEBUG 28922[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,577]DEBUG 28922[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,577]DEBUG 28922[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,577]DEBUG 28922[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 01:08:07,578]DEBUG 28923[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,578]DEBUG 28923[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,578]DEBUG 28923[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,579]DEBUG 28924[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,579]DEBUG 28924[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,579]DEBUG 28924[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,579]DEBUG 28924[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=47, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,579]DEBUG 28924[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=48, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,579]DEBUG 28924[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=45, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,579]DEBUG 28924[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=46, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,579]DEBUG 28924[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,579]DEBUG 28924[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 01:08:07,580]DEBUG 28925[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,581]DEBUG 28926[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@def3dc7, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,581]DEBUG 28926[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:07,581]DEBUG 28926[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@192ffd75]
[2015-12-30 01:08:07,581]DEBUG 28926[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:07,582]DEBUG 28927[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:07,582]DEBUG 28927[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,582]DEBUG 28927[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@192ffd75] after transaction
[2015-12-30 01:08:07,585]DEBUG 28930[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:07,585]DEBUG 28930[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:07,585]DEBUG 28930[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,585] INFO 28930[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@def3dc7, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,587]DEBUG 28932[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@def3dc7, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:07,587]DEBUG 28932[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,587]DEBUG 28932[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,588]DEBUG 28933[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4d644765, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:07,588]DEBUG 28933[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:07,588]DEBUG 28933[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:07,588]DEBUG 28933[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:07,589]DEBUG 28934[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:07,589]DEBUG 28934[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:07,589]DEBUG 28934[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:07,589]DEBUG 28934[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:07,590]DEBUG 28935[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:07,590]DEBUG 28935[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:07,590]DEBUG 28935[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:07,590]DEBUG 28935[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:07,590]DEBUG 28935[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:07,591]DEBUG 28936[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:07,591]DEBUG 28936[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:07,591]DEBUG 28936[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:07,591]DEBUG 28936[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:07,591]DEBUG 28936[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:07,592]DEBUG 28937[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:07,592]DEBUG 28937[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:07,592]DEBUG 28937[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:07,592]DEBUG 28937[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:07,592]DEBUG 28937[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:07,593]DEBUG 28938[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4d644765]
[2015-12-30 01:08:07,594]DEBUG 28939[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSilverTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,594]DEBUG 28939[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4d644765, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,594]DEBUG 28939[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:07,595]DEBUG 28940[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetSilverTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,596]DEBUG 28941[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304875
[2015-12-30 01:08:07,596]DEBUG 28941[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@21aaca22] for Hibernate transaction
[2015-12-30 01:08:07,596]DEBUG 28941[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@21aaca22]
[2015-12-30 01:08:07,596]DEBUG 28941[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:07,596]DEBUG 28941[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:07,597]DEBUG 28942[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:07,597]DEBUG 28942[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4d644765, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,597] INFO 28942[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:07,597]DEBUG 28942[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,598]DEBUG 28943[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,599]DEBUG 28944[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[49]]
[2015-12-30 01:08:07,599]DEBUG 28944[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,600]DEBUG 28945[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 49, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,600]DEBUG 28945[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,600]DEBUG 28945[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,602]DEBUG 28947[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[50]]
[2015-12-30 01:08:07,602]DEBUG 28947[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,602]DEBUG 28947[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 50, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,602]DEBUG 28947[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,603]DEBUG 28948[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,604]DEBUG 28949[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[51]]
[2015-12-30 01:08:07,604]DEBUG 28949[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,604]DEBUG 28949[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 51, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,605]DEBUG 28950[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,605]DEBUG 28950[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,606]DEBUG 28951[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[52]]
[2015-12-30 01:08:07,606]DEBUG 28951[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,606]DEBUG 28951[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 52, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,606]DEBUG 28951[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Silver
[2015-12-30 01:08:07,609]DEBUG 28954[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Silver'

[2015-12-30 01:08:07,609]DEBUG 28954[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:07,609]DEBUG 28954[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2015-12-30 01:08:07,609]DEBUG 28954[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2015-12-30 01:08:07,609]DEBUG 28954[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2015-12-30 01:08:07,610]DEBUG 28955[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@1d1fcfbb
[2015-12-30 01:08:07,610]DEBUG 28955[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2015-12-30 01:08:07,610]DEBUG 28955[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2015-12-30 01:08:07,610]DEBUG 28955[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2015-12-30 01:08:07,610]DEBUG 28955[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2015-12-30 01:08:07,610]DEBUG 28955[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2015-12-30 01:08:07,611]DEBUG 28956[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2015-12-30 01:08:07,612]DEBUG 28957[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Silver, expectedType=org.hibernate.type.StringType@1d1fcfbb}

[2015-12-30 01:08:07,612]DEBUG 28957[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:07,613]DEBUG 28958[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Silver
[2015-12-30 01:08:07,613]DEBUG 28958[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 01:08:07,613]DEBUG 28958[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:07,613]DEBUG 28958[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,613]DEBUG 28958[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,613]DEBUG 28958[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,613]DEBUG 28958[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,614]DEBUG 28959[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,614]DEBUG 28959[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,614]DEBUG 28959[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,614]DEBUG 28959[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,614]DEBUG 28959[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,614]DEBUG 28959[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 01:08:07,614]DEBUG 28959[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,614]DEBUG 28959[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,615]DEBUG 28960[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,615]DEBUG 28960[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,615]DEBUG 28960[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,615]DEBUG 28960[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,615]DEBUG 28960[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,615]DEBUG 28960[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,615]DEBUG 28960[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 01:08:07,618]DEBUG 28963[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,618]DEBUG 28963[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,618]DEBUG 28963[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 01:08:07,619]DEBUG 28964[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:07,619]DEBUG 28964[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#50]
[2015-12-30 01:08:07,620]DEBUG 28965[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:07,620]DEBUG 28965[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,620]DEBUG 28965[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:07,620]DEBUG 28965[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,620]DEBUG 28965[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,620]DEBUG 28965[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,620]DEBUG 28965[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,620]DEBUG 28965[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,620]DEBUG 28965[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,621]DEBUG 28966[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,621]DEBUG 28966[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,621]DEBUG 28966[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,621]DEBUG 28966[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,621]DEBUG 28966[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 01:08:07,622]DEBUG 28967[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,622]DEBUG 28967[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,622]DEBUG 28967[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,623]DEBUG 28968[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,623]DEBUG 28968[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,623]DEBUG 28968[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,623]DEBUG 28968[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,623]DEBUG 28968[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,623]DEBUG 28968[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,623]DEBUG 28968[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,623]DEBUG 28968[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,623]DEBUG 28968[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 01:08:07,624]DEBUG 28969[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,625]DEBUG 28970[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,625]DEBUG 28970[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,625]DEBUG 28970[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,625]DEBUG 28970[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,625]DEBUG 28970[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,625]DEBUG 28970[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,625]DEBUG 28970[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,625]DEBUG 28970[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,626]DEBUG 28971[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,626]DEBUG 28971[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,626]DEBUG 28971[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:07,627]DEBUG 28972[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,627]DEBUG 28972[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,627]DEBUG 28972[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,627]DEBUG 28972[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,627]DEBUG 28972[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,627]DEBUG 28972[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,628]DEBUG 28973[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,628]DEBUG 28973[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,628]DEBUG 28973[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,628]DEBUG 28973[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,628]DEBUG 28973[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,629]DEBUG 28974[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 01:08:07,630]DEBUG 28975[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,631]DEBUG 28976[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,631]DEBUG 28976[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,631]DEBUG 28976[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,631]DEBUG 28976[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,631]DEBUG 28976[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,631]DEBUG 28976[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,631]DEBUG 28976[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,631]DEBUG 28976[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,631]DEBUG 28976[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,632]DEBUG 28977[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,632]DEBUG 28977[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 01:08:07,633]DEBUG 28978[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,633]DEBUG 28978[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,633]DEBUG 28978[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,633]DEBUG 28978[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,633]DEBUG 28978[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,633]DEBUG 28978[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,633]DEBUG 28978[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,634]DEBUG 28979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,634]DEBUG 28979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,634]DEBUG 28979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,634]DEBUG 28979[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,634]DEBUG 28979[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 01:08:07,635]DEBUG 28980[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,635]DEBUG 28980[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,635]DEBUG 28980[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,635]DEBUG 28980[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,636]DEBUG 28981[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,636]DEBUG 28981[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,636]DEBUG 28981[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,636]DEBUG 28981[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,636]DEBUG 28981[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,636]DEBUG 28981[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,636]DEBUG 28981[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,636]DEBUG 28981[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 01:08:07,638]DEBUG 28983[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,638]DEBUG 28983[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,638]DEBUG 28983[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,638]DEBUG 28983[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,638]DEBUG 28983[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,638]DEBUG 28983[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,638]DEBUG 28983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,638]DEBUG 28983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,638]DEBUG 28983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,639]DEBUG 28984[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,639]DEBUG 28984[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,639]DEBUG 28984[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 01:08:07,640]DEBUG 28985[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,640]DEBUG 28985[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,640]DEBUG 28985[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,640]DEBUG 28985[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,640]DEBUG 28985[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,640]DEBUG 28985[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,641]DEBUG 28986[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=49, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,641]DEBUG 28986[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=50, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,641]DEBUG 28986[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=52, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,641]DEBUG 28986[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=51, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,641]DEBUG 28986[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,641]DEBUG 28986[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 01:08:07,642]DEBUG 28987[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,642]DEBUG 28987[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4d644765, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,643]DEBUG 28988[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:07,643]DEBUG 28988[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@21aaca22]
[2015-12-30 01:08:07,643]DEBUG 28988[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:07,644]DEBUG 28989[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:07,644]DEBUG 28989[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,644]DEBUG 28989[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@21aaca22] after transaction
[2015-12-30 01:08:07,644]DEBUG 28989[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:07,644]DEBUG 28989[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:07,645]DEBUG 28990[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,645] INFO 28990[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4d644765, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,645]DEBUG 28990[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4d644765, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:07,646]DEBUG 28991[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,646]DEBUG 28991[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,646]DEBUG 28991[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2a20d72e, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:07,646]DEBUG 28991[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:07,646]DEBUG 28991[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:07,646]DEBUG 28991[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:07,646]DEBUG 28991[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:07,647]DEBUG 28992[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:07,647]DEBUG 28992[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:07,647]DEBUG 28992[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:07,647]DEBUG 28992[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:07,647]DEBUG 28992[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:07,648]DEBUG 28993[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:07,648]DEBUG 28993[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:07,648]DEBUG 28993[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:07,648]DEBUG 28993[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:07,649]DEBUG 28994[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:07,649]DEBUG 28994[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:07,649]DEBUG 28994[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:07,649]DEBUG 28994[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:07,649]DEBUG 28994[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:07,649]DEBUG 28994[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:07,649]DEBUG 28994[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:07,649]DEBUG 28994[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:07,649]DEBUG 28994[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:07,650]DEBUG 28995[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2a20d72e]
[2015-12-30 01:08:07,650]DEBUG 28995[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetGoldTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,650]DEBUG 28995[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2a20d72e, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,650]DEBUG 28995[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:07,651]DEBUG 28996[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetGoldTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,651]DEBUG 28996[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304876
[2015-12-30 01:08:07,651]DEBUG 28996[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5ed53f6b] for Hibernate transaction
[2015-12-30 01:08:07,651]DEBUG 28996[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5ed53f6b]
[2015-12-30 01:08:07,651]DEBUG 28996[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:07,651]DEBUG 28996[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:07,651]DEBUG 28996[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:07,651]DEBUG 28996[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2a20d72e, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,652] INFO 28997[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:07,652]DEBUG 28997[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,652]DEBUG 28997[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,653]DEBUG 28998[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[53]]
[2015-12-30 01:08:07,653]DEBUG 28998[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,653]DEBUG 28998[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 53, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,654]DEBUG 28999[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,654]DEBUG 28999[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,655]DEBUG 29000[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[54]]
[2015-12-30 01:08:07,655]DEBUG 29000[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,655]DEBUG 29000[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 54, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,655]DEBUG 29000[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,655]DEBUG 29000[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,656]DEBUG 29001[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[55]]
[2015-12-30 01:08:07,657]DEBUG 29002[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,657]DEBUG 29002[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 55, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,657]DEBUG 29002[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,657]DEBUG 29002[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,658]DEBUG 29003[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[56]]
[2015-12-30 01:08:07,658]DEBUG 29003[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,658]DEBUG 29003[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 56, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,659]DEBUG 29004[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Gold
[2015-12-30 01:08:07,661]DEBUG 29006[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Gold'

[2015-12-30 01:08:07,661]DEBUG 29006[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:07,661]DEBUG 29006[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2015-12-30 01:08:07,661]DEBUG 29006[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2015-12-30 01:08:07,661]DEBUG 29006[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2015-12-30 01:08:07,662]DEBUG 29007[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@1d1fcfbb
[2015-12-30 01:08:07,662]DEBUG 29007[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2015-12-30 01:08:07,662]DEBUG 29007[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2015-12-30 01:08:07,662]DEBUG 29007[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2015-12-30 01:08:07,662]DEBUG 29007[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2015-12-30 01:08:07,662]DEBUG 29007[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2015-12-30 01:08:07,663]DEBUG 29008[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2015-12-30 01:08:07,663]DEBUG 29008[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Gold, expectedType=org.hibernate.type.StringType@1d1fcfbb}

[2015-12-30 01:08:07,663]DEBUG 29008[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:07,663]DEBUG 29008[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Gold
[2015-12-30 01:08:07,663]DEBUG 29008[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 01:08:07,663]DEBUG 29008[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:07,664]DEBUG 29009[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,664]DEBUG 29009[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,664]DEBUG 29009[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,664]DEBUG 29009[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,664]DEBUG 29009[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,664]DEBUG 29009[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,664]DEBUG 29009[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,665]DEBUG 29010[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,666]DEBUG 29011[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,666]DEBUG 29011[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 01:08:07,666]DEBUG 29011[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,666]DEBUG 29011[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,666]DEBUG 29011[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,667]DEBUG 29012[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,667]DEBUG 29012[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,667]DEBUG 29012[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,667]DEBUG 29012[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,667]DEBUG 29012[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,667]DEBUG 29012[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 01:08:07,670]DEBUG 29015[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,670]DEBUG 29015[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,670]DEBUG 29015[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 01:08:07,671]DEBUG 29016[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:07,672]DEBUG 29017[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#55]
[2015-12-30 01:08:07,672]DEBUG 29017[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:07,672]DEBUG 29017[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,672]DEBUG 29017[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:07,673]DEBUG 29018[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,673]DEBUG 29018[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,673]DEBUG 29018[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,674]DEBUG 29019[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,674]DEBUG 29019[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,674]DEBUG 29019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,674]DEBUG 29019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,674]DEBUG 29019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,675]DEBUG 29020[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,675]DEBUG 29020[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,675]DEBUG 29020[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 01:08:07,677]DEBUG 29022[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,677]DEBUG 29022[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,677]DEBUG 29022[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,677]DEBUG 29022[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,678]DEBUG 29023[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,678]DEBUG 29023[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,678]DEBUG 29023[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,678]DEBUG 29023[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,679]DEBUG 29024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,679]DEBUG 29024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,679]DEBUG 29024[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,679]DEBUG 29024[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 01:08:07,681]DEBUG 29026[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,681]DEBUG 29026[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,681]DEBUG 29026[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,681]DEBUG 29026[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,681]DEBUG 29026[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,681]DEBUG 29026[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,681]DEBUG 29026[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,681]DEBUG 29026[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,682]DEBUG 29027[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,682]DEBUG 29027[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,682]DEBUG 29027[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,682]DEBUG 29027[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:07,683]DEBUG 29028[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,683]DEBUG 29028[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,683]DEBUG 29028[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,683]DEBUG 29028[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,684]DEBUG 29029[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,684]DEBUG 29029[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,684]DEBUG 29029[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,684]DEBUG 29029[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,684]DEBUG 29029[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,684]DEBUG 29029[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,684]DEBUG 29029[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,684]DEBUG 29029[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 01:08:07,686]DEBUG 29031[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,686]DEBUG 29031[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,686]DEBUG 29031[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,686]DEBUG 29031[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,686]DEBUG 29031[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,686]DEBUG 29031[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,687]DEBUG 29032[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,687]DEBUG 29032[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,687]DEBUG 29032[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,687]DEBUG 29032[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,687]DEBUG 29032[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,688]DEBUG 29033[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 01:08:07,689]DEBUG 29034[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,689]DEBUG 29034[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,689]DEBUG 29034[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,689]DEBUG 29034[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,691]DEBUG 29036[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,691]DEBUG 29036[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,691]DEBUG 29036[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,692]DEBUG 29037[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,692]DEBUG 29037[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,692]DEBUG 29037[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,692]DEBUG 29037[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,692]DEBUG 29037[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 01:08:07,694]DEBUG 29039[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,694]DEBUG 29039[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,694]DEBUG 29039[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,694]DEBUG 29039[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,695]DEBUG 29040[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,695]DEBUG 29040[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,695]DEBUG 29040[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,695]DEBUG 29040[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,695]DEBUG 29040[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,695]DEBUG 29040[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,696]DEBUG 29041[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,696]DEBUG 29041[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 01:08:07,697]DEBUG 29042[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,698]DEBUG 29043[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,698]DEBUG 29043[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,698]DEBUG 29043[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,698]DEBUG 29043[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,699]DEBUG 29044[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,699]DEBUG 29044[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,699]DEBUG 29044[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,699]DEBUG 29044[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,699]DEBUG 29044[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,700]DEBUG 29045[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,700]DEBUG 29045[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 01:08:07,701]DEBUG 29046[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,701]DEBUG 29046[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,702]DEBUG 29047[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,702]DEBUG 29047[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,702]DEBUG 29047[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,702]DEBUG 29047[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,702]DEBUG 29047[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=56, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,703]DEBUG 29048[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=55, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,703]DEBUG 29048[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=54, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,703]DEBUG 29048[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=53, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,703]DEBUG 29048[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,703]DEBUG 29048[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 01:08:07,704]DEBUG 29049[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,705]DEBUG 29050[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2a20d72e, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,705]DEBUG 29050[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:07,705]DEBUG 29050[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5ed53f6b]
[2015-12-30 01:08:07,705]DEBUG 29050[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:07,706]DEBUG 29051[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:07,706]DEBUG 29051[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,707]DEBUG 29052[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5ed53f6b] after transaction
[2015-12-30 01:08:07,707]DEBUG 29052[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:07,707]DEBUG 29052[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:07,707]DEBUG 29052[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,707] INFO 29052[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2a20d72e, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,710]DEBUG 29055[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2a20d72e, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:07,710]DEBUG 29055[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,711]DEBUG 29056[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,711]DEBUG 29056[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5433b4fc, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:07,711]DEBUG 29056[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:07,711]DEBUG 29056[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:07,712]DEBUG 29057[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:07,712]DEBUG 29057[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:07,712]DEBUG 29057[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:07,712]DEBUG 29057[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:07,712]DEBUG 29057[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:07,712]DEBUG 29057[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:07,713]DEBUG 29058[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:07,713]DEBUG 29058[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:07,713]DEBUG 29058[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:07,713]DEBUG 29058[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:07,713]DEBUG 29058[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:07,713]DEBUG 29058[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:07,714]DEBUG 29059[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:07,714]DEBUG 29059[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:07,714]DEBUG 29059[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:07,714]DEBUG 29059[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:07,714]DEBUG 29059[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:07,714]DEBUG 29059[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:07,715]DEBUG 29060[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:07,715]DEBUG 29060[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:07,715]DEBUG 29060[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5433b4fc]
[2015-12-30 01:08:07,716]DEBUG 29061[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetPlatinumTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,716]DEBUG 29061[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5433b4fc, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,716]DEBUG 29061[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:07,718]DEBUG 29063[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetPlatinumTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,719]DEBUG 29064[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304877
[2015-12-30 01:08:07,719]DEBUG 29064[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@35b01f6c] for Hibernate transaction
[2015-12-30 01:08:07,719]DEBUG 29064[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@35b01f6c]
[2015-12-30 01:08:07,719]DEBUG 29064[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:07,719]DEBUG 29064[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:07,720]DEBUG 29065[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:07,720]DEBUG 29065[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5433b4fc, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,720] INFO 29065[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:07,720]DEBUG 29065[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,720]DEBUG 29065[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,722]DEBUG 29067[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[57]]
[2015-12-30 01:08:07,722]DEBUG 29067[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,722]DEBUG 29067[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 57, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,723]DEBUG 29068[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,723]DEBUG 29068[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,724]DEBUG 29069[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[58]]
[2015-12-30 01:08:07,725]DEBUG 29070[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,725]DEBUG 29070[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 58, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,726]DEBUG 29071[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,727]DEBUG 29072[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,728]DEBUG 29073[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[59]]
[2015-12-30 01:08:07,728]DEBUG 29073[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,729]DEBUG 29074[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 59, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,729]DEBUG 29074[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,729]DEBUG 29074[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,730]DEBUG 29075[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[60]]
[2015-12-30 01:08:07,731]DEBUG 29076[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,731]DEBUG 29076[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 60, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,737]DEBUG 29082[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Platinum
[2015-12-30 01:08:07,742]DEBUG 29087[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Platinum'

[2015-12-30 01:08:07,743]DEBUG 29088[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:07,743]DEBUG 29088[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2015-12-30 01:08:07,743]DEBUG 29088[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2015-12-30 01:08:07,744]DEBUG 29089[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2015-12-30 01:08:07,744]DEBUG 29089[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@1d1fcfbb
[2015-12-30 01:08:07,744]DEBUG 29089[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2015-12-30 01:08:07,745]DEBUG 29090[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2015-12-30 01:08:07,745]DEBUG 29090[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2015-12-30 01:08:07,745]DEBUG 29090[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2015-12-30 01:08:07,745]DEBUG 29090[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2015-12-30 01:08:07,745]DEBUG 29090[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2015-12-30 01:08:07,745]DEBUG 29090[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Platinum, expectedType=org.hibernate.type.StringType@1d1fcfbb}

[2015-12-30 01:08:07,746]DEBUG 29091[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:07,746]DEBUG 29091[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Platinum
[2015-12-30 01:08:07,746]DEBUG 29091[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 01:08:07,746]DEBUG 29091[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2015-12-30 01:08:07,746]DEBUG 29091[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,746]DEBUG 29091[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,746]DEBUG 29091[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,747]DEBUG 29092[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,747]DEBUG 29092[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,747]DEBUG 29092[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,747]DEBUG 29092[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,747]DEBUG 29092[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,747]DEBUG 29092[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,749]DEBUG 29094[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 01:08:07,749]DEBUG 29094[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,749]DEBUG 29094[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,749]DEBUG 29094[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,749]DEBUG 29094[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,750]DEBUG 29095[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,750]DEBUG 29095[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,750]DEBUG 29095[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,750]DEBUG 29095[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,750]DEBUG 29095[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 01:08:07,752]DEBUG 29097[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,752]DEBUG 29097[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,753]DEBUG 29098[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2015-12-30 01:08:07,754]DEBUG 29099[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:07,755]DEBUG 29100[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#60]
[2015-12-30 01:08:07,755]DEBUG 29100[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:07,756]DEBUG 29101[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,756]DEBUG 29101[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:07,756]DEBUG 29101[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,756]DEBUG 29101[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,756]DEBUG 29101[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,756]DEBUG 29101[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,756]DEBUG 29101[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,756]DEBUG 29101[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,757]DEBUG 29102[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,757]DEBUG 29102[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,757]DEBUG 29102[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,757]DEBUG 29102[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,757]DEBUG 29102[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 01:08:07,758]DEBUG 29103[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,759]DEBUG 29104[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,759]DEBUG 29104[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,759]DEBUG 29104[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,759]DEBUG 29104[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,760]DEBUG 29105[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,760]DEBUG 29105[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,760]DEBUG 29105[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,760]DEBUG 29105[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,761]DEBUG 29106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,761]DEBUG 29106[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,761]DEBUG 29106[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 01:08:07,762]DEBUG 29107[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,763]DEBUG 29108[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,763]DEBUG 29108[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,763]DEBUG 29108[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,763]DEBUG 29108[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,764]DEBUG 29109[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,764]DEBUG 29109[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,764]DEBUG 29109[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,764]DEBUG 29109[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,764]DEBUG 29109[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,765]DEBUG 29110[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,765]DEBUG 29110[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:07,766]DEBUG 29111[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,766]DEBUG 29111[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,766]DEBUG 29111[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,767]DEBUG 29112[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,767]DEBUG 29112[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,767]DEBUG 29112[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,767]DEBUG 29112[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,767]DEBUG 29112[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,768]DEBUG 29113[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,768]DEBUG 29113[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,768]DEBUG 29113[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,768]DEBUG 29113[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 01:08:07,770]DEBUG 29115[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,770]DEBUG 29115[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,770]DEBUG 29115[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,771]DEBUG 29116[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,771]DEBUG 29116[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,771]DEBUG 29116[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,771]DEBUG 29116[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,771]DEBUG 29116[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,771]DEBUG 29116[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,772]DEBUG 29117[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,772]DEBUG 29117[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,772]DEBUG 29117[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 01:08:07,773]DEBUG 29118[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,774]DEBUG 29119[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,774]DEBUG 29119[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,774]DEBUG 29119[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,775]DEBUG 29120[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,775]DEBUG 29120[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,775]DEBUG 29120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,775]DEBUG 29120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,775]DEBUG 29120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,776]DEBUG 29121[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,776]DEBUG 29121[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,776]DEBUG 29121[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 01:08:07,777]DEBUG 29122[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,778]DEBUG 29123[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,778]DEBUG 29123[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,778]DEBUG 29123[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,779]DEBUG 29124[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,779]DEBUG 29124[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,779]DEBUG 29124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,779]DEBUG 29124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,779]DEBUG 29124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,782]DEBUG 29127[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,782]DEBUG 29127[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,782]DEBUG 29127[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 01:08:07,783]DEBUG 29128[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,784]DEBUG 29129[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,784]DEBUG 29129[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,784]DEBUG 29129[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,784]DEBUG 29129[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,784]DEBUG 29129[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,785]DEBUG 29130[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,785]DEBUG 29130[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,785]DEBUG 29130[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,785]DEBUG 29130[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,785]DEBUG 29130[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,785]DEBUG 29130[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 01:08:07,786]DEBUG 29131[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,787]DEBUG 29132[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,787]DEBUG 29132[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,787]DEBUG 29132[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,787]DEBUG 29132[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,787]DEBUG 29132[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,787]DEBUG 29132[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=58, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,787]DEBUG 29132[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=57, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,787]DEBUG 29132[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=60, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,788]DEBUG 29133[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=59, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,788]DEBUG 29133[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,788]DEBUG 29133[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 01:08:07,789]DEBUG 29134[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,789]DEBUG 29134[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5433b4fc, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,789]DEBUG 29134[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:07,789]DEBUG 29134[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@35b01f6c]
[2015-12-30 01:08:07,789]DEBUG 29134[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:07,790]DEBUG 29135[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:07,790]DEBUG 29135[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,790]DEBUG 29135[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@35b01f6c] after transaction
[2015-12-30 01:08:07,791]DEBUG 29136[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:07,791]DEBUG 29136[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:07,791]DEBUG 29136[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,791] INFO 29136[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5433b4fc, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2015-12-30 01:08:07,792]DEBUG 29137[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5433b4fc, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:07,792]DEBUG 29137[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,792]DEBUG 29137[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2015-12-30 01:08:07,792]DEBUG 29137[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1c9d80c7, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:07,792]DEBUG 29137[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:07,792]DEBUG 29137[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:07,793]DEBUG 29138[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:07,793]DEBUG 29138[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:07,793]DEBUG 29138[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:07,793]DEBUG 29138[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:07,793]DEBUG 29138[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:07,793]DEBUG 29138[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:07,793]DEBUG 29138[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:07,793]DEBUG 29138[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:07,793]DEBUG 29138[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:07,793]DEBUG 29138[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:07,794]DEBUG 29139[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:07,794]DEBUG 29139[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:07,794]DEBUG 29139[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:07,794]DEBUG 29139[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:07,794]DEBUG 29139[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:07,794]DEBUG 29139[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:07,794]DEBUG 29139[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:07,794]DEBUG 29139[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:07,794]DEBUG 29139[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:07,795]DEBUG 29140[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:07,795]DEBUG 29140[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1c9d80c7]
[2015-12-30 01:08:07,795]DEBUG 29140[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,795]DEBUG 29140[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1c9d80c7, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 01:08:07,795]DEBUG 29140[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:07,796]DEBUG 29141[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,796]DEBUG 29141[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304877
[2015-12-30 01:08:07,796]DEBUG 29141[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4ddf41c8] for Hibernate transaction
[2015-12-30 01:08:07,796]DEBUG 29141[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4ddf41c8]
[2015-12-30 01:08:07,796]DEBUG 29141[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:07,796]DEBUG 29141[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:07,796]DEBUG 29141[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:07,796]DEBUG 29141[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1c9d80c7, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 01:08:07,797] INFO 29142[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:07,797]DEBUG 29142[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,797]DEBUG 29142[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,798]DEBUG 29143[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[61]]
[2015-12-30 01:08:07,798]DEBUG 29143[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,798]DEBUG 29143[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 61, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,799]DEBUG 29144[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,799]DEBUG 29144[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,801]DEBUG 29146[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[62]]
[2015-12-30 01:08:07,801]DEBUG 29146[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,801]DEBUG 29146[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 62, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,802]DEBUG 29147[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,802]DEBUG 29147[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,803]DEBUG 29148[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[63]]
[2015-12-30 01:08:07,803]DEBUG 29148[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,803]DEBUG 29148[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 63, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,803]DEBUG 29148[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,803]DEBUG 29148[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,805]DEBUG 29150[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[64]]
[2015-12-30 01:08:07,805]DEBUG 29150[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,805]DEBUG 29150[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 64, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,805]DEBUG 29150[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,805]DEBUG 29150[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,805]DEBUG 29150[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,805]DEBUG 29150[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,806]DEBUG 29151[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,806]DEBUG 29151[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,806]DEBUG 29151[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,806]DEBUG 29151[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,806]DEBUG 29151[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,806]DEBUG 29151[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,806]DEBUG 29151[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2015-12-30 01:08:07,807]DEBUG 29152[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,807]DEBUG 29152[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,808]DEBUG 29153[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,808]DEBUG 29153[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,808]DEBUG 29153[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,808]DEBUG 29153[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,808]DEBUG 29153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,808]DEBUG 29153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,808]DEBUG 29153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,808]DEBUG 29153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,809]DEBUG 29154[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,809]DEBUG 29154[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2015-12-30 01:08:07,810]DEBUG 29155[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,810]DEBUG 29155[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,810]DEBUG 29155[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,810]DEBUG 29155[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,810]DEBUG 29155[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,810]DEBUG 29155[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,811]DEBUG 29156[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,811]DEBUG 29156[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,811]DEBUG 29156[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,811]DEBUG 29156[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,811]DEBUG 29156[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,811]DEBUG 29156[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:07,812]DEBUG 29157[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,812]DEBUG 29157[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,812]DEBUG 29157[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,815]DEBUG 29160[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,815]DEBUG 29160[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,815]DEBUG 29160[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,816]DEBUG 29161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,816]DEBUG 29161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,816]DEBUG 29161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,816]DEBUG 29161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,816]DEBUG 29161[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,816]DEBUG 29161[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2015-12-30 01:08:07,817]DEBUG 29162[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,818]DEBUG 29163[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,818]DEBUG 29163[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,818]DEBUG 29163[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,818]DEBUG 29163[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,818]DEBUG 29163[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,818]DEBUG 29163[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,818]DEBUG 29163[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,818]DEBUG 29163[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,819]DEBUG 29164[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,819]DEBUG 29164[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,819]DEBUG 29164[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2015-12-30 01:08:07,820]DEBUG 29165[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,820]DEBUG 29165[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,820]DEBUG 29165[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,820]DEBUG 29165[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,820]DEBUG 29165[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,820]DEBUG 29165[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,821]DEBUG 29166[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,821]DEBUG 29166[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,821]DEBUG 29166[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,821]DEBUG 29166[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,822]DEBUG 29167[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,822]DEBUG 29167[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2015-12-30 01:08:07,824]DEBUG 29169[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,824]DEBUG 29169[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,824]DEBUG 29169[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,824]DEBUG 29169[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 4 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,824]DEBUG 29169[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,824]DEBUG 29169[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,824]DEBUG 29169[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,825]DEBUG 29170[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,825]DEBUG 29170[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,825]DEBUG 29170[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,825]DEBUG 29170[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: CustomerTypes
[2015-12-30 01:08:07,825]DEBUG 29170[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,825]DEBUG 29170[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,825]DEBUG 29170[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,825]DEBUG 29170[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,826]DEBUG 29171[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,826]DEBUG 29171[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,826]DEBUG 29171[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,826]DEBUG 29171[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,826]DEBUG 29171[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 4
[2015-12-30 01:08:07,828]DEBUG 29173[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,829]DEBUG 29174[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,829]DEBUG 29174[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2015-12-30 01:08:07,830]DEBUG 29175[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,830]DEBUG 29175[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,830]DEBUG 29175[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,830]DEBUG 29175[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,830]DEBUG 29175[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,831]DEBUG 29176[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,831]DEBUG 29176[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,831]DEBUG 29176[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,831]DEBUG 29176[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,831]DEBUG 29176[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,831]DEBUG 29176[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,831]DEBUG 29176[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2015-12-30 01:08:07,832]DEBUG 29177[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,832]DEBUG 29177[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,833]DEBUG 29178[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,833]DEBUG 29178[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2015-12-30 01:08:07,833]DEBUG 29178[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,833]DEBUG 29178[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,833]DEBUG 29178[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=64, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,833]DEBUG 29178[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=63, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,833]DEBUG 29178[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=62, maxRange=99999.0, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,833]DEBUG 29178[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=61, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2015-12-30 01:08:07,833]DEBUG 29178[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,834]DEBUG 29179[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2015-12-30 01:08:07,835]DEBUG 29180[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,835]DEBUG 29180[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1c9d80c7, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 01:08:07,835]DEBUG 29180[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:07,835]DEBUG 29180[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4ddf41c8]
[2015-12-30 01:08:07,835]DEBUG 29180[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:07,836]DEBUG 29181[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:07,836]DEBUG 29181[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,836]DEBUG 29181[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4ddf41c8] after transaction
[2015-12-30 01:08:07,836]DEBUG 29181[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:07,837]DEBUG 29182[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:07,841]DEBUG 29186[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,841] INFO 29186[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1c9d80c7, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 01:08:07,842]DEBUG 29187[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1c9d80c7, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:07,842]DEBUG 29187[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@57b9f3bd testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2015-12-30 01:08:07,845]DEBUG 29190[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest].
[2015-12-30 01:08:07,845] INFO 29190[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: using defaults.
[2015-12-30 01:08:07,846]DEBUG 29191[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:07,846]DEBUG 29191[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:07,848]DEBUG 29193[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:07,848]DEBUG 29193[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:07,848]DEBUG 29193[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:07,848]DEBUG 29193[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:07,852]DEBUG 29197[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:07,852]DEBUG 29197[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:07,853]DEBUG 29198[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1710791a, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:07,860]DEBUG 29205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:07,860]DEBUG 29205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:07,860]DEBUG 29205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:07,860]DEBUG 29205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:07,860]DEBUG 29205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:07,861]DEBUG 29206[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:07,861]DEBUG 29206[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:07,861]DEBUG 29206[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:07,861]DEBUG 29206[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:07,861]DEBUG 29206[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:07,861]DEBUG 29206[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:07,861]DEBUG 29206[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:07,862]DEBUG 29207[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'customerTypeDao'
[2015-12-30 01:08:07,862]DEBUG 29207[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:07,862]DEBUG 29207[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:07,862]DEBUG 29207[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'dimensionDao'
[2015-12-30 01:08:07,862]DEBUG 29207[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:07,862]DEBUG 29207[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:07,863]DEBUG 29208[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'orderDao'
[2015-12-30 01:08:07,863]DEBUG 29208[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:07,863]DEBUG 29208[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:07,863]DEBUG 29208[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'orderItemDao'
[2015-12-30 01:08:07,863]DEBUG 29208[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:07,863]DEBUG 29208[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:07,864]DEBUG 29209[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'orderStatusDao'
[2015-12-30 01:08:07,864]DEBUG 29209[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:07,864]DEBUG 29209[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:07,864]DEBUG 29209[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'productDao'
[2015-12-30 01:08:07,864]DEBUG 29209[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:07,864]DEBUG 29209[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:07,865]DEBUG 29210[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'regionDao'
[2015-12-30 01:08:07,865]DEBUG 29210[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:07,865]DEBUG 29210[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:07,865]DEBUG 29210[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'roleDao'
[2015-12-30 01:08:07,865]DEBUG 29210[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:07,867]DEBUG 29212[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:07,868]DEBUG 29213[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'userDao'
[2015-12-30 01:08:07,868]DEBUG 29213[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:07,868]DEBUG 29213[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:07,868]DEBUG 29213[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'sessionFactory'
[2015-12-30 01:08:07,869]DEBUG 29214[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:07,869]DEBUG 29214[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,869]DEBUG 29214[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:07,869]DEBUG 29214[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1710791a]
[2015-12-30 01:08:07,870]DEBUG 29215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.setUp() throws java.lang.Exception
[2015-12-30 01:08:07,870]DEBUG 29215[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,870]DEBUG 29215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.tearDown() throws java.lang.Exception
[2015-12-30 01:08:07,870]DEBUG 29215[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,871]DEBUG 29216[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testInsertOrUpdate()
[2015-12-30 01:08:07,871]DEBUG 29216[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,871]DEBUG 29216[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testDelete()
[2015-12-30 01:08:07,871]DEBUG 29216[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,871]DEBUG 29216[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testFindByCriterions()
[2015-12-30 01:08:07,871]DEBUG 29216[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,872]DEBUG 29217[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testFindByOneOfCriterions()
[2015-12-30 01:08:07,872]DEBUG 29217[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,872]DEBUG 29217[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByName()
[2015-12-30 01:08:07,872]DEBUG 29217[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,872]DEBUG 29217[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testcontainsProductByName()
[2015-12-30 01:08:07,872]DEBUG 29217[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,872]DEBUG 29217[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testnumberOfProductByName()
[2015-12-30 01:08:07,873]DEBUG 29218[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,873]DEBUG 29218[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByDescription()
[2015-12-30 01:08:07,873]DEBUG 29218[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,873]DEBUG 29218[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testcontainsProductByDescription()
[2015-12-30 01:08:07,873]DEBUG 29218[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,873]DEBUG 29218[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testnumberOfProductByDescription()
[2015-12-30 01:08:07,873]DEBUG 29218[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPrice' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,874]DEBUG 29219[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByPrice()
[2015-12-30 01:08:07,874]DEBUG 29219[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromTo' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,874]DEBUG 29219[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByPriceFromTo()
[2015-12-30 01:08:07,874]DEBUG 29219[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetRowCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,876]DEBUG 29221[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testGetRowCount()
[2015-12-30 01:08:07,876]DEBUG 29221[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,876]DEBUG 29221[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByID()
[2015-12-30 01:08:07,876]DEBUG 29221[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByNameSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,877]DEBUG 29222[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByNameSorting()
[2015-12-30 01:08:07,877]DEBUG 29222[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescriptionSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,877]DEBUG 29222[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByDescriptionSorting()
[2015-12-30 01:08:07,877]DEBUG 29222[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromToSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,877]DEBUG 29222[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByPriceFromToSorting()
[2015-12-30 01:08:07,877]DEBUG 29222[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2015-12-30 01:08:07,877]DEBUG 29222[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2015-12-30 01:08:07,878]DEBUG 29223[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,878]DEBUG 29223[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2015-12-30 01:08:07,878]DEBUG 29223[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2015-12-30 01:08:07,878]DEBUG 29223[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2015-12-30 01:08:07,878]DEBUG 29223[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2015-12-30 01:08:07,878]DEBUG 29223[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2015-12-30 01:08:07,878]DEBUG 29223[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2015-12-30 01:08:07,878]DEBUG 29223[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2015-12-30 01:08:07,879]DEBUG 29224[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2015-12-30 01:08:07,879]DEBUG 29224[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2015-12-30 01:08:07,879]DEBUG 29224[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2015-12-30 01:08:07,879]DEBUG 29224[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2015-12-30 01:08:07,879]DEBUG 29224[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2015-12-30 01:08:07,879]DEBUG 29224[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2015-12-30 01:08:07,879]DEBUG 29224[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2015-12-30 01:08:07,879]DEBUG 29224[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2015-12-30 01:08:07,879]DEBUG 29224[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2015-12-30 01:08:07,880]DEBUG 29225[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2015-12-30 01:08:07,880]DEBUG 29225[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2015-12-30 01:08:07,880]DEBUG 29225[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 01:08:07,880]DEBUG 29225[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 01:08:07,880]DEBUG 29225[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2015-12-30 01:08:07,880]DEBUG 29225[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2015-12-30 01:08:07,880]DEBUG 29225[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2015-12-30 01:08:07,880]DEBUG 29225[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2015-12-30 01:08:07,880]DEBUG 29225[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2015-12-30 01:08:07,881]DEBUG 29226[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2015-12-30 01:08:07,881]DEBUG 29226[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2015-12-30 01:08:07,881]DEBUG 29226[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 01:08:07,881]DEBUG 29226[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 01:08:07,881]DEBUG 29226[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2015-12-30 01:08:07,881]DEBUG 29226[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2015-12-30 01:08:07,881]DEBUG 29226[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2015-12-30 01:08:07,881]DEBUG 29226[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 01:08:07,881]DEBUG 29226[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2015-12-30 01:08:07,882]DEBUG 29227[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2015-12-30 01:08:07,882]DEBUG 29227[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2015-12-30 01:08:07,882]DEBUG 29227[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2015-12-30 01:08:07,893]DEBUG 29238[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,894]DEBUG 29239[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1710791a, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:07,894]DEBUG 29239[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:07,894]DEBUG 29239[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@36699775 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:07,894]DEBUG 29239[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:07,895]DEBUG 29240[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,895]DEBUG 29240[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304878
[2015-12-30 01:08:07,895]DEBUG 29240[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4b45c74e] for Hibernate transaction
[2015-12-30 01:08:07,895]DEBUG 29240[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4b45c74e]
[2015-12-30 01:08:07,895]DEBUG 29240[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:07,895]DEBUG 29240[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:07,895]DEBUG 29240[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:07,895]DEBUG 29240[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1710791a, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:07,895] INFO 29240[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:07,896]DEBUG 29241[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,898]DEBUG 29243[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,899]DEBUG 29244[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[65]]
[2015-12-30 01:08:07,899]DEBUG 29244[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,899]DEBUG 29244[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 65, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,900]DEBUG 29245[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,900]DEBUG 29245[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,901]DEBUG 29246[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[66]]
[2015-12-30 01:08:07,901]DEBUG 29246[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,901]DEBUG 29246[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 66, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,901]DEBUG 29246[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,902]DEBUG 29247[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,903]DEBUG 29248[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[67]]
[2015-12-30 01:08:07,903]DEBUG 29248[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,903]DEBUG 29248[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 67, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,903]DEBUG 29248[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,903]DEBUG 29248[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,904]DEBUG 29249[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[68]]
[2015-12-30 01:08:07,904]DEBUG 29249[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,905]DEBUG 29250[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 68, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,905]DEBUG 29250[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,905]DEBUG 29250[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,906]DEBUG 29251[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[69]]
[2015-12-30 01:08:07,906]DEBUG 29251[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,906]DEBUG 29251[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 69, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,907]DEBUG 29252[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,907]DEBUG 29252[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,907]DEBUG 29252[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 5 insertions, 3 updates, 0 deletions to 5 objects
[2015-12-30 01:08:07,907]DEBUG 29252[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,907]DEBUG 29252[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,907]DEBUG 29252[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=65, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:07,907]DEBUG 29252[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=66, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:07,907]DEBUG 29252[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=67, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:07,908]DEBUG 29253[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=68, productDescription=productDescription, active=true, productPrice=400.0, productName=productName}
[2015-12-30 01:08:07,908]DEBUG 29253[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=69, productDescription=productDescription2, active=true, productPrice=800.0, productName=productName2}
[2015-12-30 01:08:07,908]DEBUG 29253[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 01:08:07,908]DEBUG 29253[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,908]DEBUG 29253[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,908]DEBUG 29253[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,908]DEBUG 29253[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,909]DEBUG 29254[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,909]DEBUG 29254[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,909]DEBUG 29254[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,909]DEBUG 29254[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,909]DEBUG 29254[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,909]DEBUG 29254[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,909]DEBUG 29254[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 5
[2015-12-30 01:08:07,911]DEBUG 29256[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,912]DEBUG 29257[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,912]DEBUG 29257[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:07,912]DEBUG 29257[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,912]DEBUG 29257[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:07,912]DEBUG 29257[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,912]DEBUG 29257[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:07,913]DEBUG 29258[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:07,915]DEBUG 29260[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,915]DEBUG 29260[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,915]DEBUG 29260[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:07,917]DEBUG 29262[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,917]DEBUG 29262[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1710791a, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:07,917]DEBUG 29262[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:07,918]DEBUG 29263[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4b45c74e]
[2015-12-30 01:08:07,918]DEBUG 29263[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:07,919]DEBUG 29264[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:07,919]DEBUG 29264[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,919]DEBUG 29264[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4b45c74e] after transaction
[2015-12-30 01:08:07,919]DEBUG 29264[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:07,919]DEBUG 29264[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:07,919]DEBUG 29264[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,919] INFO 29264[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1710791a, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:07,920]DEBUG 29265[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1710791a, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:07,920]DEBUG 29265[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:07,921]DEBUG 29266[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:07,921]DEBUG 29266[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@385730c7, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:07,921]DEBUG 29266[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:07,921]DEBUG 29266[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:07,921]DEBUG 29266[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:07,921]DEBUG 29266[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:07,921]DEBUG 29266[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:07,921]DEBUG 29266[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:07,923]DEBUG 29268[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:07,923]DEBUG 29268[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:07,924]DEBUG 29269[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:07,924]DEBUG 29269[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:07,924]DEBUG 29269[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:07,924]DEBUG 29269[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:07,924]DEBUG 29269[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:07,924]DEBUG 29269[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:07,924]DEBUG 29269[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:07,924]DEBUG 29269[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:07,924]DEBUG 29269[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:07,924]DEBUG 29269[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:07,924]DEBUG 29269[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:07,925]DEBUG 29270[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:07,925]DEBUG 29270[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:07,925]DEBUG 29270[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:07,925]DEBUG 29270[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@385730c7]
[2015-12-30 01:08:07,925]DEBUG 29270[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,926]DEBUG 29271[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@385730c7, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:07,926]DEBUG 29271[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:07,926]DEBUG 29271[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,926]DEBUG 29271[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304879
[2015-12-30 01:08:07,927]DEBUG 29272[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@41201158] for Hibernate transaction
[2015-12-30 01:08:07,927]DEBUG 29272[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@41201158]
[2015-12-30 01:08:07,927]DEBUG 29272[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:07,927]DEBUG 29272[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:07,927]DEBUG 29272[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:07,927]DEBUG 29272[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@385730c7, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:07,927] INFO 29272[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:07,927]DEBUG 29272[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,927]DEBUG 29272[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,929]DEBUG 29274[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[70]]
[2015-12-30 01:08:07,929]DEBUG 29274[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,929]DEBUG 29274[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 70, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,929]DEBUG 29274[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,929]DEBUG 29274[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,931]DEBUG 29276[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[71]]
[2015-12-30 01:08:07,931]DEBUG 29276[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,931]DEBUG 29276[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 71, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,931]DEBUG 29276[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,931]DEBUG 29276[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,932]DEBUG 29277[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[72]]
[2015-12-30 01:08:07,932]DEBUG 29277[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,932]DEBUG 29277[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 72, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,933] INFO 29278[main] - org.hibernate.event.def.DefaultDeleteEventListener.deleteTransientEntity(DefaultDeleteEventListener.java:203) - handling transient entity in delete processing
[2015-12-30 01:08:07,933]DEBUG 29278[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,933]DEBUG 29278[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,933]DEBUG 29278[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 01:08:07,933]DEBUG 29278[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,934]DEBUG 29279[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,934]DEBUG 29279[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=72, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:07,934]DEBUG 29279[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=70, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:07,934]DEBUG 29279[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=71, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:07,934]DEBUG 29279[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 01:08:07,934]DEBUG 29279[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,934]DEBUG 29279[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,934]DEBUG 29279[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,935]DEBUG 29280[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,935]DEBUG 29280[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,935]DEBUG 29280[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,935]DEBUG 29280[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:07,937]DEBUG 29282[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,937]DEBUG 29282[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,937]DEBUG 29282[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:07,938]DEBUG 29283[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,938]DEBUG 29283[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:07,938]DEBUG 29283[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,938]DEBUG 29283[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:07,938]DEBUG 29283[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:07,940]DEBUG 29285[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,940]DEBUG 29285[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,941]DEBUG 29286[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2015-12-30 01:08:07,942]DEBUG 29287[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:07,942]DEBUG 29287[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#70]
[2015-12-30 01:08:07,942]DEBUG 29287[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#71]
[2015-12-30 01:08:07,943]DEBUG 29288[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#72]
[2015-12-30 01:08:07,943]DEBUG 29288[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:07,945]DEBUG 29290[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,945]DEBUG 29290[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:07,945]DEBUG 29290[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,945]DEBUG 29290[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,945]DEBUG 29290[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:07,945]DEBUG 29290[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,945]DEBUG 29290[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,946]DEBUG 29291[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=72, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:07,946]DEBUG 29291[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=70, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:07,946]DEBUG 29291[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=71, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:07,946]DEBUG 29291[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,946]DEBUG 29291[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:07,947]DEBUG 29292[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,948]DEBUG 29293[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@385730c7, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:07,948]DEBUG 29293[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:07,948]DEBUG 29293[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@41201158]
[2015-12-30 01:08:07,948]DEBUG 29293[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:07,949]DEBUG 29294[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:07,949]DEBUG 29294[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,949]DEBUG 29294[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@41201158] after transaction
[2015-12-30 01:08:07,949]DEBUG 29294[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:07,950]DEBUG 29295[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:07,950]DEBUG 29295[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,950] INFO 29295[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@385730c7, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:07,950]DEBUG 29295[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@385730c7, testMethod = testDelete@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:07,951]DEBUG 29296[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:07,951]DEBUG 29296[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:07,951]DEBUG 29296[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3a00085f, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:07,951]DEBUG 29296[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:07,951]DEBUG 29296[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:07,952]DEBUG 29297[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:07,952]DEBUG 29297[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:07,952]DEBUG 29297[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:07,952]DEBUG 29297[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:07,952]DEBUG 29297[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:07,952]DEBUG 29297[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:07,952]DEBUG 29297[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:07,952]DEBUG 29297[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:07,952]DEBUG 29297[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:07,952]DEBUG 29297[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:07,952]DEBUG 29297[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:07,953]DEBUG 29298[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:07,953]DEBUG 29298[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:07,953]DEBUG 29298[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:07,953]DEBUG 29298[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:07,953]DEBUG 29298[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:07,953]DEBUG 29298[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:07,953]DEBUG 29298[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:07,953]DEBUG 29298[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:07,953]DEBUG 29298[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:07,954]DEBUG 29299[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3a00085f]
[2015-12-30 01:08:07,954]DEBUG 29299[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,954]DEBUG 29299[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3a00085f, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:07,954]DEBUG 29299[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:07,955]DEBUG 29300[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,955]DEBUG 29300[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304879
[2015-12-30 01:08:07,955]DEBUG 29300[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@477195fb] for Hibernate transaction
[2015-12-30 01:08:07,955]DEBUG 29300[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@477195fb]
[2015-12-30 01:08:07,955]DEBUG 29300[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:07,955]DEBUG 29300[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:07,955]DEBUG 29300[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:07,956]DEBUG 29301[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3a00085f, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:07,956] INFO 29301[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:07,956]DEBUG 29301[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,956]DEBUG 29301[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,957]DEBUG 29302[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[73]]
[2015-12-30 01:08:07,957]DEBUG 29302[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,957]DEBUG 29302[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 73, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,958]DEBUG 29303[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,958]DEBUG 29303[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,959]DEBUG 29304[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[74]]
[2015-12-30 01:08:07,959]DEBUG 29304[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,960]DEBUG 29305[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 74, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,960]DEBUG 29305[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,960]DEBUG 29305[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,961]DEBUG 29306[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[75]]
[2015-12-30 01:08:07,961]DEBUG 29306[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,961]DEBUG 29306[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 75, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,962]DEBUG 29307[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,962]DEBUG 29307[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,962]DEBUG 29307[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 01:08:07,962]DEBUG 29307[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,962]DEBUG 29307[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,964]DEBUG 29309[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=73, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:07,964]DEBUG 29309[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=75, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:07,964]DEBUG 29309[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=74, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:07,964]DEBUG 29309[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 01:08:07,965]DEBUG 29310[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,965]DEBUG 29310[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,965]DEBUG 29310[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,965]DEBUG 29310[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,965]DEBUG 29310[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,965]DEBUG 29310[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,966]DEBUG 29311[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:07,967]DEBUG 29312[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,968]DEBUG 29313[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,968]DEBUG 29313[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:07,968]DEBUG 29313[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,968]DEBUG 29313[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:07,968]DEBUG 29313[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,968]DEBUG 29313[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:07,968]DEBUG 29313[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:07,971]DEBUG 29316[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,971]DEBUG 29316[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,971]DEBUG 29316[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName=? and this_.ProductDescription=?
[2015-12-30 01:08:07,972]DEBUG 29317[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:07,972]DEBUG 29317[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#73]
[2015-12-30 01:08:07,973]DEBUG 29318[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:07,973]DEBUG 29318[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,973]DEBUG 29318[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:07,973]DEBUG 29318[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,973]DEBUG 29318[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,973]DEBUG 29318[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:07,973]DEBUG 29318[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,973]DEBUG 29318[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,974]DEBUG 29319[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=73, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:07,974]DEBUG 29319[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=75, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:07,974]DEBUG 29319[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=74, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:07,974]DEBUG 29319[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,974]DEBUG 29319[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:07,975]DEBUG 29320[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,975]DEBUG 29320[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3a00085f, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:07,976]DEBUG 29321[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:07,976]DEBUG 29321[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@477195fb]
[2015-12-30 01:08:07,976]DEBUG 29321[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:07,977]DEBUG 29322[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:07,977]DEBUG 29322[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,977]DEBUG 29322[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@477195fb] after transaction
[2015-12-30 01:08:07,977]DEBUG 29322[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:07,977]DEBUG 29322[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:07,977]DEBUG 29322[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:07,977] INFO 29322[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3a00085f, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:07,978]DEBUG 29323[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3a00085f, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:07,979]DEBUG 29324[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:07,979]DEBUG 29324[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:07,979]DEBUG 29324[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4048cfeb, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:07,979]DEBUG 29324[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:07,979]DEBUG 29324[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:07,980]DEBUG 29325[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:07,980]DEBUG 29325[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:07,980]DEBUG 29325[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:07,980]DEBUG 29325[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:07,980]DEBUG 29325[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:07,980]DEBUG 29325[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:07,980]DEBUG 29325[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:07,980]DEBUG 29325[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:07,980]DEBUG 29325[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:07,980]DEBUG 29325[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:07,981]DEBUG 29326[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:07,981]DEBUG 29326[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:07,981]DEBUG 29326[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:07,981]DEBUG 29326[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:07,981]DEBUG 29326[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:07,981]DEBUG 29326[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:07,981]DEBUG 29326[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:07,981]DEBUG 29326[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:07,981]DEBUG 29326[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:07,982]DEBUG 29327[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:07,982]DEBUG 29327[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4048cfeb]
[2015-12-30 01:08:07,982]DEBUG 29327[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,982]DEBUG 29327[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4048cfeb, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:07,982]DEBUG 29327[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:07,983]DEBUG 29328[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:07,983]DEBUG 29328[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304879
[2015-12-30 01:08:07,985]DEBUG 29330[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3bfc299e] for Hibernate transaction
[2015-12-30 01:08:07,985]DEBUG 29330[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3bfc299e]
[2015-12-30 01:08:07,985]DEBUG 29330[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:07,985]DEBUG 29330[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:07,985]DEBUG 29330[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:07,986]DEBUG 29331[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4048cfeb, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:07,986] INFO 29331[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:07,986]DEBUG 29331[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,986]DEBUG 29331[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,988]DEBUG 29333[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[76]]
[2015-12-30 01:08:07,988]DEBUG 29333[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,988]DEBUG 29333[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 76, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,989]DEBUG 29334[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,989]DEBUG 29334[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,990]DEBUG 29335[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[77]]
[2015-12-30 01:08:07,990]DEBUG 29335[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,991]DEBUG 29336[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 77, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,991]DEBUG 29336[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,991]DEBUG 29336[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:07,993]DEBUG 29338[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[78]]
[2015-12-30 01:08:07,993]DEBUG 29338[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,993]DEBUG 29338[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 78, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:07,994]DEBUG 29339[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:07,994]DEBUG 29339[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:07,994]DEBUG 29339[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 01:08:07,994]DEBUG 29339[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:07,994]DEBUG 29339[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:07,994]DEBUG 29339[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=77, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:07,995]DEBUG 29340[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=76, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:07,995]DEBUG 29340[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=78, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:07,995]DEBUG 29340[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 01:08:07,995]DEBUG 29340[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,995]DEBUG 29340[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,996]DEBUG 29341[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,996]DEBUG 29341[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,996]DEBUG 29341[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:07,996]DEBUG 29341[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:07,996]DEBUG 29341[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:07,999]DEBUG 29344[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:07,999]DEBUG 29344[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:07,999]DEBUG 29344[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:07,999]DEBUG 29344[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,000]DEBUG 29345[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,000]DEBUG 29345[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,000]DEBUG 29345[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,000]DEBUG 29345[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,003]DEBUG 29348[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,003]DEBUG 29348[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,003]DEBUG 29348[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where (this_.ProductName=? or this_.ProductDescription=?)
[2015-12-30 01:08:08,005]DEBUG 29350[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,005]DEBUG 29350[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#76]
[2015-12-30 01:08:08,005]DEBUG 29350[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#78]
[2015-12-30 01:08:08,005]DEBUG 29350[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,006]DEBUG 29351[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,006]DEBUG 29351[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,006]DEBUG 29351[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,006]DEBUG 29351[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,006]DEBUG 29351[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,006]DEBUG 29351[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,007]DEBUG 29352[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,007]DEBUG 29352[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=77, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,007]DEBUG 29352[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=76, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,007]DEBUG 29352[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=78, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,007]DEBUG 29352[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,007]DEBUG 29352[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:08,009]DEBUG 29354[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,009]DEBUG 29354[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4048cfeb, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,009]DEBUG 29354[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:08,009]DEBUG 29354[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3bfc299e]
[2015-12-30 01:08:08,010]DEBUG 29355[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:08,011]DEBUG 29356[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:08,011]DEBUG 29356[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,011]DEBUG 29356[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3bfc299e] after transaction
[2015-12-30 01:08:08,011]DEBUG 29356[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:08,011]DEBUG 29356[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:08,011]DEBUG 29356[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,011] INFO 29356[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4048cfeb, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,013]DEBUG 29358[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4048cfeb, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:08,015]DEBUG 29360[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,016]DEBUG 29361[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,016]DEBUG 29361[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2cff8421, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:08,016]DEBUG 29361[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:08,016]DEBUG 29361[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:08,016]DEBUG 29361[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:08,017]DEBUG 29362[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:08,017]DEBUG 29362[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:08,017]DEBUG 29362[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:08,017]DEBUG 29362[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:08,017]DEBUG 29362[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:08,017]DEBUG 29362[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:08,017]DEBUG 29362[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:08,018]DEBUG 29363[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:08,018]DEBUG 29363[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:08,018]DEBUG 29363[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:08,018]DEBUG 29363[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:08,018]DEBUG 29363[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:08,018]DEBUG 29363[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:08,018]DEBUG 29363[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:08,018]DEBUG 29363[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:08,019]DEBUG 29364[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:08,019]DEBUG 29364[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:08,019]DEBUG 29364[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:08,019]DEBUG 29364[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:08,019]DEBUG 29364[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2cff8421]
[2015-12-30 01:08:08,020]DEBUG 29365[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,020]DEBUG 29365[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2cff8421, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,020]DEBUG 29365[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:08,021]DEBUG 29366[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,021]DEBUG 29366[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304880
[2015-12-30 01:08:08,021]DEBUG 29366[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@766e5053] for Hibernate transaction
[2015-12-30 01:08:08,022]DEBUG 29367[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@766e5053]
[2015-12-30 01:08:08,022]DEBUG 29367[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:08,022]DEBUG 29367[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:08,022]DEBUG 29367[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:08,022]DEBUG 29367[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2cff8421, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,022] INFO 29367[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:08,022]DEBUG 29367[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,023]DEBUG 29368[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,024]DEBUG 29369[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[79]]
[2015-12-30 01:08:08,024]DEBUG 29369[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,025]DEBUG 29370[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 79, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,026]DEBUG 29371[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,026]DEBUG 29371[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,027]DEBUG 29372[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[80]]
[2015-12-30 01:08:08,027]DEBUG 29372[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,028]DEBUG 29373[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 80, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,028]DEBUG 29373[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,028]DEBUG 29373[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,030]DEBUG 29375[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[81]]
[2015-12-30 01:08:08,030]DEBUG 29375[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,030]DEBUG 29375[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 81, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,031]DEBUG 29376[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,032]DEBUG 29377[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,032]DEBUG 29377[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,032]DEBUG 29377[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,032]DEBUG 29377[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,032]DEBUG 29377[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=81, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,032]DEBUG 29377[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=80, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,032]DEBUG 29377[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=79, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,032]DEBUG 29377[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 01:08:08,033]DEBUG 29378[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,033]DEBUG 29378[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,033]DEBUG 29378[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,033]DEBUG 29378[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,033]DEBUG 29378[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,033]DEBUG 29378[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,033]DEBUG 29378[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,035]DEBUG 29380[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,036]DEBUG 29381[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,036]DEBUG 29381[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,036]DEBUG 29381[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,036]DEBUG 29381[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,036]DEBUG 29381[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,036]DEBUG 29381[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,036]DEBUG 29381[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,039]DEBUG 29384[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,040]DEBUG 29385[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,040]DEBUG 29385[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2015-12-30 01:08:08,042]DEBUG 29387[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,042]DEBUG 29387[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#79]
[2015-12-30 01:08:08,042]DEBUG 29387[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#80]
[2015-12-30 01:08:08,042]DEBUG 29387[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#81]
[2015-12-30 01:08:08,042]DEBUG 29387[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,043]DEBUG 29388[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,043]DEBUG 29388[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,043]DEBUG 29388[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,043]DEBUG 29388[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,043]DEBUG 29388[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,043]DEBUG 29388[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,044]DEBUG 29389[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,044]DEBUG 29389[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=81, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,044]DEBUG 29389[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=80, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,044]DEBUG 29389[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=79, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,044]DEBUG 29389[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,044]DEBUG 29389[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=?
[2015-12-30 01:08:08,046]DEBUG 29391[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,046]DEBUG 29391[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#79]
[2015-12-30 01:08:08,046]DEBUG 29391[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#80]
[2015-12-30 01:08:08,046]DEBUG 29391[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#81]
[2015-12-30 01:08:08,047]DEBUG 29392[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,047]DEBUG 29392[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,047]DEBUG 29392[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,047]DEBUG 29392[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,047]DEBUG 29392[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,047]DEBUG 29392[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,048]DEBUG 29393[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,048]DEBUG 29393[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,048]DEBUG 29393[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=81, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,048]DEBUG 29393[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=80, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,048]DEBUG 29393[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=79, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,048]DEBUG 29393[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,048]DEBUG 29393[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=?
[2015-12-30 01:08:08,050]DEBUG 29395[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,050]DEBUG 29395[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#79]
[2015-12-30 01:08:08,050]DEBUG 29395[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#80]
[2015-12-30 01:08:08,050]DEBUG 29395[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#81]
[2015-12-30 01:08:08,050]DEBUG 29395[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,050]DEBUG 29395[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,050]DEBUG 29395[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,051]DEBUG 29396[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,051]DEBUG 29396[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,051]DEBUG 29396[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,051]DEBUG 29396[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,051]DEBUG 29396[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,051]DEBUG 29396[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=81, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,051]DEBUG 29396[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=80, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,051]DEBUG 29396[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=79, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,051]DEBUG 29396[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,052]DEBUG 29397[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=?
[2015-12-30 01:08:08,053]DEBUG 29398[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,053]DEBUG 29398[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#79]
[2015-12-30 01:08:08,053]DEBUG 29398[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#80]
[2015-12-30 01:08:08,054]DEBUG 29399[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#81]
[2015-12-30 01:08:08,054]DEBUG 29399[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,054]DEBUG 29399[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,054]DEBUG 29399[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,054]DEBUG 29399[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,054]DEBUG 29399[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,054]DEBUG 29399[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,054]DEBUG 29399[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,054]DEBUG 29399[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,055]DEBUG 29400[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=81, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,055]DEBUG 29400[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=80, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,055]DEBUG 29400[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=79, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,055]DEBUG 29400[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,055]DEBUG 29400[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:08,056]DEBUG 29401[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,056]DEBUG 29401[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2cff8421, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,056]DEBUG 29401[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:08,057]DEBUG 29402[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@766e5053]
[2015-12-30 01:08:08,057]DEBUG 29402[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:08,058]DEBUG 29403[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:08,058]DEBUG 29403[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,058]DEBUG 29403[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@766e5053] after transaction
[2015-12-30 01:08:08,059]DEBUG 29404[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:08,059]DEBUG 29404[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:08,059]DEBUG 29404[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,060] INFO 29405[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2cff8421, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,060]DEBUG 29405[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2cff8421, testMethod = testfindByName@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:08,061]DEBUG 29406[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,061]DEBUG 29406[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,061]DEBUG 29406[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@436dd382, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:08,061]DEBUG 29406[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:08,061]DEBUG 29406[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:08,061]DEBUG 29406[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:08,061]DEBUG 29406[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:08,062]DEBUG 29407[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:08,062]DEBUG 29407[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:08,062]DEBUG 29407[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:08,062]DEBUG 29407[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:08,062]DEBUG 29407[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:08,062]DEBUG 29407[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:08,062]DEBUG 29407[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:08,062]DEBUG 29407[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:08,062]DEBUG 29407[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:08,062]DEBUG 29407[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:08,062]DEBUG 29407[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:08,063]DEBUG 29408[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:08,063]DEBUG 29408[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:08,063]DEBUG 29408[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:08,063]DEBUG 29408[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:08,063]DEBUG 29408[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:08,063]DEBUG 29408[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:08,063]DEBUG 29408[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:08,063]DEBUG 29408[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@436dd382]
[2015-12-30 01:08:08,064]DEBUG 29409[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,064]DEBUG 29409[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@436dd382, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,064]DEBUG 29409[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:08,064]DEBUG 29409[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testcontainsProductByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,065]DEBUG 29410[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304880
[2015-12-30 01:08:08,065]DEBUG 29410[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3b2dfd7c] for Hibernate transaction
[2015-12-30 01:08:08,065]DEBUG 29410[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3b2dfd7c]
[2015-12-30 01:08:08,065]DEBUG 29410[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:08,065]DEBUG 29410[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:08,065]DEBUG 29410[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:08,065]DEBUG 29410[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@436dd382, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,065] INFO 29410[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:08,065]DEBUG 29410[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,065]DEBUG 29410[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,067]DEBUG 29412[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[82]]
[2015-12-30 01:08:08,067]DEBUG 29412[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,067]DEBUG 29412[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 82, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,067]DEBUG 29412[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,067]DEBUG 29412[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,069]DEBUG 29414[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[83]]
[2015-12-30 01:08:08,069]DEBUG 29414[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,069]DEBUG 29414[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 83, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,069]DEBUG 29414[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,069]DEBUG 29414[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,070]DEBUG 29415[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[84]]
[2015-12-30 01:08:08,071]DEBUG 29416[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,071]DEBUG 29416[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 84, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,072]DEBUG 29417[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,072]DEBUG 29417[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,072]DEBUG 29417[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,072]DEBUG 29417[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,073]DEBUG 29418[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,073]DEBUG 29418[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=83, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,073]DEBUG 29418[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=82, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,073]DEBUG 29418[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=84, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,073]DEBUG 29418[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 01:08:08,074]DEBUG 29419[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,074]DEBUG 29419[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,074]DEBUG 29419[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,075]DEBUG 29420[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,075]DEBUG 29420[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,075]DEBUG 29420[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,076]DEBUG 29421[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,078]DEBUG 29423[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,078]DEBUG 29423[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,078]DEBUG 29423[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,079]DEBUG 29424[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,079]DEBUG 29424[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,082]DEBUG 29427[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,083]DEBUG 29428[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,083]DEBUG 29428[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,086]DEBUG 29431[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,086]DEBUG 29431[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,086]DEBUG 29431[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2015-12-30 01:08:08,088]DEBUG 29433[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,088]DEBUG 29433[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#82]
[2015-12-30 01:08:08,088]DEBUG 29433[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#83]
[2015-12-30 01:08:08,089]DEBUG 29434[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#84]
[2015-12-30 01:08:08,089]DEBUG 29434[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,089]DEBUG 29434[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,089]DEBUG 29434[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,090]DEBUG 29435[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,090]DEBUG 29435[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,091]DEBUG 29436[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,091]DEBUG 29436[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,091]DEBUG 29436[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,091]DEBUG 29436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=83, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,091]DEBUG 29436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=82, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,092]DEBUG 29437[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=84, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,092]DEBUG 29437[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,092]DEBUG 29437[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2015-12-30 01:08:08,094]DEBUG 29439[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,094]DEBUG 29439[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#82]
[2015-12-30 01:08:08,094]DEBUG 29439[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,095]DEBUG 29440[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,095]DEBUG 29440[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,096]DEBUG 29441[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,096]DEBUG 29441[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,096]DEBUG 29441[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,096]DEBUG 29441[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,097]DEBUG 29442[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,097]DEBUG 29442[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=83, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,097]DEBUG 29442[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=82, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,097]DEBUG 29442[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=84, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,097]DEBUG 29442[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,098]DEBUG 29443[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2015-12-30 01:08:08,099]DEBUG 29444[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,100]DEBUG 29445[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#83]
[2015-12-30 01:08:08,100]DEBUG 29445[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,100]DEBUG 29445[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,100]DEBUG 29445[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,101]DEBUG 29446[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,101]DEBUG 29446[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,101]DEBUG 29446[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,102]DEBUG 29447[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,102]DEBUG 29447[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,102]DEBUG 29447[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=83, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,102]DEBUG 29447[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=82, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,103]DEBUG 29448[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=84, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,103]DEBUG 29448[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,103]DEBUG 29448[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2015-12-30 01:08:08,105]DEBUG 29450[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,105]DEBUG 29450[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#84]
[2015-12-30 01:08:08,105]DEBUG 29450[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,106]DEBUG 29451[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,106]DEBUG 29451[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,106]DEBUG 29451[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,107]DEBUG 29452[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,107]DEBUG 29452[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,107]DEBUG 29452[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,107]DEBUG 29452[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,108]DEBUG 29453[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=83, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,108]DEBUG 29453[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=82, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,108]DEBUG 29453[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=84, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,108]DEBUG 29453[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,109]DEBUG 29454[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2015-12-30 01:08:08,110]DEBUG 29455[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,111]DEBUG 29456[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,111]DEBUG 29456[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,111]DEBUG 29456[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,112]DEBUG 29457[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,112]DEBUG 29457[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,112]DEBUG 29457[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,115]DEBUG 29460[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,115]DEBUG 29460[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,115]DEBUG 29460[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=83, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,115]DEBUG 29460[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=82, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,116]DEBUG 29461[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=84, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,116]DEBUG 29461[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,116]DEBUG 29461[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:08,118]DEBUG 29463[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,118]DEBUG 29463[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@436dd382, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,118]DEBUG 29463[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:08,118]DEBUG 29463[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3b2dfd7c]
[2015-12-30 01:08:08,118]DEBUG 29463[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:08,120]DEBUG 29465[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:08,120]DEBUG 29465[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,120]DEBUG 29465[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3b2dfd7c] after transaction
[2015-12-30 01:08:08,120]DEBUG 29465[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:08,120]DEBUG 29465[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:08,121]DEBUG 29466[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,121] INFO 29466[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@436dd382, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,122]DEBUG 29467[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@436dd382, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:08,123]DEBUG 29468[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,123]DEBUG 29468[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,123]DEBUG 29468[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@bed4bee, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:08,124]DEBUG 29469[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:08,124]DEBUG 29469[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:08,124]DEBUG 29469[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:08,124]DEBUG 29469[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:08,124]DEBUG 29469[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:08,125]DEBUG 29470[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:08,125]DEBUG 29470[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:08,125]DEBUG 29470[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:08,125]DEBUG 29470[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:08,125]DEBUG 29470[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:08,125]DEBUG 29470[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:08,125]DEBUG 29470[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:08,125]DEBUG 29470[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:08,125]DEBUG 29470[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:08,125]DEBUG 29470[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:08,125]DEBUG 29470[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:08,126]DEBUG 29471[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:08,126]DEBUG 29471[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:08,126]DEBUG 29471[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:08,126]DEBUG 29471[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:08,126]DEBUG 29471[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:08,126]DEBUG 29471[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:08,126]DEBUG 29471[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@bed4bee]
[2015-12-30 01:08:08,127]DEBUG 29472[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,127]DEBUG 29472[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@bed4bee, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,127]DEBUG 29472[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:08,127]DEBUG 29472[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testnumberOfProductByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,128]DEBUG 29473[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304881
[2015-12-30 01:08:08,128]DEBUG 29473[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@27fcd3fe] for Hibernate transaction
[2015-12-30 01:08:08,128]DEBUG 29473[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@27fcd3fe]
[2015-12-30 01:08:08,128]DEBUG 29473[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:08,128]DEBUG 29473[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:08,128]DEBUG 29473[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:08,128]DEBUG 29473[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@bed4bee, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,128] INFO 29473[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:08,128]DEBUG 29473[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,128]DEBUG 29473[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,130]DEBUG 29475[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[85]]
[2015-12-30 01:08:08,130]DEBUG 29475[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,130]DEBUG 29475[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 85, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,130]DEBUG 29475[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,130]DEBUG 29475[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,131]DEBUG 29476[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[86]]
[2015-12-30 01:08:08,132]DEBUG 29477[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,132]DEBUG 29477[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 86, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,132]DEBUG 29477[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,132]DEBUG 29477[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,133]DEBUG 29478[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[87]]
[2015-12-30 01:08:08,133]DEBUG 29478[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,133]DEBUG 29478[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 87, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,134]DEBUG 29479[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,134]DEBUG 29479[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,134]DEBUG 29479[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,134]DEBUG 29479[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,134]DEBUG 29479[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,134]DEBUG 29479[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=85, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,135]DEBUG 29480[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=87, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,135]DEBUG 29480[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=86, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,135]DEBUG 29480[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 01:08:08,136]DEBUG 29481[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,136]DEBUG 29481[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,137]DEBUG 29482[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,137]DEBUG 29482[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,137]DEBUG 29482[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,137]DEBUG 29482[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,137]DEBUG 29482[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,139]DEBUG 29484[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,139]DEBUG 29484[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,140]DEBUG 29485[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,140]DEBUG 29485[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,140]DEBUG 29485[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,140]DEBUG 29485[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,140]DEBUG 29485[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,140]DEBUG 29485[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,142]DEBUG 29487[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,143]DEBUG 29488[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,143]DEBUG 29488[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2015-12-30 01:08:08,145]DEBUG 29490[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,145]DEBUG 29490[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#85]
[2015-12-30 01:08:08,145]DEBUG 29490[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,146]DEBUG 29491[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,146]DEBUG 29491[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,146]DEBUG 29491[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,146]DEBUG 29491[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,147]DEBUG 29492[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,147]DEBUG 29492[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,147]DEBUG 29492[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,147]DEBUG 29492[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=85, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,148]DEBUG 29493[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=87, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,148]DEBUG 29493[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=86, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,148]DEBUG 29493[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,148]DEBUG 29493[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:08,150]DEBUG 29495[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,150]DEBUG 29495[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@bed4bee, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,150]DEBUG 29495[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:08,150]DEBUG 29495[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@27fcd3fe]
[2015-12-30 01:08:08,151]DEBUG 29496[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:08,152]DEBUG 29497[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:08,152]DEBUG 29497[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,152]DEBUG 29497[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@27fcd3fe] after transaction
[2015-12-30 01:08:08,153]DEBUG 29498[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:08,153]DEBUG 29498[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:08,153]DEBUG 29498[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,153] INFO 29498[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@bed4bee, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,155]DEBUG 29500[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@bed4bee, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:08,155]DEBUG 29500[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,156]DEBUG 29501[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,156]DEBUG 29501[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@dcf18e0, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:08,156]DEBUG 29501[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:08,157]DEBUG 29502[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:08,157]DEBUG 29502[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:08,157]DEBUG 29502[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:08,157]DEBUG 29502[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:08,157]DEBUG 29502[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:08,158]DEBUG 29503[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:08,158]DEBUG 29503[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:08,158]DEBUG 29503[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:08,158]DEBUG 29503[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:08,158]DEBUG 29503[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:08,159]DEBUG 29504[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:08,159]DEBUG 29504[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:08,159]DEBUG 29504[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:08,159]DEBUG 29504[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:08,159]DEBUG 29504[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:08,160]DEBUG 29505[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:08,160]DEBUG 29505[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:08,160]DEBUG 29505[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:08,160]DEBUG 29505[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:08,160]DEBUG 29505[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:08,161]DEBUG 29506[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:08,161]DEBUG 29506[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@dcf18e0]
[2015-12-30 01:08:08,162]DEBUG 29507[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,162]DEBUG 29507[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@dcf18e0, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,162]DEBUG 29507[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:08,164]DEBUG 29509[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByDescription]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,164]DEBUG 29509[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304881
[2015-12-30 01:08:08,164]DEBUG 29509[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2d53eafd] for Hibernate transaction
[2015-12-30 01:08:08,164]DEBUG 29509[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2d53eafd]
[2015-12-30 01:08:08,164]DEBUG 29509[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:08,165]DEBUG 29510[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:08,166]DEBUG 29511[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:08,166]DEBUG 29511[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@dcf18e0, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,166] INFO 29511[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:08,166]DEBUG 29511[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,166]DEBUG 29511[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,168]DEBUG 29513[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[88]]
[2015-12-30 01:08:08,168]DEBUG 29513[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,168]DEBUG 29513[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 88, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,168]DEBUG 29513[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,168]DEBUG 29513[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,173]DEBUG 29518[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[89]]
[2015-12-30 01:08:08,173]DEBUG 29518[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,173]DEBUG 29518[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 89, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,173]DEBUG 29518[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,173]DEBUG 29518[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,174]DEBUG 29519[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[90]]
[2015-12-30 01:08:08,175]DEBUG 29520[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,175]DEBUG 29520[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 90, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,176]DEBUG 29521[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,176]DEBUG 29521[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,176]DEBUG 29521[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,176]DEBUG 29521[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,177]DEBUG 29522[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,177]DEBUG 29522[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=90, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,177]DEBUG 29522[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=88, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,177]DEBUG 29522[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=89, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,178]DEBUG 29523[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 01:08:08,178]DEBUG 29523[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,178]DEBUG 29523[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,179]DEBUG 29524[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,179]DEBUG 29524[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,179]DEBUG 29524[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,180]DEBUG 29525[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,180]DEBUG 29525[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,182]DEBUG 29527[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,183]DEBUG 29528[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,183]DEBUG 29528[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,183]DEBUG 29528[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,183]DEBUG 29528[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,184]DEBUG 29529[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,184]DEBUG 29529[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,184]DEBUG 29529[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,190]DEBUG 29535[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,190]DEBUG 29535[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,190]DEBUG 29535[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2015-12-30 01:08:08,194]DEBUG 29539[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,194]DEBUG 29539[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#88]
[2015-12-30 01:08:08,194]DEBUG 29539[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#89]
[2015-12-30 01:08:08,195]DEBUG 29540[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#90]
[2015-12-30 01:08:08,195]DEBUG 29540[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,195]DEBUG 29540[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,195]DEBUG 29540[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,196]DEBUG 29541[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,196]DEBUG 29541[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,196]DEBUG 29541[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,197]DEBUG 29542[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,197]DEBUG 29542[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,197]DEBUG 29542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=90, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,197]DEBUG 29542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=88, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,197]DEBUG 29542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=89, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,201]DEBUG 29546[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,201]DEBUG 29546[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=?
[2015-12-30 01:08:08,203]DEBUG 29548[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,203]DEBUG 29548[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#88]
[2015-12-30 01:08:08,203]DEBUG 29548[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#89]
[2015-12-30 01:08:08,204]DEBUG 29549[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#90]
[2015-12-30 01:08:08,204]DEBUG 29549[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,204]DEBUG 29549[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,204]DEBUG 29549[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,205]DEBUG 29550[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,205]DEBUG 29550[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,205]DEBUG 29550[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,205]DEBUG 29550[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,205]DEBUG 29550[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,209]DEBUG 29554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=90, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,210]DEBUG 29555[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=88, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,210]DEBUG 29555[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=89, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,210]DEBUG 29555[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,210]DEBUG 29555[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=?
[2015-12-30 01:08:08,212]DEBUG 29557[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,212]DEBUG 29557[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#88]
[2015-12-30 01:08:08,212]DEBUG 29557[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#89]
[2015-12-30 01:08:08,212]DEBUG 29557[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#90]
[2015-12-30 01:08:08,212]DEBUG 29557[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,212]DEBUG 29557[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,212]DEBUG 29557[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,213]DEBUG 29558[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,213]DEBUG 29558[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,213]DEBUG 29558[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,213]DEBUG 29558[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,213]DEBUG 29558[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,213]DEBUG 29558[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=90, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,213]DEBUG 29558[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=88, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,213]DEBUG 29558[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=89, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,214]DEBUG 29559[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,214]DEBUG 29559[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=?
[2015-12-30 01:08:08,215]DEBUG 29560[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,215]DEBUG 29560[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#88]
[2015-12-30 01:08:08,216]DEBUG 29561[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#89]
[2015-12-30 01:08:08,216]DEBUG 29561[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#90]
[2015-12-30 01:08:08,216]DEBUG 29561[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,216]DEBUG 29561[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,216]DEBUG 29561[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,216]DEBUG 29561[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,216]DEBUG 29561[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,217]DEBUG 29562[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,217]DEBUG 29562[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,217]DEBUG 29562[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,217]DEBUG 29562[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=90, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,217]DEBUG 29562[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=88, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,217]DEBUG 29562[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=89, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,217]DEBUG 29562[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,217]DEBUG 29562[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:08,221]DEBUG 29566[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,221]DEBUG 29566[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@dcf18e0, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,221]DEBUG 29566[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:08,221]DEBUG 29566[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2d53eafd]
[2015-12-30 01:08:08,221]DEBUG 29566[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:08,222]DEBUG 29567[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:08,222]DEBUG 29567[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,222]DEBUG 29567[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2d53eafd] after transaction
[2015-12-30 01:08:08,222]DEBUG 29567[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:08,222]DEBUG 29567[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:08,222]DEBUG 29567[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,223] INFO 29568[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@dcf18e0, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,226]DEBUG 29571[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@dcf18e0, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:08,226]DEBUG 29571[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,226]DEBUG 29571[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,226]DEBUG 29571[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@589b999d, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:08,226]DEBUG 29571[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:08,227]DEBUG 29572[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:08,227]DEBUG 29572[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:08,227]DEBUG 29572[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:08,227]DEBUG 29572[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:08,227]DEBUG 29572[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:08,227]DEBUG 29572[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:08,227]DEBUG 29572[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:08,227]DEBUG 29572[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:08,227]DEBUG 29572[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:08,227]DEBUG 29572[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:08,232]DEBUG 29577[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:08,232]DEBUG 29577[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:08,232]DEBUG 29577[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:08,232]DEBUG 29577[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:08,232]DEBUG 29577[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:08,232]DEBUG 29577[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:08,232]DEBUG 29577[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:08,232]DEBUG 29577[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:08,232]DEBUG 29577[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:08,233]DEBUG 29578[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:08,233]DEBUG 29578[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:08,233]DEBUG 29578[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@589b999d]
[2015-12-30 01:08:08,233]DEBUG 29578[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,233]DEBUG 29578[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@589b999d, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,233]DEBUG 29578[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:08,239]DEBUG 29584[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testcontainsProductByDescription]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,239]DEBUG 29584[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304882
[2015-12-30 01:08:08,239]DEBUG 29584[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7ffc64c8] for Hibernate transaction
[2015-12-30 01:08:08,239]DEBUG 29584[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7ffc64c8]
[2015-12-30 01:08:08,239]DEBUG 29584[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:08,239]DEBUG 29584[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:08,240]DEBUG 29585[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:08,240]DEBUG 29585[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@589b999d, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,240] INFO 29585[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:08,240]DEBUG 29585[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,240]DEBUG 29585[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,244]DEBUG 29589[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[91]]
[2015-12-30 01:08:08,244]DEBUG 29589[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,244]DEBUG 29589[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 91, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,244]DEBUG 29589[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,244]DEBUG 29589[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,245]DEBUG 29590[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[92]]
[2015-12-30 01:08:08,246]DEBUG 29591[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,246]DEBUG 29591[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 92, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,246]DEBUG 29591[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,246]DEBUG 29591[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,247]DEBUG 29592[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[93]]
[2015-12-30 01:08:08,247]DEBUG 29592[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,247]DEBUG 29592[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 93, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,248]DEBUG 29593[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,248]DEBUG 29593[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,248]DEBUG 29593[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,248]DEBUG 29593[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,248]DEBUG 29593[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,248]DEBUG 29593[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=91, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,248]DEBUG 29593[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=92, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,249]DEBUG 29594[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=93, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,249]DEBUG 29594[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 01:08:08,249]DEBUG 29594[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,249]DEBUG 29594[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,249]DEBUG 29594[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,249]DEBUG 29594[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,249]DEBUG 29594[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,250]DEBUG 29595[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,250]DEBUG 29595[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,254]DEBUG 29599[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,254]DEBUG 29599[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,254]DEBUG 29599[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,254]DEBUG 29599[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,254]DEBUG 29599[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,254]DEBUG 29599[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,255]DEBUG 29600[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,255]DEBUG 29600[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,257]DEBUG 29602[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,257]DEBUG 29602[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,257]DEBUG 29602[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2015-12-30 01:08:08,259]DEBUG 29604[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,259]DEBUG 29604[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#91]
[2015-12-30 01:08:08,259]DEBUG 29604[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#92]
[2015-12-30 01:08:08,259]DEBUG 29604[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#93]
[2015-12-30 01:08:08,259]DEBUG 29604[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,260]DEBUG 29605[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,260]DEBUG 29605[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,260]DEBUG 29605[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,260]DEBUG 29605[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,260]DEBUG 29605[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,260]DEBUG 29605[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,261]DEBUG 29606[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,261]DEBUG 29606[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=91, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,261]DEBUG 29606[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=92, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,261]DEBUG 29606[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=93, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,261]DEBUG 29606[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,261]DEBUG 29606[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2015-12-30 01:08:08,263]DEBUG 29608[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,263]DEBUG 29608[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#91]
[2015-12-30 01:08:08,263]DEBUG 29608[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,263]DEBUG 29608[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,263]DEBUG 29608[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,263]DEBUG 29608[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,264]DEBUG 29609[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,268]DEBUG 29613[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,268]DEBUG 29613[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,268]DEBUG 29613[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,268]DEBUG 29613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=91, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,268]DEBUG 29613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=92, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,269]DEBUG 29614[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=93, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,269]DEBUG 29614[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,269]DEBUG 29614[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2015-12-30 01:08:08,270]DEBUG 29615[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,271]DEBUG 29616[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#92]
[2015-12-30 01:08:08,271]DEBUG 29616[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,271]DEBUG 29616[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,271]DEBUG 29616[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,271]DEBUG 29616[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,271]DEBUG 29616[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,272]DEBUG 29617[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,272]DEBUG 29617[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,272]DEBUG 29617[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,272]DEBUG 29617[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=91, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,272]DEBUG 29617[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=92, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,272]DEBUG 29617[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=93, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,272]DEBUG 29617[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,272]DEBUG 29617[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2015-12-30 01:08:08,274]DEBUG 29619[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,274]DEBUG 29619[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#93]
[2015-12-30 01:08:08,274]DEBUG 29619[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,274]DEBUG 29619[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,274]DEBUG 29619[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,275]DEBUG 29620[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,275]DEBUG 29620[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,275]DEBUG 29620[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,275]DEBUG 29620[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,275]DEBUG 29620[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,275]DEBUG 29620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=91, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,275]DEBUG 29620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=92, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,275]DEBUG 29620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=93, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,275]DEBUG 29620[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,276]DEBUG 29621[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2015-12-30 01:08:08,278]DEBUG 29623[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,278]DEBUG 29623[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,278]DEBUG 29623[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,278]DEBUG 29623[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,278]DEBUG 29623[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,278]DEBUG 29623[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,278]DEBUG 29623[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,279]DEBUG 29624[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,279]DEBUG 29624[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,279]DEBUG 29624[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=91, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,279]DEBUG 29624[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=92, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,279]DEBUG 29624[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=93, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,279]DEBUG 29624[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,279]DEBUG 29624[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:08,283]DEBUG 29628[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,283]DEBUG 29628[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@589b999d, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,283]DEBUG 29628[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:08,283]DEBUG 29628[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7ffc64c8]
[2015-12-30 01:08:08,284]DEBUG 29629[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:08,285]DEBUG 29630[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:08,285]DEBUG 29630[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,285]DEBUG 29630[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7ffc64c8] after transaction
[2015-12-30 01:08:08,286]DEBUG 29631[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:08,286]DEBUG 29631[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:08,286]DEBUG 29631[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,286] INFO 29631[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@589b999d, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,287]DEBUG 29632[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@589b999d, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:08,288]DEBUG 29633[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,288]DEBUG 29633[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,289]DEBUG 29634[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2aebada3, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:08,289]DEBUG 29634[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:08,289]DEBUG 29634[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:08,289]DEBUG 29634[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:08,289]DEBUG 29634[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:08,289]DEBUG 29634[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:08,289]DEBUG 29634[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:08,289]DEBUG 29634[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:08,289]DEBUG 29634[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:08,290]DEBUG 29635[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:08,290]DEBUG 29635[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:08,290]DEBUG 29635[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:08,290]DEBUG 29635[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:08,294]DEBUG 29639[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:08,294]DEBUG 29639[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:08,294]DEBUG 29639[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:08,294]DEBUG 29639[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:08,294]DEBUG 29639[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:08,294]DEBUG 29639[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:08,295]DEBUG 29640[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:08,295]DEBUG 29640[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:08,295]DEBUG 29640[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:08,295]DEBUG 29640[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:08,295]DEBUG 29640[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2aebada3]
[2015-12-30 01:08:08,295]DEBUG 29640[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,296]DEBUG 29641[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2aebada3, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,296]DEBUG 29641[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:08,296]DEBUG 29641[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testnumberOfProductByDescription]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,296]DEBUG 29641[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304882
[2015-12-30 01:08:08,297]DEBUG 29642[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@12436c64] for Hibernate transaction
[2015-12-30 01:08:08,297]DEBUG 29642[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@12436c64]
[2015-12-30 01:08:08,297]DEBUG 29642[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:08,297]DEBUG 29642[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:08,297]DEBUG 29642[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:08,297]DEBUG 29642[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2aebada3, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,297] INFO 29642[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:08,297]DEBUG 29642[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,297]DEBUG 29642[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,301]DEBUG 29646[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[94]]
[2015-12-30 01:08:08,301]DEBUG 29646[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,301]DEBUG 29646[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 94, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,301]DEBUG 29646[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,301]DEBUG 29646[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,305]DEBUG 29650[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[95]]
[2015-12-30 01:08:08,305]DEBUG 29650[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,305]DEBUG 29650[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 95, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,305]DEBUG 29650[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,305]DEBUG 29650[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,306]DEBUG 29651[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[96]]
[2015-12-30 01:08:08,306]DEBUG 29651[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,307]DEBUG 29652[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 96, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,307]DEBUG 29652[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,307]DEBUG 29652[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,307]DEBUG 29652[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,307]DEBUG 29652[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,307]DEBUG 29652[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,308]DEBUG 29653[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=96, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,308]DEBUG 29653[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=94, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,308]DEBUG 29653[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=95, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,308]DEBUG 29653[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 01:08:08,308]DEBUG 29653[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,308]DEBUG 29653[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,308]DEBUG 29653[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,309]DEBUG 29654[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,309]DEBUG 29654[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,309]DEBUG 29654[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,309]DEBUG 29654[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,313]DEBUG 29658[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,313]DEBUG 29658[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,313]DEBUG 29658[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,313]DEBUG 29658[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,313]DEBUG 29658[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,313]DEBUG 29658[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,314]DEBUG 29659[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,314]DEBUG 29659[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,316]DEBUG 29661[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,316]DEBUG 29661[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,316]DEBUG 29661[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2015-12-30 01:08:08,318]DEBUG 29663[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,318]DEBUG 29663[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#94]
[2015-12-30 01:08:08,318]DEBUG 29663[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,318]DEBUG 29663[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,318]DEBUG 29663[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,318]DEBUG 29663[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,319]DEBUG 29664[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,319]DEBUG 29664[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,319]DEBUG 29664[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,319]DEBUG 29664[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,319]DEBUG 29664[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=96, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,320]DEBUG 29665[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=94, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,320]DEBUG 29665[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=95, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,320]DEBUG 29665[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,321]DEBUG 29666[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2015-12-30 01:08:08,322]DEBUG 29667[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,322]DEBUG 29667[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,322]DEBUG 29667[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,322]DEBUG 29667[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,322]DEBUG 29667[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,323]DEBUG 29668[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,323]DEBUG 29668[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,323]DEBUG 29668[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,323]DEBUG 29668[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,323]DEBUG 29668[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=96, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,323]DEBUG 29668[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=94, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,323]DEBUG 29668[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=95, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,323]DEBUG 29668[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,323]DEBUG 29668[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:08,327]DEBUG 29672[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,327]DEBUG 29672[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2aebada3, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,327]DEBUG 29672[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:08,327]DEBUG 29672[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@12436c64]
[2015-12-30 01:08:08,327]DEBUG 29672[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:08,328]DEBUG 29673[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:08,328]DEBUG 29673[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,328]DEBUG 29673[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@12436c64] after transaction
[2015-12-30 01:08:08,328]DEBUG 29673[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:08,328]DEBUG 29673[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:08,328]DEBUG 29673[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,329] INFO 29674[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2aebada3, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,329]DEBUG 29674[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2aebada3, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:08,330]DEBUG 29675[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,330]DEBUG 29675[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,330]DEBUG 29675[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6a37ea3c, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:08,330]DEBUG 29675[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:08,330]DEBUG 29675[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:08,330]DEBUG 29675[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:08,330]DEBUG 29675[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:08,330]DEBUG 29675[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:08,331]DEBUG 29676[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:08,331]DEBUG 29676[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:08,331]DEBUG 29676[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:08,331]DEBUG 29676[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:08,331]DEBUG 29676[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:08,331]DEBUG 29676[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:08,331]DEBUG 29676[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:08,331]DEBUG 29676[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:08,331]DEBUG 29676[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:08,331]DEBUG 29676[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:08,331]DEBUG 29676[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:08,332]DEBUG 29677[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:08,332]DEBUG 29677[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:08,332]DEBUG 29677[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:08,332]DEBUG 29677[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:08,332]DEBUG 29677[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:08,332]DEBUG 29677[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:08,332]DEBUG 29677[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6a37ea3c]
[2015-12-30 01:08:08,335]DEBUG 29680[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPrice' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,336]DEBUG 29681[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6a37ea3c, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,336]DEBUG 29681[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:08,336]DEBUG 29681[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByPrice]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,337]DEBUG 29682[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304883
[2015-12-30 01:08:08,337]DEBUG 29682[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@14c7cbb7] for Hibernate transaction
[2015-12-30 01:08:08,337]DEBUG 29682[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@14c7cbb7]
[2015-12-30 01:08:08,340]DEBUG 29685[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:08,340]DEBUG 29685[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:08,340]DEBUG 29685[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:08,340]DEBUG 29685[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6a37ea3c, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,340] INFO 29685[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:08,340]DEBUG 29685[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,340]DEBUG 29685[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,342]DEBUG 29687[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[97]]
[2015-12-30 01:08:08,342]DEBUG 29687[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,342]DEBUG 29687[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 97, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,342]DEBUG 29687[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,342]DEBUG 29687[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,343]DEBUG 29688[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[98]]
[2015-12-30 01:08:08,344]DEBUG 29689[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,344]DEBUG 29689[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 98, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,344]DEBUG 29689[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,344]DEBUG 29689[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,345]DEBUG 29690[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[99]]
[2015-12-30 01:08:08,346]DEBUG 29691[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,346]DEBUG 29691[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 99, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,347]DEBUG 29692[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,347]DEBUG 29692[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,347]DEBUG 29692[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,347]DEBUG 29692[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,347]DEBUG 29692[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,348]DEBUG 29693[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=98, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,348]DEBUG 29693[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=99, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,348]DEBUG 29693[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=97, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,348]DEBUG 29693[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 01:08:08,348]DEBUG 29693[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,348]DEBUG 29693[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,348]DEBUG 29693[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,352]DEBUG 29697[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,352]DEBUG 29697[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,352]DEBUG 29697[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,352]DEBUG 29697[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,354]DEBUG 29699[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,354]DEBUG 29699[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,354]DEBUG 29699[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,355]DEBUG 29700[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,355]DEBUG 29700[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,355]DEBUG 29700[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,355]DEBUG 29700[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,355]DEBUG 29700[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,357]DEBUG 29702[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,357]DEBUG 29702[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,357]DEBUG 29702[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice=? and this_.IsProductActive=?
[2015-12-30 01:08:08,359]DEBUG 29704[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,359]DEBUG 29704[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#98]
[2015-12-30 01:08:08,359]DEBUG 29704[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,359]DEBUG 29704[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,360]DEBUG 29705[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,360]DEBUG 29705[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,360]DEBUG 29705[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,360]DEBUG 29705[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,360]DEBUG 29705[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,360]DEBUG 29705[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,360]DEBUG 29705[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=98, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,360]DEBUG 29705[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=99, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,360]DEBUG 29705[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=97, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,361]DEBUG 29706[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,361]DEBUG 29706[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:08,362]DEBUG 29707[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,362]DEBUG 29707[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6a37ea3c, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,362]DEBUG 29707[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:08,362]DEBUG 29707[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@14c7cbb7]
[2015-12-30 01:08:08,362]DEBUG 29707[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:08,363]DEBUG 29708[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:08,364]DEBUG 29709[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,364]DEBUG 29709[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@14c7cbb7] after transaction
[2015-12-30 01:08:08,364]DEBUG 29709[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:08,364]DEBUG 29709[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:08,364]DEBUG 29709[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,364] INFO 29709[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6a37ea3c, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,365]DEBUG 29710[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@6a37ea3c, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:08,365]DEBUG 29710[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,365]DEBUG 29710[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,365]DEBUG 29710[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4e185484, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:08,366]DEBUG 29711[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:08,366]DEBUG 29711[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:08,366]DEBUG 29711[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:08,366]DEBUG 29711[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:08,366]DEBUG 29711[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:08,366]DEBUG 29711[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:08,366]DEBUG 29711[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:08,366]DEBUG 29711[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:08,366]DEBUG 29711[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:08,366]DEBUG 29711[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:08,367]DEBUG 29712[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:08,367]DEBUG 29712[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:08,367]DEBUG 29712[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:08,367]DEBUG 29712[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:08,367]DEBUG 29712[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:08,367]DEBUG 29712[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:08,367]DEBUG 29712[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:08,367]DEBUG 29712[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:08,367]DEBUG 29712[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:08,367]DEBUG 29712[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:08,372]DEBUG 29717[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:08,372]DEBUG 29717[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:08,372]DEBUG 29717[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4e185484]
[2015-12-30 01:08:08,372]DEBUG 29717[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromTo' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,372]DEBUG 29717[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4e185484, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,372]DEBUG 29717[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:08,377]DEBUG 29722[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByPriceFromTo]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,377]DEBUG 29722[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304883
[2015-12-30 01:08:08,377]DEBUG 29722[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1a8f20ae] for Hibernate transaction
[2015-12-30 01:08:08,377]DEBUG 29722[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1a8f20ae]
[2015-12-30 01:08:08,377]DEBUG 29722[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:08,378]DEBUG 29723[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:08,378]DEBUG 29723[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:08,378]DEBUG 29723[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4e185484, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,378] INFO 29723[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (12): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:08,378]DEBUG 29723[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,378]DEBUG 29723[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,379]DEBUG 29724[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[100]]
[2015-12-30 01:08:08,380]DEBUG 29725[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,380]DEBUG 29725[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 100, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,380]DEBUG 29725[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,380]DEBUG 29725[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,381]DEBUG 29726[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[101]]
[2015-12-30 01:08:08,381]DEBUG 29726[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,381]DEBUG 29726[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 101, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,382]DEBUG 29727[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,382]DEBUG 29727[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,383]DEBUG 29728[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[102]]
[2015-12-30 01:08:08,383]DEBUG 29728[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,383]DEBUG 29728[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 102, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,384]DEBUG 29729[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,384]DEBUG 29729[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,384]DEBUG 29729[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,384]DEBUG 29729[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,385]DEBUG 29730[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,385]DEBUG 29730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=102, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,385]DEBUG 29730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=100, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,385]DEBUG 29730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=101, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,385]DEBUG 29730[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 01:08:08,385]DEBUG 29730[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,385]DEBUG 29730[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,387]DEBUG 29732[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,387]DEBUG 29732[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,387]DEBUG 29732[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,387]DEBUG 29732[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,387]DEBUG 29732[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,391]DEBUG 29736[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,391]DEBUG 29736[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,391]DEBUG 29736[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,391]DEBUG 29736[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,391]DEBUG 29736[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,391]DEBUG 29736[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,392]DEBUG 29737[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,392]DEBUG 29737[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,394]DEBUG 29739[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,394]DEBUG 29739[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,394]DEBUG 29739[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice between ? and ? and this_.IsProductActive=?
[2015-12-30 01:08:08,396]DEBUG 29741[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,396]DEBUG 29741[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#100]
[2015-12-30 01:08:08,396]DEBUG 29741[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,396]DEBUG 29741[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,396]DEBUG 29741[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,398]DEBUG 29743[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,399]DEBUG 29744[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,399]DEBUG 29744[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,399]DEBUG 29744[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,399]DEBUG 29744[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,399]DEBUG 29744[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=102, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,399]DEBUG 29744[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=100, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,399]DEBUG 29744[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=101, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,399]DEBUG 29744[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,400]DEBUG 29745[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:08,401]DEBUG 29746[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,402]DEBUG 29747[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4e185484, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,402]DEBUG 29747[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:08,402]DEBUG 29747[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1a8f20ae]
[2015-12-30 01:08:08,402]DEBUG 29747[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:08,406]DEBUG 29751[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:08,407]DEBUG 29752[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,407]DEBUG 29752[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1a8f20ae] after transaction
[2015-12-30 01:08:08,407]DEBUG 29752[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:08,407]DEBUG 29752[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:08,407]DEBUG 29752[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,407] INFO 29752[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4e185484, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,408]DEBUG 29753[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4e185484, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:08,408]DEBUG 29753[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,408]DEBUG 29753[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,409]DEBUG 29754[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5e2e732c, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:08,409]DEBUG 29754[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:08,409]DEBUG 29754[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:08,409]DEBUG 29754[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:08,409]DEBUG 29754[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:08,409]DEBUG 29754[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:08,409]DEBUG 29754[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:08,410]DEBUG 29755[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:08,410]DEBUG 29755[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:08,410]DEBUG 29755[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:08,410]DEBUG 29755[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:08,410]DEBUG 29755[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:08,410]DEBUG 29755[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:08,410]DEBUG 29755[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:08,410]DEBUG 29755[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:08,410]DEBUG 29755[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:08,410]DEBUG 29755[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:08,410]DEBUG 29755[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:08,411]DEBUG 29756[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:08,411]DEBUG 29756[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:08,411]DEBUG 29756[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:08,411]DEBUG 29756[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:08,415]DEBUG 29760[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:08,415]DEBUG 29760[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5e2e732c]
[2015-12-30 01:08:08,416]DEBUG 29761[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetRowCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,416]DEBUG 29761[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5e2e732c, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,416]DEBUG 29761[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:08,416]DEBUG 29761[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetRowCount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,417]DEBUG 29762[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304884
[2015-12-30 01:08:08,417]DEBUG 29762[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@a5843f5] for Hibernate transaction
[2015-12-30 01:08:08,417]DEBUG 29762[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@a5843f5]
[2015-12-30 01:08:08,417]DEBUG 29762[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:08,417]DEBUG 29762[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:08,417]DEBUG 29762[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:08,417]DEBUG 29762[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5e2e732c, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,417] INFO 29762[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (13): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:08,417]DEBUG 29762[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,418]DEBUG 29763[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,421]DEBUG 29766[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[103]]
[2015-12-30 01:08:08,421]DEBUG 29766[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,421]DEBUG 29766[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 103, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,421]DEBUG 29766[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,421]DEBUG 29766[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,422]DEBUG 29767[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[104]]
[2015-12-30 01:08:08,422]DEBUG 29767[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,423]DEBUG 29768[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 104, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,423]DEBUG 29768[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,423]DEBUG 29768[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,424]DEBUG 29769[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[105]]
[2015-12-30 01:08:08,424]DEBUG 29769[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,424]DEBUG 29769[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 105, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,424]DEBUG 29769[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,425]DEBUG 29770[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,425]DEBUG 29770[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,425]DEBUG 29770[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,425]DEBUG 29770[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,425]DEBUG 29770[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=105, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,425]DEBUG 29770[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=104, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,425]DEBUG 29770[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=103, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,425]DEBUG 29770[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 01:08:08,426]DEBUG 29771[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,426]DEBUG 29771[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,426]DEBUG 29771[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,426]DEBUG 29771[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,426]DEBUG 29771[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,426]DEBUG 29771[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,426]DEBUG 29771[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,430]DEBUG 29775[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,430]DEBUG 29775[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,430]DEBUG 29775[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,432]DEBUG 29777[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,432]DEBUG 29777[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,432]DEBUG 29777[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,432]DEBUG 29777[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,432]DEBUG 29777[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,436]DEBUG 29781[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,436]DEBUG 29781[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,436]DEBUG 29781[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select count(*) as y0_ from Products this_ where this_.IsProductActive=?
[2015-12-30 01:08:08,441]DEBUG 29786[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,441]DEBUG 29786[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: 
[2015-12-30 01:08:08,441]DEBUG 29786[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,441]DEBUG 29786[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,441]DEBUG 29786[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,442]DEBUG 29787[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,442]DEBUG 29787[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,442]DEBUG 29787[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,442]DEBUG 29787[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,442]DEBUG 29787[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,442]DEBUG 29787[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=105, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,442]DEBUG 29787[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=104, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,442]DEBUG 29787[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=103, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,444]DEBUG 29789[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,444]DEBUG 29789[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:08,448]DEBUG 29793[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,448]DEBUG 29793[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5e2e732c, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,448]DEBUG 29793[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:08,448]DEBUG 29793[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@a5843f5]
[2015-12-30 01:08:08,448]DEBUG 29793[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:08,451]DEBUG 29796[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:08,451]DEBUG 29796[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,451]DEBUG 29796[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@a5843f5] after transaction
[2015-12-30 01:08:08,451]DEBUG 29796[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:08,451]DEBUG 29796[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:08,451]DEBUG 29796[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,451] INFO 29796[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5e2e732c, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,452]DEBUG 29797[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5e2e732c, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:08,452]DEBUG 29797[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,452]DEBUG 29797[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,453]DEBUG 29798[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5cec5796, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:08,453]DEBUG 29798[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:08,453]DEBUG 29798[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:08,453]DEBUG 29798[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:08,453]DEBUG 29798[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:08,453]DEBUG 29798[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:08,453]DEBUG 29798[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:08,453]DEBUG 29798[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:08,453]DEBUG 29798[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:08,454]DEBUG 29799[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:08,454]DEBUG 29799[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:08,454]DEBUG 29799[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:08,454]DEBUG 29799[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:08,454]DEBUG 29799[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:08,454]DEBUG 29799[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:08,454]DEBUG 29799[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:08,454]DEBUG 29799[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:08,454]DEBUG 29799[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:08,454]DEBUG 29799[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:08,458]DEBUG 29803[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:08,459]DEBUG 29804[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:08,459]DEBUG 29804[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:08,459]DEBUG 29804[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:08,459]DEBUG 29804[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5cec5796]
[2015-12-30 01:08:08,459]DEBUG 29804[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,460]DEBUG 29805[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5cec5796, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,460]DEBUG 29805[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:08,460]DEBUG 29805[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,464]DEBUG 29809[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304884
[2015-12-30 01:08:08,465]DEBUG 29810[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@28fbf6a1] for Hibernate transaction
[2015-12-30 01:08:08,465]DEBUG 29810[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@28fbf6a1]
[2015-12-30 01:08:08,465]DEBUG 29810[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:08,465]DEBUG 29810[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:08,465]DEBUG 29810[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:08,465]DEBUG 29810[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5cec5796, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,465] INFO 29810[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (14): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:08,465]DEBUG 29810[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,465]DEBUG 29810[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,470]DEBUG 29815[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[106]]
[2015-12-30 01:08:08,470]DEBUG 29815[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,470]DEBUG 29815[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 106, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,470]DEBUG 29815[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,470]DEBUG 29815[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,473]DEBUG 29818[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[107]]
[2015-12-30 01:08:08,474]DEBUG 29819[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,474]DEBUG 29819[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 107, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,474]DEBUG 29819[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,474]DEBUG 29819[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,477]DEBUG 29822[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[108]]
[2015-12-30 01:08:08,477]DEBUG 29822[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,477]DEBUG 29822[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 108, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,477]DEBUG 29822[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,477]DEBUG 29822[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,478]DEBUG 29823[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,478]DEBUG 29823[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,478]DEBUG 29823[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,483]DEBUG 29828[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=107, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,483]DEBUG 29828[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=106, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,483]DEBUG 29828[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=108, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,483]DEBUG 29828[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 01:08:08,483]DEBUG 29828[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,483]DEBUG 29828[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,484]DEBUG 29829[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,484]DEBUG 29829[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,484]DEBUG 29829[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,484]DEBUG 29829[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,484]DEBUG 29829[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,488]DEBUG 29833[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,489]DEBUG 29834[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,489]DEBUG 29834[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,489]DEBUG 29834[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,489]DEBUG 29834[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,489]DEBUG 29834[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,489]DEBUG 29834[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,489]DEBUG 29834[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,491]DEBUG 29836[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,492]DEBUG 29837[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,492]DEBUG 29837[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2015-12-30 01:08:08,495]DEBUG 29840[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,495]DEBUG 29840[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#106]
[2015-12-30 01:08:08,495]DEBUG 29840[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#107]
[2015-12-30 01:08:08,495]DEBUG 29840[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#108]
[2015-12-30 01:08:08,495]DEBUG 29840[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,495]DEBUG 29840[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,495]DEBUG 29840[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,498]DEBUG 29843[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,498]DEBUG 29843[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,498]DEBUG 29843[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,498]DEBUG 29843[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,498]DEBUG 29843[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,498]DEBUG 29843[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=107, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,498]DEBUG 29843[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=106, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,499]DEBUG 29844[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=108, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,499]DEBUG 29844[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,499]DEBUG 29844[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:08,501]DEBUG 29846[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,502]DEBUG 29847[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5cec5796, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,502]DEBUG 29847[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:08,502]DEBUG 29847[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@28fbf6a1]
[2015-12-30 01:08:08,502]DEBUG 29847[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:08,504]DEBUG 29849[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:08,505]DEBUG 29850[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,505]DEBUG 29850[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@28fbf6a1] after transaction
[2015-12-30 01:08:08,505]DEBUG 29850[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:08,505]DEBUG 29850[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:08,505]DEBUG 29850[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,505] INFO 29850[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5cec5796, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,506]DEBUG 29851[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5cec5796, testMethod = testfindByID@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:08,506]DEBUG 29851[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,506]DEBUG 29851[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,509]DEBUG 29854[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@7102adc0, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:08,509]DEBUG 29854[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:08,509]DEBUG 29854[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:08,509]DEBUG 29854[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:08,509]DEBUG 29854[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:08,509]DEBUG 29854[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:08,509]DEBUG 29854[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:08,509]DEBUG 29854[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:08,509]DEBUG 29854[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:08,510]DEBUG 29855[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:08,510]DEBUG 29855[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:08,510]DEBUG 29855[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:08,510]DEBUG 29855[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:08,514]DEBUG 29859[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:08,514]DEBUG 29859[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:08,514]DEBUG 29859[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:08,514]DEBUG 29859[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:08,514]DEBUG 29859[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:08,514]DEBUG 29859[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:08,514]DEBUG 29859[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:08,514]DEBUG 29859[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:08,514]DEBUG 29859[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:08,515]DEBUG 29860[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:08,515]DEBUG 29860[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@7102adc0]
[2015-12-30 01:08:08,515]DEBUG 29860[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByNameSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,515]DEBUG 29860[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@7102adc0, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,515]DEBUG 29860[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:08,520]DEBUG 29865[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByNameSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,520]DEBUG 29865[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304885
[2015-12-30 01:08:08,520]DEBUG 29865[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7a14ff96] for Hibernate transaction
[2015-12-30 01:08:08,520]DEBUG 29865[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7a14ff96]
[2015-12-30 01:08:08,520]DEBUG 29865[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:08,520]DEBUG 29865[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:08,521]DEBUG 29866[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:08,521]DEBUG 29866[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@7102adc0, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,521] INFO 29866[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (15): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:08,521]DEBUG 29866[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,521]DEBUG 29866[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,524]DEBUG 29869[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[109]]
[2015-12-30 01:08:08,524]DEBUG 29869[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,524]DEBUG 29869[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 109, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,524]DEBUG 29869[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,524]DEBUG 29869[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,526]DEBUG 29871[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[110]]
[2015-12-30 01:08:08,527]DEBUG 29872[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,527]DEBUG 29872[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 110, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,527]DEBUG 29872[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,527]DEBUG 29872[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,529]DEBUG 29874[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[111]]
[2015-12-30 01:08:08,530]DEBUG 29875[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,530]DEBUG 29875[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 111, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,530]DEBUG 29875[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,530]DEBUG 29875[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,530]DEBUG 29875[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,531]DEBUG 29876[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,531]DEBUG 29876[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,531]DEBUG 29876[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=111, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,531]DEBUG 29876[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=110, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,531]DEBUG 29876[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=109, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,531]DEBUG 29876[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 01:08:08,531]DEBUG 29876[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,531]DEBUG 29876[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,536]DEBUG 29881[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,536]DEBUG 29881[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,536]DEBUG 29881[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,536]DEBUG 29881[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,536]DEBUG 29881[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,538]DEBUG 29883[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,538]DEBUG 29883[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,538]DEBUG 29883[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,539]DEBUG 29884[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,539]DEBUG 29884[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,539]DEBUG 29884[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,539]DEBUG 29884[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,539]DEBUG 29884[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,544]DEBUG 29889[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,544]DEBUG 29889[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,544]DEBUG 29889[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=? order by this_.ProductName asc
[2015-12-30 01:08:08,548]DEBUG 29893[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,548]DEBUG 29893[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#109]
[2015-12-30 01:08:08,548]DEBUG 29893[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#110]
[2015-12-30 01:08:08,548]DEBUG 29893[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#111]
[2015-12-30 01:08:08,548]DEBUG 29893[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,548]DEBUG 29893[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,548]DEBUG 29893[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,549]DEBUG 29894[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,549]DEBUG 29894[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,549]DEBUG 29894[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,549]DEBUG 29894[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,553]DEBUG 29898[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,553]DEBUG 29898[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=111, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,553]DEBUG 29898[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=110, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,553]DEBUG 29898[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=109, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,553]DEBUG 29898[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,553]DEBUG 29898[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=? order by this_.ProductName desc
[2015-12-30 01:08:08,555]DEBUG 29900[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,555]DEBUG 29900[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#111]
[2015-12-30 01:08:08,555]DEBUG 29900[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#110]
[2015-12-30 01:08:08,555]DEBUG 29900[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#109]
[2015-12-30 01:08:08,555]DEBUG 29900[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,556]DEBUG 29901[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,556]DEBUG 29901[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,556]DEBUG 29901[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,556]DEBUG 29901[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,556]DEBUG 29901[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,556]DEBUG 29901[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,556]DEBUG 29901[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,556]DEBUG 29901[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=111, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,556]DEBUG 29901[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=110, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,561]DEBUG 29906[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=109, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,561]DEBUG 29906[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,561]DEBUG 29906[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:08,562]DEBUG 29907[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,562]DEBUG 29907[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@7102adc0, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,562]DEBUG 29907[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:08,563]DEBUG 29908[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7a14ff96]
[2015-12-30 01:08:08,563]DEBUG 29908[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:08,564]DEBUG 29909[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:08,564]DEBUG 29909[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,564]DEBUG 29909[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7a14ff96] after transaction
[2015-12-30 01:08:08,564]DEBUG 29909[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:08,564]DEBUG 29909[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:08,564]DEBUG 29909[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,564] INFO 29909[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@7102adc0, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,565]DEBUG 29910[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@7102adc0, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:08,568]DEBUG 29913[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,568]DEBUG 29913[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,571]DEBUG 29916[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59692eec, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:08,571]DEBUG 29916[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:08,571]DEBUG 29916[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:08,571]DEBUG 29916[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:08,571]DEBUG 29916[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:08,571]DEBUG 29916[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:08,571]DEBUG 29916[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:08,572]DEBUG 29917[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:08,572]DEBUG 29917[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:08,572]DEBUG 29917[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:08,572]DEBUG 29917[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:08,572]DEBUG 29917[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:08,572]DEBUG 29917[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:08,572]DEBUG 29917[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:08,572]DEBUG 29917[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:08,572]DEBUG 29917[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:08,572]DEBUG 29917[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:08,575]DEBUG 29920[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:08,575]DEBUG 29920[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:08,575]DEBUG 29920[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:08,575]DEBUG 29920[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:08,575]DEBUG 29920[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:08,575]DEBUG 29920[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:08,575]DEBUG 29920[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59692eec]
[2015-12-30 01:08:08,576]DEBUG 29921[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescriptionSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,576]DEBUG 29921[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59692eec, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,576]DEBUG 29921[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:08,583]DEBUG 29928[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByDescriptionSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,583]DEBUG 29928[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304885
[2015-12-30 01:08:08,583]DEBUG 29928[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2eec5c0d] for Hibernate transaction
[2015-12-30 01:08:08,583]DEBUG 29928[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2eec5c0d]
[2015-12-30 01:08:08,584]DEBUG 29929[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:08,584]DEBUG 29929[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:08,584]DEBUG 29929[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:08,584]DEBUG 29929[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59692eec, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,584] INFO 29929[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (16): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:08,584]DEBUG 29929[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,587]DEBUG 29932[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,590]DEBUG 29935[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[112]]
[2015-12-30 01:08:08,590]DEBUG 29935[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,591]DEBUG 29936[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 112, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,591]DEBUG 29936[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,592]DEBUG 29937[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,593]DEBUG 29938[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[113]]
[2015-12-30 01:08:08,593]DEBUG 29938[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,595]DEBUG 29940[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 113, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,596]DEBUG 29941[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,596]DEBUG 29941[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,601]DEBUG 29946[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[114]]
[2015-12-30 01:08:08,601]DEBUG 29946[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,601]DEBUG 29946[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 114, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,601]DEBUG 29946[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,602]DEBUG 29947[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,602]DEBUG 29947[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,602]DEBUG 29947[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,602]DEBUG 29947[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,602]DEBUG 29947[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=114, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,602]DEBUG 29947[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=113, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,602]DEBUG 29947[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=112, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,602]DEBUG 29947[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 01:08:08,605]DEBUG 29950[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,605]DEBUG 29950[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,605]DEBUG 29950[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,605]DEBUG 29950[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,605]DEBUG 29950[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,605]DEBUG 29950[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,605]DEBUG 29950[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,609]DEBUG 29954[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,609]DEBUG 29954[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,609]DEBUG 29954[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,609]DEBUG 29954[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,609]DEBUG 29954[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,609]DEBUG 29954[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,610]DEBUG 29955[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,610]DEBUG 29955[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,615]DEBUG 29960[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,615]DEBUG 29960[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,615]DEBUG 29960[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=? order by this_.ProductDescription asc
[2015-12-30 01:08:08,617]DEBUG 29962[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,617]DEBUG 29962[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#112]
[2015-12-30 01:08:08,617]DEBUG 29962[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#113]
[2015-12-30 01:08:08,617]DEBUG 29962[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#114]
[2015-12-30 01:08:08,617]DEBUG 29962[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,617]DEBUG 29962[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,617]DEBUG 29962[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,618]DEBUG 29963[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,618]DEBUG 29963[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,618]DEBUG 29963[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,618]DEBUG 29963[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,618]DEBUG 29963[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,622]DEBUG 29967[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=114, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,623]DEBUG 29968[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=113, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,623]DEBUG 29968[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=112, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,623]DEBUG 29968[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,623]DEBUG 29968[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=? order by this_.ProductDescription desc
[2015-12-30 01:08:08,625]DEBUG 29970[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,625]DEBUG 29970[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#114]
[2015-12-30 01:08:08,625]DEBUG 29970[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#113]
[2015-12-30 01:08:08,625]DEBUG 29970[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#112]
[2015-12-30 01:08:08,625]DEBUG 29970[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,626]DEBUG 29971[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,626]DEBUG 29971[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,626]DEBUG 29971[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,626]DEBUG 29971[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,626]DEBUG 29971[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,631]DEBUG 29976[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,631]DEBUG 29976[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,631]DEBUG 29976[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=114, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,631]DEBUG 29976[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=113, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,631]DEBUG 29976[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=112, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,631]DEBUG 29976[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,631]DEBUG 29976[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:08,633]DEBUG 29978[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,633]DEBUG 29978[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59692eec, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,633]DEBUG 29978[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:08,633]DEBUG 29978[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2eec5c0d]
[2015-12-30 01:08:08,633]DEBUG 29978[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:08,634]DEBUG 29979[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:08,634]DEBUG 29979[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,634]DEBUG 29979[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2eec5c0d] after transaction
[2015-12-30 01:08:08,635]DEBUG 29980[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:08,635]DEBUG 29980[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:08,638]DEBUG 29983[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,638] INFO 29983[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59692eec, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,639]DEBUG 29984[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59692eec, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:08,641]DEBUG 29986[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,641]DEBUG 29986[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,641]DEBUG 29986[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@50e72a24, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:08,641]DEBUG 29986[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:08,641]DEBUG 29986[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:08,641]DEBUG 29986[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:08,641]DEBUG 29986[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:08,642]DEBUG 29987[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:08,642]DEBUG 29987[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:08,642]DEBUG 29987[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:08,642]DEBUG 29987[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:08,642]DEBUG 29987[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:08,642]DEBUG 29987[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:08,642]DEBUG 29987[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:08,642]DEBUG 29987[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:08,642]DEBUG 29987[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:08,642]DEBUG 29987[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:08,642]DEBUG 29987[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:08,643]DEBUG 29988[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:08,643]DEBUG 29988[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:08,643]DEBUG 29988[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:08,643]DEBUG 29988[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:08,643]DEBUG 29988[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:08,643]DEBUG 29988[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:08,643]DEBUG 29988[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:08,643]DEBUG 29988[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@50e72a24]
[2015-12-30 01:08:08,650]DEBUG 29995[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromToSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,650]DEBUG 29995[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@50e72a24, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,650]DEBUG 29995[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:08,651]DEBUG 29996[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByPriceFromToSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,651]DEBUG 29996[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304886
[2015-12-30 01:08:08,651]DEBUG 29996[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@24f80d7c] for Hibernate transaction
[2015-12-30 01:08:08,651]DEBUG 29996[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@24f80d7c]
[2015-12-30 01:08:08,651]DEBUG 29996[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:08,651]DEBUG 29996[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:08,651]DEBUG 29996[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:08,651]DEBUG 29996[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@50e72a24, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,656] INFO 30001[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (17): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:08,656]DEBUG 30001[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,656]DEBUG 30001[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,659]DEBUG 30004[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[115]]
[2015-12-30 01:08:08,659]DEBUG 30004[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,659]DEBUG 30004[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 115, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,659]DEBUG 30004[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,659]DEBUG 30004[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,662]DEBUG 30007[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[116]]
[2015-12-30 01:08:08,662]DEBUG 30007[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,662]DEBUG 30007[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 116, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,662]DEBUG 30007[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,662]DEBUG 30007[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,663]DEBUG 30008[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[117]]
[2015-12-30 01:08:08,663]DEBUG 30008[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,663]DEBUG 30008[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 117, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,664]DEBUG 30009[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,664]DEBUG 30009[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,664]DEBUG 30009[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,664]DEBUG 30009[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,664]DEBUG 30009[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,664]DEBUG 30009[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=115, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,665]DEBUG 30010[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=117, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,665]DEBUG 30010[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=116, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,665]DEBUG 30010[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 01:08:08,665]DEBUG 30010[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,665]DEBUG 30010[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,665]DEBUG 30010[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,665]DEBUG 30010[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,670]DEBUG 30015[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,670]DEBUG 30015[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,670]DEBUG 30015[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,675]DEBUG 30020[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,675]DEBUG 30020[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,675]DEBUG 30020[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,675]DEBUG 30020[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,675]DEBUG 30020[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,676]DEBUG 30021[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,676]DEBUG 30021[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,677]DEBUG 30022[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,681]DEBUG 30026[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,681]DEBUG 30026[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,681]DEBUG 30026[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice between ? and ? and this_.IsProductActive=? order by this_.ProductPrice asc
[2015-12-30 01:08:08,682]DEBUG 30027[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,683]DEBUG 30028[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#115]
[2015-12-30 01:08:08,683]DEBUG 30028[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#116]
[2015-12-30 01:08:08,683]DEBUG 30028[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#117]
[2015-12-30 01:08:08,683]DEBUG 30028[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,683]DEBUG 30028[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,683]DEBUG 30028[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,684]DEBUG 30029[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,684]DEBUG 30029[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,684]DEBUG 30029[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,684]DEBUG 30029[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,684]DEBUG 30029[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,684]DEBUG 30029[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=115, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,684]DEBUG 30029[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=117, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,690]DEBUG 30035[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=116, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,690]DEBUG 30035[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,690]DEBUG 30035[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice between ? and ? and this_.IsProductActive=? order by this_.ProductPrice desc
[2015-12-30 01:08:08,692]DEBUG 30037[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 01:08:08,692]DEBUG 30037[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#117]
[2015-12-30 01:08:08,692]DEBUG 30037[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#116]
[2015-12-30 01:08:08,692]DEBUG 30037[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#115]
[2015-12-30 01:08:08,692]DEBUG 30037[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 01:08:08,692]DEBUG 30037[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,692]DEBUG 30037[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 01:08:08,693]DEBUG 30038[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,693]DEBUG 30038[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,693]DEBUG 30038[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,693]DEBUG 30038[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,693]DEBUG 30038[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,693]DEBUG 30038[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=115, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,693]DEBUG 30038[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=117, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,693]DEBUG 30038[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=116, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,696]DEBUG 30041[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,696]DEBUG 30041[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:08,699]DEBUG 30044[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,699]DEBUG 30044[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@50e72a24, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,699]DEBUG 30044[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:08,699]DEBUG 30044[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@24f80d7c]
[2015-12-30 01:08:08,699]DEBUG 30044[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:08,704]DEBUG 30049[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:08,704]DEBUG 30049[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,704]DEBUG 30049[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@24f80d7c] after transaction
[2015-12-30 01:08:08,704]DEBUG 30049[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:08,704]DEBUG 30049[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:08,705]DEBUG 30050[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,705] INFO 30050[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@50e72a24, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 01:08:08,705]DEBUG 30050[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@50e72a24, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:08,710]DEBUG 30055[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,710]DEBUG 30055[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,710]DEBUG 30055[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5f07fe3, testMethod = [null], testException = [null]]].
[2015-12-30 01:08:08,710]DEBUG 30055[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 01:08:08,710]DEBUG 30055[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 01:08:08,711]DEBUG 30056[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 01:08:08,711]DEBUG 30056[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 01:08:08,711]DEBUG 30056[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 01:08:08,711]DEBUG 30056[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 01:08:08,711]DEBUG 30056[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 01:08:08,711]DEBUG 30056[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 01:08:08,711]DEBUG 30056[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 01:08:08,711]DEBUG 30056[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 01:08:08,711]DEBUG 30056[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 01:08:08,711]DEBUG 30056[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 01:08:08,711]DEBUG 30056[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 01:08:08,712]DEBUG 30057[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 01:08:08,712]DEBUG 30057[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 01:08:08,712]DEBUG 30057[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 01:08:08,712]DEBUG 30057[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 01:08:08,712]DEBUG 30057[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 01:08:08,712]DEBUG 30057[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 01:08:08,712]DEBUG 30057[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 01:08:08,712]DEBUG 30057[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 01:08:08,712]DEBUG 30057[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 01:08:08,717]DEBUG 30062[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5f07fe3]
[2015-12-30 01:08:08,717]DEBUG 30062[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,717]DEBUG 30062[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5f07fe3, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 01:08:08,717]DEBUG 30062[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 01:08:08,718]DEBUG 30063[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 01:08:08,718]DEBUG 30063[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514304887
[2015-12-30 01:08:08,724]DEBUG 30069[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7468776f] for Hibernate transaction
[2015-12-30 01:08:08,724]DEBUG 30069[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7468776f]
[2015-12-30 01:08:08,724]DEBUG 30069[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 01:08:08,724]DEBUG 30069[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 01:08:08,724]DEBUG 30069[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 01:08:08,724]DEBUG 30069[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5f07fe3, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 01:08:08,724] INFO 30069[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (18): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@26159325]; rollback [true]
[2015-12-30 01:08:08,724]DEBUG 30069[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,725]DEBUG 30070[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,728]DEBUG 30073[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[118]]
[2015-12-30 01:08:08,728]DEBUG 30073[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,728]DEBUG 30073[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 118, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,728]DEBUG 30073[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,728]DEBUG 30073[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,732]DEBUG 30077[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[119]]
[2015-12-30 01:08:08,732]DEBUG 30077[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,732]DEBUG 30077[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 119, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,732]DEBUG 30077[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,732]DEBUG 30077[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 01:08:08,733]DEBUG 30078[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[120]]
[2015-12-30 01:08:08,734]DEBUG 30079[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,734]DEBUG 30079[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 120, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 01:08:08,734]DEBUG 30079[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 01:08:08,734]DEBUG 30079[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 01:08:08,734]DEBUG 30079[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 01:08:08,734]DEBUG 30079[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 01:08:08,734]DEBUG 30079[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 01:08:08,735]DEBUG 30080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=120, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 01:08:08,735]DEBUG 30080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=119, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 01:08:08,735]DEBUG 30080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=118, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 01:08:08,735]DEBUG 30080[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 01:08:08,735]DEBUG 30080[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,735]DEBUG 30080[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,735]DEBUG 30080[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,735]DEBUG 30080[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,740]DEBUG 30085[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,740]DEBUG 30085[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 01:08:08,740]DEBUG 30085[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,743]DEBUG 30088[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,743]DEBUG 30088[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,743]DEBUG 30088[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,743]DEBUG 30088[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,743]DEBUG 30088[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,743]DEBUG 30088[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 01:08:08,744]DEBUG 30089[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 01:08:08,744]DEBUG 30089[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 01:08:08,746]DEBUG 30091[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,749]DEBUG 30094[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 01:08:08,749]DEBUG 30094[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 01:08:08,750]DEBUG 30095[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 01:08:08,750]DEBUG 30095[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5f07fe3, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 01:08:08,750]DEBUG 30095[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 01:08:08,750]DEBUG 30095[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7468776f]
[2015-12-30 01:08:08,751]DEBUG 30096[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 01:08:08,752]DEBUG 30097[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 01:08:08,752]DEBUG 30097[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,752]DEBUG 30097[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7468776f] after transaction
[2015-12-30 01:08:08,752]DEBUG 30097[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 01:08:08,752]DEBUG 30097[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 01:08:08,752]DEBUG 30097[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 01:08:08,752] INFO 30097[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5f07fe3, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 01:08:08,753]DEBUG 30098[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5f07fe3, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 01:08:08,756]DEBUG 30101[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@16240629 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2015-12-30 01:08:08,767] INFO 30112[Thread-0] - org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1002) - Closing org.springframework.context.support.GenericApplicationContext@29f12030: startup date [Wed Dec 30 01:07:44 EET 2015]; root of context hierarchy
[2015-12-30 01:08:08,775]DEBUG 30120[Thread-0] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2015-12-30 01:08:08,775] INFO 30120[Thread-0] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:422) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@61355dd0: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderDao,roleDao,userDao,regionDao,orderStatusDao,productDao,dimensionDao,customerTypeDao,orderItemDao,creditCardTypeDao,sessionFactory]; root of factory hierarchy
[2015-12-30 01:08:08,775] INFO 30120[Thread-1] - org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1002) - Closing org.springframework.context.support.GenericApplicationContext@722ee101: startup date [Wed Dec 30 01:08:00 EET 2015]; root of context hierarchy
[2015-12-30 01:08:08,776]DEBUG 30121[Thread-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2015-12-30 01:08:08,776] INFO 30121[Thread-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:422) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6c16e441: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderDao,roleDao,userDao,regionDao,orderStatusDao,productDao,dimensionDao,customerTypeDao,orderItemDao,creditCardTypeDao,sessionFactory]; root of factory hierarchy
[2015-12-30 01:08:08,944]DEBUG 30289[Thread-0] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:477) - Retrieved dependent beans for bean 'orderItemDao': [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest, com.softserveinc.edu.oms.persistence.dao.OrderDaoTest, com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase, com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest, com.softserveinc.edu.oms.persistence.dao.RoleDAOTest, com.softserveinc.edu.oms.persistence.dao.RegionDaoTest, com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest, com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 01:08:08,944]DEBUG 30289[Thread-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:477) - Retrieved dependent beans for bean 'orderItemDao': [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 01:08:08,947]DEBUG 30292[Thread-1] - org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:172) - Invoking destroy() on bean with name 'sessionFactory'
[2015-12-30 01:08:08,947] INFO 30292[Thread-1] - org.springframework.orm.hibernate3.AbstractSessionFactoryBean.destroy(AbstractSessionFactoryBean.java:246) - Closing Hibernate SessionFactory
[2015-12-30 01:08:08,947] INFO 30292[Thread-1] - org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) - closing
[2015-12-30 01:08:08,948] INFO 30293[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2015-12-30 01:08:08,948]DEBUG 30293[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2015-12-30 01:08:08,949] INFO 30294[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2015-12-30 01:08:08,949]DEBUG 30294[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD3262E1ABF7
[2015-12-30 01:08:08,950]DEBUG 30295[Thread-0] - org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:172) - Invoking destroy() on bean with name 'sessionFactory'
[2015-12-30 01:08:08,953] INFO 30298[Thread-0] - org.springframework.orm.hibernate3.AbstractSessionFactoryBean.destroy(AbstractSessionFactoryBean.java:246) - Closing Hibernate SessionFactory
[2015-12-30 01:08:08,953] INFO 30298[Thread-0] - org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) - closing
[2015-12-30 01:08:08,953] INFO 30298[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2015-12-30 01:08:08,960]DEBUG 30305[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2015-12-30 01:08:08,960] INFO 30305[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2015-12-30 01:08:08,961]DEBUG 30306[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD3262E1ABF7
[2015-12-30 01:08:09,038]DEBUG 30383[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32A6376397
[2015-12-30 01:08:09,039]DEBUG 30384[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop constraint FKA2B1AD3262E1ABF7
[2015-12-30 01:08:09,039]DEBUG 30384[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fka2b1ad3262e1abf7" of relation "orderitems" does not exist
[2015-12-30 01:08:09,039]DEBUG 30384[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32A6376397
[2015-12-30 01:08:09,115]DEBUG 30460[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32BCDB3C97
[2015-12-30 01:08:09,116]DEBUG 30461[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop constraint FKA2B1AD32A6376397
[2015-12-30 01:08:09,116]DEBUG 30461[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fka2b1ad32a6376397" of relation "orderitems" does not exist
[2015-12-30 01:08:09,116]DEBUG 30461[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32BCDB3C97
[2015-12-30 01:08:09,180]DEBUG 30525[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05990DB877
[2015-12-30 01:08:09,180]DEBUG 30525[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop constraint FKA2B1AD32BCDB3C97
[2015-12-30 01:08:09,180]DEBUG 30525[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fka2b1ad32bcdb3c97" of relation "orderitems" does not exist
[2015-12-30 01:08:09,180]DEBUG 30525[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05990DB877
[2015-12-30 01:08:09,235]DEBUG 30580[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05C0F431DD
[2015-12-30 01:08:09,235]DEBUG 30580[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop constraint FK8D444F05990DB877
[2015-12-30 01:08:09,235]DEBUG 30580[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk8d444f05990db877" of relation "orders" does not exist
[2015-12-30 01:08:09,235]DEBUG 30580[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05C0F431DD
[2015-12-30 01:08:09,308]DEBUG 30653[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05F161465
[2015-12-30 01:08:09,308]DEBUG 30653[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop constraint FK8D444F05C0F431DD
[2015-12-30 01:08:09,308]DEBUG 30653[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk8d444f05c0f431dd" of relation "orders" does not exist
[2015-12-30 01:08:09,308]DEBUG 30653[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05F161465
[2015-12-30 01:08:09,385]DEBUG 30730[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE83D05058F
[2015-12-30 01:08:09,386]DEBUG 30731[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop constraint FK8D444F05F161465
[2015-12-30 01:08:09,390]DEBUG 30735[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk8d444f05f161465" of relation "orders" does not exist
[2015-12-30 01:08:09,390]DEBUG 30735[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE83D05058F
[2015-12-30 01:08:09,486]DEBUG 30831[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE89AEF426F
[2015-12-30 01:08:09,486]DEBUG 30831[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop constraint FK4E39DE83D05058F
[2015-12-30 01:08:09,486]DEBUG 30831[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk4e39de83d05058f" of relation "users" does not exist
[2015-12-30 01:08:09,487]DEBUG 30832[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE89AEF426F
[2015-12-30 01:08:09,561]DEBUG 30906[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop constraint FK4E39DE89AEF426F
[2015-12-30 01:08:09,562]DEBUG 30907[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk4e39de89aef426f" of relation "users" does not exist
[2015-12-30 01:08:09,562]DEBUG 30907[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE8FEAD4DCF
[2015-12-30 01:08:09,562]DEBUG 30907[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE8FEAD4DCF
[2015-12-30 01:08:09,603]DEBUG 30948[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop constraint FK4E39DE8FEAD4DCF
[2015-12-30 01:08:09,604]DEBUG 30949[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk4e39de8fead4dcf" of relation "users" does not exist
[2015-12-30 01:08:09,604]DEBUG 30949[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CardType cascade
[2015-12-30 01:08:09,604]DEBUG 30949[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CardType cascade
[2015-12-30 01:08:09,636]DEBUG 30981[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table CardType cascade
[2015-12-30 01:08:09,637]DEBUG 30982[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "cardtype" does not exist
[2015-12-30 01:08:09,637]DEBUG 30982[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CustomerTypes cascade
[2015-12-30 01:08:09,637]DEBUG 30982[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CustomerTypes cascade
[2015-12-30 01:08:09,672]DEBUG 31017[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table CustomerTypes cascade
[2015-12-30 01:08:09,672]DEBUG 31017[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "customertypes" does not exist
[2015-12-30 01:08:09,673]DEBUG 31018[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Dimensions cascade
[2015-12-30 01:08:09,673]DEBUG 31018[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Dimensions cascade
[2015-12-30 01:08:09,703]DEBUG 31048[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderItems cascade
[2015-12-30 01:08:09,704]DEBUG 31049[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Dimensions cascade
[2015-12-30 01:08:09,704]DEBUG 31049[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "dimensions" does not exist
[2015-12-30 01:08:09,704]DEBUG 31049[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderItems cascade
[2015-12-30 01:08:09,737]DEBUG 31082[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderStatuses cascade
[2015-12-30 01:08:09,737]DEBUG 31082[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table OrderItems cascade
[2015-12-30 01:08:09,737]DEBUG 31082[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "orderitems" does not exist
[2015-12-30 01:08:09,738]DEBUG 31083[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderStatuses cascade
[2015-12-30 01:08:09,770]DEBUG 31115[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Orders cascade
[2015-12-30 01:08:09,771]DEBUG 31116[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table OrderStatuses cascade
[2015-12-30 01:08:09,771]DEBUG 31116[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "orderstatuses" does not exist
[2015-12-30 01:08:09,771]DEBUG 31116[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Orders cascade
[2015-12-30 01:08:09,804]DEBUG 31149[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Orders cascade
[2015-12-30 01:08:09,804]DEBUG 31149[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Products cascade
[2015-12-30 01:08:09,804]DEBUG 31149[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "orders" does not exist
[2015-12-30 01:08:09,804]DEBUG 31149[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Products cascade
[2015-12-30 01:08:09,837]DEBUG 31182[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Products cascade
[2015-12-30 01:08:09,837]DEBUG 31182[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Regions cascade
[2015-12-30 01:08:09,838]DEBUG 31183[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "products" does not exist
[2015-12-30 01:08:09,838]DEBUG 31183[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Regions cascade
[2015-12-30 01:08:09,870]DEBUG 31215[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Regions cascade
[2015-12-30 01:08:09,871]DEBUG 31216[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Roles cascade
[2015-12-30 01:08:09,871]DEBUG 31216[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "regions" does not exist
[2015-12-30 01:08:09,871]DEBUG 31216[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Roles cascade
[2015-12-30 01:08:09,904]DEBUG 31249[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Roles cascade
[2015-12-30 01:08:09,904]DEBUG 31249[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Users cascade
[2015-12-30 01:08:09,904]DEBUG 31249[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "roles" does not exist
[2015-12-30 01:08:09,904]DEBUG 31249[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Users cascade
[2015-12-30 01:08:09,937]DEBUG 31282[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Users cascade
[2015-12-30 01:08:09,938]DEBUG 31283[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "users" does not exist
[2015-12-30 01:08:09,938]DEBUG 31283[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop sequence hibernate_sequence
[2015-12-30 01:08:09,938]DEBUG 31283[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop sequence hibernate_sequence
[2015-12-30 01:08:09,971] INFO 31316[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2015-12-30 01:08:09,971]DEBUG 31316[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop sequence hibernate_sequence
[2015-12-30 01:08:09,971]DEBUG 31316[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: sequence "hibernate_sequence" does not exist
[2015-12-30 01:08:09,971] INFO 31316[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2015-12-30 01:08:09,972] INFO 31317[Thread-1] - org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) - cleaning up connection pool: jdbc:postgresql://192.168.103.164:5432/_055_DB
[2015-12-30 01:08:09,972] INFO 31317[Thread-0] - org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) - cleaning up connection pool: jdbc:postgresql://192.168.103.164:5432/_055_DB
