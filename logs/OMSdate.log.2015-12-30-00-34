[2015-12-30 00:34:00,000]DEBUG 24686[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[115]]
[2015-12-30 00:34:00,000]DEBUG 24686[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:34:00,001]DEBUG 24687[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 115, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:34:00,001]DEBUG 24687[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:34:00,001]DEBUG 24687[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:34:00,004]DEBUG 24690[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[116]]
[2015-12-30 00:34:00,004]DEBUG 24690[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:34:00,004]DEBUG 24690[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 116, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:34:00,004]DEBUG 24690[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:34:00,004]DEBUG 24690[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:34:00,008]DEBUG 24694[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[117]]
[2015-12-30 00:34:00,008]DEBUG 24694[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:34:00,008]DEBUG 24694[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 117, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:34:00,009]DEBUG 24695[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:34:00,009]DEBUG 24695[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:34:00,009]DEBUG 24695[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:34:00,009]DEBUG 24695[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:34:00,009]DEBUG 24695[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:34:00,009]DEBUG 24695[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=115, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:34:00,009]DEBUG 24695[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=117, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:34:00,013]DEBUG 24699[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=116, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:34:00,013]DEBUG 24699[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:34:00,013]DEBUG 24699[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:34:00,013]DEBUG 24699[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:34:00,013]DEBUG 24699[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:34:00,014]DEBUG 24700[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:34:00,014]DEBUG 24700[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:34:00,017]DEBUG 24703[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:34:00,017]DEBUG 24703[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:34:00,019]DEBUG 24705[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:34:00,019]DEBUG 24705[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:34:00,019]DEBUG 24705[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:34:00,019]DEBUG 24705[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:34:00,019]DEBUG 24705[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:34:00,020]DEBUG 24706[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:34:00,020]DEBUG 24706[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:34:00,020]DEBUG 24706[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:34:00,025]DEBUG 24711[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:34:00,025]DEBUG 24711[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:34:00,025]DEBUG 24711[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice between ? and ? and this_.IsProductActive=? order by this_.ProductPrice asc
[2015-12-30 00:34:00,027]DEBUG 24713[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:34:00,027]DEBUG 24713[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#115]
[2015-12-30 00:34:00,027]DEBUG 24713[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#116]
[2015-12-30 00:34:00,027]DEBUG 24713[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#117]
[2015-12-30 00:34:00,027]DEBUG 24713[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:34:00,027]DEBUG 24713[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:34:00,027]DEBUG 24713[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:34:00,028]DEBUG 24714[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:34:00,028]DEBUG 24714[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:34:00,028]DEBUG 24714[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:34:00,028]DEBUG 24714[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:34:00,028]DEBUG 24714[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:34:00,028]DEBUG 24714[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=115, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:34:00,033]DEBUG 24719[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=117, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:34:00,033]DEBUG 24719[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=116, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:34:00,033]DEBUG 24719[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:34:00,033]DEBUG 24719[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice between ? and ? and this_.IsProductActive=? order by this_.ProductPrice desc
[2015-12-30 00:34:00,035]DEBUG 24721[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2015-12-30 00:34:00,035]DEBUG 24721[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#117]
[2015-12-30 00:34:00,035]DEBUG 24721[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#116]
[2015-12-30 00:34:00,035]DEBUG 24721[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#115]
[2015-12-30 00:34:00,035]DEBUG 24721[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2015-12-30 00:34:00,035]DEBUG 24721[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:34:00,035]DEBUG 24721[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2015-12-30 00:34:00,036]DEBUG 24722[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:34:00,036]DEBUG 24722[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:34:00,036]DEBUG 24722[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2015-12-30 00:34:00,036]DEBUG 24722[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:34:00,036]DEBUG 24722[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:34:00,036]DEBUG 24722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=115, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:34:00,036]DEBUG 24722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=117, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:34:00,036]DEBUG 24722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=116, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:34:00,041]DEBUG 24727[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:34:00,042]DEBUG 24728[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:34:00,043]DEBUG 24729[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:34:00,043]DEBUG 24729[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@34e19bf testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d7c5890, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 00:34:00,043]DEBUG 24729[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:34:00,043]DEBUG 24729[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6b429e6c]
[2015-12-30 00:34:00,043]DEBUG 24729[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:34:00,044]DEBUG 24730[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:34:00,045]DEBUG 24731[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:34:00,045]DEBUG 24731[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6b429e6c] after transaction
[2015-12-30 00:34:00,045]DEBUG 24731[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:34:00,045]DEBUG 24731[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:34:00,045]DEBUG 24731[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:34:00,045] INFO 24731[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@34e19bf testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d7c5890, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2015-12-30 00:34:00,046]DEBUG 24732[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@34e19bf testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d7c5890, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:34:00,051]DEBUG 24737[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:34:00,051]DEBUG 24737[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:34:00,051]DEBUG 24737[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@34e19bf testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2028a3ed, testMethod = [null], testException = [null]]].
[2015-12-30 00:34:00,051]DEBUG 24737[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2015-12-30 00:34:00,051]DEBUG 24737[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2015-12-30 00:34:00,051]DEBUG 24737[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2015-12-30 00:34:00,052]DEBUG 24738[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2015-12-30 00:34:00,052]DEBUG 24738[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2015-12-30 00:34:00,052]DEBUG 24738[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2015-12-30 00:34:00,052]DEBUG 24738[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2015-12-30 00:34:00,052]DEBUG 24738[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2015-12-30 00:34:00,052]DEBUG 24738[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2015-12-30 00:34:00,052]DEBUG 24738[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2015-12-30 00:34:00,052]DEBUG 24738[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2015-12-30 00:34:00,052]DEBUG 24738[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2015-12-30 00:34:00,052]DEBUG 24738[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2015-12-30 00:34:00,053]DEBUG 24739[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2015-12-30 00:34:00,053]DEBUG 24739[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2015-12-30 00:34:00,053]DEBUG 24739[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2015-12-30 00:34:00,056]DEBUG 24742[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2015-12-30 00:34:00,056]DEBUG 24742[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2015-12-30 00:34:00,056]DEBUG 24742[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2015-12-30 00:34:00,057]DEBUG 24743[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2015-12-30 00:34:00,057]DEBUG 24743[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2015-12-30 00:34:00,057]DEBUG 24743[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2015-12-30 00:34:00,057]DEBUG 24743[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2028a3ed]
[2015-12-30 00:34:00,057]DEBUG 24743[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:34:00,057]DEBUG 24743[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@34e19bf testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2028a3ed, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:34:00,058]DEBUG 24744[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2015-12-30 00:34:00,058]DEBUG 24744[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2015-12-30 00:34:00,058]DEBUG 24744[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 14514284400
[2015-12-30 00:34:00,058]DEBUG 24744[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@61560828] for Hibernate transaction
[2015-12-30 00:34:00,064]DEBUG 24750[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@61560828]
[2015-12-30 00:34:00,064]DEBUG 24750[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2015-12-30 00:34:00,064]DEBUG 24750[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2015-12-30 00:34:00,064]DEBUG 24750[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2015-12-30 00:34:00,064]DEBUG 24750[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@34e19bf testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2028a3ed, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:34:00,064] INFO 24750[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (18): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@55836cd1]; rollback [true]
[2015-12-30 00:34:00,064]DEBUG 24750[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:34:00,066]DEBUG 24752[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:34:00,069]DEBUG 24755[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[118]]
[2015-12-30 00:34:00,069]DEBUG 24755[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:34:00,069]DEBUG 24755[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 118, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:34:00,069]DEBUG 24755[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:34:00,074]DEBUG 24760[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:34:00,075]DEBUG 24761[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[119]]
[2015-12-30 00:34:00,075]DEBUG 24761[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:34:00,075]DEBUG 24761[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 119, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:34:00,075]DEBUG 24761[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:34:00,076]DEBUG 24762[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select nextval ('hibernate_sequence')
[2015-12-30 00:34:00,077]DEBUG 24763[main] - org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:118) - Sequence identifier generated: BasicHolder[java.lang.Integer[120]]
[2015-12-30 00:34:00,077]DEBUG 24763[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:34:00,077]DEBUG 24763[main] - org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) - generated identifier: 120, using strategy: org.hibernate.id.SequenceGenerator
[2015-12-30 00:34:00,077]DEBUG 24763[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2015-12-30 00:34:00,077]DEBUG 24763[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2015-12-30 00:34:00,078]DEBUG 24764[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 3 insertions, 3 updates, 0 deletions to 3 objects
[2015-12-30 00:34:00,078]DEBUG 24764[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2015-12-30 00:34:00,078]DEBUG 24764[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2015-12-30 00:34:00,078]DEBUG 24764[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=120, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2015-12-30 00:34:00,078]DEBUG 24764[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=119, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2015-12-30 00:34:00,078]DEBUG 24764[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=118, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2015-12-30 00:34:00,078]DEBUG 24764[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2015-12-30 00:34:00,078]DEBUG 24764[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:34:00,078]DEBUG 24764[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:34:00,083]DEBUG 24769[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:34:00,083]DEBUG 24769[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:34:00,083]DEBUG 24769[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:34:00,083]DEBUG 24769[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2015-12-30 00:34:00,083]DEBUG 24769[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:34:00,085]DEBUG 24771[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:34:00,085]DEBUG 24771[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:34:00,086]DEBUG 24772[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:34:00,086]DEBUG 24772[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:34:00,086]DEBUG 24772[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:34:00,086]DEBUG 24772[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2015-12-30 00:34:00,086]DEBUG 24772[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2015-12-30 00:34:00,086]DEBUG 24772[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2015-12-30 00:34:00,089]DEBUG 24775[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:34:00,089]DEBUG 24775[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2015-12-30 00:34:00,089]DEBUG 24775[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2015-12-30 00:34:00,094]DEBUG 24780[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2015-12-30 00:34:00,094]DEBUG 24780[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@34e19bf testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2028a3ed, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:34:00,094]DEBUG 24780[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2015-12-30 00:34:00,094]DEBUG 24780[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@61560828]
[2015-12-30 00:34:00,094]DEBUG 24780[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2015-12-30 00:34:00,095]DEBUG 24781[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2015-12-30 00:34:00,095]DEBUG 24781[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:34:00,095]DEBUG 24781[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@61560828] after transaction
[2015-12-30 00:34:00,095]DEBUG 24781[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2015-12-30 00:34:00,096]DEBUG 24782[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2015-12-30 00:34:00,096]DEBUG 24782[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2015-12-30 00:34:00,096] INFO 24782[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@34e19bf testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2028a3ed, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2015-12-30 00:34:00,096]DEBUG 24782[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@34e19bf testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2028a3ed, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2015-12-30 00:34:00,101]DEBUG 24787[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@34e19bf testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2015-12-30 00:34:00,110] INFO 24796[Thread-0] - org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1002) - Closing org.springframework.context.support.GenericApplicationContext@29f12030: startup date [Wed Dec 30 00:33:39 EET 2015]; root of context hierarchy
[2015-12-30 00:34:00,119]DEBUG 24805[Thread-0] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2015-12-30 00:34:00,119] INFO 24805[Thread-0] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:422) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@76a2348b: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderDao,roleDao,userDao,regionDao,orderStatusDao,productDao,dimensionDao,customerTypeDao,orderItemDao,creditCardTypeDao,sessionFactory]; root of factory hierarchy
[2015-12-30 00:34:00,123] INFO 24809[Thread-1] - org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1002) - Closing org.springframework.context.support.GenericApplicationContext@4d72f5d6: startup date [Wed Dec 30 00:33:52 EET 2015]; root of context hierarchy
[2015-12-30 00:34:00,125]DEBUG 24811[Thread-0] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:477) - Retrieved dependent beans for bean 'orderItemDao': [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest, com.softserveinc.edu.oms.persistence.dao.OrderDaoTest, com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase, com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest, com.softserveinc.edu.oms.persistence.dao.RoleDAOTest, com.softserveinc.edu.oms.persistence.dao.RegionDaoTest, com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest, com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2015-12-30 00:34:00,128]DEBUG 24814[Thread-0] - org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:172) - Invoking destroy() on bean with name 'sessionFactory'
[2015-12-30 00:34:00,128] INFO 24814[Thread-0] - org.springframework.orm.hibernate3.AbstractSessionFactoryBean.destroy(AbstractSessionFactoryBean.java:246) - Closing Hibernate SessionFactory
[2015-12-30 00:34:00,128]DEBUG 24814[Thread-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2015-12-30 00:34:00,128] INFO 24814[Thread-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:422) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@ee3aff0: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderDao,roleDao,userDao,regionDao,orderStatusDao,productDao,dimensionDao,customerTypeDao,orderItemDao,creditCardTypeDao,sessionFactory]; root of factory hierarchy
[2015-12-30 00:34:00,129]DEBUG 24815[Thread-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:477) - Retrieved dependent beans for bean 'orderItemDao': [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2015-12-30 00:34:00,129]DEBUG 24815[Thread-1] - org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:172) - Invoking destroy() on bean with name 'sessionFactory'
[2015-12-30 00:34:00,129] INFO 24815[Thread-1] - org.springframework.orm.hibernate3.AbstractSessionFactoryBean.destroy(AbstractSessionFactoryBean.java:246) - Closing Hibernate SessionFactory
[2015-12-30 00:34:00,128] INFO 24814[Thread-0] - org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) - closing
[2015-12-30 00:34:00,129] INFO 24815[Thread-1] - org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) - closing
[2015-12-30 00:34:00,129] INFO 24815[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2015-12-30 00:34:00,130]DEBUG 24816[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2015-12-30 00:34:00,130] INFO 24816[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2015-12-30 00:34:00,129] INFO 24815[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2015-12-30 00:34:00,130]DEBUG 24816[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2015-12-30 00:34:00,130] INFO 24816[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2015-12-30 00:34:00,133]DEBUG 24819[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD3262E1ABF7
[2015-12-30 00:34:00,133]DEBUG 24819[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD3262E1ABF7
[2015-12-30 00:34:00,162]DEBUG 24848[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32A6376397
[2015-12-30 00:34:00,163]DEBUG 24849[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop constraint FKA2B1AD3262E1ABF7
[2015-12-30 00:34:00,163]DEBUG 24849[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fka2b1ad3262e1abf7" of relation "orderitems" does not exist
[2015-12-30 00:34:00,163]DEBUG 24849[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32A6376397
[2015-12-30 00:34:00,196]DEBUG 24882[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32BCDB3C97
[2015-12-30 00:34:00,196]DEBUG 24882[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop constraint FKA2B1AD32A6376397
[2015-12-30 00:34:00,196]DEBUG 24882[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fka2b1ad32a6376397" of relation "orderitems" does not exist
[2015-12-30 00:34:00,196]DEBUG 24882[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop constraint FKA2B1AD32BCDB3C97
[2015-12-30 00:34:00,229]DEBUG 24915[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05990DB877
[2015-12-30 00:34:00,230]DEBUG 24916[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop constraint FKA2B1AD32BCDB3C97
[2015-12-30 00:34:00,230]DEBUG 24916[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fka2b1ad32bcdb3c97" of relation "orderitems" does not exist
[2015-12-30 00:34:00,230]DEBUG 24916[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05990DB877
[2015-12-30 00:34:00,263]DEBUG 24949[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05C0F431DD
[2015-12-30 00:34:00,263]DEBUG 24949[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop constraint FK8D444F05990DB877
[2015-12-30 00:34:00,263]DEBUG 24949[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk8d444f05990db877" of relation "orders" does not exist
[2015-12-30 00:34:00,263]DEBUG 24949[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05C0F431DD
[2015-12-30 00:34:00,296]DEBUG 24982[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05F161465
[2015-12-30 00:34:00,296]DEBUG 24982[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop constraint FK8D444F05C0F431DD
[2015-12-30 00:34:00,296]DEBUG 24982[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk8d444f05c0f431dd" of relation "orders" does not exist
[2015-12-30 00:34:00,296]DEBUG 24982[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop constraint FK8D444F05F161465
[2015-12-30 00:34:00,330]DEBUG 25016[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE83D05058F
[2015-12-30 00:34:00,330]DEBUG 25016[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop constraint FK8D444F05F161465
[2015-12-30 00:34:00,330]DEBUG 25016[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk8d444f05f161465" of relation "orders" does not exist
[2015-12-30 00:34:00,330]DEBUG 25016[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE83D05058F
[2015-12-30 00:34:00,380]DEBUG 25066[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE89AEF426F
[2015-12-30 00:34:00,380]DEBUG 25066[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop constraint FK4E39DE83D05058F
[2015-12-30 00:34:00,380]DEBUG 25066[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk4e39de83d05058f" of relation "users" does not exist
[2015-12-30 00:34:00,380]DEBUG 25066[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE89AEF426F
[2015-12-30 00:34:00,413]DEBUG 25099[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE8FEAD4DCF
[2015-12-30 00:34:00,413]DEBUG 25099[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop constraint FK4E39DE89AEF426F
[2015-12-30 00:34:00,414]DEBUG 25100[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk4e39de89aef426f" of relation "users" does not exist
[2015-12-30 00:34:00,414]DEBUG 25100[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop constraint FK4E39DE8FEAD4DCF
[2015-12-30 00:34:00,446]DEBUG 25132[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CardType cascade
[2015-12-30 00:34:00,447]DEBUG 25133[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop constraint FK4E39DE8FEAD4DCF
[2015-12-30 00:34:00,447]DEBUG 25133[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: constraint "fk4e39de8fead4dcf" of relation "users" does not exist
[2015-12-30 00:34:00,447]DEBUG 25133[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CardType cascade
[2015-12-30 00:34:00,505]DEBUG 25191[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CustomerTypes cascade
[2015-12-30 00:34:00,506]DEBUG 25192[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table CardType cascade
[2015-12-30 00:34:00,506]DEBUG 25192[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "cardtype" does not exist
[2015-12-30 00:34:00,506]DEBUG 25192[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table CustomerTypes cascade
[2015-12-30 00:34:00,547]DEBUG 25233[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Dimensions cascade
[2015-12-30 00:34:00,547]DEBUG 25233[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table CustomerTypes cascade
[2015-12-30 00:34:00,548]DEBUG 25234[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "customertypes" does not exist
[2015-12-30 00:34:00,548]DEBUG 25234[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Dimensions cascade
[2015-12-30 00:34:00,597]DEBUG 25283[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderItems cascade
[2015-12-30 00:34:00,598]DEBUG 25284[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Dimensions cascade
[2015-12-30 00:34:00,598]DEBUG 25284[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "dimensions" does not exist
[2015-12-30 00:34:00,598]DEBUG 25284[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderItems cascade
[2015-12-30 00:34:00,672]DEBUG 25358[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderStatuses cascade
[2015-12-30 00:34:00,673]DEBUG 25359[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table OrderItems cascade
[2015-12-30 00:34:00,673]DEBUG 25359[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "orderitems" does not exist
[2015-12-30 00:34:00,673]DEBUG 25359[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table OrderStatuses cascade
[2015-12-30 00:34:00,739]DEBUG 25425[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table OrderStatuses cascade
[2015-12-30 00:34:00,740]DEBUG 25426[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "orderstatuses" does not exist
[2015-12-30 00:34:00,740]DEBUG 25426[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Orders cascade
[2015-12-30 00:34:00,740]DEBUG 25426[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Orders cascade
[2015-12-30 00:34:00,841]DEBUG 25527[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Products cascade
[2015-12-30 00:34:00,841]DEBUG 25527[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Orders cascade
[2015-12-30 00:34:00,841]DEBUG 25527[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "orders" does not exist
[2015-12-30 00:34:00,842]DEBUG 25528[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Products cascade
[2015-12-30 00:34:00,929]DEBUG 25615[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Regions cascade
[2015-12-30 00:34:00,930]DEBUG 25616[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Products cascade
[2015-12-30 00:34:00,930]DEBUG 25616[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "products" does not exist
[2015-12-30 00:34:00,935]DEBUG 25621[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Regions cascade
[2015-12-30 00:34:01,050]DEBUG 25736[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Roles cascade
[2015-12-30 00:34:01,050]DEBUG 25736[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Regions cascade
[2015-12-30 00:34:01,051]DEBUG 25737[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "regions" does not exist
[2015-12-30 00:34:01,051]DEBUG 25737[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Roles cascade
[2015-12-30 00:34:01,131]DEBUG 25817[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Roles cascade
[2015-12-30 00:34:01,131]DEBUG 25817[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "roles" does not exist
[2015-12-30 00:34:01,131]DEBUG 25817[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Users cascade
[2015-12-30 00:34:01,132]DEBUG 25818[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table Users cascade
[2015-12-30 00:34:01,274]DEBUG 25960[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop table Users cascade
[2015-12-30 00:34:01,274]DEBUG 25960[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: table "users" does not exist
[2015-12-30 00:34:01,275]DEBUG 25961[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop sequence hibernate_sequence
[2015-12-30 00:34:01,275]DEBUG 25961[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop sequence hibernate_sequence
[2015-12-30 00:34:01,368] INFO 26054[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2015-12-30 00:34:01,368]DEBUG 26054[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: drop sequence hibernate_sequence
[2015-12-30 00:34:01,368]DEBUG 26054[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - ERROR: sequence "hibernate_sequence" does not exist
[2015-12-30 00:34:01,368] INFO 26054[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2015-12-30 00:34:01,369] INFO 26055[Thread-1] - org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) - cleaning up connection pool: jdbc:postgresql://192.168.103.164:5432/_055_DB
[2015-12-30 00:34:01,369] INFO 26055[Thread-0] - org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) - cleaning up connection pool: jdbc:postgresql://192.168.103.164:5432/_055_DB
